using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Data.Models.DB
{
    public partial class Dinawin98Context : DbContext
    {
        public Dinawin98Context()
        {
        }

        public Dinawin98Context(DbContextOptions<Dinawin98Context> options)
            : base(options)
        {
        }

        public virtual DbSet<A> A { get; set; }
        public virtual DbSet<AccAdvR> AccAdvR { get; set; }
        public virtual DbSet<AccAordr> AccAordr { get; set; }
        public virtual DbSet<AccArqst> AccArqst { get; set; }
        public virtual DbSet<AccBudget> AccBudget { get; set; }
        public virtual DbSet<AccBudgetDetail> AccBudgetDetail { get; set; }
        public virtual DbSet<AccBudgetH> AccBudgetH { get; set; }
        public virtual DbSet<AccBudgetLog> AccBudgetLog { get; set; }
        public virtual DbSet<AccBudgetPeriod> AccBudgetPeriod { get; set; }
        public virtual DbSet<AccBudgetPeriodLevel> AccBudgetPeriodLevel { get; set; }
        public virtual DbSet<AccBudgetPeriodLog> AccBudgetPeriodLog { get; set; }
        public virtual DbSet<AccBudgetTyp> AccBudgetTyp { get; set; }
        public virtual DbSet<AccCfg> AccCfg { get; set; }
        public virtual DbSet<AccCrossCheck> AccCrossCheck { get; set; }
        public virtual DbSet<AccCtbMinfo> AccCtbMinfo { get; set; }
        public virtual DbSet<AccCtbMinfoCompany> AccCtbMinfoCompany { get; set; }
        public virtual DbSet<AccCtbMinfoDefault> AccCtbMinfoDefault { get; set; }
        public virtual DbSet<AccCtbMinfoValue> AccCtbMinfoValue { get; set; }
        public virtual DbSet<AccDdoc> AccDdoc { get; set; }
        public virtual DbSet<AccDocDefinite> AccDocDefinite { get; set; }
        public virtual DbSet<AccDocHattacH> AccDocHattacH { get; set; }
        public virtual DbSet<AccDocLock> AccDocLock { get; set; }
        public virtual DbSet<AccDocTypes> AccDocTypes { get; set; }
        public virtual DbSet<AccDscr> AccDscr { get; set; }
        public virtual DbSet<AccExchange> AccExchange { get; set; }
        public virtual DbSet<AccGrpUser> AccGrpUser { get; set; }
        public virtual DbSet<AccGrpUserToUser> AccGrpUserToUser { get; set; }
        public virtual DbSet<AccHdoc> AccHdoc { get; set; }
        public virtual DbSet<AccInauguration> AccInauguration { get; set; }
        public virtual DbSet<AccLoc> AccLoc { get; set; }
        public virtual DbSet<AccMtrxReport> AccMtrxReport { get; set; }
        public virtual DbSet<AccOrdr> AccOrdr { get; set; }
        public virtual DbSet<AccOrdrTyp> AccOrdrTyp { get; set; }
        public virtual DbSet<AccOtherSysUser> AccOtherSysUser { get; set; }
        public virtual DbSet<AccRqstSts> AccRqstSts { get; set; }
        public virtual DbSet<AccRqstTyp> AccRqstTyp { get; set; }
        public virtual DbSet<AccountCostCenter> AccountCostCenter { get; set; }
        public virtual DbSet<AccountDetail> AccountDetail { get; set; }
        public virtual DbSet<AccountGeneral> AccountGeneral { get; set; }
        public virtual DbSet<AccountProject> AccountProject { get; set; }
        public virtual DbSet<AccountRelation> AccountRelation { get; set; }
        public virtual DbSet<AccountSubsidiary> AccountSubsidiary { get; set; }
        public virtual DbSet<AsetAssetbak> AsetAssetbak { get; set; }
        public virtual DbSet<AssAddition> AssAddition { get; set; }
        public virtual DbSet<AssAgency> AssAgency { get; set; }
        public virtual DbSet<AssCust> AssCust { get; set; }
        public virtual DbSet<AssExitOrder> AssExitOrder { get; set; }
        public virtual DbSet<AssInvGds> AssInvGds { get; set; }
        public virtual DbSet<AssInvoiceD> AssInvoiceD { get; set; }
        public virtual DbSet<AssInvoiceH> AssInvoiceH { get; set; }
        public virtual DbSet<AssMachinId> AssMachinId { get; set; }
        public virtual DbSet<AssMachine> AssMachine { get; set; }
        public virtual DbSet<AssMachineModel> AssMachineModel { get; set; }
        public virtual DbSet<AssMachineTyp> AssMachineTyp { get; set; }
        public virtual DbSet<AssMission> AssMission { get; set; }
        public virtual DbSet<AssPersonel> AssPersonel { get; set; }
        public virtual DbSet<AssReceiptD> AssReceiptD { get; set; }
        public virtual DbSet<AssReceiptH> AssReceiptH { get; set; }
        public virtual DbSet<AssReceiptOpr> AssReceiptOpr { get; set; }
        public virtual DbSet<AssReception> AssReception { get; set; }
        public virtual DbSet<AssReceptionD> AssReceptionD { get; set; }
        public virtual DbSet<AssReceptionKind> AssReceptionKind { get; set; }
        public virtual DbSet<AssReceptionStatus> AssReceptionStatus { get; set; }
        public virtual DbSet<AssServiceD> AssServiceD { get; set; }
        public virtual DbSet<AssServiceH> AssServiceH { get; set; }
        public virtual DbSet<AssSrvHprs> AssSrvHprs { get; set; }
        public virtual DbSet<AssState> AssState { get; set; }
        public virtual DbSet<AssTown> AssTown { get; set; }
        public virtual DbSet<AssVchrD> AssVchrD { get; set; }
        public virtual DbSet<AssVchrH> AssVchrH { get; set; }
        public virtual DbSet<AssetTemp> AssetTemp { get; set; }
        public virtual DbSet<AssetTemp2> AssetTemp2 { get; set; }
        public virtual DbSet<AstAsset> AstAsset { get; set; }
        public virtual DbSet<AstAssetAjst> AstAssetAjst { get; set; }
        public virtual DbSet<AstAssetData> AstAssetData { get; set; }
        public virtual DbSet<AstAssetDprc> AstAssetDprc { get; set; }
        public virtual DbSet<AstAssetLctn> AstAssetLctn { get; set; }
        public virtual DbSet<AstAssetRepair> AstAssetRepair { get; set; }
        public virtual DbSet<AstAssetSelling> AstAssetSelling { get; set; }
        public virtual DbSet<AstAssign> AstAssign { get; set; }
        public virtual DbSet<AstCnsMthd> AstCnsMthd { get; set; }
        public virtual DbSet<AstCtrlr> AstCtrlr { get; set; }
        public virtual DbSet<AstDataD> AstDataD { get; set; }
        public virtual DbSet<AstDataDitem> AstDataDitem { get; set; }
        public virtual DbSet<AstDataH> AstDataH { get; set; }
        public virtual DbSet<AstGrup> AstGrup { get; set; }
        public virtual DbSet<AstInfo1> AstInfo1 { get; set; }
        public virtual DbSet<AstInfo2> AstInfo2 { get; set; }
        public virtual DbSet<AstInfo3> AstInfo3 { get; set; }
        public virtual DbSet<AstInfo4> AstInfo4 { get; set; }
        public virtual DbSet<AstInsurKind> AstInsurKind { get; set; }
        public virtual DbSet<AstInsurance> AstInsurance { get; set; }
        public virtual DbSet<AstLctn> AstLctn { get; set; }
        public virtual DbSet<AstPrms> AstPrms { get; set; }
        public virtual DbSet<AstSum> AstSum { get; set; }
        public virtual DbSet<AstVchrD> AstVchrD { get; set; }
        public virtual DbSet<AstVchrH> AstVchrH { get; set; }
        public virtual DbSet<B> B { get; set; }
        public virtual DbSet<BackupAccDdoc> BackupAccDdoc { get; set; }
        public virtual DbSet<BgtAccIntro> BgtAccIntro { get; set; }
        public virtual DbSet<BgtAssignAccK> BgtAssignAccK { get; set; }
        public virtual DbSet<BgtAssignAccM> BgtAssignAccM { get; set; }
        public virtual DbSet<BgtAssignToCcost> BgtAssignToCcost { get; set; }
        public virtual DbSet<BgtAssignToCcostDetail> BgtAssignToCcostDetail { get; set; }
        public virtual DbSet<BgtAssignToCcostSubDetail> BgtAssignToCcostSubDetail { get; set; }
        public virtual DbSet<BgtAssignToPrj> BgtAssignToPrj { get; set; }
        public virtual DbSet<BgtAssignToPrjDetail> BgtAssignToPrjDetail { get; set; }
        public virtual DbSet<BgtAssignToPrjSubDetail> BgtAssignToPrjSubDetail { get; set; }
        public virtual DbSet<BgtChangeCostD> BgtChangeCostD { get; set; }
        public virtual DbSet<BgtChangeCostH> BgtChangeCostH { get; set; }
        public virtual DbSet<BgtPrdcSchdlD> BgtPrdcSchdlD { get; set; }
        public virtual DbSet<BgtPrdcSchdlH> BgtPrdcSchdlH { get; set; }
        public virtual DbSet<BgtStndrRate> BgtStndrRate { get; set; }
        public virtual DbSet<Clvtb> Clvtb { get; set; }
        public virtual DbSet<CntAlert> CntAlert { get; set; }
        public virtual DbSet<CntAttachTyp> CntAttachTyp { get; set; }
        public virtual DbSet<CntAttachment> CntAttachment { get; set; }
        public virtual DbSet<CntCntrIntroducer> CntCntrIntroducer { get; set; }
        public virtual DbSet<CntContract> CntContract { get; set; }
        public virtual DbSet<CntContractPaymentOpr> CntContractPaymentOpr { get; set; }
        public virtual DbSet<CntCustStatus> CntCustStatus { get; set; }
        public virtual DbSet<CntCustomer> CntCustomer { get; set; }
        public virtual DbSet<CntGds> CntGds { get; set; }
        public virtual DbSet<CntGrp> CntGrp { get; set; }
        public virtual DbSet<CntLetter> CntLetter { get; set; }
        public virtual DbSet<CntLock> CntLock { get; set; }
        public virtual DbSet<CntLockProcess> CntLockProcess { get; set; }
        public virtual DbSet<CntPayment> CntPayment { get; set; }
        public virtual DbSet<CntPaymentOpr> CntPaymentOpr { get; set; }
        public virtual DbSet<CntReference> CntReference { get; set; }
        public virtual DbSet<CntReferenceTyp> CntReferenceTyp { get; set; }
        public virtual DbSet<CntSaleAgent> CntSaleAgent { get; set; }
        public virtual DbSet<CntSrv> CntSrv { get; set; }
        public virtual DbSet<CntStatus> CntStatus { get; set; }
        public virtual DbSet<CntTask> CntTask { get; set; }
        public virtual DbSet<CntTrack> CntTrack { get; set; }
        public virtual DbSet<CntTyp> CntTyp { get; set; }
        public virtual DbSet<CntVendor> CntVendor { get; set; }
        public virtual DbSet<CtbAccCostGrp> CtbAccCostGrp { get; set; }
        public virtual DbSet<CtbAccDocDescFmt> CtbAccDocDescFmt { get; set; }
        public virtual DbSet<CtbAccGrp> CtbAccGrp { get; set; }
        public virtual DbSet<CtbAccK> CtbAccK { get; set; }
        public virtual DbSet<CtbAccM> CtbAccM { get; set; }
        public virtual DbSet<CtbAccMuser> CtbAccMuser { get; set; }
        public virtual DbSet<CtbAccT> CtbAccT { get; set; }
        public virtual DbSet<CtbAccT2ctbAccM> CtbAccT2ctbAccM { get; set; }
        public virtual DbSet<CtbAccTgrp> CtbAccTgrp { get; set; }
        public virtual DbSet<CtbAccTuser> CtbAccTuser { get; set; }
        public virtual DbSet<CtbAcs> CtbAcs { get; set; }
        public virtual DbSet<CtbAddrs> CtbAddrs { get; set; }
        public virtual DbSet<CtbAddrsSwch> CtbAddrsSwch { get; set; }
        public virtual DbSet<CtbArshv> CtbArshv { get; set; }
        public virtual DbSet<CtbBank> CtbBank { get; set; }
        public virtual DbSet<CtbCost> CtbCost { get; set; }
        public virtual DbSet<CtbCost2CtbAccM> CtbCost2CtbAccM { get; set; }
        public virtual DbSet<CtbCostUser> CtbCostUser { get; set; }
        public virtual DbSet<CtbCurncy> CtbCurncy { get; set; }
        public virtual DbSet<CtbCustVndrTyp> CtbCustVndrTyp { get; set; }
        public virtual DbSet<CtbDblinker> CtbDblinker { get; set; }
        public virtual DbSet<CtbMnth> CtbMnth { get; set; }
        public virtual DbSet<CtbOptions> CtbOptions { get; set; }
        public virtual DbSet<CtbOrgDep> CtbOrgDep { get; set; }
        public virtual DbSet<CtbOrgJob> CtbOrgJob { get; set; }
        public virtual DbSet<CtbOrgPst> CtbOrgPst { get; set; }
        public virtual DbSet<CtbPrj2CtbAccM> CtbPrj2CtbAccM { get; set; }
        public virtual DbSet<CtbProject> CtbProject { get; set; }
        public virtual DbSet<CtbProjectPrsnl> CtbProjectPrsnl { get; set; }
        public virtual DbSet<CtbProjectUser> CtbProjectUser { get; set; }
        public virtual DbSet<CtbPrpFld> CtbPrpFld { get; set; }
        public virtual DbSet<CtbPrpGrp> CtbPrpGrp { get; set; }
        public virtual DbSet<CtbPrpVlu> CtbPrpVlu { get; set; }
        public virtual DbSet<CtbUsrAcs> CtbUsrAcs { get; set; }
        public virtual DbSet<CtbaccCost2accGrpC> CtbaccCost2accGrpC { get; set; }
        public virtual DbSet<CtbaccT2accGrpT> CtbaccT2accGrpT { get; set; }
        public virtual DbSet<Customer> Customer { get; set; }
        public virtual DbSet<CustomerInputDinaVision> CustomerInputDinaVision { get; set; }
        public virtual DbSet<CxReport> CxReport { get; set; }
        public virtual DbSet<D> D { get; set; }
        public virtual DbSet<Debits> Debits { get; set; }
        public virtual DbSet<DimDate> DimDate { get; set; }
        public virtual DbSet<Dtproperties> Dtproperties { get; set; }
        public virtual DbSet<FaraBarcode> FaraBarcode { get; set; }
        public virtual DbSet<FaraCfg> FaraCfg { get; set; }
        public virtual DbSet<FaraDataDic> FaraDataDic { get; set; }
        public virtual DbSet<FaraDataDicFld> FaraDataDicFld { get; set; }
        public virtual DbSet<FaraDbver> FaraDbver { get; set; }
        public virtual DbSet<FaraInternalLog> FaraInternalLog { get; set; }
        public virtual DbSet<FaraInternalLogEntity> FaraInternalLogEntity { get; set; }
        public virtual DbSet<FaraLog> FaraLog { get; set; }
        public virtual DbSet<FaraMnu> FaraMnu { get; set; }
        public virtual DbSet<FaraMnuItm> FaraMnuItm { get; set; }
        public virtual DbSet<FaraMnuToUsr> FaraMnuToUsr { get; set; }
        public virtual DbSet<FaraMrtReport> FaraMrtReport { get; set; }
        public virtual DbSet<FaraMrtReportType> FaraMrtReportType { get; set; }
        public virtual DbSet<FaraMsgDlg> FaraMsgDlg { get; set; }
        public virtual DbSet<FaraRptDeny> FaraRptDeny { get; set; }
        public virtual DbSet<FaraRptList> FaraRptList { get; set; }
        public virtual DbSet<FaraRs> FaraRs { get; set; }
        public virtual DbSet<FaraRsEn> FaraRsEn { get; set; }
        public virtual DbSet<FaraRv> FaraRv { get; set; }
        public virtual DbSet<FaraRvEn> FaraRvEn { get; set; }
        public virtual DbSet<FaraSystems> FaraSystems { get; set; }
        public virtual DbSet<FaraVerHistory> FaraVerHistory { get; set; }
        public virtual DbSet<G> G { get; set; }
        public virtual DbSet<GeneralReportVoucher> GeneralReportVoucher { get; set; }
        public virtual DbSet<Hatef> Hatef { get; set; }
        public virtual DbSet<Hatef2> Hatef2 { get; set; }
        public virtual DbSet<Hatef22> Hatef22 { get; set; }
        public virtual DbSet<Hatef3> Hatef3 { get; set; }
        public virtual DbSet<Hatef333> Hatef333 { get; set; }
        public virtual DbSet<Hatef4> Hatef4 { get; set; }
        public virtual DbSet<HeaderRandomStorage> HeaderRandomStorage { get; set; }
        public virtual DbSet<InvAcsDocD> InvAcsDocD { get; set; }
        public virtual DbSet<InvBatchNumber> InvBatchNumber { get; set; }
        public virtual DbSet<InvCdngD> InvCdngD { get; set; }
        public virtual DbSet<InvCdngH> InvCdngH { get; set; }
        public virtual DbSet<InvCntBatchD> InvCntBatchD { get; set; }
        public virtual DbSet<InvCntCalc> InvCntCalc { get; set; }
        public virtual DbSet<InvCntD> InvCntD { get; set; }
        public virtual DbSet<InvCntH> InvCntH { get; set; }
        public virtual DbSet<InvCntrDocD> InvCntrDocD { get; set; }
        public virtual DbSet<InvCntrDocH> InvCntrDocH { get; set; }
        public virtual DbSet<InvControlGds> InvControlGds { get; set; }
        public virtual DbSet<InvControlGdsD> InvControlGdsD { get; set; }
        public virtual DbSet<InvCostQc> InvCostQc { get; set; }
        public virtual DbSet<InvCostQcUser> InvCostQcUser { get; set; }
        public virtual DbSet<InvDelivery> InvDelivery { get; set; }
        public virtual DbSet<InvDocAuto> InvDocAuto { get; set; }
        public virtual DbSet<InvDocD> InvDocD { get; set; }
        public virtual DbSet<InvDocDefinit> InvDocDefinit { get; set; }
        public virtual DbSet<InvDocDsrl> InvDocDsrl { get; set; }
        public virtual DbSet<InvDocDsts> InvDocDsts { get; set; }
        public virtual DbSet<InvDocH> InvDocH { get; set; }
        public virtual DbSet<InvDocPrcMthd> InvDocPrcMthd { get; set; }
        public virtual DbSet<InvDocRqst> InvDocRqst { get; set; }
        public virtual DbSet<InvDocSms> InvDocSms { get; set; }
        public virtual DbSet<InvDocTmpD> InvDocTmpD { get; set; }
        public virtual DbSet<InvDocTmpH> InvDocTmpH { get; set; }
        public virtual DbSet<InvDocTmpHattach> InvDocTmpHattach { get; set; }
        public virtual DbSet<InvDocTyp> InvDocTyp { get; set; }
        public virtual DbSet<InvDocUser> InvDocUser { get; set; }
        public virtual DbSet<InvDocVchr> InvDocVchr { get; set; }
        public virtual DbSet<InvDrctCnsuD> InvDrctCnsuD { get; set; }
        public virtual DbSet<InvDrctCnsuH> InvDrctCnsuH { get; set; }
        public virtual DbSet<InvDscr> InvDscr { get; set; }
        public virtual DbSet<InvEssentialAccess> InvEssentialAccess { get; set; }
        public virtual DbSet<InvExportPrmD> InvExportPrmD { get; set; }
        public virtual DbSet<InvExportPrmH> InvExportPrmH { get; set; }
        public virtual DbSet<InvGds> InvGds { get; set; }
        public virtual DbSet<InvGdsAccC> InvGdsAccC { get; set; }
        public virtual DbSet<InvGdsAccP> InvGdsAccP { get; set; }
        public virtual DbSet<InvGdsAttacH> InvGdsAttacH { get; set; }
        public virtual DbSet<InvGdsEssential> InvGdsEssential { get; set; }
        public virtual DbSet<InvGdsGrant> InvGdsGrant { get; set; }
        public virtual DbSet<InvGdsGrp> InvGdsGrp { get; set; }
        public virtual DbSet<InvGdsGrpUser> InvGdsGrpUser { get; set; }
        public virtual DbSet<InvGdsIcntry> InvGdsIcntry { get; set; }
        public virtual DbSet<InvGdsIcratr> InvGdsIcratr { get; set; }
        public virtual DbSet<InvGdsPhoto> InvGdsPhoto { get; set; }
        public virtual DbSet<InvGdsRepGds> InvGdsRepGds { get; set; }
        public virtual DbSet<InvGdsResult> InvGdsResult { get; set; }
        public virtual DbSet<InvGdsStatus> InvGdsStatus { get; set; }
        public virtual DbSet<InvGdsToGds> InvGdsToGds { get; set; }
        public virtual DbSet<InvGdsToInv> InvGdsToInv { get; set; }
        public virtual DbSet<InvGdsTyp> InvGdsTyp { get; set; }
        public virtual DbSet<InvInvt> InvInvt { get; set; }
        public virtual DbSet<InvMetrajCalc> InvMetrajCalc { get; set; }
        public virtual DbSet<InvRqstD> InvRqstD { get; set; }
        public virtual DbSet<InvRqstH> InvRqstH { get; set; }
        public virtual DbSet<InvRqstSts> InvRqstSts { get; set; }
        public virtual DbSet<InvRqstTyp> InvRqstTyp { get; set; }
        public virtual DbSet<InvTyp> InvTyp { get; set; }
        public virtual DbSet<InvUnt> InvUnt { get; set; }
        public virtual DbSet<InvUntCnvrt> InvUntCnvrt { get; set; }
        public virtual DbSet<InvUntRelated> InvUntRelated { get; set; }
        public virtual DbSet<InvUsr> InvUsr { get; set; }
        public virtual DbSet<InvUsrToInv> InvUsrToInv { get; set; }
        public virtual DbSet<InvVchrCodeMap> InvVchrCodeMap { get; set; }
        public virtual DbSet<InvVchrD> InvVchrD { get; set; }
        public virtual DbSet<InvVchrH> InvVchrH { get; set; }
        public virtual DbSet<InvbasketGds> InvbasketGds { get; set; }
        public virtual DbSet<Invgds2> Invgds2 { get; set; }
        public virtual DbSet<KabisehYears> KabisehYears { get; set; }
        public virtual DbSet<Kolnrf90> Kolnrf90 { get; set; }
        public virtual DbSet<KpurBuyD> KpurBuyD { get; set; }
        public virtual DbSet<KpurBuyH> KpurBuyH { get; set; }
        public virtual DbSet<KpurHis> KpurHis { get; set; }
        public virtual DbSet<KpurLvlD> KpurLvlD { get; set; }
        public virtual DbSet<KpurLvlH> KpurLvlH { get; set; }
        public virtual DbSet<KpurOrdD> KpurOrdD { get; set; }
        public virtual DbSet<KpurOrdrH> KpurOrdrH { get; set; }
        public virtual DbSet<KpurQry> KpurQry { get; set; }
        public virtual DbSet<KpurQryD> KpurQryD { get; set; }
        public virtual DbSet<KpurRqstD> KpurRqstD { get; set; }
        public virtual DbSet<KpurRqstH> KpurRqstH { get; set; }
        public virtual DbSet<KpurUser> KpurUser { get; set; }
        public virtual DbSet<KsysTableName> KsysTableName { get; set; }
        public virtual DbSet<MemberShip> MemberShip { get; set; }
        public virtual DbSet<MonitorAccess> MonitorAccess { get; set; }
        public virtual DbSet<MonitorPrint> MonitorPrint { get; set; }
        public virtual DbSet<MonitorProperty> MonitorProperty { get; set; }
        public virtual DbSet<MonitorRule> MonitorRule { get; set; }
        public virtual DbSet<Myprs> Myprs { get; set; }
        public virtual DbSet<PerAdv> PerAdv { get; set; }
        public virtual DbSet<PerAirLine> PerAirLine { get; set; }
        public virtual DbSet<PerBnkmaster> PerBnkmaster { get; set; }
        public virtual DbSet<PerCmd> PerCmd { get; set; }
        public virtual DbSet<PerCmdDesc> PerCmdDesc { get; set; }
        public virtual DbSet<PerCmdOpr> PerCmdOpr { get; set; }
        public virtual DbSet<PerCmdTyp> PerCmdTyp { get; set; }
        public virtual DbSet<PerContractTyp> PerContractTyp { get; set; }
        public virtual DbSet<PerCurency> PerCurency { get; set; }
        public virtual DbSet<PerDelay> PerDelay { get; set; }
        public virtual DbSet<PerDskTaxPrimeH> PerDskTaxPrimeH { get; set; }
        public virtual DbSet<PerDskTaxPrimeK> PerDskTaxPrimeK { get; set; }
        public virtual DbSet<PerDskTaxPrimeP> PerDskTaxPrimeP { get; set; }
        public virtual DbSet<PerEmpTyp> PerEmpTyp { get; set; }
        public virtual DbSet<PerExempt> PerExempt { get; set; }
        public virtual DbSet<PerFn> PerFn { get; set; }
        public virtual DbSet<PerFurnitureFlag> PerFurnitureFlag { get; set; }
        public virtual DbSet<PerHaml> PerHaml { get; set; }
        public virtual DbSet<PerHtyp> PerHtyp { get; set; }
        public virtual DbSet<PerIncDec> PerIncDec { get; set; }
        public virtual DbSet<PerInsrnPromise> PerInsrnPromise { get; set; }
        public virtual DbSet<PerInsrncGrp> PerInsrncGrp { get; set; }
        public virtual DbSet<PerInsurType> PerInsurType { get; set; }
        public virtual DbSet<PerInterNational> PerInterNational { get; set; }
        public virtual DbSet<PerLoanGivBak> PerLoanGivBak { get; set; }
        public virtual DbSet<PerLoanRqst> PerLoanRqst { get; set; }
        public virtual DbSet<PerLoanTyp> PerLoanTyp { get; set; }
        public virtual DbSet<PerLoans> PerLoans { get; set; }
        public virtual DbSet<PerLoc> PerLoc { get; set; }
        public virtual DbSet<PerLocGrp> PerLocGrp { get; set; }
        public virtual DbSet<PerLocUser> PerLocUser { get; set; }
        public virtual DbSet<PerMajor> PerMajor { get; set; }
        public virtual DbSet<PerMamor> PerMamor { get; set; }
        public virtual DbSet<PerMamorPlace> PerMamorPlace { get; set; }
        public virtual DbSet<PerOpr> PerOpr { get; set; }
        public virtual DbSet<PerOprGrp> PerOprGrp { get; set; }
        public virtual DbSet<PerPaidType> PerPaidType { get; set; }
        public virtual DbSet<PerPaySummery> PerPaySummery { get; set; }
        public virtual DbSet<PerPaySummeryInfo> PerPaySummeryInfo { get; set; }
        public virtual DbSet<PerPayer> PerPayer { get; set; }
        public virtual DbSet<PerPayerD> PerPayerD { get; set; }
        public virtual DbSet<PerPayerH> PerPayerH { get; set; }
        public virtual DbSet<PerPaymentType> PerPaymentType { get; set; }
        public virtual DbSet<PerPayroll> PerPayroll { get; set; }
        public virtual DbSet<PerPayrollDelayed> PerPayrollDelayed { get; set; }
        public virtual DbSet<PerPlaceOfficeStatus> PerPlaceOfficeStatus { get; set; }
        public virtual DbSet<PerPrsnl> PerPrsnl { get; set; }
        public virtual DbSet<PerPrsnlAttach> PerPrsnlAttach { get; set; }
        public virtual DbSet<PerPrsnlD> PerPrsnlD { get; set; }
        public virtual DbSet<PerPrsnlHstryEdu> PerPrsnlHstryEdu { get; set; }
        public virtual DbSet<PerPrsnlHstryFml> PerPrsnlHstryFml { get; set; }
        public virtual DbSet<PerPrsnlHstryLng> PerPrsnlHstryLng { get; set; }
        public virtual DbSet<PerPrsnlHstryMrg> PerPrsnlHstryMrg { get; set; }
        public virtual DbSet<PerPrsnlHstryTch> PerPrsnlHstryTch { get; set; }
        public virtual DbSet<PerPrsnlHstryWrk> PerPrsnlHstryWrk { get; set; }
        public virtual DbSet<PerPw1100> PerPw1100 { get; set; }
        public virtual DbSet<PerPyrlPeriod> PerPyrlPeriod { get; set; }
        public virtual DbSet<PerSponserShipD> PerSponserShipD { get; set; }
        public virtual DbSet<PerSponserShipKasrBime> PerSponserShipKasrBime { get; set; }
        public virtual DbSet<PerSponserShipRelated> PerSponserShipRelated { get; set; }
        public virtual DbSet<PerTaxD> PerTaxD { get; set; }
        public virtual DbSet<PerTaxGrp> PerTaxGrp { get; set; }
        public virtual DbSet<PerTaxH> PerTaxH { get; set; }
        public virtual DbSet<PerVchrD> PerVchrD { get; set; }
        public virtual DbSet<PerVchrH> PerVchrH { get; set; }
        public virtual DbSet<PerVehicleFlag> PerVehicleFlag { get; set; }
        public virtual DbSet<PerWrkLst> PerWrkLst { get; set; }
        public virtual DbSet<PerWrkLstAttach> PerWrkLstAttach { get; set; }
        public virtual DbSet<PereEducate> PereEducate { get; set; }
        public virtual DbSet<PeremployeeStatus> PeremployeeStatus { get; set; }
        public virtual DbSet<PerjobTyp> PerjobTyp { get; set; }
        public virtual DbSet<PersWorkHolidays> PersWorkHolidays { get; set; }
        public virtual DbSet<PersWorkList> PersWorkList { get; set; }
        public virtual DbSet<PersWorkListCalc> PersWorkListCalc { get; set; }
        public virtual DbSet<PersWorkOverTime> PersWorkOverTime { get; set; }
        public virtual DbSet<PersWorkTime> PersWorkTime { get; set; }
        public virtual DbSet<PersWorkingSchdl> PersWorkingSchdl { get; set; }
        public virtual DbSet<PmAccess> PmAccess { get; set; }
        public virtual DbSet<PmActivity> PmActivity { get; set; }
        public virtual DbSet<PmCauseDestroy> PmCauseDestroy { get; set; }
        public virtual DbSet<PmDestroy> PmDestroy { get; set; }
        public virtual DbSet<PmDserVice> PmDserVice { get; set; }
        public virtual DbSet<PmEquip> PmEquip { get; set; }
        public virtual DbSet<PmOperationDes> PmOperationDes { get; set; }
        public virtual DbSet<PmService> PmService { get; set; }
        public virtual DbSet<PmShift> PmShift { get; set; }
        public virtual DbSet<PmSysTem> PmSysTem { get; set; }
        public virtual DbSet<PmcarCategory> PmcarCategory { get; set; }
        public virtual DbSet<PmdestroySpec> PmdestroySpec { get; set; }
        public virtual DbSet<Pmplan> Pmplan { get; set; }
        public virtual DbSet<Pmplaning> Pmplaning { get; set; }
        public virtual DbSet<Pmpriority> Pmpriority { get; set; }
        public virtual DbSet<PmscArcAtegory> PmscArcAtegory { get; set; }
        public virtual DbSet<Pmworkmessure> Pmworkmessure { get; set; }
        public virtual DbSet<PrdcBom> PrdcBom { get; set; }
        public virtual DbSet<PrdcBomd> PrdcBomd { get; set; }
        public virtual DbSet<PrdcLine> PrdcLine { get; set; }
        public virtual DbSet<PrdcLineTitle> PrdcLineTitle { get; set; }
        public virtual DbSet<PrdcStation> PrdcStation { get; set; }
        public virtual DbSet<PrdcTraceDinfo> PrdcTraceDinfo { get; set; }
        public virtual DbSet<PrdcTraceDmaterial> PrdcTraceDmaterial { get; set; }
        public virtual DbSet<PrdcTraceDprocess> PrdcTraceDprocess { get; set; }
        public virtual DbSet<PrdcTraceH> PrdcTraceH { get; set; }
        public virtual DbSet<PrdcWorkOrderDinfo> PrdcWorkOrderDinfo { get; set; }
        public virtual DbSet<PrdcWorkOrderDmaterial> PrdcWorkOrderDmaterial { get; set; }
        public virtual DbSet<PrdcWorkOrderDprocess> PrdcWorkOrderDprocess { get; set; }
        public virtual DbSet<PrdcWorkOrderH> PrdcWorkOrderH { get; set; }
        public virtual DbSet<PurBuyD> PurBuyD { get; set; }
        public virtual DbSet<PurBuyH> PurBuyH { get; set; }
        public virtual DbSet<PurBuySt> PurBuySt { get; set; }
        public virtual DbSet<PurBuyStUser> PurBuyStUser { get; set; }
        public virtual DbSet<PurEnqry> PurEnqry { get; set; }
        public virtual DbSet<PurGdsGrp> PurGdsGrp { get; set; }
        public virtual DbSet<PurGdsToVndr> PurGdsToVndr { get; set; }
        public virtual DbSet<PurIncDecFactor> PurIncDecFactor { get; set; }
        public virtual DbSet<PurIncDecFactorH> PurIncDecFactorH { get; set; }
        public virtual DbSet<PurIncDecFactorType> PurIncDecFactorType { get; set; }
        public virtual DbSet<PurInvcD> PurInvcD { get; set; }
        public virtual DbSet<PurInvcH> PurInvcH { get; set; }
        public virtual DbSet<PurKind> PurKind { get; set; }
        public virtual DbSet<PurOrdBuyD> PurOrdBuyD { get; set; }
        public virtual DbSet<PurOrdBuyH> PurOrdBuyH { get; set; }
        public virtual DbSet<PurOrdPayKind> PurOrdPayKind { get; set; }
        public virtual DbSet<PurOrdPayer> PurOrdPayer { get; set; }
        public virtual DbSet<PurOrderD> PurOrderD { get; set; }
        public virtual DbSet<PurOrderH> PurOrderH { get; set; }
        public virtual DbSet<PurOrdr> PurOrdr { get; set; }
        public virtual DbSet<PurOrdvndr> PurOrdvndr { get; set; }
        public virtual DbSet<PurPayPaperD> PurPayPaperD { get; set; }
        public virtual DbSet<PurPayPaperH> PurPayPaperH { get; set; }
        public virtual DbSet<PurPreInvcD> PurPreInvcD { get; set; }
        public virtual DbSet<PurPreInvcH> PurPreInvcH { get; set; }
        public virtual DbSet<PurReqProc> PurReqProc { get; set; }
        public virtual DbSet<PurReqTyp> PurReqTyp { get; set; }
        public virtual DbSet<PurReqstD> PurReqstD { get; set; }
        public virtual DbSet<PurReqstH> PurReqstH { get; set; }
        public virtual DbSet<PurResp> PurResp { get; set; }
        public virtual DbSet<PurRespUser> PurRespUser { get; set; }
        public virtual DbSet<PurRqstCuse> PurRqstCuse { get; set; }
        public virtual DbSet<PurRqstD> PurRqstD { get; set; }
        public virtual DbSet<PurRqstH> PurRqstH { get; set; }
        public virtual DbSet<PurRqstHcnfrm> PurRqstHcnfrm { get; set; }
        public virtual DbSet<PurVndr> PurVndr { get; set; }
        public virtual DbSet<PurVndrGrp> PurVndrGrp { get; set; }
        public virtual DbSet<SalAdjustment> SalAdjustment { get; set; }
        public virtual DbSet<SalAdmitCust> SalAdmitCust { get; set; }
        public virtual DbSet<SalAdmitStatus> SalAdmitStatus { get; set; }
        public virtual DbSet<SalBrnch> SalBrnch { get; set; }
        public virtual DbSet<SalBrnchUser> SalBrnchUser { get; set; }
        public virtual DbSet<SalCancle> SalCancle { get; set; }
        public virtual DbSet<SalCashior> SalCashior { get; set; }
        public virtual DbSet<SalCity> SalCity { get; set; }
        public virtual DbSet<SalCntrct> SalCntrct { get; set; }
        public virtual DbSet<SalCntrctGds> SalCntrctGds { get; set; }
        public virtual DbSet<SalCntrctGrp> SalCntrctGrp { get; set; }
        public virtual DbSet<SalCntrctSts> SalCntrctSts { get; set; }
        public virtual DbSet<SalContractD> SalContractD { get; set; }
        public virtual DbSet<SalContractH> SalContractH { get; set; }
        public virtual DbSet<SalContractTyp> SalContractTyp { get; set; }
        public virtual DbSet<SalCountry> SalCountry { get; set; }
        public virtual DbSet<SalCust> SalCust { get; set; }
        public virtual DbSet<SalCustActiveTyp> SalCustActiveTyp { get; set; }
        public virtual DbSet<SalCustAtntc> SalCustAtntc { get; set; }
        public virtual DbSet<SalCustAttach> SalCustAttach { get; set; }
        public virtual DbSet<SalCustBnk> SalCustBnk { get; set; }
        public virtual DbSet<SalCustFrmul> SalCustFrmul { get; set; }
        public virtual DbSet<SalCustGrp> SalCustGrp { get; set; }
        public virtual DbSet<SalCustGrpUser> SalCustGrpUser { get; set; }
        public virtual DbSet<SalCustStatus> SalCustStatus { get; set; }
        public virtual DbSet<SalDclrPrcD> SalDclrPrcD { get; set; }
        public virtual DbSet<SalDclrPrcH> SalDclrPrcH { get; set; }
        public virtual DbSet<SalDepend> SalDepend { get; set; }
        public virtual DbSet<SalDisCount> SalDisCount { get; set; }
        public virtual DbSet<SalDivision> SalDivision { get; set; }
        public virtual DbSet<SalDlvLoc> SalDlvLoc { get; set; }
        public virtual DbSet<SalDlvrr> SalDlvrr { get; set; }
        public virtual DbSet<SalDocLock> SalDocLock { get; set; }
        public virtual DbSet<SalDocPur> SalDocPur { get; set; }
        public virtual DbSet<SalDocVchr> SalDocVchr { get; set; }
        public virtual DbSet<SalDriver> SalDriver { get; set; }
        public virtual DbSet<SalDrvr> SalDrvr { get; set; }
        public virtual DbSet<SalDscr> SalDscr { get; set; }
        public virtual DbSet<SalDscrSms> SalDscrSms { get; set; }
        public virtual DbSet<SalEnterduced> SalEnterduced { get; set; }
        public virtual DbSet<SalExpMetrajCalc> SalExpMetrajCalc { get; set; }
        public virtual DbSet<SalExportPrmD> SalExportPrmD { get; set; }
        public virtual DbSet<SalExportPrmH> SalExportPrmH { get; set; }
        public virtual DbSet<SalExportPrmHopr> SalExportPrmHopr { get; set; }
        public virtual DbSet<SalFixAccount> SalFixAccount { get; set; }
        public virtual DbSet<SalGdsAcc> SalGdsAcc { get; set; }
        public virtual DbSet<SalGdsRetAcc> SalGdsRetAcc { get; set; }
        public virtual DbSet<SalGftCnd> SalGftCnd { get; set; }
        public virtual DbSet<SalGiftD> SalGiftD { get; set; }
        public virtual DbSet<SalGiftH> SalGiftH { get; set; }
        public virtual DbSet<SalGiftInvGds> SalGiftInvGds { get; set; }
        public virtual DbSet<SalGrpUser> SalGrpUser { get; set; }
        public virtual DbSet<SalGrpUserToUser> SalGrpUserToUser { get; set; }
        public virtual DbSet<SalGuranty> SalGuranty { get; set; }
        public virtual DbSet<SalGurantyD> SalGurantyD { get; set; }
        public virtual DbSet<SalIntrmd> SalIntrmd { get; set; }
        public virtual DbSet<SalIntrmdUser> SalIntrmdUser { get; set; }
        public virtual DbSet<SalInvcAttach> SalInvcAttach { get; set; }
        public virtual DbSet<SalInvcD> SalInvcD { get; set; }
        public virtual DbSet<SalInvcDshape> SalInvcDshape { get; set; }
        public virtual DbSet<SalInvcDsrl> SalInvcDsrl { get; set; }
        public virtual DbSet<SalInvcH> SalInvcH { get; set; }
        public virtual DbSet<SalInvcOpr> SalInvcOpr { get; set; }
        public virtual DbSet<SalInvcSrvD> SalInvcSrvD { get; set; }
        public virtual DbSet<SalInvcSrvH> SalInvcSrvH { get; set; }
        public virtual DbSet<SalInvcSrvOpr> SalInvcSrvOpr { get; set; }
        public virtual DbSet<SalMetrajCalc> SalMetrajCalc { get; set; }
        public virtual DbSet<SalOpr> SalOpr { get; set; }
        public virtual DbSet<SalOprUser> SalOprUser { get; set; }
        public virtual DbSet<SalPreInvcAttach> SalPreInvcAttach { get; set; }
        public virtual DbSet<SalPreInvcD> SalPreInvcD { get; set; }
        public virtual DbSet<SalPreInvcH> SalPreInvcH { get; set; }
        public virtual DbSet<SalPreInvcOpr> SalPreInvcOpr { get; set; }
        public virtual DbSet<SalPreInvcSrvD> SalPreInvcSrvD { get; set; }
        public virtual DbSet<SalPreInvcSrvH> SalPreInvcSrvH { get; set; }
        public virtual DbSet<SalPreInvcSrvOpr> SalPreInvcSrvOpr { get; set; }
        public virtual DbSet<SalPreMetrajCalc> SalPreMetrajCalc { get; set; }
        public virtual DbSet<SalProvince> SalProvince { get; set; }
        public virtual DbSet<SalPursue> SalPursue { get; set; }
        public virtual DbSet<SalRcvMthd> SalRcvMthd { get; set; }
        public virtual DbSet<SalRegion> SalRegion { get; set; }
        public virtual DbSet<SalRegionPath> SalRegionPath { get; set; }
        public virtual DbSet<SalRegionToSalIntrmd> SalRegionToSalIntrmd { get; set; }
        public virtual DbSet<SalRegionToSalResp> SalRegionToSalResp { get; set; }
        public virtual DbSet<SalRelieve> SalRelieve { get; set; }
        public virtual DbSet<SalRequestD> SalRequestD { get; set; }
        public virtual DbSet<SalRequestH> SalRequestH { get; set; }
        public virtual DbSet<SalRequestOpr> SalRequestOpr { get; set; }
        public virtual DbSet<SalResp> SalResp { get; set; }
        public virtual DbSet<SalRespUser> SalRespUser { get; set; }
        public virtual DbSet<SalRetInvcD> SalRetInvcD { get; set; }
        public virtual DbSet<SalRetInvcDsrl> SalRetInvcDsrl { get; set; }
        public virtual DbSet<SalRetInvcH> SalRetInvcH { get; set; }
        public virtual DbSet<SalRetInvcOpr> SalRetInvcOpr { get; set; }
        public virtual DbSet<SalRetMetrajCalc> SalRetMetrajCalc { get; set; }
        public virtual DbSet<SalSeller> SalSeller { get; set; }
        public virtual DbSet<SalSrv> SalSrv { get; set; }
        public virtual DbSet<SalSrvAcc> SalSrvAcc { get; set; }
        public virtual DbSet<SalSrvGrp> SalSrvGrp { get; set; }
        public virtual DbSet<SalTaxD> SalTaxD { get; set; }
        public virtual DbSet<SalTaxH> SalTaxH { get; set; }
        public virtual DbSet<SalTyp> SalTyp { get; set; }
        public virtual DbSet<SalTypPrn> SalTypPrn { get; set; }
        public virtual DbSet<SalUserLevel> SalUserLevel { get; set; }
        public virtual DbSet<SalVchrD> SalVchrD { get; set; }
        public virtual DbSet<SalVchrH> SalVchrH { get; set; }
        public virtual DbSet<SalePreInvoice> SalePreInvoice { get; set; }
        public virtual DbSet<SalePreInvoiceDetail> SalePreInvoiceDetail { get; set; }
        public virtual DbSet<SalePreInvoiceOperation> SalePreInvoiceOperation { get; set; }
        public virtual DbSet<SalinvcGift> SalinvcGift { get; set; }
        public virtual DbSet<SallimitGrant> SallimitGrant { get; set; }
        public virtual DbSet<Salvariety> Salvariety { get; set; }
        public virtual DbSet<ShpCashier> ShpCashier { get; set; }
        public virtual DbSet<ShpInvoiceD> ShpInvoiceD { get; set; }
        public virtual DbSet<ShpInvoiceH> ShpInvoiceH { get; set; }
        public virtual DbSet<StimulReportFile> StimulReportFile { get; set; }
        public virtual DbSet<Sysproperties> Sysproperties { get; set; }
        public virtual DbSet<Table1> Table1 { get; set; }
        public virtual DbSet<Table11> Table11 { get; set; }
        public virtual DbSet<Tamirgah> Tamirgah { get; set; }
        public virtual DbSet<TrsAcc> TrsAcc { get; set; }
        public virtual DbSet<TrsAccLtaccNo> TrsAccLtaccNo { get; set; }
        public virtual DbSet<TrsAordr> TrsAordr { get; set; }
        public virtual DbSet<TrsAordrPrc> TrsAordrPrc { get; set; }
        public virtual DbSet<TrsAordrTyp> TrsAordrTyp { get; set; }
        public virtual DbSet<TrsArqst> TrsArqst { get; set; }
        public virtual DbSet<TrsArqstSts> TrsArqstSts { get; set; }
        public virtual DbSet<TrsArqstToAsgn> TrsArqstToAsgn { get; set; }
        public virtual DbSet<TrsArqstTyp> TrsArqstTyp { get; set; }
        public virtual DbSet<TrsAsgn> TrsAsgn { get; set; }
        public virtual DbSet<TrsAsgnGrp> TrsAsgnGrp { get; set; }
        public virtual DbSet<TrsAsgnGrpUsr> TrsAsgnGrpUsr { get; set; }
        public virtual DbSet<TrsAsgnuser> TrsAsgnuser { get; set; }
        public virtual DbSet<TrsBnkAcc> TrsBnkAcc { get; set; }
        public virtual DbSet<TrsBnkCnflt> TrsBnkCnflt { get; set; }
        public virtual DbSet<TrsCfg> TrsCfg { get; set; }
        public virtual DbSet<TrsChqP> TrsChqP { get; set; }
        public virtual DbSet<TrsChqPdesc> TrsChqPdesc { get; set; }
        public virtual DbSet<TrsChqPuse> TrsChqPuse { get; set; }
        public virtual DbSet<TrsCtyp> TrsCtyp { get; set; }
        public virtual DbSet<TrsDc> TrsDc { get; set; }
        public virtual DbSet<TrsDcA> TrsDcA { get; set; }
        public virtual DbSet<TrsDcAinvc> TrsDcAinvc { get; set; }
        public virtual DbSet<TrsDcApreInvc> TrsDcApreInvc { get; set; }
        public virtual DbSet<TrsDcAttach> TrsDcAttach { get; set; }
        public virtual DbSet<TrsDcC> TrsDcC { get; set; }
        public virtual DbSet<TrsDcCattach> TrsDcCattach { get; set; }
        public virtual DbSet<TrsDcGrp> TrsDcGrp { get; set; }
        public virtual DbSet<TrsDcS> TrsDcS { get; set; }
        public virtual DbSet<TrsDcTyp> TrsDcTyp { get; set; }
        public virtual DbSet<TrsDocLock> TrsDocLock { get; set; }
        public virtual DbSet<TrsDocVchr> TrsDocVchr { get; set; }
        public virtual DbSet<TrsDocVchrH> TrsDocVchrH { get; set; }
        public virtual DbSet<TrsDscr> TrsDscr { get; set; }
        public virtual DbSet<TrsGrpUser> TrsGrpUser { get; set; }
        public virtual DbSet<TrsGrpUserToUser> TrsGrpUserToUser { get; set; }
        public virtual DbSet<TrsRsrc> TrsRsrc { get; set; }
        public virtual DbSet<TrsRsrcTyp> TrsRsrcTyp { get; set; }
        public virtual DbSet<TrsRsrcUsr> TrsRsrcUsr { get; set; }
        public virtual DbSet<TrsRsrcuser> TrsRsrcuser { get; set; }
        public virtual DbSet<TrsSrvDcAinvc> TrsSrvDcAinvc { get; set; }
        public virtual DbSet<TrsSts> TrsSts { get; set; }
        public virtual DbSet<TrsStsAdesc> TrsStsAdesc { get; set; }
        public virtual DbSet<TrsStsFn> TrsStsFn { get; set; }
        public virtual DbSet<TrsStsNx> TrsStsNx { get; set; }
        public virtual DbSet<TrsStsTyp> TrsStsTyp { get; set; }
        public virtual DbSet<TrsStsTypUsr> TrsStsTypUsr { get; set; }
        public virtual DbSet<TrsUsr> TrsUsr { get; set; }
        public virtual DbSet<TrsUsrGrp> TrsUsrGrp { get; set; }
        public virtual DbSet<TrsUsrToGrp> TrsUsrToGrp { get; set; }
        public virtual DbSet<TrsVchrD> TrsVchrD { get; set; }
        public virtual DbSet<TrsVchrH> TrsVchrH { get; set; }
        public virtual DbSet<VwAccBdgt> VwAccBdgt { get; set; }
        public virtual DbSet<VwAccBgtMtrx> VwAccBgtMtrx { get; set; }
        public virtual DbSet<VwAccBudget> VwAccBudget { get; set; }
        public virtual DbSet<VwAccCtbMinfo> VwAccCtbMinfo { get; set; }
        public virtual DbSet<VwAccDdoc> VwAccDdoc { get; set; }
        public virtual DbSet<VwAccDdocIntgr> VwAccDdocIntgr { get; set; }
        public virtual DbSet<VwAccDocAdrs> VwAccDocAdrs { get; set; }
        public virtual DbSet<VwAccExchange> VwAccExchange { get; set; }
        public virtual DbSet<VwAccHdoc> VwAccHdoc { get; set; }
        public virtual DbSet<VwAccLc> VwAccLc { get; set; }
        public virtual DbSet<VwAccLcost> VwAccLcost { get; set; }
        public virtual DbSet<VwAccLk> VwAccLk { get; set; }
        public virtual DbSet<VwAccLm> VwAccLm { get; set; }
        public virtual DbSet<VwAccLmc> VwAccLmc { get; set; }
        public virtual DbSet<VwAccLmoien> VwAccLmoien { get; set; }
        public virtual DbSet<VwAccLmp> VwAccLmp { get; set; }
        public virtual DbSet<VwAccLmt> VwAccLmt { get; set; }
        public virtual DbSet<VwAccLp> VwAccLp { get; set; }
        public virtual DbSet<VwAccLproject> VwAccLproject { get; set; }
        public virtual DbSet<VwAccLt> VwAccLt { get; set; }
        public virtual DbSet<VwAccLtafsili> VwAccLtafsili { get; set; }
        public virtual DbSet<VwAccMatrixReport> VwAccMatrixReport { get; set; }
        public virtual DbSet<VwAccRelations> VwAccRelations { get; set; }
        public virtual DbSet<VwAccRqst> VwAccRqst { get; set; }
        public virtual DbSet<VwAssAgency> VwAssAgency { get; set; }
        public virtual DbSet<VwAssMachineTyp> VwAssMachineTyp { get; set; }
        public virtual DbSet<VwAssReceiptH> VwAssReceiptH { get; set; }
        public virtual DbSet<VwAssReceiptOpr> VwAssReceiptOpr { get; set; }
        public virtual DbSet<VwAssServiceH> VwAssServiceH { get; set; }
        public virtual DbSet<VwAssVchrD> VwAssVchrD { get; set; }
        public virtual DbSet<VwAssVchrH> VwAssVchrH { get; set; }
        public virtual DbSet<VwAstAsset> VwAstAsset { get; set; }
        public virtual DbSet<VwAstAssetDprc> VwAstAssetDprc { get; set; }
        public virtual DbSet<VwAstAssetLctn> VwAstAssetLctn { get; set; }
        public virtual DbSet<VwAstAssetSummary> VwAstAssetSummary { get; set; }
        public virtual DbSet<VwAstAssetSummaryNew> VwAstAssetSummaryNew { get; set; }
        public virtual DbSet<VwAstGrup> VwAstGrup { get; set; }
        public virtual DbSet<VwAstLocationNew> VwAstLocationNew { get; set; }
        public virtual DbSet<VwAstPrepareVchr> VwAstPrepareVchr { get; set; }
        public virtual DbSet<VwAstPurchaseVoucher> VwAstPurchaseVoucher { get; set; }
        public virtual DbSet<VwAstVchrD> VwAstVchrD { get; set; }
        public virtual DbSet<VwAstVchrH> VwAstVchrH { get; set; }
        public virtual DbSet<VwCntContract> VwCntContract { get; set; }
        public virtual DbSet<VwCntCustomer> VwCntCustomer { get; set; }
        public virtual DbSet<VwCntLock> VwCntLock { get; set; }
        public virtual DbSet<VwCntPaymentOpr> VwCntPaymentOpr { get; set; }
        public virtual DbSet<VwCntTrackAlerts> VwCntTrackAlerts { get; set; }
        public virtual DbSet<VwCntVendor> VwCntVendor { get; set; }
        public virtual DbSet<VwCrossCheck> VwCrossCheck { get; set; }
        public virtual DbSet<VwCrossUnCheck> VwCrossUnCheck { get; set; }
        public virtual DbSet<VwCtbAddrsSwch> VwCtbAddrsSwch { get; set; }
        public virtual DbSet<VwCtbOrgPst> VwCtbOrgPst { get; set; }
        public virtual DbSet<VwIntgDbPurchasePursuit> VwIntgDbPurchasePursuit { get; set; }
        public virtual DbSet<VwIntgDbPurchaseRecipt> VwIntgDbPurchaseRecipt { get; set; }
        public virtual DbSet<VwInvCntBatchD> VwInvCntBatchD { get; set; }
        public virtual DbSet<VwInvCntD> VwInvCntD { get; set; }
        public virtual DbSet<VwInvCntH> VwInvCntH { get; set; }
        public virtual DbSet<VwInvControlGds> VwInvControlGds { get; set; }
        public virtual DbSet<VwInvDocAuto> VwInvDocAuto { get; set; }
        public virtual DbSet<VwInvDocD> VwInvDocD { get; set; }
        public virtual DbSet<VwInvDocD2> VwInvDocD2 { get; set; }
        public virtual DbSet<VwInvDocDsrl> VwInvDocDsrl { get; set; }
        public virtual DbSet<VwInvDocDtrn> VwInvDocDtrn { get; set; }
        public virtual DbSet<VwInvDocDwithoutUser> VwInvDocDwithoutUser { get; set; }
        public virtual DbSet<VwInvDocH> VwInvDocH { get; set; }
        public virtual DbSet<VwInvDocTmp> VwInvDocTmp { get; set; }
        public virtual DbSet<VwInvDocTmpD> VwInvDocTmpD { get; set; }
        public virtual DbSet<VwInvDocTmpH> VwInvDocTmpH { get; set; }
        public virtual DbSet<VwInvDocVchr> VwInvDocVchr { get; set; }
        public virtual DbSet<VwInvDrctCnsuD> VwInvDrctCnsuD { get; set; }
        public virtual DbSet<VwInvDrctCnsuH> VwInvDrctCnsuH { get; set; }
        public virtual DbSet<VwInvExpPrmD> VwInvExpPrmD { get; set; }
        public virtual DbSet<VwInvExportPrmH> VwInvExportPrmH { get; set; }
        public virtual DbSet<VwInvGds> VwInvGds { get; set; }
        public virtual DbSet<VwInvGdsAccC> VwInvGdsAccC { get; set; }
        public virtual DbSet<VwInvGdsAccP> VwInvGdsAccP { get; set; }
        public virtual DbSet<VwInvGdsControlD> VwInvGdsControlD { get; set; }
        public virtual DbSet<VwInvGdsToGds> VwInvGdsToGds { get; set; }
        public virtual DbSet<VwInvGdsToInv> VwInvGdsToInv { get; set; }
        public virtual DbSet<VwInvGdstyp> VwInvGdstyp { get; set; }
        public virtual DbSet<VwInvInvt> VwInvInvt { get; set; }
        public virtual DbSet<VwInvMatrixReport> VwInvMatrixReport { get; set; }
        public virtual DbSet<VwInvRemainQtyBorrow> VwInvRemainQtyBorrow { get; set; }
        public virtual DbSet<VwInvRqstD> VwInvRqstD { get; set; }
        public virtual DbSet<VwInvRqstH> VwInvRqstH { get; set; }
        public virtual DbSet<VwInvSrl> VwInvSrl { get; set; }
        public virtual DbSet<VwInvSumQtyGiveBorrow> VwInvSumQtyGiveBorrow { get; set; }
        public virtual DbSet<VwInvSumQtySndBorrow> VwInvSumQtySndBorrow { get; set; }
        public virtual DbSet<VwInvUntCnvrt> VwInvUntCnvrt { get; set; }
        public virtual DbSet<VwInvUser> VwInvUser { get; set; }
        public virtual DbSet<VwInvVchrD> VwInvVchrD { get; set; }
        public virtual DbSet<VwInvVchrH> VwInvVchrH { get; set; }
        public virtual DbSet<VwKpurQryWin> VwKpurQryWin { get; set; }
        public virtual DbSet<VwKpurRqstD> VwKpurRqstD { get; set; }
        public virtual DbSet<VwPerAdv> VwPerAdv { get; set; }
        public virtual DbSet<VwPerCmd> VwPerCmd { get; set; }
        public virtual DbSet<VwPerCmdMatrixReport> VwPerCmdMatrixReport { get; set; }
        public virtual DbSet<VwPerCmdOpr> VwPerCmdOpr { get; set; }
        public virtual DbSet<VwPerCmdprsnlCmdOprMtrx> VwPerCmdprsnlCmdOprMtrx { get; set; }
        public virtual DbSet<VwPerIncDec> VwPerIncDec { get; set; }
        public virtual DbSet<VwPerLoanGivBak> VwPerLoanGivBak { get; set; }
        public virtual DbSet<VwPerLoanRqst> VwPerLoanRqst { get; set; }
        public virtual DbSet<VwPerLoans> VwPerLoans { get; set; }
        public virtual DbSet<VwPerMamor> VwPerMamor { get; set; }
        public virtual DbSet<VwPerMatrixReport> VwPerMatrixReport { get; set; }
        public virtual DbSet<VwPerOpr> VwPerOpr { get; set; }
        public virtual DbSet<VwPerOprMatrix> VwPerOprMatrix { get; set; }
        public virtual DbSet<VwPerPayroll> VwPerPayroll { get; set; }
        public virtual DbSet<VwPerPrsnl> VwPerPrsnl { get; set; }
        public virtual DbSet<VwPerPrsnlD> VwPerPrsnlD { get; set; }
        public virtual DbSet<VwPerSponserShip> VwPerSponserShip { get; set; }
        public virtual DbSet<VwPerVchrD> VwPerVchrD { get; set; }
        public virtual DbSet<VwPerVchrH> VwPerVchrH { get; set; }
        public virtual DbSet<VwPerWrkLst> VwPerWrkLst { get; set; }
        public virtual DbSet<VwPersWorkList> VwPersWorkList { get; set; }
        public virtual DbSet<VwPrdcBom> VwPrdcBom { get; set; }
        public virtual DbSet<VwPrdcBomd> VwPrdcBomd { get; set; }
        public virtual DbSet<VwPrdcBomworkOrderInfoD> VwPrdcBomworkOrderInfoD { get; set; }
        public virtual DbSet<VwPrdcLine> VwPrdcLine { get; set; }
        public virtual DbSet<VwPrdcLineConvertTime> VwPrdcLineConvertTime { get; set; }
        public virtual DbSet<VwPrdcLineWorkOrderInfoD> VwPrdcLineWorkOrderInfoD { get; set; }
        public virtual DbSet<VwPrdcStation> VwPrdcStation { get; set; }
        public virtual DbSet<VwPrdcTraceDmaterial> VwPrdcTraceDmaterial { get; set; }
        public virtual DbSet<VwPrdcTraceDprocess> VwPrdcTraceDprocess { get; set; }
        public virtual DbSet<VwPrdcTraceH> VwPrdcTraceH { get; set; }
        public virtual DbSet<VwPrdcTraceHdinfo> VwPrdcTraceHdinfo { get; set; }
        public virtual DbSet<VwPrdcTraceHdinfoMaterial> VwPrdcTraceHdinfoMaterial { get; set; }
        public virtual DbSet<VwPrdcWorkOrder> VwPrdcWorkOrder { get; set; }
        public virtual DbSet<VwPrdcWorkOrderDinfo> VwPrdcWorkOrderDinfo { get; set; }
        public virtual DbSet<VwPrdcWorkOrderDinfoMaterial> VwPrdcWorkOrderDinfoMaterial { get; set; }
        public virtual DbSet<VwPrdcWorkOrderDinfoTrace> VwPrdcWorkOrderDinfoTrace { get; set; }
        public virtual DbSet<VwPrdcWorkOrderDmaterial> VwPrdcWorkOrderDmaterial { get; set; }
        public virtual DbSet<VwPrdcWorkOrderDmaterialTrace> VwPrdcWorkOrderDmaterialTrace { get; set; }
        public virtual DbSet<VwPrdcWorkOrderDprocess> VwPrdcWorkOrderDprocess { get; set; }
        public virtual DbSet<VwPrdcWorkOrderDprocessTrace> VwPrdcWorkOrderDprocessTrace { get; set; }
        public virtual DbSet<VwPrdcWorkOrderH> VwPrdcWorkOrderH { get; set; }
        public virtual DbSet<VwPrdcWorkOrderHdinfoDmaterial> VwPrdcWorkOrderHdinfoDmaterial { get; set; }
        public virtual DbSet<VwPrdcWorkOrderProcessCalc> VwPrdcWorkOrderProcessCalc { get; set; }
        public virtual DbSet<VwPurBuyD> VwPurBuyD { get; set; }
        public virtual DbSet<VwPurBuyDsmall> VwPurBuyDsmall { get; set; }
        public virtual DbSet<VwPurEnqry> VwPurEnqry { get; set; }
        public virtual DbSet<VwPurGdsToVndr> VwPurGdsToVndr { get; set; }
        public virtual DbSet<VwPurInvcD> VwPurInvcD { get; set; }
        public virtual DbSet<VwPurInvcH> VwPurInvcH { get; set; }
        public virtual DbSet<VwPurOrdBuyD> VwPurOrdBuyD { get; set; }
        public virtual DbSet<VwPurOrdBuyDif> VwPurOrdBuyDif { get; set; }
        public virtual DbSet<VwPurOrdBuyDsel> VwPurOrdBuyDsel { get; set; }
        public virtual DbSet<VwPurOrdVndrList> VwPurOrdVndrList { get; set; }
        public virtual DbSet<VwPurOrderD> VwPurOrderD { get; set; }
        public virtual DbSet<VwPurOrdr> VwPurOrdr { get; set; }
        public virtual DbSet<VwPurRepEnquery> VwPurRepEnquery { get; set; }
        public virtual DbSet<VwPurReqstH> VwPurReqstH { get; set; }
        public virtual DbSet<VwPurRequestD> VwPurRequestD { get; set; }
        public virtual DbSet<VwPurRqstD> VwPurRqstD { get; set; }
        public virtual DbSet<VwPurRqstH> VwPurRqstH { get; set; }
        public virtual DbSet<VwPurVndr> VwPurVndr { get; set; }
        public virtual DbSet<VwPurenqueryOrdBuySelect> VwPurenqueryOrdBuySelect { get; set; }
        public virtual DbSet<VwSalBenefitInvGdsGrp> VwSalBenefitInvGdsGrp { get; set; }
        public virtual DbSet<VwSalBrnchUser> VwSalBrnchUser { get; set; }
        public virtual DbSet<VwSalCntrct> VwSalCntrct { get; set; }
        public virtual DbSet<VwSalCntrctD> VwSalCntrctD { get; set; }
        public virtual DbSet<VwSalCntrctDetailInvc> VwSalCntrctDetailInvc { get; set; }
        public virtual DbSet<VwSalCntrctGds> VwSalCntrctGds { get; set; }
        public virtual DbSet<VwSalCust> VwSalCust { get; set; }
        public virtual DbSet<VwSalCustAtntc> VwSalCustAtntc { get; set; }
        public virtual DbSet<VwSalCustMtrx> VwSalCustMtrx { get; set; }
        public virtual DbSet<VwSalCustMtrxSale> VwSalCustMtrxSale { get; set; }
        public virtual DbSet<VwSalCustMtrxSalinvc> VwSalCustMtrxSalinvc { get; set; }
        public virtual DbSet<VwSalDclrPrcD> VwSalDclrPrcD { get; set; }
        public virtual DbSet<VwSalDepend> VwSalDepend { get; set; }
        public virtual DbSet<VwSalDocVchr> VwSalDocVchr { get; set; }
        public virtual DbSet<VwSalExportD> VwSalExportD { get; set; }
        public virtual DbSet<VwSalExportH> VwSalExportH { get; set; }
        public virtual DbSet<VwSalExportInvcOpr> VwSalExportInvcOpr { get; set; }
        public virtual DbSet<VwSalExportinvcDoc> VwSalExportinvcDoc { get; set; }
        public virtual DbSet<VwSalGdsAcc> VwSalGdsAcc { get; set; }
        public virtual DbSet<VwSalGdsRetAcc> VwSalGdsRetAcc { get; set; }
        public virtual DbSet<VwSalGdsStock> VwSalGdsStock { get; set; }
        public virtual DbSet<VwSalGuranty> VwSalGuranty { get; set; }
        public virtual DbSet<VwSalIntrmdUser> VwSalIntrmdUser { get; set; }
        public virtual DbSet<VwSalInvDopr> VwSalInvDopr { get; set; }
        public virtual DbSet<VwSalInvSrvDopr> VwSalInvSrvDopr { get; set; }
        public virtual DbSet<VwSalInvcD> VwSalInvcD { get; set; }
        public virtual DbSet<VwSalInvcH> VwSalInvcH { get; set; }
        public virtual DbSet<VwSalInvcHtrS> VwSalInvcHtrS { get; set; }
        public virtual DbSet<VwSalInvcOpr> VwSalInvcOpr { get; set; }
        public virtual DbSet<VwSalInvcSrvD> VwSalInvcSrvD { get; set; }
        public virtual DbSet<VwSalInvcSrvH> VwSalInvcSrvH { get; set; }
        public virtual DbSet<VwSalInvcSrvOpr> VwSalInvcSrvOpr { get; set; }
        public virtual DbSet<VwSalMatrixReport> VwSalMatrixReport { get; set; }
        public virtual DbSet<VwSalMtrxsalPursue> VwSalMtrxsalPursue { get; set; }
        public virtual DbSet<VwSalOprUser> VwSalOprUser { get; set; }
        public virtual DbSet<VwSalPreInvcD> VwSalPreInvcD { get; set; }
        public virtual DbSet<VwSalPreInvcH> VwSalPreInvcH { get; set; }
        public virtual DbSet<VwSalPreInvcOpr> VwSalPreInvcOpr { get; set; }
        public virtual DbSet<VwSalPreInvcSrvD> VwSalPreInvcSrvD { get; set; }
        public virtual DbSet<VwSalPreInvcSrvH> VwSalPreInvcSrvH { get; set; }
        public virtual DbSet<VwSalPreInvcSrvOpr> VwSalPreInvcSrvOpr { get; set; }
        public virtual DbSet<VwSalPurRetSeason> VwSalPurRetSeason { get; set; }
        public virtual DbSet<VwSalPurSeason> VwSalPurSeason { get; set; }
        public virtual DbSet<VwSalPurso> VwSalPurso { get; set; }
        public virtual DbSet<VwSalRegion> VwSalRegion { get; set; }
        public virtual DbSet<VwSalRequestD> VwSalRequestD { get; set; }
        public virtual DbSet<VwSalRequestH> VwSalRequestH { get; set; }
        public virtual DbSet<VwSalRetInvDopr> VwSalRetInvDopr { get; set; }
        public virtual DbSet<VwSalRetInvcD> VwSalRetInvcD { get; set; }
        public virtual DbSet<VwSalRetInvcH> VwSalRetInvcH { get; set; }
        public virtual DbSet<VwSalRetInvcOpr> VwSalRetInvcOpr { get; set; }
        public virtual DbSet<VwSalRetMatrixReport> VwSalRetMatrixReport { get; set; }
        public virtual DbSet<VwSalRetinvcD2> VwSalRetinvcD2 { get; set; }
        public virtual DbSet<VwSalSaleRetSeason> VwSalSaleRetSeason { get; set; }
        public virtual DbSet<VwSalSaleSeason> VwSalSaleSeason { get; set; }
        public virtual DbSet<VwSalShpInvoice> VwSalShpInvoice { get; set; }
        public virtual DbSet<VwSalSrv> VwSalSrv { get; set; }
        public virtual DbSet<VwSalSrvAcc> VwSalSrvAcc { get; set; }
        public virtual DbSet<VwSalTreasury> VwSalTreasury { get; set; }
        public virtual DbSet<VwSalTresuryCust> VwSalTresuryCust { get; set; }
        public virtual DbSet<VwSalTresuryResp> VwSalTresuryResp { get; set; }
        public virtual DbSet<VwSalVchrD> VwSalVchrD { get; set; }
        public virtual DbSet<VwSalVchrH> VwSalVchrH { get; set; }
        public virtual DbSet<VwSaleDclPrc> VwSaleDclPrc { get; set; }
        public virtual DbSet<VwSalinvcD2> VwSalinvcD2 { get; set; }
        public virtual DbSet<VwSysDataDic> VwSysDataDic { get; set; }
        public virtual DbSet<VwSysDataDicD> VwSysDataDicD { get; set; }
        public virtual DbSet<VwTransBijak> VwTransBijak { get; set; }
        public virtual DbSet<VwTransBijakTabDeliver> VwTransBijakTabDeliver { get; set; }
        public virtual DbSet<VwTransCustomer> VwTransCustomer { get; set; }
        public virtual DbSet<VwTransDeliver> VwTransDeliver { get; set; }
        public virtual DbSet<VwTransDriver> VwTransDriver { get; set; }
        public virtual DbSet<VwTransTab> VwTransTab { get; set; }
        public virtual DbSet<VwTransTabPrn> VwTransTabPrn { get; set; }
        public virtual DbSet<VwTransVoucherD> VwTransVoucherD { get; set; }
        public virtual DbSet<VwTransVoucherH> VwTransVoucherH { get; set; }
        public virtual DbSet<VwTrsAccLc> VwTrsAccLc { get; set; }
        public virtual DbSet<VwTrsAccLm> VwTrsAccLm { get; set; }
        public virtual DbSet<VwTrsAccLp> VwTrsAccLp { get; set; }
        public virtual DbSet<VwTrsAccLt> VwTrsAccLt { get; set; }
        public virtual DbSet<VwTrsAccLtaccNo> VwTrsAccLtaccNo { get; set; }
        public virtual DbSet<VwTrsAnlyz> VwTrsAnlyz { get; set; }
        public virtual DbSet<VwTrsAordr> VwTrsAordr { get; set; }
        public virtual DbSet<VwTrsArqst> VwTrsArqst { get; set; }
        public virtual DbSet<VwTrsArqstToAsgn> VwTrsArqstToAsgn { get; set; }
        public virtual DbSet<VwTrsAsgn> VwTrsAsgn { get; set; }
        public virtual DbSet<VwTrsAsgnUsr> VwTrsAsgnUsr { get; set; }
        public virtual DbSet<VwTrsChqP> VwTrsChqP { get; set; }
        public virtual DbSet<VwTrsDc> VwTrsDc { get; set; }
        public virtual DbSet<VwTrsDcA> VwTrsDcA { get; set; }
        public virtual DbSet<VwTrsDcAinvc> VwTrsDcAinvc { get; set; }
        public virtual DbSet<VwTrsDcApreInvc> VwTrsDcApreInvc { get; set; }
        public virtual DbSet<VwTrsDcC> VwTrsDcC { get; set; }
        public virtual DbSet<VwTrsDcS> VwTrsDcS { get; set; }
        public virtual DbSet<VwTrsDocVchr> VwTrsDocVchr { get; set; }
        public virtual DbSet<VwTrsDocVoucher> VwTrsDocVoucher { get; set; }
        public virtual DbSet<VwTrsMatrixReport> VwTrsMatrixReport { get; set; }
        public virtual DbSet<VwTrsRsrc> VwTrsRsrc { get; set; }
        public virtual DbSet<VwTrsRsrcUsr> VwTrsRsrcUsr { get; set; }
        public virtual DbSet<VwTrsSts> VwTrsSts { get; set; }
        public virtual DbSet<VwTrsStsUsr> VwTrsStsUsr { get; set; }
        public virtual DbSet<VwTrsUsr> VwTrsUsr { get; set; }
        public virtual DbSet<VwTrsVchr> VwTrsVchr { get; set; }
        public virtual DbSet<VwkpurBuyH> VwkpurBuyH { get; set; }
        public virtual DbSet<VwkpurOrdrH> VwkpurOrdrH { get; set; }
        public virtual DbSet<VwkpurRqstH> VwkpurRqstH { get; set; }
        public virtual DbSet<VwpurEnqueryMatris> VwpurEnqueryMatris { get; set; }
        public virtual DbSet<VwpurOrdVndr> VwpurOrdVndr { get; set; }
        public virtual DbSet<VwpurPreInvcD> VwpurPreInvcD { get; set; }
        public virtual DbSet<Vwtest> Vwtest { get; set; }
        public virtual DbSet<Zone> Zone { get; set; }
        public virtual DbSet<انبارگردانی50004شمارش> انبارگردانی50004شمارش { get; set; }
        public virtual DbSet<برگشتازفروش1008فروش> برگشتازفروش1008فروش { get; set; }
        public virtual DbSet<حسابداري112گزارشدفترکل> حسابداري112گزارشدفترکل { get; set; }
        public virtual DbSet<حسابداری103گزارشخلاصهاسناد139302091520> حسابداری103گزارشخلاصهاسناد139302091520 { get; set; }
        public virtual DbSet<حسابداری108گزارشخلاصهاسناد139410220843> حسابداری108گزارشخلاصهاسناد139410220843 { get; set; }
        public virtual DbSet<حسابداری112گزارشدفترکل13920513848139302091520> حسابداری112گزارشدفترکل13920513848139302091520 { get; set; }
        public virtual DbSet<حسابداری113گزارشدفترکل13920513848139410220844> حسابداری113گزارشدفترکل13920513848139410220844 { get; set; }
        public virtual DbSet<حسابداری115گزارشدفترروزنامه13920513848139302091520> حسابداری115گزارشدفترروزنامه13920513848139302091520 { get; set; }
        public virtual DbSet<حسابداری115گزارشدفترروزنامه139205231143> حسابداری115گزارشدفترروزنامه139205231143 { get; set; }
        public virtual DbSet<حسابداری116گزارشدفترروزنامه13920513848139410220844> حسابداری116گزارشدفترروزنامه13920513848139410220844 { get; set; }
        public virtual DbSet<حسابداری4600لیستاسنادهمراهباجمع> حسابداری4600لیستاسنادهمراهباجمع { get; set; }
        public virtual DbSet<حقوق8000گزارشفیشحقوقی> حقوق8000گزارشفیشحقوقی { get; set; }
        public virtual DbSet<حقوق8001گزارشفیشحقوقی139410220843> حقوق8001گزارشفیشحقوقی139410220843 { get; set; }
        public virtual DbSet<حقوقودستمزد4500گزارشپرسنلبههمراهعواملحکمي> حقوقودستمزد4500گزارشپرسنلبههمراهعواملحکمي { get; set; }
        public virtual DbSet<حقوقودستمزد4500گزارشپرسنلبههمراهعواملحکمی> حقوقودستمزد4500گزارشپرسنلبههمراهعواملحکمی { get; set; }
        public virtual DbSet<حقوقودستمزد4544004حکمي> حقوقودستمزد4544004حکمي { get; set; }
        public virtual DbSet<خزانه101گزارشفهرستاسنادسررسیدگذشته> خزانه101گزارشفهرستاسنادسررسیدگذشته { get; set; }
        public virtual DbSet<خزانه101گزارشفهرستاسنادسررسیدگذشته139302091520> خزانه101گزارشفهرستاسنادسررسیدگذشته139302091520 { get; set; }
        public virtual DbSet<خزانه104گزارشفهرستاسنادسررسیدگذشته139410220843> خزانه104گزارشفهرستاسنادسررسیدگذشته139410220843 { get; set; }
        public virtual DbSet<فروش101000مناطق> فروش101000مناطق { get; set; }
        public virtual DbSet<فروش106خالصفروش139302091520> فروش106خالصفروش139302091520 { get; set; }
        public virtual DbSet<فروش107خالصفروش139410220843> فروش107خالصفروش139410220843 { get; set; }
        public virtual DbSet<فروش3500خالصکالابراساسماه139302091520> فروش3500خالصکالابراساسماه139302091520 { get; set; }
        public virtual DbSet<فروش3501خالصکالابراساسماه139410220843> فروش3501خالصکالابراساسماه139410220843 { get; set; }
        public virtual DbSet<پرسنلی102ماندهمرخصی139410220843> پرسنلی102ماندهمرخصی139410220843 { get; set; }
        public virtual DbSet<گزارشازحسابداری> گزارشازحسابداری { get; set; }
        public virtual DbSet<گزارشخزانهداری1004اسنادباز139302091521> گزارشخزانهداری1004اسنادباز139302091521 { get; set; }
        public virtual DbSet<گزارشخزانهداری1005اسنادباز139410220844> گزارشخزانهداری1005اسنادباز139410220844 { get; set; }
        public virtual DbSet<گزارشمساعده1004555حقوقی> گزارشمساعده1004555حقوقی { get; set; }
        public virtual DbSet<گزارشمقایسهایی105خریدوفروشکالا> گزارشمقایسهایی105خریدوفروشکالا { get; set; }
        public virtual DbSet<گزارشوام10055حقوقی139410220844> گزارشوام10055حقوقی139410220844 { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. See http://go.microsoft.com/fwlink/?LinkId=723263 for guidance on storing connection strings.
                optionsBuilder.UseSqlServer("Password=abc.123;Persist Security Info=True;User ID=sa;Initial Catalog=Dinawin98;Data Source=192.168.0.2\\dinawin");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<A>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("A$");

                entity.Property(e => e.CtbCurncyTp)
                    .HasColumnName("CtbCurncy_Tp")
                    .HasMaxLength(255);

                entity.Property(e => e.InvGdsCu).HasColumnName("InvGds_Cu");

                entity.Property(e => e.InvUntCu).HasColumnName("InvUnt_Cu");

                entity.Property(e => e.SalCustGrpSi).HasColumnName("SalCustGrp_Si");

                entity.Property(e => e.SalDclrPrcDLckPrc).HasColumnName("SalDclrPrcD_LckPrc");

                entity.Property(e => e.SalDclrPrcDUntPrc).HasColumnName("SalDclrPrcD_UntPrc");

                entity.Property(e => e.SalDclrPrcDUntPrcC).HasColumnName("SalDclrPrcD_UntPrcC");

                entity.Property(e => e.SalDclrPrcDUntPrcMax).HasColumnName("SalDclrPrcD_UntPrc_Max");

                entity.Property(e => e.SalDclrPrcDUntPrcMin).HasColumnName("SalDclrPrcD_UntPrc_Min");

                entity.Property(e => e.SalTypSi)
                    .HasColumnName("SalTyp_Si")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<AccAdvR>(entity =>
            {
                entity.HasKey(e => new { e.AccAdvRSi, e.SiDdoc, e.SiAccT, e.AccAdvRCancle });

                entity.Property(e => e.AccAdvRSi).HasColumnName("AccAdvR_Si");

                entity.Property(e => e.SiDdoc).HasColumnName("SiDDoc");

                entity.Property(e => e.AccAdvRCancle).HasColumnName("AccAdvR_Cancle");

                entity.Property(e => e.AccAdvRDs)
                    .HasColumnName("AccAdvR_Ds")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AccAdvRTp)
                    .HasColumnName("AccAdvR_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.SiHdoc).HasColumnName("SiHDoc");
            });

            modelBuilder.Entity<AccAordr>(entity =>
            {
                entity.HasKey(e => e.AccAordrSi);

                entity.ToTable("AccAOrdr");

                entity.Property(e => e.AccAordrSi).HasColumnName("AccAOrdr_Si");

                entity.Property(e => e.AccAordrDt)
                    .HasColumnName("AccAOrdr_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AccArqstSi).HasColumnName("AccARqst_Si");

                entity.Property(e => e.StmpCdt)
                    .HasColumnName("StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.StmpCus)
                    .HasColumnName("StmpCUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.StmpMdt)
                    .HasColumnName("StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.StmpMus)
                    .HasColumnName("StmpMUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AccArqst>(entity =>
            {
                entity.HasKey(e => e.AccArqstSi);

                entity.ToTable("AccARqst");

                entity.Property(e => e.AccArqstSi).HasColumnName("AccARqst_Si");

                entity.Property(e => e.AccArqstCu)
                    .HasColumnName("AccARqst_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccArqstDesc)
                    .HasColumnName("AccARqst_Desc")
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.AccArqstDt)
                    .HasColumnName("AccARqst_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AccArqstPrc).HasColumnName("AccARqst_Prc");

                entity.Property(e => e.AccBudgetSi).HasColumnName("AccBudget_Si");

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLkSi).HasColumnName("AccLK_Si");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AccRqstStsSi).HasColumnName("AccRqstSts_Si");

                entity.Property(e => e.AccRqstTypSi).HasColumnName("AccRqstTyp_Si");

                entity.Property(e => e.StmpCdt)
                    .HasColumnName("StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.StmpCus)
                    .HasColumnName("StmpCUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.StmpMdt)
                    .HasColumnName("StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.StmpMus)
                    .HasColumnName("StmpMUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.HasOne(d => d.AccBudgetSiNavigation)
                    .WithMany(p => p.AccArqst)
                    .HasForeignKey(d => d.AccBudgetSi)
                    .HasConstraintName("FK_AccARqst_AccBudget");

                entity.HasOne(d => d.AccLcSiNavigation)
                    .WithMany(p => p.AccArqst)
                    .HasForeignKey(d => d.AccLcSi)
                    .HasConstraintName("FK_AccARqst_CtbCost");

                entity.HasOne(d => d.AccLmSiNavigation)
                    .WithMany(p => p.AccArqst)
                    .HasForeignKey(d => d.AccLmSi)
                    .HasConstraintName("FK_AccARqst_CtbAccM");

                entity.HasOne(d => d.AccLpSiNavigation)
                    .WithMany(p => p.AccArqst)
                    .HasForeignKey(d => d.AccLpSi)
                    .HasConstraintName("FK_AccARqst_CtbProject");

                entity.HasOne(d => d.AccLtSiNavigation)
                    .WithMany(p => p.AccArqst)
                    .HasForeignKey(d => d.AccLtSi)
                    .HasConstraintName("FK_AccARqst_CtbAccT");

                entity.HasOne(d => d.AccRqstStsSiNavigation)
                    .WithMany(p => p.AccArqst)
                    .HasForeignKey(d => d.AccRqstStsSi)
                    .HasConstraintName("FK_AccARqst_AccRqstSts");

                entity.HasOne(d => d.AccRqstTypSiNavigation)
                    .WithMany(p => p.AccArqst)
                    .HasForeignKey(d => d.AccRqstTypSi)
                    .HasConstraintName("FK_AccARqst_AccRqstTyp");
            });

            modelBuilder.Entity<AccBudget>(entity =>
            {
                entity.HasKey(e => e.AccBudgetSi)
                    .HasName("PK_AccBudget_");

                entity.Property(e => e.AccBudgetSi).HasColumnName("AccBudget_Si");

                entity.Property(e => e.AccBudgetCu)
                    .HasColumnName("AccBudget_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccBudgetFromDs)
                    .HasColumnName("AccBudget_FromDs")
                    .HasColumnType("datetime");

                entity.Property(e => e.AccBudgetHSi).HasColumnName("AccBudgetH_Si");

                entity.Property(e => e.AccBudgetIsGroup).HasColumnName("AccBudget_IsGroup");

                entity.Property(e => e.AccBudgetLevel).HasColumnName("AccBudget_Level");

                entity.Property(e => e.AccBudgetPrc).HasColumnName("AccBudget_Prc");

                entity.Property(e => e.AccBudgetPrcCost).HasColumnName("AccBudget_PrcCost");

                entity.Property(e => e.AccBudgetPrcCredit).HasColumnName("AccBudget_PrcCredit");

                entity.Property(e => e.AccBudgetPrcRemain).HasColumnName("AccBudget_PrcRemain");

                entity.Property(e => e.AccBudgetToDs)
                    .HasColumnName("AccBudget_ToDs")
                    .HasColumnType("datetime");

                entity.Property(e => e.AccBudgetTp)
                    .HasColumnName("AccBudget_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccBudgetTypAcc).HasColumnName("AccBudget_TypAcc");

                entity.Property(e => e.AccBudgetTypSi).HasColumnName("AccBudgetTyp_Si");

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLkSi).HasColumnName("AccLK_Si");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.HasOne(d => d.AccBudgetHSiNavigation)
                    .WithMany(p => p.AccBudget)
                    .HasForeignKey(d => d.AccBudgetHSi)
                    .HasConstraintName("FK_AccBudget_AccBudgetH");

                entity.HasOne(d => d.AccBudgetTypSiNavigation)
                    .WithMany(p => p.AccBudget)
                    .HasForeignKey(d => d.AccBudgetTypSi)
                    .HasConstraintName("FK_AccBudget_AccBudgetTyp");

                entity.HasOne(d => d.AccLcSiNavigation)
                    .WithMany(p => p.AccBudget)
                    .HasForeignKey(d => d.AccLcSi)
                    .HasConstraintName("FK_AccBudget_CtbCost");

                entity.HasOne(d => d.AccLkSiNavigation)
                    .WithMany(p => p.AccBudget)
                    .HasForeignKey(d => d.AccLkSi)
                    .HasConstraintName("FK_AccBudget_CtbAccK");

                entity.HasOne(d => d.AccLmSiNavigation)
                    .WithMany(p => p.AccBudget)
                    .HasForeignKey(d => d.AccLmSi)
                    .HasConstraintName("FK_AccBudget_CtbAccM");

                entity.HasOne(d => d.AccLpSiNavigation)
                    .WithMany(p => p.AccBudget)
                    .HasForeignKey(d => d.AccLpSi)
                    .HasConstraintName("FK_AccBudget_CtbProject");

                entity.HasOne(d => d.AccLtSiNavigation)
                    .WithMany(p => p.AccBudget)
                    .HasForeignKey(d => d.AccLtSi)
                    .HasConstraintName("FK_AccBudget_CtbAccT");
            });

            modelBuilder.Entity<AccBudgetDetail>(entity =>
            {
                entity.HasKey(e => e.AccBudgetDetailSi);

                entity.Property(e => e.AccBudgetDetailSi)
                    .HasColumnName("AccBudgetDetail_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.AccBudgetDetailDesc)
                    .HasColumnName("AccBudgetDetail_Desc")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.AccBudgetDetailPrc).HasColumnName("AccBudgetDetail_Prc");

                entity.Property(e => e.AccBudgetSi).HasColumnName("AccBudget_Si");

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLkSi).HasColumnName("AccLK_Si");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");
            });

            modelBuilder.Entity<AccBudgetH>(entity =>
            {
                entity.HasKey(e => e.AccBudgetHSi);

                entity.Property(e => e.AccBudgetHSi).HasColumnName("AccBudgetH_Si");

                entity.Property(e => e.AccBudgetHActive).HasColumnName("AccBudgetH_Active");

                entity.Property(e => e.AccBudgetHFrm)
                    .HasColumnName("AccBudgetH_Frm")
                    .HasColumnType("datetime");

                entity.Property(e => e.AccBudgetHStatus)
                    .HasColumnName("AccBudgetH_Status")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.AccBudgetHTo)
                    .HasColumnName("AccBudgetH_To")
                    .HasColumnType("datetime");

                entity.Property(e => e.AccBudgetHTx)
                    .HasColumnName("AccBudgetH_Tx")
                    .HasMaxLength(4000);
            });

            modelBuilder.Entity<AccBudgetLog>(entity =>
            {
                entity.HasKey(e => e.AccBudgetLogSi);

                entity.Property(e => e.AccBudgetLogSi).HasColumnName("AccBudgetLog_Si");

                entity.Property(e => e.AccBudgetLogChangePrc).HasColumnName("AccBudgetLog_ChangePrc");

                entity.Property(e => e.AccBudgetLogPrcNew).HasColumnName("AccBudgetLog_PrcNew");

                entity.Property(e => e.AccBudgetLogPrcOld).HasColumnName("AccBudgetLog_PrcOld");

                entity.Property(e => e.AccBudgetPeriodLevelIsNewRow).HasColumnName("AccBudgetPeriodLevel_IsNewRow");

                entity.Property(e => e.AccBudgetPeriodLevelSi).HasColumnName("AccBudgetPeriodLevel_Si");

                entity.Property(e => e.AccBudgetSi).HasColumnName("AccBudget_Si");

                entity.HasOne(d => d.AccBudgetPeriodLevelSiNavigation)
                    .WithMany(p => p.AccBudgetLog)
                    .HasForeignKey(d => d.AccBudgetPeriodLevelSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_AccBudgetLog_AccBudgetPeriodLevel");

                entity.HasOne(d => d.AccBudgetSiNavigation)
                    .WithMany(p => p.AccBudgetLog)
                    .HasForeignKey(d => d.AccBudgetSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_AccBudgetLog_AccBudget");
            });

            modelBuilder.Entity<AccBudgetPeriod>(entity =>
            {
                entity.HasKey(e => e.AccBudgetPeriodSi);

                entity.Property(e => e.AccBudgetPeriodSi).HasColumnName("AccBudgetPeriod_Si");

                entity.Property(e => e.AccBudgetPeriodLevelSi).HasColumnName("AccBudgetPeriodLevel_Si");

                entity.Property(e => e.AccBudgetPeriodPrice).HasColumnName("AccBudgetPeriod_Price");

                entity.Property(e => e.AccBudgetSi).HasColumnName("AccBudget_Si");

                entity.HasOne(d => d.AccBudgetPeriodLevelSiNavigation)
                    .WithMany(p => p.AccBudgetPeriod)
                    .HasForeignKey(d => d.AccBudgetPeriodLevelSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_AccBudgetPeriod_AccBudgetPeriodLevel");
            });

            modelBuilder.Entity<AccBudgetPeriodLevel>(entity =>
            {
                entity.HasKey(e => e.AccBudgetPeriodLevelSi);

                entity.Property(e => e.AccBudgetPeriodLevelSi).HasColumnName("AccBudgetPeriodLevel_Si");

                entity.Property(e => e.AccBudgetPeriodLevelCu)
                    .HasColumnName("AccBudgetPeriodLevel_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccBudgetPeriodLevelIsActive).HasColumnName("AccBudgetPeriodLevel_IsActive");

                entity.Property(e => e.AccBudgetPeriodLevelIsRevisionBase).HasColumnName("AccBudgetPeriodLevel_IsRevisionBase");

                entity.Property(e => e.AccBudgetPeriodLevelName)
                    .HasColumnName("AccBudgetPeriodLevel_Name")
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AccBudgetPeriodLog>(entity =>
            {
                entity.HasKey(e => e.AccBudgetPeriodLogSi);

                entity.Property(e => e.AccBudgetPeriodLogSi).HasColumnName("AccBudgetPeriodLog_Si");

                entity.Property(e => e.AccBudgetPeriodChangePrc).HasColumnName("AccBudgetPeriod_ChangePrc");

                entity.Property(e => e.AccBudgetPeriodLevelSi).HasColumnName("AccBudgetPeriodLevel_Si");

                entity.Property(e => e.AccBudgetPeriodPrcNew).HasColumnName("AccBudgetPeriod_PrcNew");

                entity.Property(e => e.AccBudgetPeriodPrcOld).HasColumnName("AccBudgetPeriod_PrcOld");

                entity.Property(e => e.AccBudgetPeriodSi).HasColumnName("AccBudgetPeriod_Si");

                entity.HasOne(d => d.AccBudgetPeriodSiNavigation)
                    .WithMany(p => p.AccBudgetPeriodLog)
                    .HasForeignKey(d => d.AccBudgetPeriodSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_AccBudgetPeriodLog_AccBudgetPeriodLog");
            });

            modelBuilder.Entity<AccBudgetTyp>(entity =>
            {
                entity.HasKey(e => e.AccBudgetTypSi);

                entity.Property(e => e.AccBudgetTypSi).HasColumnName("AccBudgetTyp_Si");

                entity.Property(e => e.AccBudgetTypTp)
                    .HasColumnName("AccBudgetTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AccCfg>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.AccCfgReplication).HasColumnName("AccCfg_Replication");

                entity.Property(e => e.AccLocSi).HasColumnName("AccLoc_Si");

                entity.Property(e => e.AccLocSiMain).HasColumnName("AccLoc_Si_Main");
            });

            modelBuilder.Entity<AccCrossCheck>(entity =>
            {
                entity.Property(e => e.Credit).HasColumnType("money");

                entity.Property(e => e.Debit).HasColumnType("money");

                entity.Property(e => e.SiDdocCredit).HasColumnName("SiDDoc_Credit");

                entity.Property(e => e.SiDdocDebit).HasColumnName("SiDDoc_Debit");
            });

            modelBuilder.Entity<AccCtbMinfo>(entity =>
            {
                entity.HasKey(e => e.AccCtbMinfoSi);

                entity.ToTable("AccCtbMInfo");

                entity.Property(e => e.AccCtbMinfoSi).HasColumnName("AccCtbMInfo_Si");

                entity.Property(e => e.AccCtbMinfoCompanySi).HasColumnName("AccCtbMInfoCompany_Si");

                entity.Property(e => e.AccCtbMinfoTp)
                    .HasColumnName("AccCtbMInfo_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccCtbMinfoType)
                    .HasColumnName("AccCtbMInfo_Type")
                    .HasComment("textbox=1 datetimepicker=2");

                entity.Property(e => e.DefaultValue).HasMaxLength(512);

                entity.Property(e => e.IsUnique).HasDefaultValueSql("((0))");

                entity.HasOne(d => d.AccCtbMinfoCompanySiNavigation)
                    .WithMany(p => p.AccCtbMinfo)
                    .HasForeignKey(d => d.AccCtbMinfoCompanySi)
                    .HasConstraintName("FK_AccCtbMInfo_AccCtbMInfoCompany1");

                entity.HasOne(d => d.SiAccMNavigation)
                    .WithMany(p => p.AccCtbMinfo)
                    .HasForeignKey(d => d.SiAccM)
                    .HasConstraintName("FK_AccCtbMInfo_CtbAccM");
            });

            modelBuilder.Entity<AccCtbMinfoCompany>(entity =>
            {
                entity.HasKey(e => e.AccCtbMinfoCompanySi);

                entity.ToTable("AccCtbMInfoCompany");

                entity.Property(e => e.AccCtbMinfoCompanySi).HasColumnName("AccCtbMInfoCompany_Si");

                entity.Property(e => e.CompanyName)
                    .IsRequired()
                    .HasMaxLength(512);
            });

            modelBuilder.Entity<AccCtbMinfoDefault>(entity =>
            {
                entity.HasKey(e => e.AccCtbMinfoDefaultSi);

                entity.ToTable("AccCtbMInfoDefault");

                entity.Property(e => e.AccCtbMinfoDefaultSi).HasColumnName("AccCtbMInfoDefault_Si");

                entity.Property(e => e.AccCtbMinfoTp)
                    .HasColumnName("AccCtbMInfo_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DefaultValue).HasMaxLength(512);

                entity.Property(e => e.IsUnique).HasDefaultValueSql("((0))");

                entity.HasOne(d => d.SiAccMNavigation)
                    .WithMany(p => p.AccCtbMinfoDefault)
                    .HasForeignKey(d => d.SiAccM)
                    .HasConstraintName("FK_AccCtbMInfoDefault_CtbAccM");
            });

            modelBuilder.Entity<AccCtbMinfoValue>(entity =>
            {
                entity.HasKey(e => e.AccCtbMinfoValueSi);

                entity.ToTable("AccCtbMInfoValue");

                entity.Property(e => e.AccCtbMinfoValueSi).HasColumnName("AccCtbMInfoValue_Si");

                entity.Property(e => e.AccCtbMinfoSi).HasColumnName("AccCtbMInfo_Si");

                entity.Property(e => e.AccCtbMinfoValue1)
                    .HasColumnName("AccCtbMInfo_Value")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.CRow).HasColumnName("cRow");

                entity.Property(e => e.SiDdoc).HasColumnName("SiDDoc");

                entity.Property(e => e.SiHdoc).HasColumnName("SiHDoc");

                entity.HasOne(d => d.AccCtbMinfoSiNavigation)
                    .WithMany(p => p.AccCtbMinfoValue)
                    .HasForeignKey(d => d.AccCtbMinfoSi)
                    .HasConstraintName("FK_AccCtbMInfoValue_AccCtbMInfo");
            });

            modelBuilder.Entity<AccDdoc>(entity =>
            {
                entity.HasKey(e => e.SiDdoc)
                    .IsClustered(false);

                entity.ToTable("AccDDoc");

                entity.HasIndex(e => e.SiAccK)
                    .HasName("IX_SiAccK");

                entity.HasIndex(e => e.SiAccM)
                    .HasName("IX_SiAccM");

                entity.HasIndex(e => e.SiAccT)
                    .HasName("IX_SiAccT");

                entity.HasIndex(e => e.SiCost)
                    .HasName("IX_SiCost");

                entity.HasIndex(e => e.SiProject)
                    .HasName("IX_SiProject");

                entity.Property(e => e.SiDdoc).HasColumnName("SiDDoc");

                entity.Property(e => e.AccAdvRSi).HasColumnName("AccAdvR_Si");

                entity.Property(e => e.AccArqstSi).HasColumnName("AccARqst_Si");

                entity.Property(e => e.AccDdocRowBgt).HasColumnName("AccDDoc_RowBgt");

                entity.Property(e => e.BgtAssignToCcostDetailSi).HasColumnName("BgtAssignToCCostDetail_Si");

                entity.Property(e => e.BgtAssignToCcostSi).HasColumnName("BgtAssignToCCost_Si");

                entity.Property(e => e.BgtAssignToCcostSubDetailSi).HasColumnName("BgtAssignToCCostSubDetail_Si");

                entity.Property(e => e.BgtAssignToPrjDetailSi).HasColumnName("BgtAssignToPrjDetail_Si");

                entity.Property(e => e.BgtAssignToPrjSi).HasColumnName("BgtAssignToPrj_Si");

                entity.Property(e => e.BgtAssignToPrjSubDetailSi).HasColumnName("BgtAssignToPrjSubDetail_Si");

                entity.Property(e => e.Comment)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.CreateRec).HasColumnType("datetime");

                entity.Property(e => e.Credit).HasColumnType("money");

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.Debit).HasColumnType("money");

                entity.Property(e => e.GuId)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.Idt)
                    .HasColumnName("IDT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Ino).HasColumnName("INo");

                entity.Property(e => e.Iqty).HasColumnName("IQty");

                entity.Property(e => e.LoginName)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remain).HasColumnType("money");

                entity.Property(e => e.SiDdocSource).HasColumnName("SiDDoc_Source");

                entity.Property(e => e.SiHdoc).HasColumnName("SiHDoc");

                entity.Property(e => e.TpDoc)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.TpDoc2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDccDt)
                    .HasColumnName("TrsDcc_DT")
                    .HasColumnType("datetime");

                entity.Property(e => e.TrsDccIno)
                    .HasColumnName("TrsDcc_INO")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.HasOne(d => d.AccArqstSiNavigation)
                    .WithMany(p => p.AccDdoc)
                    .HasForeignKey(d => d.AccArqstSi)
                    .HasConstraintName("FK_AccDDoc_AccARqst");

                entity.HasOne(d => d.CtbCurncySiNavigation)
                    .WithMany(p => p.AccDdoc)
                    .HasForeignKey(d => d.CtbCurncySi)
                    .HasConstraintName("FK_AccDDoc_CtbCurncy");

                entity.HasOne(d => d.SiAccKNavigation)
                    .WithMany(p => p.AccDdoc)
                    .HasForeignKey(d => d.SiAccK)
                    .HasConstraintName("FK_AccDDoc_CtbAccK");

                entity.HasOne(d => d.SiAccMNavigation)
                    .WithMany(p => p.AccDdoc)
                    .HasForeignKey(d => d.SiAccM)
                    .HasConstraintName("FK_AccDDoc_CtbAccM");

                entity.HasOne(d => d.SiAccTNavigation)
                    .WithMany(p => p.AccDdoc)
                    .HasForeignKey(d => d.SiAccT)
                    .HasConstraintName("FK_AccDDoc_CtbAccT");

                entity.HasOne(d => d.SiCostNavigation)
                    .WithMany(p => p.AccDdoc)
                    .HasForeignKey(d => d.SiCost)
                    .HasConstraintName("FK_AccDDoc_CtbCost");

                entity.HasOne(d => d.SiHdocNavigation)
                    .WithMany(p => p.AccDdoc)
                    .HasForeignKey(d => d.SiHdoc)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_AccDDoc_AccHDoc");

                entity.HasOne(d => d.SiProjectNavigation)
                    .WithMany(p => p.AccDdoc)
                    .HasForeignKey(d => d.SiProject)
                    .HasConstraintName("FK_AccDDoc_CtbProject");
            });

            modelBuilder.Entity<AccDocDefinite>(entity =>
            {
                entity.HasKey(e => e.SiDefinite)
                    .IsClustered(false);

                entity.HasIndex(e => e.LoginName)
                    .HasName("IX_AccDocDefinite")
                    .IsUnique();

                entity.Property(e => e.EndLevel)
                    .IsRequired()
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.LoginName)
                    .IsRequired()
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.TpDefinite)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AccDocHattacH>(entity =>
            {
                entity.HasKey(e => e.AccDocHattachSi)
                    .HasName("PK_AccDocHAttach");

                entity.ToTable("AccDocHAttacH");

                entity.Property(e => e.AccDocHattachSi).HasColumnName("AccDocHAttach_Si");

                entity.Property(e => e.AccDocHattachDs)
                    .HasColumnName("AccDocHAttach_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.AccDocHattachFile)
                    .HasColumnName("AccDocHAttach_File")
                    .HasColumnType("image");

                entity.Property(e => e.AccDocHattachFileExtension)
                    .HasColumnName("AccDocHAttach_FileExtension")
                    .HasMaxLength(50);

                entity.Property(e => e.AccDocHattachFileName)
                    .HasColumnName("AccDocHAttach_FileName")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.AccDocHattachTp)
                    .HasColumnName("AccDocHAttach_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SiHdoc).HasColumnName("SiHDoc");

                entity.HasOne(d => d.SiHdocNavigation)
                    .WithMany(p => p.AccDocHattacH)
                    .HasForeignKey(d => d.SiHdoc)
                    .HasConstraintName("FK_AccDocHAttach_AccHDoc");
            });

            modelBuilder.Entity<AccDocLock>(entity =>
            {
                entity.HasKey(e => e.AccDocLockSi);

                entity.Property(e => e.AccDocLockSi).HasColumnName("AccDocLock_Si");

                entity.Property(e => e.AccDocLockActive)
                    .IsRequired()
                    .HasColumnName("AccDocLock_Active")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.AccDocLockFr)
                    .HasColumnName("AccDocLock_Fr")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AccDocLockTo)
                    .HasColumnName("AccDocLock_To")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AccDocLockTx)
                    .HasColumnName("AccDocLock_Tx")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AccDocTypes>(entity =>
            {
                entity.HasKey(e => e.SiDocType)
                    .IsClustered(false);

                entity.Property(e => e.CreateRec).HasColumnType("datetime");

                entity.Property(e => e.CuDocType)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.LoginName)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TpDocType)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AccDscr>(entity =>
            {
                entity.HasKey(e => e.AccDscrSi);

                entity.Property(e => e.AccDscrSi).HasColumnName("AccDscr_Si");

                entity.Property(e => e.AccDscrTp)
                    .HasColumnName("AccDscr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccDscrTp2)
                    .HasColumnName("AccDscr_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AccExchange>(entity =>
            {
                entity.HasKey(e => e.AccExchangeSi)
                    .HasName("PK_AccTaseer");

                entity.HasIndex(e => new { e.AccExchangeStartDate, e.AccExchangeEndDate, e.CtbCurncySi })
                    .HasName("IX_AccExchange")
                    .IsUnique();

                entity.Property(e => e.AccExchangeSi).HasColumnName("AccExchange_Si");

                entity.Property(e => e.AccDocHSi).HasColumnName("AccDocH_Si");

                entity.Property(e => e.AccExchangeEndDate)
                    .HasColumnName("AccExchange_EndDate")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AccExchangeEndRate).HasColumnName("AccExchange_EndRate");

                entity.Property(e => e.AccExchangeStartDate)
                    .HasColumnName("AccExchange_StartDate")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AccExchangeStartRate).HasColumnName("AccExchange_StartRate");

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");
            });

            modelBuilder.Entity<AccGrpUser>(entity =>
            {
                entity.HasKey(e => e.AccGrpUserSi);

                entity.Property(e => e.AccGrpUserSi).HasColumnName("AccGrpUser_Si");

                entity.Property(e => e.AccGrpUserCu)
                    .HasColumnName("AccGrpUser_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccGrpUserManger).HasColumnName("AccGrpUser_Manger");

                entity.Property(e => e.AccGrpUserTp)
                    .HasColumnName("AccGrpUser_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AccGrpUserToUser>(entity =>
            {
                entity.HasKey(e => e.AccGrpUserToUserSi);

                entity.Property(e => e.AccGrpUserToUserSi).HasColumnName("AccGrpUserToUser_Si");

                entity.Property(e => e.AccGrpUserSi).HasColumnName("AccGrpUser_Si");

                entity.Property(e => e.UserRec)
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AccHdoc>(entity =>
            {
                entity.HasKey(e => e.SiHdoc)
                    .HasName("PK_AccHDoc_1")
                    .IsClustered(false);

                entity.ToTable("AccHDoc");

                entity.HasIndex(e => e.CuDoc)
                    .HasName("IX_CuDoc");

                entity.Property(e => e.SiHdoc).HasColumnName("SiHDoc");

                entity.Property(e => e.AccHdocStmpCdt)
                    .HasColumnName("AccHDoc_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.AccHdocStmpMdt)
                    .HasColumnName("AccHDoc_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.AccHdocStmpTime)
                    .HasColumnName("AccHDoc_StmpTime")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.AccHdocStmpTimeEdit)
                    .HasColumnName("AccHDoc_StmpTimeEdit")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.AccLocSi).HasColumnName("AccLoc_Si");

                entity.Property(e => e.CmDoc).HasColumnType("text");

                entity.Property(e => e.CreateRec).HasColumnType("datetime");

                entity.Property(e => e.DsDoc).HasColumnType("smalldatetime");

                entity.Property(e => e.ExchangeDocCtrl).HasDefaultValueSql("((0))");

                entity.Property(e => e.GuId)
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.LoginName)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PerLocSi).HasColumnName("PerLoc_Si");

                entity.Property(e => e.SiHdocSource).HasColumnName("SiHDoc_Source");

                entity.Property(e => e.TempDoc).HasDefaultValueSql("((1))");

                entity.Property(e => e.TpConfirmation)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TpCreator)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TpHdoc)
                    .HasColumnName("TpHDoc")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.TpHdoc2)
                    .HasColumnName("TpHDoc2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UserLock)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.AccLocSiNavigation)
                    .WithMany(p => p.AccHdoc)
                    .HasForeignKey(d => d.AccLocSi)
                    .HasConstraintName("FK_AccHDoc_AccLoc");

                entity.HasOne(d => d.SiDefiniteNavigation)
                    .WithMany(p => p.AccHdoc)
                    .HasForeignKey(d => d.SiDefinite)
                    .HasConstraintName("FK_AccHDoc_AccDocDefinite");

                entity.HasOne(d => d.SiDocTypeNavigation)
                    .WithMany(p => p.AccHdoc)
                    .HasForeignKey(d => d.SiDocType)
                    .HasConstraintName("FK_AccHDoc_AccDocTypes");

                entity.HasOne(d => d.SiSystemNavigation)
                    .WithMany(p => p.AccHdoc)
                    .HasForeignKey(d => d.SiSystem)
                    .HasConstraintName("FK_AccHDoc_FaraSystems");
            });

            modelBuilder.Entity<AccInauguration>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.SiHdoc).HasColumnName("SiHDoc");
            });

            modelBuilder.Entity<AccLoc>(entity =>
            {
                entity.HasKey(e => e.AccLocSi);

                entity.Property(e => e.AccLocSi)
                    .HasColumnName("AccLoc_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.AccLocTp)
                    .HasColumnName("AccLoc_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AccMtrxReport>(entity =>
            {
                entity.HasKey(e => e.AccMtrxReportSi);

                entity.Property(e => e.AccMtrxReportSi).HasColumnName("AccMtrxReport_Si");

                entity.Property(e => e.AccMtrxReportCdt)
                    .HasColumnName("AccMtrxReport_CDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.AccMtrxReportCode).HasColumnName("AccMtrxReport_Code");

                entity.Property(e => e.AccMtrxReportFilterStream)
                    .HasColumnName("AccMtrxReport_FilterStream")
                    .HasColumnType("image");

                entity.Property(e => e.AccMtrxReportGridStream)
                    .HasColumnName("AccMtrxReport_GridStream")
                    .HasColumnType("image");

                entity.Property(e => e.AccMtrxReportIsPublic).HasColumnName("AccMtrxReport_IsPublic");

                entity.Property(e => e.AccMtrxReportLgn)
                    .HasColumnName("AccMtrxReport_Lgn")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccMtrxReportMdt)
                    .HasColumnName("AccMtrxReport_MDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.AccMtrxReportTx)
                    .HasColumnName("AccMtrxReport_Tx")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccMtrxReportViewName)
                    .HasColumnName("AccMtrxReport_ViewName")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AccOrdr>(entity =>
            {
                entity.HasKey(e => e.AccOrdrSi);

                entity.Property(e => e.AccOrdrSi).HasColumnName("AccOrdr_Si");

                entity.Property(e => e.AccOrdrDesc)
                    .HasColumnName("AccOrdr_Desc")
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.AccOrdrDt)
                    .HasColumnName("AccOrdr_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AccOrdrPrc)
                    .HasColumnName("AccOrdr_Prc")
                    .HasColumnType("money");

                entity.Property(e => e.AccOrdrTypSi).HasColumnName("AccOrdrTyp_Si");

                entity.Property(e => e.AccRqstSi).HasColumnName("AccRqst_Si");

                entity.Property(e => e.StmpCdt)
                    .HasColumnName("StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.StmpCus)
                    .HasColumnName("StmpCUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.StmpMdt)
                    .HasColumnName("StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.StmpMus)
                    .HasColumnName("StmpMUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AccOrdrTyp>(entity =>
            {
                entity.HasKey(e => e.AccOrdrTypSi);

                entity.Property(e => e.AccOrdrTypSi)
                    .HasColumnName("AccOrdrTyp_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.AccOrdrTypTp)
                    .HasColumnName("AccOrdrTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AccOtherSysUser>(entity =>
            {
                entity.HasKey(e => e.AccOtherSysUserSi);

                entity.Property(e => e.AccOtherSysUserSi).HasColumnName("AccOtherSysUser_Si");

                entity.Property(e => e.UserRec)
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AccRqstSts>(entity =>
            {
                entity.HasKey(e => e.AccRqstStsSi);

                entity.Property(e => e.AccRqstStsSi)
                    .HasColumnName("AccRqstSts_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.AccRqstStsTp)
                    .HasColumnName("AccRqstSts_Tp")
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AccRqstTyp>(entity =>
            {
                entity.HasKey(e => e.AccRqstTypSi);

                entity.Property(e => e.AccRqstTypSi)
                    .HasColumnName("AccRqstTyp_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.AccRqstTypTp)
                    .IsRequired()
                    .HasColumnName("AccRqstTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AccountCostCenter>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("AccountCostCenter");

                entity.Property(e => e.Code)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CostCeneterId)
                    .HasColumnName("CostCeneterID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.LatinName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AccountDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("AccountDetail");

                entity.Property(e => e.Code)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.DetailId)
                    .HasColumnName("DetailID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.LatinName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AccountGeneral>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("AccountGeneral");

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.GeneralId)
                    .HasColumnName("GeneralID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.LatinName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AccountProject>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("AccountProject");

                entity.Property(e => e.Code)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.LatinName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<AccountRelation>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("AccountRelation");

                entity.Property(e => e.CostCenterCode)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.DetailCode)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.GeneralCode)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.ProjectCode)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SubsidiaryCode)
                    .HasMaxLength(15)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AccountSubsidiary>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("AccountSubsidiary");

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.LatinName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SubsidiaryId)
                    .HasColumnName("SubsidiaryID")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<AsetAssetbak>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.AccMSi).HasColumnName("AccM_Si");

                entity.Property(e => e.AccMSi1).HasColumnName("AccM_Si_1");

                entity.Property(e => e.AccMSi2).HasColumnName("AccM_Si_2");

                entity.Property(e => e.AccTSi).HasColumnName("AccT_Si");

                entity.Property(e => e.AccTSi1).HasColumnName("AccT_Si_1");

                entity.Property(e => e.AccTSi2).HasColumnName("AccT_Si_2");

                entity.Property(e => e.AssetAssignedDate).HasColumnType("datetime");

                entity.Property(e => e.AstAssetAccDoc).HasColumnName("AstAsset_AccDoc");

                entity.Property(e => e.AstAssetAccDoc1).HasColumnName("AstAsset_AccDoc_1");

                entity.Property(e => e.AstAssetAccDoc2).HasColumnName("AstAsset_AccDoc_2");

                entity.Property(e => e.AstAssetDepreciateRate).HasColumnName("AstAsset_DepreciateRate");

                entity.Property(e => e.AstAssetDprcDate)
                    .HasColumnName("AstAssetDprc_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.AstAssetExploitationDate)
                    .HasColumnName("AstAsset_ExploitationDate")
                    .HasColumnType("datetime");

                entity.Property(e => e.AstAssetFirstAdepreciate)
                    .HasColumnName("AstAsset_First_ADepreciate")
                    .HasColumnType("money");

                entity.Property(e => e.AstAssetFirstBookValue)
                    .HasColumnName("AstAsset_First_BookValue")
                    .HasColumnType("money");

                entity.Property(e => e.AstAssetFirstDate)
                    .HasColumnName("AstAsset_First_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.AstAssetId)
                    .IsRequired()
                    .HasColumnName("AstAsset_Id")
                    .HasMaxLength(53);

                entity.Property(e => e.AstAssetPelak)
                    .HasColumnName("AstAsset_Pelak")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AstAssetPurchaseDate)
                    .HasColumnName("AstAsset_Purchase_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.AstAssetPurchasePrice)
                    .HasColumnName("AstAsset_Purchase_Price")
                    .HasColumnType("money");

                entity.Property(e => e.AstAssetPurchaseVchrId).HasColumnName("AstAsset_Purchase_VchrId");

                entity.Property(e => e.AstAssetSaleDate)
                    .HasColumnName("AstAsset_Sale_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.AstAssetSalePrice)
                    .HasColumnName("AstAsset_Sale_Price")
                    .HasColumnType("money");

                entity.Property(e => e.AstAssetSaleVchrId).HasColumnName("AstAsset_Sale_VchrId");

                entity.Property(e => e.AstAssetScrapDate)
                    .HasColumnName("AstAsset_Scrap_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.AstAssetScrapPrice)
                    .HasColumnName("AstAsset_Scrap_Price")
                    .HasColumnType("money");

                entity.Property(e => e.AstAssetScrapVchrId).HasColumnName("AstAsset_Scrap_VchrId");

                entity.Property(e => e.AstAssetTx)
                    .IsRequired()
                    .HasColumnName("AstAsset_Tx")
                    .HasMaxLength(100);

                entity.Property(e => e.AstGrupId)
                    .IsRequired()
                    .HasColumnName("AstGrup_Id")
                    .HasMaxLength(20);

                entity.Property(e => e.AstLctnId).HasColumnName("AstLctn_Id");

                entity.Property(e => e.AstsumId)
                    .HasColumnName("Astsum_id")
                    .HasMaxLength(20);

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.Property(e => e.PurVndrSi1).HasColumnName("PurVndr_Si1");

                entity.Property(e => e.PurvndrSi).HasColumnName("Purvndr_Si");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AssAddition>(entity =>
            {
                entity.HasKey(e => e.AssAdditionSi);

                entity.Property(e => e.AssAdditionSi)
                    .HasColumnName("AssAddition_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssAdditionTp)
                    .HasColumnName("AssAddition_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AssAgency>(entity =>
            {
                entity.HasKey(e => e.AssAgencySi);

                entity.Property(e => e.AssAgencySi).HasColumnName("AssAgency_Si");

                entity.Property(e => e.AssAgencyCu).HasColumnName("AssAgency_Cu");

                entity.Property(e => e.AssAgencyMng)
                    .HasColumnName("AssAgency_Mng")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssAgencyTp)
                    .HasColumnName("AssAgency_Tp")
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AssCust>(entity =>
            {
                entity.HasKey(e => e.AssCustSi)
                    .HasName("PK_Ass_Cust");

                entity.Property(e => e.AssCustSi).HasColumnName("AssCust_Si");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AssCustCu)
                    .IsRequired()
                    .HasColumnName("AssCust_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AssCustTel)
                    .HasColumnName("AssCust_Tel")
                    .HasMaxLength(14)
                    .IsUnicode(false);

                entity.Property(e => e.AssCustTp)
                    .IsRequired()
                    .HasColumnName("AssCust_Tp")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.AssStateCu)
                    .HasColumnName("AssState_Cu")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.AssTownCu)
                    .HasColumnName("AssTown_Cu")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.AstCustAddr)
                    .HasColumnName("AstCust_Addr")
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.AstCustEconCode)
                    .HasColumnName("AstCust_EconCode")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AstCustNationalCode)
                    .HasColumnName("AstCust_NationalCode")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AstCustPostalCode)
                    .HasColumnName("AstCust_PostalCode")
                    .HasMaxLength(15)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AssExitOrder>(entity =>
            {
                entity.HasKey(e => e.AssExitOrderSi);

                entity.Property(e => e.AssExitOrderSi).HasColumnName("AssExitOrder_Si");

                entity.Property(e => e.AssExitOrderCu).HasColumnName("AssExitOrder_Cu");

                entity.Property(e => e.AssExitOrderDate)
                    .HasColumnName("AssExitOrder_Date")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.AssExitOrderDrOwFlag).HasColumnName("AssExitOrder_DrOw_Flag");

                entity.Property(e => e.AssExitOrderGetDate)
                    .HasColumnName("AssExitOrder_GetDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.AssReceiptHSi).HasColumnName("AssReceiptH_Si");

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.HasOne(d => d.AssReceiptHSiNavigation)
                    .WithMany(p => p.AssExitOrder)
                    .HasForeignKey(d => d.AssReceiptHSi)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_AssExitOrder_AssReceiptH");
            });

            modelBuilder.Entity<AssInvGds>(entity =>
            {
                entity.HasKey(e => e.AssInvGdsSi);

                entity.Property(e => e.AssInvGdsSi).HasColumnName("AssInvGds_Si");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AssInvGdsCu)
                    .IsRequired()
                    .HasColumnName("AssInvGds_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AssInvGdsNo)
                    .IsRequired()
                    .HasColumnName("AssInvGds_No")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AssInvGdsStock).HasColumnName("AssInvGds_Stock");

                entity.Property(e => e.AssInvGdsTp)
                    .IsRequired()
                    .HasColumnName("AssInvGds_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AssInvoiceD>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.AssInvGdsCu)
                    .HasColumnName("AssInvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssInvGdsQty).HasColumnName("AssInvGds_Qty");

                entity.Property(e => e.AssInvGdsSi).HasColumnName("AssInvGds_Si");

                entity.Property(e => e.AssInvGdsTx)
                    .HasColumnName("AssInvGds_Tx")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssInvoiceDAmntQty)
                    .HasColumnName("AssInvoiceD_AmntQty")
                    .HasColumnType("money");

                entity.Property(e => e.AssInvoiceDAmntToll)
                    .HasColumnName("AssInvoiceD_AmntToll")
                    .HasColumnType("money");

                entity.Property(e => e.AssInvoiceDDisCount)
                    .HasColumnName("AssInvoiceD_DisCount")
                    .HasColumnType("money");

                entity.Property(e => e.AssInvoiceDFee)
                    .HasColumnName("AssInvoiceD_Fee")
                    .HasColumnType("money");

                entity.Property(e => e.AssInvoiceDSi)
                    .HasColumnName("AssInvoiceD_Si")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AssInvoiceDToll).HasColumnName("AssInvoiceD_Toll");

                entity.Property(e => e.AssInvoiceDTotal)
                    .HasColumnName("AssInvoiceD_total")
                    .HasColumnType("money");

                entity.Property(e => e.AssInvoiceDTotalDisCount)
                    .HasColumnName("AssInvoiceD_totalDisCount")
                    .HasColumnType("money");

                entity.Property(e => e.AssInvoiceHSi).HasColumnName("AssInvoiceH_Si");

                entity.Property(e => e.AssSrvDSi).HasColumnName("AssSrvD_Si");
            });

            modelBuilder.Entity<AssInvoiceH>(entity =>
            {
                entity.HasKey(e => e.AssInvoiceHSi);

                entity.Property(e => e.AssInvoiceHSi).HasColumnName("AssInvoiceH_Si");

                entity.Property(e => e.AssCustSi).HasColumnName("AssCust_Si");

                entity.Property(e => e.AssInvoiceHAccDoc).HasColumnName("AssInvoiceH_AccDoc");

                entity.Property(e => e.AssInvoiceHCancled).HasColumnName("AssInvoiceH_Cancled");

                entity.Property(e => e.AssInvoiceHCashflag).HasColumnName("AssInvoiceH_Cashflag");

                entity.Property(e => e.AssInvoiceHCu)
                    .HasColumnName("AssInvoiceH_Cu")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.AssInvoiceHDate)
                    .HasColumnName("AssInvoiceH_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.AssInvoiceHLock)
                    .HasColumnName("AssInvoiceH_Lock")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.AssInvoiceHNotcashflag).HasColumnName("AssInvoiceH_Notcashflag");

                entity.Property(e => e.AssInvoiceHNote)
                    .HasColumnName("AssInvoiceH_Note")
                    .HasColumnType("text");

                entity.Property(e => e.AssReceptionSi).HasColumnName("AssReception_Si");
            });

            modelBuilder.Entity<AssMachinId>(entity =>
            {
                entity.HasKey(e => e.AssMachinIdSi);

                entity.Property(e => e.AssMachinIdSi).HasColumnName("AssMachinId_Si");

                entity.Property(e => e.AssCustSi).HasColumnName("AssCust_Si");

                entity.Property(e => e.AssMachinIdGaranteeDateE)
                    .HasColumnName("AssMachinId_GaranteeDate_E")
                    .HasColumnType("datetime");

                entity.Property(e => e.AssMachinIdGaranteeDateS)
                    .HasColumnName("AssMachinId_GaranteeDate_S")
                    .HasColumnType("datetime");

                entity.Property(e => e.AssMachinIdNote)
                    .HasColumnName("AssMachinId_Note")
                    .HasColumnType("text");

                entity.Property(e => e.AssMachinIdSaleDate)
                    .HasColumnName("AssMachinId_SaleDate")
                    .HasColumnType("datetime");

                entity.Property(e => e.AssMachinIdSetupDate)
                    .HasColumnName("AssMachinId_SetupDate")
                    .HasColumnType("datetime");

                entity.Property(e => e.AssMachineModelSi).HasColumnName("AssMachineModel_Si");

                entity.Property(e => e.AssMachineSerial)
                    .HasColumnName("AssMachine_Serial")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AssMachineSi).HasColumnName("AssMachine_Si");

                entity.HasOne(d => d.AssCustSiNavigation)
                    .WithMany(p => p.AssMachinId)
                    .HasForeignKey(d => d.AssCustSi)
                    .HasConstraintName("FK_AssMachinId_AssCust");

                entity.HasOne(d => d.AssMachineModelSiNavigation)
                    .WithMany(p => p.AssMachinId)
                    .HasForeignKey(d => d.AssMachineModelSi)
                    .HasConstraintName("FK_AssMachinId_AssMachineModel");

                entity.HasOne(d => d.AssMachineSiNavigation)
                    .WithMany(p => p.AssMachinId)
                    .HasForeignKey(d => d.AssMachineSi)
                    .HasConstraintName("FK_AssMachinId_AssMachine");
            });

            modelBuilder.Entity<AssMachine>(entity =>
            {
                entity.HasKey(e => e.AssMachineSi)
                    .HasName("PK_AssEquipment");

                entity.Property(e => e.AssMachineSi).HasColumnName("AssMachine_Si");

                entity.Property(e => e.AssMachineCu)
                    .HasColumnName("AssMachine_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AssMachineDate)
                    .HasColumnName("AssMachine_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.AssMachineSerial)
                    .HasColumnName("AssMachine_Serial")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AssMachineTp)
                    .HasColumnName("AssMachine_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AssMachineModel>(entity =>
            {
                entity.HasKey(e => e.AssMachineModelSi)
                    .HasName("PK_AssEquipModel");

                entity.Property(e => e.AssMachineModelSi).HasColumnName("AssMachineModel_Si");

                entity.Property(e => e.AssMachineModelCu)
                    .IsRequired()
                    .HasColumnName("AssMachineModel_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AssMachineModelTp)
                    .IsRequired()
                    .HasColumnName("AssMachineModel_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AssMachineSi).HasColumnName("AssMachine_Si");

                entity.HasOne(d => d.AssMachineSiNavigation)
                    .WithMany(p => p.AssMachineModel)
                    .HasForeignKey(d => d.AssMachineSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_AssMachineModel_AssMachine");
            });

            modelBuilder.Entity<AssMachineTyp>(entity =>
            {
                entity.HasKey(e => e.AssMachineTypSi);

                entity.Property(e => e.AssMachineTypSi).HasColumnName("AssMachineTyp_Si");

                entity.Property(e => e.AssMachineTypCu).HasColumnName("AssMachineTyp_Cu");

                entity.Property(e => e.AssMachineTypFirstGuranteDur).HasColumnName("AssMachineTyp_FirstGuranteDur");

                entity.Property(e => e.AssMachineTypGuranteDur).HasColumnName("AssMachineTyp_GuranteDur");

                entity.Property(e => e.AssMachineTypKm).HasColumnName("AssMachineTyp_Km");

                entity.Property(e => e.AssMachineTypTp)
                    .HasColumnName("AssMachineTyp_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AssMission>(entity =>
            {
                entity.HasKey(e => e.AssMissionSi);

                entity.Property(e => e.AssMissionSi).HasColumnName("AssMission_Si");

                entity.Property(e => e.AssMissionCu)
                    .HasColumnName("AssMission_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AssMissionDate)
                    .HasColumnName("AssMission_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.AssMissionDeparture1)
                    .HasColumnName("AssMission_Departure1")
                    .HasColumnType("text");

                entity.Property(e => e.AssMissionDeparture2)
                    .HasColumnName("AssMission_Departure2")
                    .HasColumnType("text");

                entity.Property(e => e.AssMissionDeparture3)
                    .HasColumnName("AssMission_Departure3")
                    .HasColumnType("text");

                entity.Property(e => e.AssMissionDuring).HasColumnName("AssMission_During");

                entity.Property(e => e.AssMissionNote)
                    .HasColumnName("AssMission_Note")
                    .HasColumnType("text");

                entity.Property(e => e.AssMissionPurpose1)
                    .HasColumnName("AssMission_purpose1")
                    .HasColumnType("text");

                entity.Property(e => e.AssMissionPurpose2)
                    .HasColumnName("AssMission_purpose2")
                    .HasColumnType("text");

                entity.Property(e => e.AssMissionPurpose3)
                    .HasColumnName("AssMission_purpose3")
                    .HasColumnType("text");

                entity.Property(e => e.AssMissionVehicle)
                    .HasColumnName("AssMission_Vehicle")
                    .HasMaxLength(40);

                entity.Property(e => e.AssPrsSi).HasColumnName("AssPrs_Si");

                entity.Property(e => e.AssReceptionSi).HasColumnName("AssReception_Si");
            });

            modelBuilder.Entity<AssPersonel>(entity =>
            {
                entity.HasKey(e => e.AssPrsSi)
                    .HasName("PK_CSS_Personel");

                entity.HasIndex(e => e.AssPrsCu)
                    .HasName("IX_CSS_Personel")
                    .IsUnique();

                entity.Property(e => e.AssPrsSi).HasColumnName("AssPrs_Si");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AssPrsCu)
                    .IsRequired()
                    .HasColumnName("AssPrs_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AssPrsFname)
                    .IsRequired()
                    .HasColumnName("AssPrs_FName")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.AssPrsLname)
                    .IsRequired()
                    .HasColumnName("AssPrs_LName")
                    .HasMaxLength(25)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AssReceiptD>(entity =>
            {
                entity.HasKey(e => e.AssReceiptDSi);

                entity.Property(e => e.AssReceiptDSi).HasColumnName("AssReceiptD_Si");

                entity.Property(e => e.AssReceiptDDaghi)
                    .HasColumnName("AssReceiptD_Daghi")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.AssReceiptDDescription)
                    .HasColumnName("AssReceiptD_Description")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AssReceiptDDocNo).HasColumnName("AssReceiptD_DocNo");

                entity.Property(e => e.AssReceiptDGurante).HasColumnName("AssReceiptD_Gurante");

                entity.Property(e => e.AssReceiptDGurantePrice)
                    .HasColumnName("AssReceiptD_GurantePrice")
                    .HasColumnType("money");

                entity.Property(e => e.AssReceiptDOriginalPrice)
                    .HasColumnName("AssReceiptD_OriginalPrice")
                    .HasColumnType("money");

                entity.Property(e => e.AssReceiptDQty).HasColumnName("AssReceiptD_Qty");

                entity.Property(e => e.AssReceiptDTotalPrice)
                    .HasColumnName("AssReceiptD_TotalPrice")
                    .HasColumnType("money");

                entity.Property(e => e.AssReceiptDserviceSi).HasColumnName("AssReceiptDService_Si");

                entity.Property(e => e.AssReceiptDserviceTyp).HasColumnName("AssReceiptDService_Typ");

                entity.Property(e => e.AssReceiptDsubServiceSi).HasColumnName("AssReceiptDSubService_Si");

                entity.Property(e => e.AssReceiptHSi).HasColumnName("AssReceiptH_Si");

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.HasOne(d => d.AssReceiptHSiNavigation)
                    .WithMany(p => p.AssReceiptD)
                    .HasForeignKey(d => d.AssReceiptHSi)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_AssReceiptD_AssReceiptH");
            });

            modelBuilder.Entity<AssReceiptH>(entity =>
            {
                entity.HasKey(e => e.AssReceiptHSi)
                    .HasName("PK_AssReceipt");

                entity.Property(e => e.AssReceiptHSi).HasColumnName("AssReceiptH_Si");

                entity.Property(e => e.AssAgencySi).HasColumnName("AssAgency_Si");

                entity.Property(e => e.AssMachineTypSi).HasColumnName("AssMachineTyp_Si");

                entity.Property(e => e.AssReceiptHAccDoc).HasColumnName("AssReceiptH_AccDoc");

                entity.Property(e => e.AssReceiptHAdditionPart)
                    .HasColumnName("AssReceiptH_AdditionPart")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AssReceiptHChassisNo).HasColumnName("AssReceiptH_ChassisNo");

                entity.Property(e => e.AssReceiptHCreateDate)
                    .HasColumnName("AssReceiptH_CreateDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.AssReceiptHCreatorName)
                    .HasColumnName("AssReceiptH_CreatorName")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AssReceiptHCu).HasColumnName("AssReceiptH_Cu");

                entity.Property(e => e.AssReceiptHCurrentKm).HasColumnName("AssReceiptH_CurrentKm");

                entity.Property(e => e.AssReceiptHDate)
                    .IsRequired()
                    .HasColumnName("AssReceiptH_Date")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.AssReceiptHDescription)
                    .HasColumnName("AssReceiptH_Description")
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.AssReceiptHDisCountSum)
                    .HasColumnName("AssReceiptH_DisCountSum")
                    .HasColumnType("money");

                entity.Property(e => e.AssReceiptHDriverName)
                    .HasColumnName("AssReceiptH_DriverName")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssReceiptHEngineNo).HasColumnName("AssReceiptH_EngineNo");

                entity.Property(e => e.AssReceiptHFirstService).HasColumnName("AssReceiptH_FirstService");

                entity.Property(e => e.AssReceiptHGpriceSum)
                    .HasColumnName("AssReceiptH_GPriceSum")
                    .HasColumnType("money");

                entity.Property(e => e.AssReceiptHGuard).HasColumnName("AssReceiptH_Guard");

                entity.Property(e => e.AssReceiptHGuranteDate)
                    .IsRequired()
                    .HasColumnName("AssReceiptH_GuranteDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.AssReceiptHGuranteNo)
                    .IsRequired()
                    .HasColumnName("AssReceiptH_GuranteNo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssReceiptHGurantee).HasColumnName("AssReceiptH_Gurantee");

                entity.Property(e => e.AssReceiptHLock).HasColumnName("AssReceiptH_Lock");

                entity.Property(e => e.AssReceiptHMachineColor)
                    .HasColumnName("AssReceiptH_MachineColor")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AssReceiptHOpriceSum)
                    .HasColumnName("AssReceiptH_OPriceSum")
                    .HasColumnType("money");

                entity.Property(e => e.AssReceiptHPrcRcvd).HasColumnName("AssReceiptH_PrcRcvd");

                entity.Property(e => e.AssReceiptHPriceSum)
                    .HasColumnName("AssReceiptH_PriceSum")
                    .HasColumnType("money");

                entity.Property(e => e.AssReceiptHProductYear).HasColumnName("AssReceiptH_ProductYear");

                entity.Property(e => e.AssReceiptHRefDate)
                    .HasColumnName("AssReceiptH_RefDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.AssReceiptHStatus).HasColumnName("AssReceiptH_Status");

                entity.Property(e => e.AssReceiptHTagNo)
                    .IsRequired()
                    .HasColumnName("AssReceiptH_TagNo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssReceiptHTpriceSum)
                    .HasColumnName("AssReceiptH_TPriceSum")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocHSi).HasColumnName("InvDocH_Si");

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.HasOne(d => d.AssAgencySiNavigation)
                    .WithMany(p => p.AssReceiptH)
                    .HasForeignKey(d => d.AssAgencySi)
                    .HasConstraintName("FK_AssReceiptH_AssAgency");

                entity.HasOne(d => d.AssMachineTypSiNavigation)
                    .WithMany(p => p.AssReceiptH)
                    .HasForeignKey(d => d.AssMachineTypSi)
                    .HasConstraintName("FK_AssReceiptH_AssMachineTyp");

                entity.HasOne(d => d.InvDocHSiNavigation)
                    .WithMany(p => p.AssReceiptH)
                    .HasForeignKey(d => d.InvDocHSi)
                    .HasConstraintName("FK_AssReceiptH_InvDocH");

                entity.HasOne(d => d.SalCustSiNavigation)
                    .WithMany(p => p.AssReceiptH)
                    .HasForeignKey(d => d.SalCustSi)
                    .HasConstraintName("FK_AssReceiptH_SalCust");
            });

            modelBuilder.Entity<AssReceiptOpr>(entity =>
            {
                entity.HasKey(e => e.AssReceiptOprSi);

                entity.Property(e => e.AssReceiptOprSi).HasColumnName("AssReceiptOpr_Si");

                entity.Property(e => e.AssReceiptHSi).HasColumnName("AssReceiptH_Si");

                entity.Property(e => e.AssReceiptOprAccMSi).HasColumnName("AssReceiptOpr_AccM_Si");

                entity.Property(e => e.AssReceiptOprAccTSi).HasColumnName("AssReceiptOpr_AccT_Si");

                entity.Property(e => e.AssReceiptOprCalcValue)
                    .HasColumnName("AssReceiptOpr_CalcValue")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.AssReceiptOprValue)
                    .HasColumnName("AssReceiptOpr_Value")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");

                entity.HasOne(d => d.AssReceiptHSiNavigation)
                    .WithMany(p => p.AssReceiptOpr)
                    .HasForeignKey(d => d.AssReceiptHSi)
                    .HasConstraintName("FK_AssReceiptOpr_AssReceiptH");
            });

            modelBuilder.Entity<AssReception>(entity =>
            {
                entity.HasKey(e => e.AssReceptionSi);

                entity.Property(e => e.AssReceptionSi).HasColumnName("AssReception_Si");

                entity.Property(e => e.AssCustSi).HasColumnName("AssCust_Si");

                entity.Property(e => e.AssMachineModelSi)
                    .HasColumnName("AssMachineModel_Si")
                    .HasComment("دستگاه و مدل آن");

                entity.Property(e => e.AssMachineSerial)
                    .HasColumnName("AssMachine_Serial")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AssMachineSi)
                    .HasColumnName("AssMachine_Si")
                    .HasComment("دستگاه و مدل آن");

                entity.Property(e => e.AssPrsSi).HasColumnName("AssPrs_Si");

                entity.Property(e => e.AssReceptionAppendix)
                    .HasColumnName("AssReception_Appendix")
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.AssReceptionCu)
                    .HasColumnName("AssReception_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AssReceptionDate)
                    .HasColumnName("AssReception_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.AssReceptionDeliverer)
                    .HasColumnName("AssReception_Deliverer")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssReceptionDescription)
                    .HasColumnName("AssReception_description")
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.AssReceptionFinalize).HasColumnName("AssReception_Finalize");

                entity.Property(e => e.AssReceptionKindSi).HasColumnName("AssReceptionKind_Si");

                entity.Property(e => e.AssReceptionLetterNo)
                    .HasColumnName("AssReception_letterNo")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.AssReceptionLock)
                    .HasColumnName("AssReception_Lock")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.AssReceptionPackNo)
                    .HasColumnName("AssReception_PackNo")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AssReceptionStatusSi).HasColumnName("AssReceptionStatus_Si");

                entity.HasOne(d => d.AssCustSiNavigation)
                    .WithMany(p => p.AssReception)
                    .HasForeignKey(d => d.AssCustSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_AssReception_AssCust");

                entity.HasOne(d => d.AssMachineModelSiNavigation)
                    .WithMany(p => p.AssReception)
                    .HasForeignKey(d => d.AssMachineModelSi)
                    .HasConstraintName("FK_AssReception_AssMachineModel");

                entity.HasOne(d => d.AssMachineSiNavigation)
                    .WithMany(p => p.AssReception)
                    .HasForeignKey(d => d.AssMachineSi)
                    .HasConstraintName("FK_AssReception_AssMachine");

                entity.HasOne(d => d.AssPrsSiNavigation)
                    .WithMany(p => p.AssReception)
                    .HasForeignKey(d => d.AssPrsSi)
                    .HasConstraintName("FK_AssReception_AssPersonel");
            });

            modelBuilder.Entity<AssReceptionD>(entity =>
            {
                entity.HasKey(e => e.AssReceptionDSi);

                entity.Property(e => e.AssReceptionDSi).HasColumnName("AssReceptionD_Si");

                entity.Property(e => e.AssMachineSerial)
                    .IsRequired()
                    .HasColumnName("AssMachine_Serial")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AssReceptionSi).HasColumnName("AssReception_Si");

                entity.HasOne(d => d.AssReceptionSiNavigation)
                    .WithMany(p => p.AssReceptionD)
                    .HasForeignKey(d => d.AssReceptionSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_AssReceptionD_AssReception");
            });

            modelBuilder.Entity<AssReceptionKind>(entity =>
            {
                entity.HasKey(e => e.AssReceptionKindSi);

                entity.Property(e => e.AssReceptionKindSi)
                    .HasColumnName("AssReceptionKind_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssReceptionKindTp)
                    .HasColumnName("AssReceptionKind_Tp")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<AssReceptionStatus>(entity =>
            {
                entity.HasKey(e => e.AssReceptionStatusSi);

                entity.Property(e => e.AssReceptionStatusSi)
                    .HasColumnName("AssReceptionStatus_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssReceptionStatusTp)
                    .HasColumnName("AssReceptionStatus_TP")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<AssServiceD>(entity =>
            {
                entity.HasKey(e => e.AssSrvDSi);

                entity.Property(e => e.AssSrvDSi).HasColumnName("AssSrvD_Si");

                entity.Property(e => e.AssInvGdsCu)
                    .HasColumnName("AssInvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssInvGdsQty1).HasColumnName("AssInvGds_Qty1");

                entity.Property(e => e.AssInvGdsQty2).HasColumnName("AssInvGds_Qty2");

                entity.Property(e => e.AssInvGdsSi).HasColumnName("AssInvGds_Si");

                entity.Property(e => e.AssInvGdsTx)
                    .IsRequired()
                    .HasColumnName("AssInvGds_Tx")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.AssSrvHSi).HasColumnName("AssSrvH_Si");

                entity.HasOne(d => d.AssInvGdsSiNavigation)
                    .WithMany(p => p.AssServiceD)
                    .HasForeignKey(d => d.AssInvGdsSi)
                    .HasConstraintName("FK_AssServiceD_AssInvGds");

                entity.HasOne(d => d.AssSrvHSiNavigation)
                    .WithMany(p => p.AssServiceD)
                    .HasForeignKey(d => d.AssSrvHSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_AssServiceD_AssServiceH");
            });

            modelBuilder.Entity<AssServiceH>(entity =>
            {
                entity.HasKey(e => e.AssSrvHSi)
                    .HasName("PK_AssServices");

                entity.Property(e => e.AssSrvHSi).HasColumnName("AssSrvH_Si");

                entity.Property(e => e.AssPrsSi).HasColumnName("AssPrs_Si");

                entity.Property(e => e.AssReceptionSi).HasColumnName("AssReception_Si");

                entity.Property(e => e.AssSrvHAction)
                    .HasColumnName("AssSrvH_Action")
                    .HasColumnType("text");

                entity.Property(e => e.AssSrvHCu)
                    .HasColumnName("AssSrvH_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AssSrvHDate)
                    .HasColumnName("AssSrvH_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.AssSrvHDeliverer)
                    .HasColumnName("AssSrvH_deliverer")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.AssSrvHEduc).HasColumnName("AssSrvH_Educ");

                entity.Property(e => e.AssSrvHInstall).HasColumnName("AssSrvH_Install");

                entity.Property(e => e.AssSrvHLReq).HasColumnName("AssSrvH_lReq");

                entity.Property(e => e.AssSrvHNote)
                    .HasColumnName("AssSrvH_Note")
                    .HasColumnType("text");

                entity.Property(e => e.AssSrvHOview).HasColumnName("AssSrvH_OView");

                entity.Property(e => e.AssSrvHWrong)
                    .HasColumnName("AssSrvH_wrong")
                    .HasColumnType("text");

                entity.HasOne(d => d.AssReceptionSiNavigation)
                    .WithMany(p => p.AssServiceH)
                    .HasForeignKey(d => d.AssReceptionSi)
                    .HasConstraintName("FK_AssServiceH_AssReception");
            });

            modelBuilder.Entity<AssSrvHprs>(entity =>
            {
                entity.HasKey(e => e.AssSrvHprsSi);

                entity.ToTable("AssSrvHPrs");

                entity.Property(e => e.AssSrvHprsSi).HasColumnName("AssSrvHPrs_Si");

                entity.Property(e => e.AssPrsSi).HasColumnName("AssPrs_Si");

                entity.Property(e => e.AssSrvHSi).HasColumnName("AssSrvH_Si");

                entity.HasOne(d => d.AssPrsSiNavigation)
                    .WithMany(p => p.AssSrvHprs)
                    .HasForeignKey(d => d.AssPrsSi)
                    .HasConstraintName("FK_AssSrvHPrs_AssPersonel");
            });

            modelBuilder.Entity<AssState>(entity =>
            {
                entity.HasKey(e => e.AssStateCu)
                    .HasName("PK_Ass_State");

                entity.Property(e => e.AssStateCu)
                    .HasColumnName("AssState_Cu")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AssStateTp)
                    .IsRequired()
                    .HasColumnName("AssState_Tp")
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AssTown>(entity =>
            {
                entity.HasKey(e => e.AssTownCu)
                    .HasName("PK_Ass_Town");

                entity.Property(e => e.AssTownCu)
                    .HasColumnName("AssTown_Cu")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AssTownTp)
                    .IsRequired()
                    .HasColumnName("AssTown_Tp")
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AssVchrD>(entity =>
            {
                entity.Property(e => e.AssVchrDId).HasColumnName("AssVchrD_Id");

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AssVchrDCredit)
                    .HasColumnName("AssVchrD_Credit")
                    .HasColumnType("money");

                entity.Property(e => e.AssVchrDCreditC).HasColumnName("AssVchrD_CreditC");

                entity.Property(e => e.AssVchrDDebit)
                    .HasColumnName("AssVchrD_Debit")
                    .HasColumnType("money");

                entity.Property(e => e.AssVchrDDebitC).HasColumnName("AssVchrD_DebitC");

                entity.Property(e => e.AssVchrDReferenceId).HasColumnName("AssVchrD_ReferenceId");

                entity.Property(e => e.AssVchrDTx)
                    .IsRequired()
                    .HasColumnName("AssVchrD_Tx")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.AssVchrHId).HasColumnName("AssVchrH_Id");

                entity.Property(e => e.AssVchrHRow).HasColumnName("AssVchrH_Row");

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.HasOne(d => d.AssVchrH)
                    .WithMany(p => p.AssVchrD)
                    .HasForeignKey(d => d.AssVchrHId)
                    .HasConstraintName("FK_AssVchrD_AssVchrH");
            });

            modelBuilder.Entity<AssVchrH>(entity =>
            {
                entity.Property(e => e.AssVchrHId)
                    .HasColumnName("AssVchrH_Id")
                    .ValueGeneratedNever();

                entity.Property(e => e.AccDocHSi).HasColumnName("AccDocH_Si");

                entity.Property(e => e.AssVchrHDate)
                    .HasColumnName("AssVchrH_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AssVchrHDateFrom)
                    .HasColumnName("AssVchrH_DateFrom")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AssVchrHDateUntil)
                    .HasColumnName("AssVchrH_DateUntil")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AssVchrHRow).HasColumnName("AssVchrH_Row");

                entity.Property(e => e.AssVchrHSent).HasColumnName("AssVchrH_Sent");

                entity.Property(e => e.AssVchrHTx)
                    .HasColumnName("AssVchrH_Tx")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AssetTemp>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Assetid).HasColumnName("assetid");

                entity.Property(e => e.AstlctnId).HasColumnName("astlctn_id");
            });

            modelBuilder.Entity<AssetTemp2>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Assetid).HasColumnName("assetid");

                entity.Property(e => e.Sicost).HasColumnName("sicost");

                entity.Property(e => e.TpCost)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AstAsset>(entity =>
            {
                entity.Property(e => e.AstAssetId)
                    .HasColumnName("AstAsset_Id")
                    .HasMaxLength(53);

                entity.Property(e => e.AccMSi).HasColumnName("AccM_Si");

                entity.Property(e => e.AccMSi1).HasColumnName("AccM_Si_1");

                entity.Property(e => e.AccMSi2).HasColumnName("AccM_Si_2");

                entity.Property(e => e.AccTSi).HasColumnName("AccT_Si");

                entity.Property(e => e.AccTSi1).HasColumnName("AccT_Si_1");

                entity.Property(e => e.AccTSi2).HasColumnName("AccT_Si_2");

                entity.Property(e => e.AssetAssignedDate).HasColumnType("datetime");

                entity.Property(e => e.AstAssetAccDoc).HasColumnName("AstAsset_AccDoc");

                entity.Property(e => e.AstAssetAccDoc1).HasColumnName("AstAsset_AccDoc_1");

                entity.Property(e => e.AstAssetAccDoc2).HasColumnName("AstAsset_AccDoc_2");

                entity.Property(e => e.AstAssetActive)
                    .HasColumnName("AstAsset_Active")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.AstAssetDepreciateRate).HasColumnName("AstAsset_DepreciateRate");

                entity.Property(e => e.AstAssetDisableCalc)
                    .HasDefaultValueSql("(1)")
                    .HasComment("استهلاک 0 یا 30 درصد");

                entity.Property(e => e.AstAssetDprcDate)
                    .HasColumnName("AstAssetDprc_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.AstAssetExploitationDate)
                    .HasColumnName("AstAsset_ExploitationDate")
                    .HasColumnType("datetime");

                entity.Property(e => e.AstAssetFirstAdepreciate)
                    .HasColumnName("AstAsset_First_ADepreciate")
                    .HasColumnType("money");

                entity.Property(e => e.AstAssetFirstBookValue)
                    .HasColumnName("AstAsset_First_BookValue")
                    .HasColumnType("money");

                entity.Property(e => e.AstAssetFirstBookv).HasColumnName("AstAsset_FirstBookv");

                entity.Property(e => e.AstAssetFirstDate)
                    .HasColumnName("AstAsset_First_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.AstAssetFirstEst).HasColumnName("AstAsset_FirstEst");

                entity.Property(e => e.AstAssetFirstPrc).HasColumnName("AstAsset_FirstPrc");

                entity.Property(e => e.AstAssetIsGift).HasColumnName("AstAsset_IsGift");

                entity.Property(e => e.AstAssetLock).HasColumnName("AstAsset_Lock");

                entity.Property(e => e.AstAssetLockpart).HasColumnName("AstAsset_Lockpart");

                entity.Property(e => e.AstAssetPelak)
                    .HasColumnName("AstAsset_Pelak")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AstAssetPurchaseDate)
                    .HasColumnName("AstAsset_Purchase_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.AstAssetPurchasePrice)
                    .HasColumnName("AstAsset_Purchase_Price")
                    .HasColumnType("money");

                entity.Property(e => e.AstAssetPurchaseVchrId).HasColumnName("AstAsset_Purchase_VchrId");

                entity.Property(e => e.AstAssetSaleDate)
                    .HasColumnName("AstAsset_Sale_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.AstAssetSalePrice)
                    .HasColumnName("AstAsset_Sale_Price")
                    .HasColumnType("money");

                entity.Property(e => e.AstAssetSaleVchrId).HasColumnName("AstAsset_Sale_VchrId");

                entity.Property(e => e.AstAssetScrapDate)
                    .HasColumnName("AstAsset_Scrap_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.AstAssetScrapPrice)
                    .HasColumnName("AstAsset_Scrap_Price")
                    .HasColumnType("money");

                entity.Property(e => e.AstAssetScrapVchrId).HasColumnName("AstAsset_Scrap_VchrId");

                entity.Property(e => e.AstAssetTx)
                    .IsRequired()
                    .HasColumnName("AstAsset_Tx")
                    .HasMaxLength(100);

                entity.Property(e => e.AstAssetTxInfo)
                    .HasColumnName("AstAsset_TxInfo")
                    .HasMaxLength(4000);

                entity.Property(e => e.AstGrupId)
                    .IsRequired()
                    .HasColumnName("AstGrup_Id")
                    .HasMaxLength(20);

                entity.Property(e => e.AstInfo1Si).HasColumnName("AstInfo1_Si");

                entity.Property(e => e.AstInfo2Si).HasColumnName("AstInfo2_Si");

                entity.Property(e => e.AstInfo3Si).HasColumnName("AstInfo3_Si");

                entity.Property(e => e.AstInfo4Si).HasColumnName("AstInfo4_Si");

                entity.Property(e => e.AstLctnId).HasColumnName("AstLctn_Id");

                entity.Property(e => e.AstsumId)
                    .HasColumnName("Astsum_id")
                    .HasMaxLength(20);

                entity.Property(e => e.InvDocDSi).HasColumnName("InvDocD_Si");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.Property(e => e.PurVndrSi1).HasColumnName("PurVndr_Si1");

                entity.Property(e => e.PurvndrSi).HasColumnName("Purvndr_Si");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.AstGrup)
                    .WithMany(p => p.AstAsset)
                    .HasForeignKey(d => d.AstGrupId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_AstAsset_AstGrup");

                entity.HasOne(d => d.AstLctn)
                    .WithMany(p => p.AstAsset)
                    .HasForeignKey(d => d.AstLctnId)
                    .HasConstraintName("FK_AstAsset_AstLctn");

                entity.HasOne(d => d.Astsum)
                    .WithMany(p => p.AstAsset)
                    .HasForeignKey(d => d.AstsumId)
                    .HasConstraintName("FK_AstAsset_AstSum");

                entity.HasOne(d => d.PerPrsnlSiNavigation)
                    .WithMany(p => p.AstAsset)
                    .HasForeignKey(d => d.PerPrsnlSi)
                    .HasConstraintName("FK_AstAsset_PerPrsnl");

                entity.HasOne(d => d.PurVndrSi1Navigation)
                    .WithMany(p => p.AstAsset)
                    .HasForeignKey(d => d.PurVndrSi1)
                    .HasConstraintName("FK_AstAsset_PurVndr");
            });

            modelBuilder.Entity<AstAssetAjst>(entity =>
            {
                entity.HasKey(e => new { e.AstAssetId, e.AstAssetAjstDate });

                entity.Property(e => e.AstAssetId)
                    .HasColumnName("AstAsset_Id")
                    .HasMaxLength(20);

                entity.Property(e => e.AstAssetAjstDate)
                    .HasColumnName("AstAssetAjst_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AstAssetAjstDocNo)
                    .HasColumnName("AstAssetAjst_DocNo")
                    .HasMaxLength(20);

                entity.Property(e => e.AstAssetAjstPrice)
                    .HasColumnName("AstAssetAjst_Price")
                    .HasColumnType("money");

                entity.Property(e => e.AstAssetAjstSi).HasColumnName("AstAssetAjst_Si");

                entity.Property(e => e.AstAssetAjstTx)
                    .HasColumnName("AstAssetAjst_Tx")
                    .HasMaxLength(100);

                entity.Property(e => e.AstAssetAjstType).HasColumnName("AstAssetAjst_Type");
            });

            modelBuilder.Entity<AstAssetData>(entity =>
            {
                entity.HasKey(e => new { e.AstAssetId, e.AstDataHId, e.AstDataDId });

                entity.Property(e => e.AstAssetId)
                    .HasColumnName("AstAsset_Id")
                    .HasMaxLength(53);

                entity.Property(e => e.AstDataHId).HasColumnName("AstDataH_Id");

                entity.Property(e => e.AstDataDId).HasColumnName("AstDataD_Id");

                entity.Property(e => e.AstAssetDataValue)
                    .HasColumnName("AstAssetData_value")
                    .HasMaxLength(512);

                entity.HasOne(d => d.AstAsset)
                    .WithMany(p => p.AstAssetData)
                    .HasForeignKey(d => d.AstAssetId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_AstAssetData_AstAsset");

                entity.HasOne(d => d.AstData)
                    .WithMany(p => p.AstAssetData)
                    .HasForeignKey(d => new { d.AstDataHId, d.AstDataDId })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_AstAssetData_AstDataD");
            });

            modelBuilder.Entity<AstAssetDprc>(entity =>
            {
                entity.HasKey(e => new { e.AstAssetId, e.AstAssetDprcDate });

                entity.Property(e => e.AstAssetId)
                    .HasColumnName("AstAsset_Id")
                    .HasMaxLength(53);

                entity.Property(e => e.AstAssetDprcDate)
                    .HasColumnName("AstAssetDprc_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AstAssetDprcPrice)
                    .HasColumnName("AstAssetDprc_Price")
                    .HasColumnType("money");

                entity.Property(e => e.AstVchrId).HasColumnName("AstVchr_Id");

                entity.HasOne(d => d.AstAsset)
                    .WithMany(p => p.AstAssetDprc)
                    .HasForeignKey(d => d.AstAssetId)
                    .HasConstraintName("FK_AstAssetDprc_AstAsset");
            });

            modelBuilder.Entity<AstAssetLctn>(entity =>
            {
                entity.HasKey(e => new { e.AstAssetId, e.AstAssetLctnDate });

                entity.Property(e => e.AstAssetId)
                    .HasColumnName("AstAsset_Id")
                    .HasMaxLength(53);

                entity.Property(e => e.AstAssetLctnDate)
                    .HasColumnName("AstAssetLctn_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AstAssetLctnTx)
                    .HasColumnName("AstAssetLctn_Tx")
                    .HasMaxLength(50);

                entity.Property(e => e.AstLctnId).HasColumnName("AstLctn_Id");

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.Property(e => e.PerPrsnlfromSi).HasColumnName("PerPrsnlfrom_Si");

                entity.HasOne(d => d.AstAsset)
                    .WithMany(p => p.AstAssetLctn)
                    .HasForeignKey(d => d.AstAssetId)
                    .HasConstraintName("FK_AstAssetLctn_AstAsset");

                entity.HasOne(d => d.AstLctn)
                    .WithMany(p => p.AstAssetLctn)
                    .HasForeignKey(d => d.AstLctnId)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_AstAssetLctn_AstLctn");

                entity.HasOne(d => d.SiCostNavigation)
                    .WithMany(p => p.AstAssetLctn)
                    .HasForeignKey(d => d.SiCost)
                    .HasConstraintName("FK_AstAssetLctn_CtbCost");
            });

            modelBuilder.Entity<AstAssetRepair>(entity =>
            {
                entity.HasKey(e => new { e.AstAssetId, e.AstAssetRepairDate });

                entity.Property(e => e.AstAssetId)
                    .HasColumnName("AstAsset_Id")
                    .HasMaxLength(20);

                entity.Property(e => e.AstAssetRepairDate)
                    .HasColumnName("AstAssetRepair_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.AstAssetRepairPrice)
                    .HasColumnName("AstAssetRepair_Price")
                    .HasColumnType("money");

                entity.Property(e => e.AstAssetRepairTx)
                    .HasColumnName("AstAssetRepair_Tx")
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<AstAssetSelling>(entity =>
            {
                entity.HasKey(e => e.AstAssetId);

                entity.Property(e => e.AstAssetId)
                    .HasColumnName("AstAsset_Id")
                    .HasMaxLength(53);

                entity.Property(e => e.AccMastGrpSi).HasColumnName("AccMAstGrp_Si");

                entity.Property(e => e.AccMbankSi).HasColumnName("AccMBank_Si");

                entity.Property(e => e.AccMbenfSi).HasColumnName("AccMBenf_Si");

                entity.Property(e => e.AccMdeprSi).HasColumnName("AccMDepr_Si");

                entity.Property(e => e.AccTbankSi).HasColumnName("AccTBank_Si");

                entity.Property(e => e.AccTbenfSi).HasColumnName("AccTBenf_Si");

                entity.Property(e => e.AstAssetSellingDate)
                    .HasColumnName("AstAssetSelling_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AstAssetSellingPrice)
                    .HasColumnName("AstAssetSelling_Price")
                    .HasColumnType("money");

                entity.Property(e => e.AstAssetSellingTx)
                    .HasColumnName("AstAssetSelling_Tx")
                    .HasMaxLength(100);

                //entity.HasOne(d => d.AccMastGrpSiNavigation)
                //    .WithMany(p => p.AstAssetSellingAccMastGrpSiNavigation)
                //    .HasForeignKey(d => d.AccMastGrpSi)
                //    .HasConstraintName("FK_AstAssetSelling_CtbAccM2");

                entity.HasOne(d => d.AccMbankSiNavigation)
                    .WithMany(p => p.AstAssetSellingAccMbankSiNavigation)
                    .HasForeignKey(d => d.AccMbankSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_AstAssetSelling_CtbAccM");

                entity.HasOne(d => d.AccMbenfSiNavigation)
                    .WithMany(p => p.AstAssetSellingAccMbenfSiNavigation)
                    .HasForeignKey(d => d.AccMbenfSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_AstAssetSelling_CtbAccM3");

                entity.HasOne(d => d.AccMdeprSiNavigation)
                    .WithMany(p => p.AstAssetSellingAccMdeprSiNavigation)
                    .HasForeignKey(d => d.AccMdeprSi)
                    .HasConstraintName("FK_AstAssetSelling_CtbAccM1");

                entity.HasOne(d => d.AccTbankSiNavigation)
                    .WithMany(p => p.AstAssetSelling)
                    .HasForeignKey(d => d.AccTbankSi)
                    .HasConstraintName("FK_AstAssetSelling_CtbAccT");

                entity.HasOne(d => d.AstAsset)
                    .WithOne(p => p.AstAssetSelling)
                    .HasForeignKey<AstAssetSelling>(d => d.AstAssetId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_AstAssetSelling_AstAsset");
            });

            modelBuilder.Entity<AstAssign>(entity =>
            {
                entity.HasKey(e => e.AstAssignSi);

                entity.HasIndex(e => new { e.AstAssetId, e.AstAssignType, e.AstAssignDate })
                    .HasName("IX_AstAssign")
                    .IsUnique();

                entity.Property(e => e.AstAssignSi).HasColumnName("AstAssign_Si");

                entity.Property(e => e.AstAssetId)
                    .IsRequired()
                    .HasColumnName("AstAsset_Id")
                    .HasMaxLength(53);

                entity.Property(e => e.AstAssignDate)
                    .HasColumnName("AstAssign_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AstAssignType)
                    .HasColumnName("AstAssign_Type")
                    .HasDefaultValueSql("(1)");

                entity.HasOne(d => d.AstAsset)
                    .WithMany(p => p.AstAssign)
                    .HasForeignKey(d => d.AstAssetId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_AstAssign_AstAsset");
            });

            modelBuilder.Entity<AstCnsMthd>(entity =>
            {
                entity.Property(e => e.AstCnsMthdId).HasColumnName("AstCnsMthd_Id");

                entity.Property(e => e.AstCnsMthdTx)
                    .HasColumnName("AstCnsMthd_Tx")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<AstCtrlr>(entity =>
            {
                entity.Property(e => e.AstCtrlrId)
                    .HasColumnName("AstCtrlr_Id")
                    .ValueGeneratedNever();

                entity.Property(e => e.AstCtrlrFinish)
                    .HasColumnName("AstCtrlr_Finish")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AstCtrlrStart)
                    .HasColumnName("AstCtrlr_Start")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AstCtrlrTx)
                    .HasColumnName("AstCtrlr_Tx")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<AstDataD>(entity =>
            {
                entity.HasKey(e => new { e.AstDataHId, e.AstDataDId });

                entity.Property(e => e.AstDataHId).HasColumnName("AstDataH_Id");

                entity.Property(e => e.AstDataDId).HasColumnName("AstDataD_Id");

                entity.Property(e => e.AstDataDTx)
                    .HasColumnName("AstDataD_Tx")
                    .HasMaxLength(50);

                entity.HasOne(d => d.AstDataH)
                    .WithMany(p => p.AstDataD)
                    .HasForeignKey(d => d.AstDataHId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_AstDataD_AstDataH");
            });

            modelBuilder.Entity<AstDataDitem>(entity =>
            {
                entity.HasKey(e => new { e.AstDataHId, e.AstDataDId, e.AstDataDitemId });

                entity.ToTable("AstDataDItem");

                entity.Property(e => e.AstDataHId).HasColumnName("AstDataH_Id");

                entity.Property(e => e.AstDataDId).HasColumnName("AstDataD_Id");

                entity.Property(e => e.AstDataDitemId)
                    .HasColumnName("AstDataDItem_Id")
                    .HasMaxLength(100);

                entity.HasOne(d => d.AstData)
                    .WithMany(p => p.AstDataDitem)
                    .HasForeignKey(d => new { d.AstDataHId, d.AstDataDId })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_AstDataDItem_AstDataD");
            });

            modelBuilder.Entity<AstDataH>(entity =>
            {
                entity.Property(e => e.AstDataHId)
                    .HasColumnName("AstDataH_Id")
                    .ValueGeneratedNever();

                entity.Property(e => e.AstDataHTx)
                    .HasColumnName("AstDataH_Tx")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<AstGrup>(entity =>
            {
                entity.Property(e => e.AstGrupId)
                    .HasColumnName("AstGrup_Id")
                    .HasMaxLength(20);

                entity.Property(e => e.AccAcntIdAdepreciate)
                    .HasColumnName("AccAcnt_Id_ADepreciate")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccAcntIdDepreciate)
                    .HasColumnName("AccAcnt_Id_Depreciate")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLcSi1).HasColumnName("AccLC_Si_1");

                entity.Property(e => e.AccLcSi2).HasColumnName("AccLC_Si_2");

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLpSi1).HasColumnName("AccLP_Si_1");

                entity.Property(e => e.AccLpSi2).HasColumnName("AccLP_Si_2");

                entity.Property(e => e.AccMSi).HasColumnName("AccM_Si");

                entity.Property(e => e.AccMSi1).HasColumnName("AccM_Si_1");

                entity.Property(e => e.AccMSi2).HasColumnName("AccM_Si_2");

                entity.Property(e => e.AccTSi).HasColumnName("AccT_Si");

                entity.Property(e => e.AccTSi1).HasColumnName("AccT_Si_1");

                entity.Property(e => e.AccTSi2).HasColumnName("AccT_Si_2");

                entity.Property(e => e.AstCnsMthdId).HasColumnName("AstCnsMthd_Id");

                entity.Property(e => e.AstGrupDepreciateRate).HasColumnName("AstGrup_DepreciateRate");

                entity.Property(e => e.AstGrupIdParent).HasColumnName("AstGrup_IdParent");

                entity.Property(e => e.AstGrupTx)
                    .HasColumnName("AstGrup_Tx")
                    .HasMaxLength(50);

                entity.HasOne(d => d.AstCnsMthd)
                    .WithMany(p => p.AstGrup)
                    .HasForeignKey(d => d.AstCnsMthdId)
                    .HasConstraintName("FK_AstGrup_AstCnsMthd");
            });

            modelBuilder.Entity<AstInfo1>(entity =>
            {
                entity.Property(e => e.AstInfo1Id)
                    .HasColumnName("AstInfo1_Id")
                    .HasMaxLength(20);

                entity.Property(e => e.AstInfo1Tx)
                    .HasColumnName("AstInfo1_Tx")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AstInfo2>(entity =>
            {
                entity.Property(e => e.AstInfo2Id)
                    .HasColumnName("AstInfo2_Id")
                    .HasMaxLength(20);

                entity.Property(e => e.AstInfo2Tx)
                    .HasColumnName("AstInfo2_Tx")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AstInfo3>(entity =>
            {
                entity.Property(e => e.AstInfo3Id)
                    .HasColumnName("AstInfo3_Id")
                    .HasMaxLength(20);

                entity.Property(e => e.AstInfo3Tx)
                    .HasColumnName("AstInfo3_Tx")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AstInfo4>(entity =>
            {
                entity.Property(e => e.AstInfo4Id)
                    .HasColumnName("AstInfo4_Id")
                    .HasMaxLength(20);

                entity.Property(e => e.AstInfo4Tx)
                    .HasColumnName("AstInfo4_Tx")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AstInsurKind>(entity =>
            {
                entity.HasKey(e => e.AstInsurKindCu);

                entity.Property(e => e.AstInsurKindCu)
                    .HasColumnName("AstInsurKind_Cu")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.AstInsurKindTp)
                    .HasColumnName("AstInsurKind_TP")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AstInsurance>(entity =>
            {
                entity.HasKey(e => e.AstInsuranceSi);

                entity.Property(e => e.AstInsuranceSi).HasColumnName("AstInsurance_Si");

                entity.Property(e => e.AstAssetId)
                    .IsRequired()
                    .HasColumnName("AstAsset_Id")
                    .HasMaxLength(53);

                entity.Property(e => e.AstInsurKindCu)
                    .HasColumnName("AstInsurKind_Cu")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.AstInsuranceAmnt)
                    .HasColumnName("AstInsurance_Amnt")
                    .HasColumnType("money");

                entity.Property(e => e.AstInsuranceCu)
                    .HasColumnName("AstInsurance_Cu")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.AstInsuranceDateE)
                    .HasColumnName("AstInsurance_DateE")
                    .HasColumnType("datetime");

                entity.Property(e => e.AstInsuranceDateS)
                    .HasColumnName("AstInsurance_DateS")
                    .HasColumnType("datetime");

                entity.Property(e => e.AstInsuranceMan)
                    .HasColumnName("AstInsurance_Man")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AstInsuranceOffice)
                    .HasColumnName("AstInsurance_Office")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.HasOne(d => d.AstInsurKindCuNavigation)
                    .WithMany(p => p.AstInsurance)
                    .HasForeignKey(d => d.AstInsurKindCu)
                    .HasConstraintName("FK_AstInsurance_AstInsurKind");
            });

            modelBuilder.Entity<AstLctn>(entity =>
            {
                entity.Property(e => e.AstLctnId)
                    .HasColumnName("AstLctn_Id")
                    .ValueGeneratedNever();

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AstLctnSiParent).HasColumnName("AstLctn_SiParent");

                entity.Property(e => e.AstLctnTx)
                    .HasColumnName("AstLctn_Tx")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<AstPrms>(entity =>
            {
                entity.HasKey(e => e.AstPrmsLgn);

                entity.Property(e => e.AstPrmsLgn)
                    .HasColumnName("AstPrms_Lgn")
                    .HasMaxLength(256);

                entity.Property(e => e.AssetAjustD).HasColumnName("AssetAjust_D");

                entity.Property(e => e.AssetAjustI).HasColumnName("AssetAjust_I");

                entity.Property(e => e.AssetAjustU).HasColumnName("AssetAjust_U");

                entity.Property(e => e.AssetDataU).HasColumnName("AssetData_U");

                entity.Property(e => e.AssetLocationIud).HasColumnName("AssetLocation_IUD");

                entity.Property(e => e.AssetsD).HasColumnName("Assets_D");

                entity.Property(e => e.AssetsIu).HasColumnName("Assets_IU");

                entity.Property(e => e.DataD).HasColumnName("Data_D");

                entity.Property(e => e.DataIu).HasColumnName("Data_IU");

                entity.Property(e => e.GroupsIud).HasColumnName("Groups_IUD");

                entity.Property(e => e.LocationsIud).HasColumnName("Locations_IUD");
            });

            modelBuilder.Entity<AstSum>(entity =>
            {
                entity.Property(e => e.AstSumId)
                    .HasColumnName("AstSum_Id")
                    .HasMaxLength(20);

                entity.Property(e => e.AstSumTx)
                    .HasColumnName("AstSum_Tx")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AstVchrD>(entity =>
            {
                entity.Property(e => e.AstVchrDId).HasColumnName("AstVchrD_Id");

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLm_Si");

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AstVchrDTx)
                    .HasColumnName("AstVchrD_Tx")
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.AstVchrHCredit)
                    .HasColumnName("AstVchrH_Credit")
                    .HasColumnType("money");

                entity.Property(e => e.AstVchrHDebit)
                    .HasColumnName("AstVchrH_Debit")
                    .HasColumnType("money");

                entity.Property(e => e.AstVchrHId).HasColumnName("AstVchrH_Id");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Reference1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.AstVchrH)
                    .WithMany(p => p.AstVchrD)
                    .HasForeignKey(d => d.AstVchrHId)
                    .HasConstraintName("FK_AstVchrD_AstVchrH");
            });

            modelBuilder.Entity<AstVchrH>(entity =>
            {
                entity.Property(e => e.AstVchrHId)
                    .HasColumnName("AstVchrH_Id")
                    .ValueGeneratedNever();

                entity.Property(e => e.AccDocHSi).HasColumnName("AccDocH_Si");

                entity.Property(e => e.AstVchrHDate)
                    .HasColumnName("AstVchrH_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AstVchrHSent).HasColumnName("AstVchrH_Sent");

                entity.Property(e => e.AstVchrHTx)
                    .HasColumnName("AstVchrH_Tx")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AstVchrHType).HasColumnName("AstVchrH_Type");
            });

            modelBuilder.Entity<B>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("B$");

                entity.Property(e => e.CtbCurncyTp)
                    .HasColumnName("CtbCurncy_Tp")
                    .HasMaxLength(255);

                entity.Property(e => e.F10).HasMaxLength(255);

                entity.Property(e => e.InvGdsCu).HasColumnName("InvGds_Cu");

                entity.Property(e => e.InvUntCu).HasColumnName("InvUnt_Cu");

                entity.Property(e => e.SalCustGrpSi).HasColumnName("SalCustGrp_Si");

                entity.Property(e => e.SalDclrPrcDUntPrc)
                    .HasColumnName("SalDclrPrcD_UntPrc")
                    .HasMaxLength(255);

                entity.Property(e => e.SalDclrPrcDUntPrcC).HasColumnName("SalDclrPrcD_UntPrcC");

                entity.Property(e => e.SalDclrPrcDUntPrcMax).HasColumnName("SalDclrPrcD_UntPrc_Max");

                entity.Property(e => e.SalDclrPrcDUntPrcMin).HasColumnName("SalDclrPrcD_UntPrc_Min");

                entity.Property(e => e.SalTypSi)
                    .HasColumnName("SalTyp_Si")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<BackupAccDdoc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("backupAccDDoc");

                entity.Property(e => e.AccAdvRSi).HasColumnName("AccAdvR_Si");

                entity.Property(e => e.AccArqstSi).HasColumnName("AccARqst_Si");

                entity.Property(e => e.AccDdocRowBgt).HasColumnName("AccDDoc_RowBgt");

                entity.Property(e => e.BgtAssignToCcostDetailSi).HasColumnName("BgtAssignToCCostDetail_Si");

                entity.Property(e => e.BgtAssignToCcostSi).HasColumnName("BgtAssignToCCost_Si");

                entity.Property(e => e.BgtAssignToCcostSubDetailSi).HasColumnName("BgtAssignToCCostSubDetail_Si");

                entity.Property(e => e.BgtAssignToPrjDetailSi).HasColumnName("BgtAssignToPrjDetail_Si");

                entity.Property(e => e.BgtAssignToPrjSi).HasColumnName("BgtAssignToPrj_Si");

                entity.Property(e => e.BgtAssignToPrjSubDetailSi).HasColumnName("BgtAssignToPrjSubDetail_Si");

                entity.Property(e => e.Comment)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.CreateRec).HasColumnType("datetime");

                entity.Property(e => e.Credit).HasColumnType("money");

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.Debit).HasColumnType("money");

                entity.Property(e => e.GuId)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.Idt)
                    .HasColumnName("IDT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Ino).HasColumnName("INo");

                entity.Property(e => e.Iqty).HasColumnName("IQty");

                entity.Property(e => e.LoginName)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remain).HasColumnType("money");

                entity.Property(e => e.SiDdoc)
                    .HasColumnName("SiDDoc")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.SiDdocSource).HasColumnName("SiDDoc_Source");

                entity.Property(e => e.SiHdoc).HasColumnName("SiHDoc");

                entity.Property(e => e.TpDoc)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.TpDoc2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDccDt)
                    .HasColumnName("TrsDcc_DT")
                    .HasColumnType("datetime");

                entity.Property(e => e.TrsDccIno)
                    .HasColumnName("TrsDcc_INO")
                    .HasMaxLength(40)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<BgtAccIntro>(entity =>
            {
                entity.HasKey(e => e.BgtAccIntroSi);

                entity.Property(e => e.BgtAccIntroSi).HasColumnName("BgtAccIntro_Si");

                entity.Property(e => e.AccMSi).HasColumnName("AccM_Si");

                entity.Property(e => e.BgtAccIntroConst)
                    .HasColumnName("BgtAccIntro_Const")
                    .HasDefaultValueSql("(100)")
                    .HasComment("درصد ثابت");

                entity.Property(e => e.BgtAccIntroNature)
                    .HasColumnName("BgtAccIntro_Nature")
                    .HasComment("دستمزد یا سربار");

                entity.HasOne(d => d.AccMSiNavigation)
                    .WithMany(p => p.BgtAccIntro)
                    .HasForeignKey(d => d.AccMSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_BgtAccIntro_CtbAccM");
            });

            modelBuilder.Entity<BgtAssignAccK>(entity =>
            {
                entity.HasKey(e => e.BgtAssignAccKSi);

                entity.Property(e => e.BgtAssignAccKSi).HasColumnName("BgtAssignAccK_Si");

                entity.Property(e => e.BgtAssignAccKAmnt)
                    .HasColumnName("BgtAssignAccK_Amnt")
                    .HasColumnType("money");

                entity.Property(e => e.BgtAssignAccKDate)
                    .HasColumnName("BgtAssignAccK_Date")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<BgtAssignAccM>(entity =>
            {
                entity.HasKey(e => e.BgtAssignAccMSi);

                entity.Property(e => e.BgtAssignAccMSi).HasColumnName("BgtAssignAccM_Si");

                entity.Property(e => e.BgtAssignAccMAmnt)
                    .HasColumnName("BgtAssignAccM_Amnt")
                    .HasColumnType("money");

                entity.Property(e => e.BgtAssignAccMDate)
                    .HasColumnName("BgtAssignAccM_Date")
                    .HasColumnType("smalldatetime");

                entity.HasOne(d => d.SiAccMNavigation)
                    .WithMany(p => p.BgtAssignAccM)
                    .HasForeignKey(d => d.SiAccM)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_BgtAssignAccM_CtbAccM");
            });

            modelBuilder.Entity<BgtAssignToCcost>(entity =>
            {
                entity.HasKey(e => e.BgtAssignToCcostSi);

                entity.ToTable("BgtAssignToCCost");

                entity.Property(e => e.BgtAssignToCcostSi).HasColumnName("BgtAssignToCCost_Si");

                entity.Property(e => e.BgtAssignAccMSi).HasColumnName("BgtAssignAccM_Si");

                entity.Property(e => e.BgtAssignToCcostAmnt)
                    .HasColumnName("BgtAssignToCCost_Amnt")
                    .HasColumnType("money");

                entity.Property(e => e.BgtAssignToCcostDate)
                    .HasColumnName("BgtAssignToCCost_Date")
                    .HasColumnType("smalldatetime");

                entity.HasOne(d => d.BgtAssignAccMSiNavigation)
                    .WithMany(p => p.BgtAssignToCcost)
                    .HasForeignKey(d => d.BgtAssignAccMSi)
                    .HasConstraintName("FK_BgtAssignToCCost_BgtAssignAccM");

                entity.HasOne(d => d.SiCostNavigation)
                    .WithMany(p => p.BgtAssignToCcost)
                    .HasForeignKey(d => d.SiCost)
                    .HasConstraintName("FK_BgtAssignToCCost_CtbCost");
            });

            modelBuilder.Entity<BgtAssignToCcostDetail>(entity =>
            {
                entity.HasKey(e => e.BgtAssignToCcostDetailSi);

                entity.ToTable("BgtAssignToCCostDetail");

                entity.Property(e => e.BgtAssignToCcostDetailSi).HasColumnName("BgtAssignToCCostDetail_Si");

                entity.Property(e => e.BgtAssignToCcostDetailAmnt)
                    .HasColumnName("BgtAssignToCCostDetail_Amnt")
                    .HasColumnType("money");

                entity.Property(e => e.BgtAssignToCcostDetailCu)
                    .HasColumnName("BgtAssignToCCostDetail_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BgtAssignToCcostDetailDate)
                    .HasColumnName("BgtAssignToCCostDetail_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.BgtAssignToCcostDetailDesc)
                    .HasColumnName("BgtAssignToCCostDetail_Desc")
                    .HasMaxLength(4000);

                entity.Property(e => e.BgtAssignToCcostSi).HasColumnName("BgtAssignToCCost_Si");

                entity.HasOne(d => d.BgtAssignToCcostSiNavigation)
                    .WithMany(p => p.BgtAssignToCcostDetail)
                    .HasForeignKey(d => d.BgtAssignToCcostSi)
                    .HasConstraintName("FK_BgtAssignToCCostDetail_BgtAssignToCCost");
            });

            modelBuilder.Entity<BgtAssignToCcostSubDetail>(entity =>
            {
                entity.HasKey(e => e.BgtAssignToCcostSubDetailSi);

                entity.ToTable("BgtAssignToCCostSubDetail");

                entity.Property(e => e.BgtAssignToCcostSubDetailSi).HasColumnName("BgtAssignToCCostSubDetail_Si");

                entity.Property(e => e.BgtAssignToCcostDetailSi).HasColumnName("BgtAssignToCCostDetail_Si");

                entity.Property(e => e.BgtAssignToCcostSubDetailAmnt)
                    .HasColumnName("BgtAssignToCCostSubDetail_Amnt")
                    .HasColumnType("money");

                entity.Property(e => e.BgtAssignToCcostSubDetailDate)
                    .HasColumnName("BgtAssignToCCostSubDetail_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.BgtAssignToCcostSubDetailDesc)
                    .HasColumnName("BgtAssignToCCostSubDetail_Desc")
                    .HasMaxLength(4000);
            });

            modelBuilder.Entity<BgtAssignToPrj>(entity =>
            {
                entity.HasKey(e => e.BgtAssignToPrjSi);

                entity.Property(e => e.BgtAssignToPrjSi).HasColumnName("BgtAssignToPrj_Si");

                entity.Property(e => e.BgtAssignAccMSi).HasColumnName("BgtAssignAccM_Si");

                entity.Property(e => e.BgtAssignToPrjAmnt)
                    .HasColumnName("BgtAssignToPrj_Amnt")
                    .HasColumnType("money");

                entity.Property(e => e.BgtAssignToPrjDate)
                    .HasColumnName("BgtAssignToPrj_Date")
                    .HasColumnType("smalldatetime");

                entity.HasOne(d => d.BgtAssignAccMSiNavigation)
                    .WithMany(p => p.BgtAssignToPrj)
                    .HasForeignKey(d => d.BgtAssignAccMSi)
                    .HasConstraintName("FK_BgtAssignToPrj_BgtAssignAccM");

                entity.HasOne(d => d.SiProjectNavigation)
                    .WithMany(p => p.BgtAssignToPrj)
                    .HasForeignKey(d => d.SiProject)
                    .HasConstraintName("FK_BgtAssignToPrj_CtbProject");
            });

            modelBuilder.Entity<BgtAssignToPrjDetail>(entity =>
            {
                entity.HasKey(e => e.BgtAssignToPrjDetailSi);

                entity.Property(e => e.BgtAssignToPrjDetailSi).HasColumnName("BgtAssignToPrjDetail_Si");

                entity.Property(e => e.BgtAssignToPrjDetailAmnt)
                    .HasColumnName("BgtAssignToPrjDetail_Amnt")
                    .HasColumnType("money");

                entity.Property(e => e.BgtAssignToPrjDetailCu)
                    .HasColumnName("BgtAssignToPrjDetail_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BgtAssignToPrjDetailDate)
                    .HasColumnName("BgtAssignToPrjDetail_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.BgtAssignToPrjDetailDesc)
                    .HasColumnName("BgtAssignToPrjDetail_Desc")
                    .HasMaxLength(4000);

                entity.Property(e => e.BgtAssignToPrjSi).HasColumnName("BgtAssignToPrj_Si");

                entity.HasOne(d => d.BgtAssignToPrjSiNavigation)
                    .WithMany(p => p.BgtAssignToPrjDetail)
                    .HasForeignKey(d => d.BgtAssignToPrjSi)
                    .HasConstraintName("FK_BgtAssignToPrjDetail_BgtAssignToPrj");
            });

            modelBuilder.Entity<BgtAssignToPrjSubDetail>(entity =>
            {
                entity.HasKey(e => e.BgtAssignToPrjSubDetailSi);

                entity.Property(e => e.BgtAssignToPrjSubDetailSi).HasColumnName("BgtAssignToPrjSubDetail_Si");

                entity.Property(e => e.BgtAssignToPrjDetailSi).HasColumnName("BgtAssignToPrjDetail_Si");

                entity.Property(e => e.BgtAssignToPrjSubDetailAmnt)
                    .HasColumnName("BgtAssignToPrjSubDetail_Amnt")
                    .HasColumnType("money");

                entity.Property(e => e.BgtAssignToPrjSubDetailDate)
                    .HasColumnName("BgtAssignToPrjSubDetail_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.BgtAssignToPrjSubDetailDesc)
                    .HasColumnName("BgtAssignToPrjSubDetail_Desc")
                    .HasMaxLength(4000);

                entity.HasOne(d => d.BgtAssignToPrjDetailSiNavigation)
                    .WithMany(p => p.BgtAssignToPrjSubDetail)
                    .HasForeignKey(d => d.BgtAssignToPrjDetailSi)
                    .HasConstraintName("FK_BgtAssignToPrjSubDetail_BgtAssignToPrjDetail");
            });

            modelBuilder.Entity<BgtChangeCostD>(entity =>
            {
                entity.HasKey(e => e.BgtChangeCostDSi)
                    .HasName("PK_BgtWageCostD");

                entity.Property(e => e.BgtChangeCostDSi).HasColumnName("BgtChangeCostD_Si");

                entity.Property(e => e.BgtChangeCostDAdjCoef)
                    .HasColumnName("BgtChangeCostD_AdjCoef")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.BgtChangeCostDCost)
                    .HasColumnName("BgtChangeCostD_Cost")
                    .HasColumnType("money");

                entity.Property(e => e.BgtChangeCostHSi).HasColumnName("BgtChangeCostH_Si");

                entity.HasOne(d => d.BgtChangeCostHSiNavigation)
                    .WithMany(p => p.BgtChangeCostD)
                    .HasForeignKey(d => d.BgtChangeCostHSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_BgtWageCostD_BgtWageCostH");

                entity.HasOne(d => d.SiAccMNavigation)
                    .WithMany(p => p.BgtChangeCostD)
                    .HasForeignKey(d => d.SiAccM)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_BgtWageCostD_CtbAccM");
            });

            modelBuilder.Entity<BgtChangeCostH>(entity =>
            {
                entity.HasKey(e => e.BgtChangeCostHSi)
                    .HasName("PK_BgtWageCost");

                entity.Property(e => e.BgtChangeCostHSi).HasColumnName("BgtChangeCostH_Si");

                entity.Property(e => e.BgtChangeCostHMonthCoef).HasColumnName("BgtChangeCostH_MonthCoef");

                entity.Property(e => e.CtbCostSi).HasColumnName("CtbCost_Si");

                entity.HasOne(d => d.CtbCostSiNavigation)
                    .WithMany(p => p.BgtChangeCostH)
                    .HasForeignKey(d => d.CtbCostSi)
                    .HasConstraintName("FK_BgtWageCost_CtbCost");
            });

            modelBuilder.Entity<BgtPrdcSchdlD>(entity =>
            {
                entity.HasKey(e => e.BgtPrdcSchdlDSi);

                entity.Property(e => e.BgtPrdcSchdlDSi).HasColumnName("BgtPrdcSchdlD_Si");

                entity.Property(e => e.BgtPrdcSchdlDMonthId).HasColumnName("BgtPrdcSchdlD_MonthId");

                entity.Property(e => e.BgtPrdcSchdlDQty).HasColumnName("BgtPrdcSchdlD_Qty");

                entity.Property(e => e.BgtPrdcSchdlHSi).HasColumnName("BgtPrdcSchdlH_Si");
            });

            modelBuilder.Entity<BgtPrdcSchdlH>(entity =>
            {
                entity.HasKey(e => e.BgtPrdcSchdlHSi)
                    .HasName("PK_BgtPrdcSchdl");

                entity.Property(e => e.BgtPrdcSchdlHSi).HasColumnName("BgtPrdcSchdlH_Si");

                entity.Property(e => e.BgtPrdcSchdHYear)
                    .HasColumnName("BgtPrdcSchdH_Year")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.BgtPrdcSchdlHTotalQty).HasColumnName("BgtPrdcSchdlH_TotalQty");
            });

            modelBuilder.Entity<BgtStndrRate>(entity =>
            {
                entity.HasKey(e => e.BgtStndrRateSi);

                entity.Property(e => e.BgtStndrRateSi).HasColumnName("BgtStndrRate_Si");

                entity.Property(e => e.BgtStndrRateCoef)
                    .HasColumnName("BgtStndrRate_Coef")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.BgtStndrRatePrice)
                    .HasColumnName("BgtStndrRate_Price")
                    .HasColumnType("money");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");
            });

            modelBuilder.Entity<Clvtb>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CLVTB");

                entity.Property(e => e.Avgf)
                    .HasColumnName("AVGF")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.Avgl)
                    .HasColumnName("AVGL")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.Avgm)
                    .HasColumnName("AVGM")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.Avgr)
                    .HasColumnName("AVGR")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.Clv)
                    .HasColumnName("CLV")
                    .HasColumnType("decimal(13, 2)");

                entity.Property(e => e.F).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.L).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.M).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.R).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalCustTp)
                    .IsRequired()
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.نوعمشتری)
                    .HasColumnName("نوع مشتری")
                    .HasMaxLength(17)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CntAlert>(entity =>
            {
                entity.HasKey(e => e.CntAlertSi);

                entity.Property(e => e.CntAlertSi).HasColumnName("CntAlert_Si");

                entity.Property(e => e.CntAlertDate)
                    .HasColumnName("CntAlert_Date")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CntAlertDayBeforeAlert).HasColumnName("CntAlert_DayBeforeAlert");

                entity.Property(e => e.CntAlertDismiss).HasColumnName("CntAlert_Dismiss");

                entity.Property(e => e.CntAlertPrgssBeforeAlert).HasColumnName("CntAlert_PrgssBeforeAlert");

                entity.Property(e => e.CntAlertTx)
                    .HasColumnName("CntAlert_Tx")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CntAlertTyp).HasColumnName("CntAlert_Typ");

                entity.Property(e => e.CntContractSi).HasColumnName("CntContract_Si");

                entity.Property(e => e.CntTaskSi).HasColumnName("CntTask_Si");

                entity.HasOne(d => d.CntContractSiNavigation)
                    .WithMany(p => p.CntAlert)
                    .HasForeignKey(d => d.CntContractSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CntAlert_CntContract");
            });

            modelBuilder.Entity<CntAttachTyp>(entity =>
            {
                entity.HasKey(e => e.CntAttachTypSi);

                entity.Property(e => e.CntAttachTypSi)
                    .HasColumnName("CntAttachTyp_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.CntAttachTypTx)
                    .HasColumnName("CntAttachTyp_Tx")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CntAttachment>(entity =>
            {
                entity.HasKey(e => e.CntAttachmentSi);

                entity.Property(e => e.CntAttachmentSi).HasColumnName("CntAttachment_Si");

                entity.Property(e => e.CntAttachTypSi).HasColumnName("CntAttachTyp_Si");

                entity.Property(e => e.CntAttachmentFile)
                    .HasColumnName("CntAttachment_File")
                    .HasColumnType("image");

                entity.Property(e => e.CntAttachmentFileName)
                    .HasColumnName("CntAttachment_FileName")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CntAttachmentFileSize).HasColumnName("CntAttachment_FileSize");

                entity.Property(e => e.CntAttachmentFileType)
                    .HasColumnName("CntAttachment_FileType")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CntAttachmentTx)
                    .HasColumnName("CntAttachment_Tx")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CntContractSi).HasColumnName("CntContract_Si");

                entity.HasOne(d => d.CntAttachTypSiNavigation)
                    .WithMany(p => p.CntAttachment)
                    .HasForeignKey(d => d.CntAttachTypSi)
                    .HasConstraintName("FK_CntAttachment_CntAttachTyp");

                entity.HasOne(d => d.CntContractSiNavigation)
                    .WithMany(p => p.CntAttachment)
                    .HasForeignKey(d => d.CntContractSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CntAttachment_CntContract");
            });

            modelBuilder.Entity<CntCntrIntroducer>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.CntCntrIntroducerName)
                    .HasColumnName("CntCntrIntroducer_Name")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CntCntrIntroducerPayment)
                    .HasColumnName("CntCntrIntroducer_Payment")
                    .HasColumnType("money");

                entity.Property(e => e.CntCntrIntroducerSi)
                    .HasColumnName("CntCntrIntroducer_Si")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CntContractSi).HasColumnName("CntContract_Si");
            });

            modelBuilder.Entity<CntContract>(entity =>
            {
                entity.HasKey(e => e.CntContractSi);

                entity.Property(e => e.CntContractSi).HasColumnName("CntContract_Si");

                entity.Property(e => e.CntContractContractorDate)
                    .HasColumnName("CntContract_ContractorDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CntContractContractorNo)
                    .HasColumnName("CntContract_ContractorNo")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CntContractContractors)
                    .HasColumnName("CntContract_Contractors")
                    .HasMaxLength(4000);

                entity.Property(e => e.CntContractDate)
                    .HasColumnName("CntContract_Date")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CntContractDayBeforeAlert).HasColumnName("CntContract_DayBeforeAlert");

                entity.Property(e => e.CntContractDescription)
                    .HasColumnName("CntContract_Description")
                    .HasColumnType("text");

                entity.Property(e => e.CntContractEndDate)
                    .HasColumnName("CntContract_EndDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CntContractFile)
                    .HasColumnName("CntContract_File")
                    .HasColumnType("image");

                entity.Property(e => e.CntContractFileName)
                    .HasColumnName("CntContract_FileName")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CntContractNote2)
                    .HasColumnName("CntContract_Note2")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.CntContractNumber)
                    .HasColumnName("CntContract_Number")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CntContractPrice)
                    .HasColumnName("CntContract_Price")
                    .HasColumnType("money");

                entity.Property(e => e.CntContractProphecyDate)
                    .HasColumnName("CntContract_ProphecyDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CntContractProphecyNo)
                    .HasColumnName("CntContract_ProphecyNo")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CntContractReceiptDate)
                    .HasColumnName("CntContract_ReceiptDate")
                    .HasMaxLength(8);

                entity.Property(e => e.CntContractSiOld).HasColumnName("CntContract_SiOld");

                entity.Property(e => e.CntContractSpecialNote)
                    .HasColumnName("CntContract_SpecialNote")
                    .HasColumnType("text");

                entity.Property(e => e.CntContractStartDate)
                    .HasColumnName("CntContract_StartDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CntContractSubject)
                    .HasColumnName("CntContract_Subject")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CntContractText)
                    .HasColumnName("CntContract_Text")
                    .HasColumnType("text");

                entity.Property(e => e.CntCustStatusCu)
                    .HasColumnName("CntCustStatus_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CntGrpSi).HasColumnName("CntGrp_Si");

                entity.Property(e => e.CntSaleAgentSi).HasColumnName("CntSaleAgent_Si");

                entity.Property(e => e.CntStatusSi).HasColumnName("CntStatus_Si");

                entity.Property(e => e.CntTypSi).HasColumnName("CntTyp_Si");

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.PurVendorSi).HasColumnName("PurVendor_Si");

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.HasOne(d => d.CntGrpSiNavigation)
                    .WithMany(p => p.CntContract)
                    .HasForeignKey(d => d.CntGrpSi)
                    .HasConstraintName("FK_CntContract_CntGrp");

                entity.HasOne(d => d.CntTypSiNavigation)
                    .WithMany(p => p.CntContract)
                    .HasForeignKey(d => d.CntTypSi)
                    .HasConstraintName("FK_CntContract_CntTyp");
            });

            modelBuilder.Entity<CntContractPaymentOpr>(entity =>
            {
                entity.HasKey(e => e.CntContractPaymentOprSi)
                    .HasName("PK_CntContractOpr");

                entity.Property(e => e.CntContractPaymentOprSi).HasColumnName("CntContractPaymentOpr_Si");

                entity.Property(e => e.CntContractPaymentOprDecValue)
                    .HasColumnName("CntContractPaymentOpr_DecValue")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CntContractPaymentOprIncValue)
                    .HasColumnName("CntContractPaymentOpr_IncValue")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CntContractPaymentOprValue)
                    .HasColumnName("CntContractPaymentOpr_Value")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CntContractSi).HasColumnName("CntContract_Si");

                entity.Property(e => e.CntPaymentOprSi).HasColumnName("CntPaymentOpr_Si");
            });

            modelBuilder.Entity<CntCustStatus>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.CntCustStatusCu)
                    .IsRequired()
                    .HasColumnName("CntCustStatus_Cu")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CntCustStatusTp)
                    .HasColumnName("CntCustStatus_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CntCustomer>(entity =>
            {
                entity.HasKey(e => e.CntCustomerSi);

                entity.HasIndex(e => e.SalCustSi)
                    .HasName("IX_CntCustomer")
                    .IsUnique();

                entity.Property(e => e.CntCustomerSi).HasColumnName("CntCustomer_Si");

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");
            });

            modelBuilder.Entity<CntGds>(entity =>
            {
                entity.HasKey(e => e.CntGdsSi);

                entity.Property(e => e.CntGdsSi).HasColumnName("CntGds_Si");

                entity.Property(e => e.CntContractSi).HasColumnName("CntContract_Si");

                entity.Property(e => e.CntGdsArbitaryFlag)
                    .HasColumnName("CntGds_ArbitaryFlag")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CntGdsArbitaryTp)
                    .HasColumnName("CntGds_ArbitaryTp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CntGdsComment)
                    .HasColumnName("CntGds_Comment")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CntGdsQuantity).HasColumnName("CntGds_Quantity");

                entity.Property(e => e.CntGdsTx)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CntGdsUnitPrice)
                    .HasColumnName("CntGds_UnitPrice")
                    .HasColumnType("money");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.HasOne(d => d.CntContractSiNavigation)
                    .WithMany(p => p.CntGds)
                    .HasForeignKey(d => d.CntContractSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CntGds_CntContract");
            });

            modelBuilder.Entity<CntGrp>(entity =>
            {
                entity.HasKey(e => e.CntGrpSi);

                entity.Property(e => e.CntGrpSi)
                    .HasColumnName("CntGrp_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.CntGrpSiParent).HasColumnName("CntGrp_SiParent");

                entity.Property(e => e.CntGrpTx)
                    .HasColumnName("CntGrp_Tx")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CntLetter>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.CntContractSi).HasColumnName("CntContract_Si");

                entity.Property(e => e.CntLetterDate)
                    .HasColumnName("CntLetter_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.CntLetterFile)
                    .HasColumnName("CntLetter_File")
                    .HasColumnType("image");

                entity.Property(e => e.CntLetterFileName)
                    .HasColumnName("CntLetter_FileName")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CntLetterFileSize).HasColumnName("CntLetter_FileSize");

                entity.Property(e => e.CntLetterFileType)
                    .HasColumnName("CntLetter_FileType")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CntLetterNo1)
                    .HasColumnName("CntLetter_No1")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CntLetterNo2)
                    .HasColumnName("CntLetter_No2")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CntLetterReciverSi).HasColumnName("CntLetter_Reciver_Si");

                entity.Property(e => e.CntLetterSenderSi).HasColumnName("CntLetter_Sender_Si");

                entity.Property(e => e.CntLetterSi)
                    .HasColumnName("CntLetter_si")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CntLetterSubject)
                    .HasColumnName("CntLetter_Subject")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CntLetterType).HasColumnName("CntLetter_Type");
            });

            modelBuilder.Entity<CntLock>(entity =>
            {
                entity.HasKey(e => e.CntLockSi);

                entity.HasIndex(e => new { e.CntContractSi, e.CntLockUserName })
                    .HasName("IX_CntLock")
                    .IsUnique();

                entity.Property(e => e.CntLockSi).HasColumnName("CntLock_Si");

                entity.Property(e => e.CntContractSi).HasColumnName("CntContract_Si");

                entity.Property(e => e.CntLockComment)
                    .HasColumnName("CntLock_Comment")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CntLockDate)
                    .HasColumnName("CntLock_Date")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CntLockProcessSi).HasColumnName("CntLockProcess_Si");

                entity.Property(e => e.CntLockUserName)
                    .HasColumnName("CntLock_UserName")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CntLockProcess>(entity =>
            {
                entity.HasKey(e => e.CntLockProcessSi);

                entity.Property(e => e.CntLockProcessSi).HasColumnName("CntLockProcess_Si");

                entity.Property(e => e.CntLockProcessEndLevel)
                    .HasColumnName("CntLockProcess_EndLevel")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CntLockProcessLevelNo).HasColumnName("CntLockProcess_LevelNo");

                entity.Property(e => e.CntLockProcessLevelTx)
                    .HasColumnName("CntLockProcess_LevelTx")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CntLockProcessUserName)
                    .HasColumnName("CntLockProcess_UserName")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CntPayment>(entity =>
            {
                entity.HasKey(e => e.CntPaymentSi);

                entity.Property(e => e.CntPaymentSi).HasColumnName("CntPayment_Si");

                entity.Property(e => e.CntContractSi).HasColumnName("CntContract_Si");

                entity.Property(e => e.CntPaymentDate)
                    .HasColumnName("CntPayment_Date")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CntPaymentMethod).HasColumnName("CntPayment_Method");

                entity.Property(e => e.CntPaymentOk)
                    .HasColumnName("CntPayment_Ok")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CntPaymentPrice)
                    .HasColumnName("CntPayment_Price")
                    .HasColumnType("money");

                entity.Property(e => e.CntPaymentTx)
                    .HasColumnName("CntPayment_Tx")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CntPaymentTyp).HasColumnName("CntPayment_Typ");

                entity.HasOne(d => d.CntContractSiNavigation)
                    .WithMany(p => p.CntPayment)
                    .HasForeignKey(d => d.CntContractSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CntPayment_CntContract");
            });

            modelBuilder.Entity<CntPaymentOpr>(entity =>
            {
                entity.HasKey(e => e.CntPaymentOprSi);

                entity.Property(e => e.CntPaymentOprSi)
                    .HasColumnName("CntPaymentOpr_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.CntPaymentOprDefaultValue)
                    .HasColumnName("CntPaymentOpr_DefaultValue")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CntPaymentOprTx)
                    .HasColumnName("CntPaymentOpr_Tx")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CntPaymentOprTyp)
                    .HasColumnName("CntPaymentOpr_Typ")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CntPaymentOprValueTyp)
                    .HasColumnName("CntPaymentOpr_ValueTyp")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<CntReference>(entity =>
            {
                entity.HasKey(e => e.CntReferenceSi);

                entity.Property(e => e.CntReferenceSi).HasColumnName("CntReference_Si");

                entity.Property(e => e.CntContractSi).HasColumnName("CntContract_Si");

                entity.Property(e => e.CntContractSi2).HasColumnName("CntContract_Si_2");

                entity.Property(e => e.CntReferenceTx)
                    .HasColumnName("CntReference_Tx")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CntReferenceTypSi).HasColumnName("CntReferenceTyp_Si");

                entity.HasOne(d => d.CntContractSiNavigation)
                    .WithMany(p => p.CntReference)
                    .HasForeignKey(d => d.CntContractSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CntReference_CntContract");

                entity.HasOne(d => d.CntReferenceTypSiNavigation)
                    .WithMany(p => p.CntReference)
                    .HasForeignKey(d => d.CntReferenceTypSi)
                    .HasConstraintName("FK_CntReference_CntReferenceTyp");
            });

            modelBuilder.Entity<CntReferenceTyp>(entity =>
            {
                entity.HasKey(e => e.CntReferenceTypSi);

                entity.Property(e => e.CntReferenceTypSi)
                    .HasColumnName("CntReferenceTyp_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.CntReferenceTypTx)
                    .HasColumnName("CntReferenceTyp_Tx")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CntSaleAgent>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.CntSaleAgentCu)
                    .HasColumnName("CntSaleAgent_Cu")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.CntSaleAgentSi)
                    .HasColumnName("CntSaleAgent_Si")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CntSaleAgentTp)
                    .HasColumnName("CntSaleAgent_Tp")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<CntSrv>(entity =>
            {
                entity.HasKey(e => e.CntSrvSi);

                entity.Property(e => e.CntSrvSi).HasColumnName("CntSrv_Si");

                entity.Property(e => e.CntContractSi).HasColumnName("CntContract_Si");

                entity.Property(e => e.CntSrvComment)
                    .HasColumnName("CntSrv_Comment")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CntSrvMeasureUnit)
                    .HasColumnName("CntSrv_MeasureUnit")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CntSrvQuantity).HasColumnName("CntSrv_Quantity");

                entity.Property(e => e.CntSrvTx)
                    .HasColumnName("CntSrv_Tx")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CntSrvUnitPrice)
                    .HasColumnName("CntSrv_UnitPrice")
                    .HasColumnType("money");

                entity.HasOne(d => d.CntContractSiNavigation)
                    .WithMany(p => p.CntSrv)
                    .HasForeignKey(d => d.CntContractSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CntSrv_CntContract");
            });

            modelBuilder.Entity<CntStatus>(entity =>
            {
                entity.HasKey(e => e.CntStatusSi);

                entity.Property(e => e.CntStatusSi)
                    .HasColumnName("CntStatus_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.CntStatusTx)
                    .HasColumnName("CntStatus_Tx")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CntTask>(entity =>
            {
                entity.HasKey(e => e.CntTaskSi);

                entity.Property(e => e.CntTaskSi).HasColumnName("CntTask_Si");

                entity.Property(e => e.CntContractSi).HasColumnName("CntContract_Si");

                entity.Property(e => e.CntTaskActive).HasColumnName("CntTask_Active");

                entity.Property(e => e.CntTaskEndDate)
                    .HasColumnName("CntTask_EndDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CntTaskProgress).HasColumnName("CntTask_Progress");

                entity.Property(e => e.CntTaskSiParent).HasColumnName("CntTask_SiParent");

                entity.Property(e => e.CntTaskStartDate)
                    .HasColumnName("CntTask_StartDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CntTaskTx)
                    .HasColumnName("CntTask_Tx")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.HasOne(d => d.CntContractSiNavigation)
                    .WithMany(p => p.CntTask)
                    .HasForeignKey(d => d.CntContractSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CntTask_CntContract");
            });

            modelBuilder.Entity<CntTrack>(entity =>
            {
                entity.HasKey(e => e.CntTrackSi);

                entity.Property(e => e.CntTrackSi).HasColumnName("CntTrack_Si");

                entity.Property(e => e.CntContractSi).HasColumnName("CntContract_Si");

                entity.Property(e => e.CntTrackComment)
                    .HasColumnName("CntTrack_Comment")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CntTrackDate)
                    .HasColumnName("CntTrack_Date")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CntTrackTx)
                    .HasColumnName("CntTrack_Tx")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.HasOne(d => d.CntContractSiNavigation)
                    .WithMany(p => p.CntTrack)
                    .HasForeignKey(d => d.CntContractSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CntTrack_CntContract");
            });

            modelBuilder.Entity<CntTyp>(entity =>
            {
                entity.HasKey(e => e.CntTypSi);

                entity.Property(e => e.CntTypSi)
                    .HasColumnName("CntTyp_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.CntTypTx)
                    .HasColumnName("CntTyp_Tx")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CntVendor>(entity =>
            {
                entity.HasKey(e => e.CntVendorSi);

                entity.HasIndex(e => e.PurVndrSi)
                    .HasName("IX_CntVendor")
                    .IsUnique();

                entity.Property(e => e.CntVendorSi).HasColumnName("CntVendor_Si");

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");
            });

            modelBuilder.Entity<CtbAccCostGrp>(entity =>
            {
                entity.HasKey(e => e.SiCostGrp);

                entity.Property(e => e.Cuacc)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Tpacc)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CtbAccDocDescFmt>(entity =>
            {
                entity.HasKey(e => e.SiAccDocDescFmt);

                entity.Property(e => e.CuAccDocDescFmt)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescFmtFarCredit)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.DescFmtFarDebit)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.DescFmtLatCredit)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.DescFmtLatDebit)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Grp)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccDocDescFmt)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CtbAccGrp>(entity =>
            {
                entity.HasKey(e => e.SiAccGrp)
                    .IsClustered(false);

                entity.Property(e => e.CreateRec).HasColumnType("datetime");

                entity.Property(e => e.CuAcc)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.LoginName)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TpAcc)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpAcc2)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CtbAccK>(entity =>
            {
                entity.HasKey(e => e.SiAccK)
                    .HasName("PK_Acc2")
                    .IsClustered(false);

                entity.HasIndex(e => e.CuAcc)
                    .HasName("IX_CuAcc");

                entity.Property(e => e.CreateRec).HasColumnType("datetime");

                entity.Property(e => e.CuAcc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.LoginName)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TpAcc)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpAcc2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.HasOne(d => d.SiAccGrpNavigation)
                    .WithMany(p => p.CtbAccK)
                    .HasForeignKey(d => d.SiAccGrp)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CtbAccK_CtbAccGrp");
            });

            modelBuilder.Entity<CtbAccM>(entity =>
            {
                entity.HasKey(e => e.SiAccM)
                    .HasName("PK_Acc3")
                    .IsClustered(false);

                entity.HasIndex(e => e.CuAcc)
                    .HasName("IX_CuAcc");

                entity.Property(e => e.CmAcc).HasColumnType("text");

                entity.Property(e => e.ConWithAccT)
                    .IsRequired()
                    .HasColumnName("Con_With_AccT")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ConWithCost)
                    .IsRequired()
                    .HasColumnName("Con_With_Cost")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ConWithProject)
                    .IsRequired()
                    .HasColumnName("Con_With_Project")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CreateRec).HasColumnType("datetime");

                entity.Property(e => e.CuAcc)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.ExchangeFlag).HasDefaultValueSql("(0)");

                entity.Property(e => e.LoginName)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Nature).HasDefaultValueSql("(1)");

                entity.Property(e => e.NatureCtrl).HasDefaultValueSql("(0)");

                entity.Property(e => e.RqstAccT)
                    .IsRequired()
                    .HasColumnName("Rqst_AccT")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RqstCost)
                    .IsRequired()
                    .HasColumnName("Rqst_Cost")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RqstCurrncy)
                    .HasColumnName("Rqst_Currncy")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RqstHasInfo).HasColumnName("Rqst_HasInfo");

                entity.Property(e => e.RqstInfo).HasColumnName("Rqst_Info");

                entity.Property(e => e.RqstProject)
                    .IsRequired()
                    .HasColumnName("Rqst_Project")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RqstRfrnc).HasColumnName("Rqst_Rfrnc");

                entity.Property(e => e.RqstShowInSale).HasColumnName("Rqst_ShowInSale");

                entity.Property(e => e.RqstShowInSaleCredit).HasColumnName("Rqst_ShowInSaleCredit");

                entity.Property(e => e.Status).HasDefaultValueSql("(1)");

                entity.Property(e => e.SysTrs)
                    .IsRequired()
                    .HasColumnName("sysTrs")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TpAcc)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpAcc2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Type).HasDefaultValueSql("(0)");

                entity.HasOne(d => d.SiAccKNavigation)
                    .WithMany(p => p.CtbAccM)
                    .HasForeignKey(d => d.SiAccK)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CtbAccM_CtbAccK");
            });

            modelBuilder.Entity<CtbAccMuser>(entity =>
            {
                entity.HasKey(e => e.SiAccMuser);

                entity.Property(e => e.SiAccMuser).HasColumnName("SiAccMUser");

                entity.Property(e => e.UserRec)
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CtbAccT>(entity =>
            {
                entity.HasKey(e => e.SiAccT)
                    .HasName("PK_CtbAcc4")
                    .IsClustered(false);

                entity.HasIndex(e => e.CuAcc)
                    .HasName("IX_CuAcc");

                entity.Property(e => e.CmAcc).HasColumnType("text");

                entity.Property(e => e.CreateRec).HasColumnType("datetime");

                entity.Property(e => e.CuAcc)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.LoginName)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TpAcc)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpAcc2)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CtbAccT2ctbAccM>(entity =>
            {
                entity.HasKey(e => e.SiAccT2accM)
                    .IsClustered(false);

                entity.ToTable("CtbAccT2CtbAccM");

                entity.HasIndex(e => new { e.SiAccT, e.SiAccM })
                    .HasName("IX_CtbAccT2CtbAccM")
                    .IsUnique();

                entity.Property(e => e.SiAccT2accM).HasColumnName("SiAccT2AccM");

                entity.HasOne(d => d.SiAccMNavigation)
                    .WithMany(p => p.CtbAccT2ctbAccM)
                    .HasForeignKey(d => d.SiAccM)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CtbAccT2CtbAccM_CtbAccM");

                entity.HasOne(d => d.SiAccTNavigation)
                    .WithMany(p => p.CtbAccT2ctbAccM)
                    .HasForeignKey(d => d.SiAccT)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CtbAccT2CtbAccM_CtbAccT");
            });

            modelBuilder.Entity<CtbAccTgrp>(entity =>
            {
                entity.HasKey(e => e.SiaccTgrp);

                entity.ToTable("CtbAccTGrp");

                entity.Property(e => e.SiaccTgrp).HasColumnName("SiaccTGrp");

                entity.Property(e => e.Cuacc)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Tpacc)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CtbAccTuser>(entity =>
            {
                entity.HasKey(e => e.SiAccTuser);

                entity.Property(e => e.SiAccTuser).HasColumnName("SiAccTUser");

                entity.Property(e => e.UserRec)
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CtbAcs>(entity =>
            {
                entity.HasKey(e => e.CtbAcsSi);

                entity.HasIndex(e => e.CtbAcsSiParent)
                    .HasName("IX_CtbAcs_SiParent");

                entity.Property(e => e.CtbAcsSi).HasColumnName("CtbAcs_Si");

                entity.Property(e => e.CtbAcsAction)
                    .HasColumnName("CtbAcs_Action")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAcsCu)
                    .HasColumnName("CtbAcs_Cu")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAcsDenyScr)
                    .HasColumnName("CtbAcs_DenyScr")
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAcsGrantScr)
                    .HasColumnName("CtbAcs_GrantScr")
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAcsObject)
                    .HasColumnName("CtbAcs_Object")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAcsRevokeScr)
                    .HasColumnName("CtbAcs_RevokeScr")
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAcsSiParent).HasColumnName("CtbAcs_SiParent");

                entity.Property(e => e.CtbAcsTp)
                    .HasColumnName("CtbAcs_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CtbAddrs>(entity =>
            {
                entity.HasKey(e => e.CtbAddrsSi)
                    .HasName("PK_GNR.CtbAddrs")
                    .IsClustered(false);

                entity.Property(e => e.CtbAddrsSi).HasColumnName("CtbAddrs_Si");

                entity.Property(e => e.CtbAddrsAccountName)
                    .HasColumnName("CtbAddrs_AccountName")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsAccountNo)
                    .HasColumnName("CtbAddrs_AccountNo")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CtbAddrsActiveType)
                    .HasColumnName("CtbAddrs_ActiveType")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsAddrs)
                    .HasColumnName("CtbAddrs_Addrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsAdvetise).HasColumnName("CtbAddrs_advetise");

                entity.Property(e => e.CtbAddrsAdvetiseDesc)
                    .HasColumnName("CtbAddrs_advetiseDesc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsBankName)
                    .HasColumnName("CtbAddrs_BankName")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsBranch)
                    .HasColumnName("CtbAddrs_Branch")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsCity)
                    .HasColumnName("CtbAddrs_City")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsCode)
                    .HasColumnName("CtbAddrs_Code")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CtbAddrsContact)
                    .HasColumnName("CtbAddrs_Contact")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsDefault).HasColumnName("CtbAddrs_Default");

                entity.Property(e => e.CtbAddrsDefault2).HasColumnName("CtbAddrs_Default_2");

                entity.Property(e => e.CtbAddrsDesc)
                    .HasColumnName("CtbAddrs_Desc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsDsFirst)
                    .HasColumnName("CtbAddrs_DsFirst")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsEconamical)
                    .HasColumnName("CtbAddrs_Econamical")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsEmail)
                    .HasColumnName("CtbAddrs_Email")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsEmail2)
                    .HasColumnName("CtbAddrs_Email2")
                    .HasMaxLength(2048)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsEnterduced)
                    .HasColumnName("CtbAddrs_Enterduced")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsFax)
                    .HasColumnName("CtbAddrs_Fax")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsInterduced)
                    .HasColumnName("CtbAddrs_interduced")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsLicenseCode)
                    .HasColumnName("CtbAddrs_LicenseCode")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CtbAddrsMajor).HasColumnName("CtbAddrs_major");

                entity.Property(e => e.CtbAddrsMobile)
                    .HasColumnName("CtbAddrs_Mobile")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsModem)
                    .HasColumnName("CtbAddrs_Modem")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsMtr).HasColumnName("CtbAddrs_Mtr");

                entity.Property(e => e.CtbAddrsNatCode)
                    .HasColumnName("CtbAddrs_NatCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsNumber).HasColumnName("CtbAddrs_Number");

                entity.Property(e => e.CtbAddrsOstan)
                    .HasColumnName("CtbAddrs_Ostan")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsOwn)
                    .HasColumnName("CtbAddrs_Own")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPersonSkill)
                    .HasColumnName("CtbAddrs_PersonSkill")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPersonality)
                    .HasColumnName("CtbAddrs_Personality")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPobox)
                    .HasColumnName("CtbAddrs_POBox")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsProduceNow)
                    .HasColumnName("CtbAddrs_ProduceNow")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsReasongust)
                    .HasColumnName("CtbAddrs_Reasongust")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsRelated)
                    .HasColumnName("CtbAddrs_related")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsShahrestan)
                    .HasColumnName("CtbAddrs_Shahrestan")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsShowPrint).HasColumnName("CtbAddrs_ShowPrint");

                entity.Property(e => e.CtbAddrsTel)
                    .HasColumnName("CtbAddrs_Tel")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsZipcode)
                    .HasColumnName("CtbAddrs_ZIPCode")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.SalCitySi).HasColumnName("SalCity_Si");

                entity.Property(e => e.SalCountrySi).HasColumnName("SalCountry_Si");

                entity.Property(e => e.SalCustStLook).HasColumnName("SalCustSt_Look");

                entity.Property(e => e.SalProvinceSi).HasColumnName("SalProvince_Si");

                entity.Property(e => e.Tafzili).HasColumnName("tafzili");
            });

            modelBuilder.Entity<CtbAddrsSwch>(entity =>
            {
                entity.HasKey(e => e.CtbAddrsSwchSi)
                    .IsClustered(false);

                entity.Property(e => e.CtbAddrsSwchSi).HasColumnName("CtbAddrsSwch_Si");

                entity.Property(e => e.CtbAddrsSi).HasColumnName("CtbAddrs_Si");

                entity.Property(e => e.CtbAddrsSwchActive).HasColumnName("CtbAddrsSwch_Active");

                entity.Property(e => e.CtbAddrsSwchTbl)
                    .IsRequired()
                    .HasColumnName("CtbAddrsSwch_Tbl")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsSwchTblSi).HasColumnName("CtbAddrsSwch_Tbl_Si");

                entity.HasOne(d => d.CtbAddrsSiNavigation)
                    .WithMany(p => p.CtbAddrsSwch)
                    .HasForeignKey(d => d.CtbAddrsSi)
                    .HasConstraintName("FK_CtbAddrsSwch_CtbAddrs");
            });

            modelBuilder.Entity<CtbArshv>(entity =>
            {
                entity.HasKey(e => e.CtbArshvSi);

                entity.Property(e => e.CtbArshvSi).HasColumnName("CtbArshv_Si");

                entity.Property(e => e.CtbArshvData)
                    .HasColumnName("CtbArshv_Data")
                    .HasColumnType("image");

                entity.Property(e => e.CtbArshvFileName)
                    .HasColumnName("CtbArshv_FileName")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbArshvTbl)
                    .IsRequired()
                    .HasColumnName("CtbArshv_Tbl")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CtbArshvTblSi).HasColumnName("CtbArshv_Tbl_Si");

                entity.Property(e => e.CtbArshvTp)
                    .HasColumnName("CtbArshv_Tp")
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CtbBank>(entity =>
            {
                entity.HasKey(e => e.CtbBankSi);

                entity.Property(e => e.CtbBankSi)
                    .HasColumnName("CtbBank_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.CtbBankTp)
                    .HasColumnName("CtbBank_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CtbCost>(entity =>
            {
                entity.HasKey(e => e.SiCost)
                    .HasName("PK_CtbCust")
                    .IsClustered(false);

                entity.HasIndex(e => e.CuCost)
                    .HasName("IX_CuCost");

                entity.Property(e => e.CreateRec).HasColumnType("datetime");

                entity.Property(e => e.CtbCostTypeSi).HasColumnName("CtbCostType_Si");

                entity.Property(e => e.CuCost)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuCost2)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.LoginName)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TpCost)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpCost2)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CtbCost2CtbAccM>(entity =>
            {
                entity.HasKey(e => e.SiCost2AccM)
                    .IsClustered(false);

                entity.HasOne(d => d.SiAccMNavigation)
                    .WithMany(p => p.CtbCost2CtbAccM)
                    .HasForeignKey(d => d.SiAccM)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CtbCost2CtbAccM_CtbAccM");

                entity.HasOne(d => d.SiCostNavigation)
                    .WithMany(p => p.CtbCost2CtbAccM)
                    .HasForeignKey(d => d.SiCost)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CtbCost2CtbAccM_CtbCost");
            });

            modelBuilder.Entity<CtbCostUser>(entity =>
            {
                entity.HasKey(e => e.SiCostUser)
                    .HasName("PK_CtbCostuser");

                entity.Property(e => e.UserRec)
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CtbCurncy>(entity =>
            {
                entity.HasKey(e => e.CtbCurncySi);

                entity.Property(e => e.CtbCurncySi)
                    .HasColumnName("CtbCurncy_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.CtbCurncyDefault).HasColumnName("CtbCurncy_Default");

                entity.Property(e => e.CtbCurncyFmt)
                    .HasColumnName("CtbCurncy_Fmt")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCurncyTp)
                    .HasColumnName("CtbCurncy_Tp")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CtbCustVndrTyp>(entity =>
            {
                entity.HasKey(e => e.CtbCustVndrTypSi);

                entity.Property(e => e.CtbCustVndrTypSi)
                    .HasColumnName("CtbCustVndrTyp_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.CtbCustVndrTypTp)
                    .HasColumnName("CtbCustVndrTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CtbDblinker>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CtbDBLinker");

                entity.Property(e => e.CtbDblinkerBack)
                    .HasColumnName("CtbDBLinker_Back")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbDblinkerNext)
                    .HasColumnName("CtbDBLinker_Next")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CtbMnth>(entity =>
            {
                entity.HasKey(e => e.CtbMnthSi);

                entity.Property(e => e.CtbMnthSi).HasColumnName("CtbMnth_Si");

                entity.Property(e => e.CtbMnthTp)
                    .HasColumnName("CtbMnth_Tp")
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CtbOptions>(entity =>
            {
                entity.HasKey(e => e.SiOpt);

                entity.HasIndex(e => e.CuOpt)
                    .HasName("IX_CtbOptions")
                    .IsUnique();

                entity.Property(e => e.CuOpt)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Description).HasMaxLength(4000);

                entity.Property(e => e.GrpOpt)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Items)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.OptValue)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.TpForm)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpOpt)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Type).HasComment("0: boolean 1: integer 2: string 3: float");

                entity.Property(e => e.UserGuide).HasColumnType("text");
            });

            modelBuilder.Entity<CtbOrgDep>(entity =>
            {
                entity.HasKey(e => e.CtbOrgDepSi);

                entity.Property(e => e.CtbOrgDepSi).HasColumnName("CtbOrgDep_Si");

                entity.Property(e => e.CtbOrgDepCu)
                    .IsRequired()
                    .HasColumnName("CtbOrgDep_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CtbOrgDepLvl).HasColumnName("CtbOrgDep_Lvl");

                entity.Property(e => e.CtbOrgDepSiParent).HasColumnName("CtbOrgDep_SiParent");

                entity.Property(e => e.CtbOrgDepTp)
                    .IsRequired()
                    .HasColumnName("CtbOrgDep_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CtbOrgJob>(entity =>
            {
                entity.HasKey(e => e.CtbOrgJobSi);

                entity.Property(e => e.CtbOrgJobSi).HasColumnName("CtbOrgJob_Si");

                entity.Property(e => e.CtbOrgJobAsgn).HasColumnName("CtbOrgJob_Asgn");

                entity.Property(e => e.CtbOrgJobCu)
                    .IsRequired()
                    .HasColumnName("CtbOrgJob_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CtbOrgJobPrmt).HasColumnName("CtbOrgJob_Prmt");

                entity.Property(e => e.CtbOrgJobTp)
                    .IsRequired()
                    .HasColumnName("CtbOrgJob_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CtbOrgPst>(entity =>
            {
                entity.HasKey(e => e.CtbOrgPstSi);

                entity.Property(e => e.CtbOrgPstSi).HasColumnName("CtbOrgPst_Si");

                entity.Property(e => e.CtbOrgDepSi).HasColumnName("CtbOrgDep_Si");

                entity.Property(e => e.CtbOrgJobSi).HasColumnName("CtbOrgJob_Si");

                entity.Property(e => e.CtbOrgPstAsgn).HasColumnName("CtbOrgPst_Asgn");

                entity.Property(e => e.CtbOrgPstCu)
                    .IsRequired()
                    .HasColumnName("CtbOrgPst_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CtbOrgPstPrmt).HasColumnName("CtbOrgPst_Prmt");

                entity.Property(e => e.CtbOrgPstSiParent).HasColumnName("CtbOrgPst_SiParent");

                entity.Property(e => e.CtbOrgPstTp)
                    .IsRequired()
                    .HasColumnName("CtbOrgPst_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.CtbOrgDepSiNavigation)
                    .WithMany(p => p.CtbOrgPst)
                    .HasForeignKey(d => d.CtbOrgDepSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CtbOrgPst_CtbOrgDep");

                entity.HasOne(d => d.CtbOrgJobSiNavigation)
                    .WithMany(p => p.CtbOrgPst)
                    .HasForeignKey(d => d.CtbOrgJobSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CtbOrgPst_CtbOrgJob");
            });

            modelBuilder.Entity<CtbPrj2CtbAccM>(entity =>
            {
                entity.HasKey(e => e.SiPrj2AccM);

                entity.HasOne(d => d.SiAccMNavigation)
                    .WithMany(p => p.CtbPrj2CtbAccM)
                    .HasForeignKey(d => d.SiAccM)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CtbPrj2CtbAccM_CtbAccM");

                entity.HasOne(d => d.SiProjectNavigation)
                    .WithMany(p => p.CtbPrj2CtbAccM)
                    .HasForeignKey(d => d.SiProject)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CtbPrj2CtbAccM_CtbProject");
            });

            modelBuilder.Entity<CtbProject>(entity =>
            {
                entity.HasKey(e => e.SiProject)
                    .IsClustered(false);

                entity.HasIndex(e => e.CuProject)
                    .HasName("IX_CtbProject")
                    .IsUnique();

                entity.Property(e => e.CreateRec).HasColumnType("datetime");

                entity.Property(e => e.CuProject)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuProject2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DsBondPrsnl)
                    .HasColumnName("Ds_bondPrsnl")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DsBondPrsnlTo)
                    .HasColumnName("Ds_bondPrsnlTo")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.LoginName)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.SiHsrlDoc).HasColumnName("SiHSrlDoc");

                entity.Property(e => e.TpProject)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.TpProject2)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CtbProjectPrsnl>(entity =>
            {
                entity.HasKey(e => e.SiProjectPrsnl);

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");
            });

            modelBuilder.Entity<CtbProjectUser>(entity =>
            {
                entity.HasKey(e => e.SiProjectUser)
                    .HasName("PK_CtbProjectuser");

                entity.Property(e => e.UserRec)
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CtbPrpFld>(entity =>
            {
                entity.HasKey(e => e.CtbPrpFldSi);

                entity.HasIndex(e => e.CtbPrpGrpSi)
                    .HasName("IX_CtbPrpFld");

                entity.Property(e => e.CtbPrpFldSi).HasColumnName("CtbPrpFld_Si");

                entity.Property(e => e.CtbPrpFldClr).HasColumnName("CtbPrpFld_Clr");

                entity.Property(e => e.CtbPrpFldCu)
                    .IsRequired()
                    .HasColumnName("CtbPrpFld_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CtbPrpFldSqnc).HasColumnName("CtbPrpFld_Sqnc");

                entity.Property(e => e.CtbPrpFldTp)
                    .HasColumnName("CtbPrpFld_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbPrpGrpSi).HasColumnName("CtbPrpGrp_Si");
            });

            modelBuilder.Entity<CtbPrpGrp>(entity =>
            {
                entity.HasKey(e => e.CtbPrpGrpSi);

                entity.Property(e => e.CtbPrpGrpSi)
                    .HasColumnName("CtbPrpGrp_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.CtbPrpGrpTp)
                    .HasColumnName("CtbPrpGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CtbPrpVlu>(entity =>
            {
                entity.HasKey(e => e.CtbPrpVluSi)
                    .IsClustered(false);

                entity.HasIndex(e => e.CtbPrpFldSi);

                entity.HasIndex(e => e.CtbPrpGrpSi);

                entity.HasIndex(e => e.CtbPrpVluRfrncSi);

                entity.Property(e => e.CtbPrpVluSi).HasColumnName("CtbPrpVlu_Si");

                entity.Property(e => e.CtbPrpFldSi).HasColumnName("CtbPrpFld_Si");

                entity.Property(e => e.CtbPrpGrpSi).HasColumnName("CtbPrpGrp_Si");

                entity.Property(e => e.CtbPrpVluRfrncSi).HasColumnName("CtbPrpVlu_Rfrnc_Si");

                entity.Property(e => e.CtbPrpVluValue)
                    .HasColumnName("CtbPrpVlu_Value")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.HasOne(d => d.CtbPrpFldSiNavigation)
                    .WithMany(p => p.CtbPrpVlu)
                    .HasForeignKey(d => d.CtbPrpFldSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CtbPrpVlu_CtbPrpFld");

                entity.HasOne(d => d.CtbPrpGrpSiNavigation)
                    .WithMany(p => p.CtbPrpVlu)
                    .HasForeignKey(d => d.CtbPrpGrpSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CtbPrpVlu_CtbPrpGrp");
            });

            modelBuilder.Entity<CtbUsrAcs>(entity =>
            {
                entity.HasKey(e => e.CtbUsrAcsSi);

                entity.HasIndex(e => e.CtbAcsCu)
                    .HasName("IX_CtbAcs_Cu");

                entity.HasIndex(e => e.LoginName)
                    .HasName("IX_LoginName");

                entity.HasIndex(e => new { e.LoginName, e.CtbAcsCu })
                    .HasName("IX_CtbUsrAcs_1")
                    .IsUnique();

                entity.Property(e => e.CtbUsrAcsSi).HasColumnName("CtbUsrAcs_Si");

                entity.Property(e => e.CtbAcsCu)
                    .IsRequired()
                    .HasColumnName("CtbAcs_Cu")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.LoginName)
                    .IsRequired()
                    .HasMaxLength(128)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CtbaccCost2accGrpC>(entity =>
            {
                entity.HasKey(e => e.SiAccCost2AccGrpC);

                entity.Property(e => e.SiCost)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SiCostGrp)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<CtbaccT2accGrpT>(entity =>
            {
                entity.HasKey(e => e.SiAccT2accGrpT);

                entity.Property(e => e.SiAccT2accGrpT).HasColumnName("SiAccT2AccGrpT");

                entity.Property(e => e.SiAccT)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SiaccTgrp)
                    .HasColumnName("SiaccTGrp")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Customer>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Addres).HasMaxLength(255);

                entity.Property(e => e.CityCu).HasMaxLength(255);

                entity.Property(e => e.CountryCu).HasMaxLength(255);

                entity.Property(e => e.CustTp).HasMaxLength(255);

                entity.Property(e => e.MasirCu)
                    .HasColumnName("masirCu")
                    .HasMaxLength(255);

                entity.Property(e => e.Ostancu)
                    .HasColumnName("ostancu")
                    .HasMaxLength(255);

                entity.Property(e => e.RegionCu).HasMaxLength(255);

                entity.Property(e => e.استانقدیم)
                    .HasColumnName("استان قدیم")
                    .HasMaxLength(255);

                entity.Property(e => e.شهرستانقدیم)
                    .HasColumnName("شهرستان قدیم")
                    .HasMaxLength(255);

                entity.Property(e => e.شهرقدیم)
                    .HasColumnName("شهر قدیم")
                    .HasMaxLength(255);

                entity.Property(e => e.کدجدیدمشتری)
                    .HasColumnName("کد جدید مشتری")
                    .HasMaxLength(255);

                entity.Property(e => e.گروهاصلیمشتری)
                    .HasColumnName("گروه اصلی مشتری")
                    .HasMaxLength(255);

                entity.Property(e => e.گروهفرعیمشتری)
                    .HasColumnName("گروه فرعی مشتری")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<CustomerInputDinaVision>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("customerInputDinaVision");

                entity.Property(e => e.SalCustCu)
                    .HasColumnName("SalCust_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustSi)
                    .HasColumnName("SalCust_Si")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CxReport>(entity =>
            {
                entity.HasKey(e => e.CxReportSi)
                    .HasName("PK_AssReport");

                entity.Property(e => e.CxReportSi).HasColumnName("CxReport_Si");

                entity.Property(e => e.CxReportCu)
                    .IsRequired()
                    .HasColumnName("CxReport_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CxReportDate)
                    .HasColumnName("CxReport_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.CxReportGrp)
                    .IsRequired()
                    .HasColumnName("CxReport_Grp")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.CxReportIniFile)
                    .IsRequired()
                    .HasColumnName("CxReport_IniFile")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.CxReportTp)
                    .IsRequired()
                    .HasColumnName("CxReport_Tp")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.CxReportUser)
                    .IsRequired()
                    .HasColumnName("CxReport_User")
                    .HasMaxLength(200)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<D>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("D$");

                entity.Property(e => e.CtbCurncyTp)
                    .HasColumnName("CtbCurncy_Tp")
                    .HasMaxLength(255);

                entity.Property(e => e.F10).HasMaxLength(255);

                entity.Property(e => e.InvGdsCu).HasColumnName("InvGds_Cu");

                entity.Property(e => e.InvUntCu).HasColumnName("InvUnt_Cu");

                entity.Property(e => e.SalCustGrpSi).HasColumnName("SalCustGrp_Si");

                entity.Property(e => e.SalDclrPrcDUntPrc)
                    .HasColumnName("SalDclrPrcD_UntPrc")
                    .HasMaxLength(255);

                entity.Property(e => e.SalDclrPrcDUntPrcC).HasColumnName("SalDclrPrcD_UntPrcC");

                entity.Property(e => e.SalDclrPrcDUntPrcMax).HasColumnName("SalDclrPrcD_UntPrc_Max");

                entity.Property(e => e.SalDclrPrcDUntPrcMin).HasColumnName("SalDclrPrcD_UntPrc_Min");

                entity.Property(e => e.SalTypSi)
                    .HasColumnName("SalTyp_Si")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<Debits>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Credit).HasColumnType("money");

                entity.Property(e => e.Debit).HasColumnType("money");

                entity.Property(e => e.Description).HasMaxLength(4000);

                entity.Property(e => e.SalcustCu)
                    .HasColumnName("salcust_Cu")
                    .HasMaxLength(100);

                entity.Property(e => e.SalcustSi)
                    .HasColumnName("salcust_Si")
                    .HasMaxLength(100);

                entity.Property(e => e.SalcustTp)
                    .HasColumnName("salcust_Tp")
                    .HasMaxLength(100);

                entity.Property(e => e.ShDate)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SystemName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Typ)
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<DimDate>(entity =>
            {
                entity.HasKey(e => e.DateId);

                entity.Property(e => e.DateId)
                    .HasColumnName("DateID")
                    .ValueGeneratedNever();

                entity.Property(e => e.Gdate)
                    .HasColumnName("GDate")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Pdate)
                    .IsRequired()
                    .HasColumnName("PDate")
                    .HasMaxLength(10);

                entity.Property(e => e.Pday).HasColumnName("PDay");

                entity.Property(e => e.PdayName)
                    .IsRequired()
                    .HasColumnName("PDayName")
                    .HasMaxLength(10);

                entity.Property(e => e.Pmonth).HasColumnName("PMonth");

                entity.Property(e => e.PmonthName)
                    .IsRequired()
                    .HasColumnName("PMonthName")
                    .HasMaxLength(10);

                entity.Property(e => e.Pseason)
                    .IsRequired()
                    .HasColumnName("PSeason")
                    .HasMaxLength(10);

                entity.Property(e => e.PweekOfYear).HasColumnName("PWeekOfYear");

                entity.Property(e => e.Pyear).HasColumnName("PYear");
            });

            modelBuilder.Entity<Dtproperties>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Property })
                    .HasName("pk_dtproperties");

                entity.ToTable("dtproperties");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Property)
                    .HasColumnName("property")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Lvalue)
                    .HasColumnName("lvalue")
                    .HasColumnType("image");

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.Property(e => e.Uvalue)
                    .HasColumnName("uvalue")
                    .HasMaxLength(255);

                entity.Property(e => e.Value)
                    .HasColumnName("value")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Version)
                    .HasColumnName("version")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<FaraBarcode>(entity =>
            {
                entity.HasKey(e => e.FaraBarcodeSi);

                entity.Property(e => e.FaraBarcodeSi).HasColumnName("FaraBarcode_Si");
            });

            modelBuilder.Entity<FaraCfg>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.DbdateFrom)
                    .HasColumnName("DBDateFrom")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DbdateTo)
                    .HasColumnName("DBDateTo")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DbtimeOut).HasColumnName("DBTimeOut");

                entity.Property(e => e.FaraPas)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FileBkGrndBnry).HasColumnType("image");

                entity.Property(e => e.FileBkGrndPath)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FileThemeBnry).HasColumnType("image");

                entity.Property(e => e.FileThemePath)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FolderHlp)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FolderRptCstm)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FolderRptStd)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FolderSys)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.LicenceTo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PathBackUp).HasMaxLength(4000);

                entity.Property(e => e.ThousandSeparator)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.WebServiceUrm).HasMaxLength(4000);
            });

            modelBuilder.Entity<FaraDataDic>(entity =>
            {
                entity.HasKey(e => e.ObjectName);

                entity.Property(e => e.ObjectName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("");

                entity.Property(e => e.Ar)
                    .HasColumnName("AR")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.En)
                    .HasColumnName("EN")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Fa)
                    .HasColumnName("FA")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Gr)
                    .HasColumnName("GR")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.ObjectType)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<FaraDataDicFld>(entity =>
            {
                entity.HasKey(e => e.ObjectName)
                    .HasName("PK_a");

                entity.Property(e => e.ObjectName)
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.Trns)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<FaraDbver>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FaraDBVer");
            });

            modelBuilder.Entity<FaraInternalLog>(entity =>
            {
                entity.HasKey(e => e.Guid);

                entity.Property(e => e.Guid).HasDefaultValueSql("(newid())");

                entity.Property(e => e.Action).HasMaxLength(50);

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DescriptionValue).HasMaxLength(1000);

                entity.Property(e => e.KeyValue).HasMaxLength(50);

                entity.Property(e => e.NumberValue).HasMaxLength(50);

                entity.Property(e => e.TableName).HasMaxLength(50);

                entity.Property(e => e.UserName)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<FaraInternalLogEntity>(entity =>
            {
                entity.HasKey(e => e.TableName);

                entity.Property(e => e.TableName).HasMaxLength(50);

                entity.Property(e => e.DescriptionColumn).HasMaxLength(50);

                entity.Property(e => e.KeyColumn).HasMaxLength(50);

                entity.Property(e => e.LogDelete)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.NumberColumn).HasMaxLength(50);
            });

            modelBuilder.Entity<FaraLog>(entity =>
            {
                entity.HasKey(e => e.LogSi)
                    .HasName("PK_Log");

                entity.Property(e => e.LogSi)
                    .HasColumnName("Log_Si")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.LogAction)
                    .IsRequired()
                    .HasColumnName("Log_Action")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LogCtgry)
                    .IsRequired()
                    .HasColumnName("Log_Ctgry")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LogDesc)
                    .HasColumnName("Log_Desc")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.LogDt)
                    .HasColumnName("Log_DT")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.LogUser)
                    .IsRequired()
                    .HasColumnName("Log_User")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<FaraMnu>(entity =>
            {
                entity.HasKey(e => e.FaraMnuSi)
                    .IsClustered(false);

                entity.Property(e => e.FaraMnuSi).HasColumnName("FaraMnu_Si");

                entity.Property(e => e.FaraMnuAutorun).HasColumnName("FaraMnu_Autorun");

                entity.Property(e => e.FaraMnuHasChild).HasColumnName("FaraMnu_HasChild");

                entity.Property(e => e.FaraMnuHotKey).HasColumnName("FaraMnu_HotKey");

                entity.Property(e => e.FaraMnuIcon)
                    .HasColumnName("FaraMnu_Icon")
                    .HasColumnType("image");

                entity.Property(e => e.FaraMnuIsIstandard).HasColumnName("FaraMnu_IsIstandard");

                entity.Property(e => e.FaraMnuIsShrt).HasColumnName("FaraMnu_IsShrt");

                entity.Property(e => e.FaraMnuItmSi).HasColumnName("FaraMnuItm_Si");

                entity.Property(e => e.FaraMnuLicense)
                    .HasColumnName("FaraMnu_License")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.FaraMnuSiParent).HasColumnName("FaraMnu_SiParent");

                entity.Property(e => e.FaraMnuSqnc).HasColumnName("FaraMnu_Sqnc");

                entity.Property(e => e.FaraMnuTp)
                    .HasColumnName("FaraMnu_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FaraMnuTpEn)
                    .HasColumnName("FaraMnu_Tp_En")
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<FaraMnuItm>(entity =>
            {
                entity.HasKey(e => e.FaraMnuItmSi);

                entity.Property(e => e.FaraMnuItmSi)
                    .HasColumnName("FaraMnuItm_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.FaraMnuItmCaption)
                    .HasColumnName("FaraMnuItm_Caption")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FaraMnuItmFileName)
                    .HasColumnName("FaraMnuItm_FileName")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FaraMnuItmParam)
                    .HasColumnName("FaraMnuItm_Param")
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.FaraMnuItmProc)
                    .HasColumnName("FaraMnuItm_Proc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FaraMnuItmSrcDeclaration)
                    .HasColumnName("FaraMnuItm_Src_Declaration")
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.FaraMnuItmSrcUnitName)
                    .HasColumnName("FaraMnuItm_Src_UnitName")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FaraMnuItmUserGuide)
                    .HasColumnName("FaraMnuItm_UserGuide")
                    .HasColumnType("text");
            });

            modelBuilder.Entity<FaraMnuToUsr>(entity =>
            {
                entity.HasKey(e => e.FaraMnuToUsrSi);

                entity.HasIndex(e => new { e.FaraMnuSi, e.LoginName })
                    .HasName("IX_FaraMnuToUsr")
                    .IsUnique();

                entity.Property(e => e.FaraMnuToUsrSi).HasColumnName("FaraMnuToUsr_Si");

                entity.Property(e => e.FaraMnuSi).HasColumnName("FaraMnu_Si");

                entity.Property(e => e.LoginName)
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.HasOne(d => d.FaraMnuSiNavigation)
                    .WithMany(p => p.FaraMnuToUsr)
                    .HasForeignKey(d => d.FaraMnuSi)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_FaraMnuToUsr_FaraMnu");
            });

            modelBuilder.Entity<FaraMrtReport>(entity =>
            {
                entity.Property(e => e.FaraMrtReportId).HasColumnName("FaraMrtReportID");

                entity.Property(e => e.FaraMrtReportTypeId).HasColumnName("FaraMrtReportTypeID");

                entity.Property(e => e.Name).HasMaxLength(250);

                entity.Property(e => e.Path).HasMaxLength(250);

                entity.HasOne(d => d.FaraMrtReportType)
                    .WithMany(p => p.FaraMrtReport)
                    .HasForeignKey(d => d.FaraMrtReportTypeId)
                    .HasConstraintName("FK_FaraMrtReport_FaraMrtReportType");
            });

            modelBuilder.Entity<FaraMrtReportType>(entity =>
            {
                entity.Property(e => e.FaraMrtReportTypeId).HasColumnName("FaraMrtReportTypeID");

                entity.Property(e => e.Name).HasMaxLength(50);
            });

            modelBuilder.Entity<FaraMsgDlg>(entity =>
            {
                entity.HasKey(e => new { e.FormName, e.Key });

                entity.Property(e => e.FormName).HasMaxLength(50);

                entity.Property(e => e.Key).HasMaxLength(100);

                entity.Property(e => e.En)
                    .HasColumnName("EN")
                    .HasMaxLength(150);

                entity.Property(e => e.Fa)
                    .HasColumnName("FA")
                    .HasMaxLength(150);
            });

            modelBuilder.Entity<FaraRptDeny>(entity =>
            {
                entity.HasKey(e => new { e.SysusersUid, e.FaraRptListSi });

                entity.Property(e => e.SysusersUid).HasColumnName("sysusers_uid");

                entity.Property(e => e.FaraRptListSi).HasColumnName("FaraRptList_Si");
            });

            modelBuilder.Entity<FaraRptList>(entity =>
            {
                entity.HasKey(e => e.SiRpt)
                    .IsClustered(false);

                entity.Property(e => e.FileName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.MacroAfter)
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.MacroBefore)
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.Range)
                    .HasMaxLength(128)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('(none)')");

                entity.Property(e => e.RptGroup)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpRpt)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpRpt2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UserGuide).HasColumnType("text");
            });

            modelBuilder.Entity<FaraRs>(entity =>
            {
                entity.HasKey(e => e.FaraRsSi);

                entity.ToTable("FaraRS");

                entity.Property(e => e.FaraRsSi)
                    .HasColumnName("FaraRS_Si")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FaraRsCwhr)
                    .HasColumnName("FaraRS_CWhr")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FaraRsLstIdFld)
                    .HasColumnName("FaraRS_LstIdFld")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FaraRsRsltFmt)
                    .HasColumnName("FaraRS_RsltFmt")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.FaraRsSrchSql)
                    .HasColumnName("FaraRS_SrchSQL")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.FaraRsSwhr)
                    .HasColumnName("FaraRS_SWhr")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FaraRvSi)
                    .HasColumnName("FaraRV_Si")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<FaraRsEn>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FaraRS_En");

                entity.Property(e => e.FaraRsCwhr)
                    .HasColumnName("FaraRS_CWhr")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FaraRsLstIdFld)
                    .HasColumnName("FaraRS_LstIdFld")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FaraRsRsltFmt)
                    .HasColumnName("FaraRS_RsltFmt")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.FaraRsSi)
                    .IsRequired()
                    .HasColumnName("FaraRS_Si")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FaraRsSrchSql)
                    .HasColumnName("FaraRS_SrchSQL")
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.FaraRsSwhr)
                    .HasColumnName("FaraRS_SWhr")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FaraRvSi)
                    .HasColumnName("FaraRV_Si")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<FaraRv>(entity =>
            {
                entity.HasKey(e => e.FaraRvSi);

                entity.ToTable("FaraRV");

                entity.Property(e => e.FaraRvSi)
                    .HasColumnName("FaraRV_Si")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FaraRvAftrWhr)
                    .HasColumnName("FaraRV_AftrWhr")
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.FaraRvCtrl)
                    .HasColumnName("FaraRV_Ctrl")
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.FaraRvFlds)
                    .HasColumnName("FaraRV_Flds")
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.FaraRvSql)
                    .HasColumnName("FaraRV_SQL")
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<FaraRvEn>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FaraRV_En");

                entity.Property(e => e.FaraRvAftrWhr)
                    .HasColumnName("FaraRV_AftrWhr")
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.FaraRvCtrl)
                    .HasColumnName("FaraRV_Ctrl")
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.FaraRvFlds)
                    .HasColumnName("FaraRV_Flds")
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.FaraRvSi)
                    .IsRequired()
                    .HasColumnName("FaraRV_Si")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FaraRvSql)
                    .HasColumnName("FaraRV_SQL")
                    .HasMaxLength(1024)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<FaraSystems>(entity =>
            {
                entity.HasKey(e => e.SiSystem)
                    .IsClustered(false);

                entity.Property(e => e.SiSystem).ValueGeneratedNever();

                entity.Property(e => e.TpSystem)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<FaraVerHistory>(entity =>
            {
                entity.HasKey(e => e.FaraVerHistorySi);

                entity.Property(e => e.FaraVerHistorySi).HasColumnName("FaraVerHistory_Si");

                entity.Property(e => e.DateDo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Description).HasMaxLength(4000);

                entity.Property(e => e.VersionNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.SiSystemNavigation)
                    .WithMany(p => p.FaraVerHistory)
                    .HasForeignKey(d => d.SiSystem)
                    .HasConstraintName("FK_FaraVerHistory_FaraSystems");
            });

            modelBuilder.Entity<G>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("g");

                entity.Property(e => e.Credit).HasColumnType("money");

                entity.Property(e => e.Debit).HasColumnType("money");

                entity.Property(e => e.Description).HasMaxLength(4000);

                entity.Property(e => e.ShDate)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SystemName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Typ)
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<GeneralReportVoucher>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("GeneralReportVoucher");

                entity.Property(e => e.CostCenterCode)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CostCenterId).HasColumnName("CostCenterID");

                entity.Property(e => e.CostCenterName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Credit).HasColumnType("money");

                entity.Property(e => e.Currency)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Date).HasColumnType("smalldatetime");

                entity.Property(e => e.DatePersian).HasMaxLength(4000);

                entity.Property(e => e.Debit).HasColumnType("money");

                entity.Property(e => e.Description)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.DetailCode)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DetailId).HasColumnName("DetailID");

                entity.Property(e => e.DetailName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.GeneralCode)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.GeneralName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.GroupCode)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.GroupName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Idt)
                    .HasColumnName("IDT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Idtpersian)
                    .HasColumnName("IDTPersian")
                    .HasMaxLength(4000);

                entity.Property(e => e.Ino).HasColumnName("INo");

                entity.Property(e => e.Iqty).HasColumnName("IQty");

                entity.Property(e => e.ProjectCode)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.ProjectId).HasColumnName("ProjectID");

                entity.Property(e => e.ProjectName)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SubSystemId).HasColumnName("SubSystemID");

                entity.Property(e => e.SubSystemName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SubsidiaryCode)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SubsidiaryName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.VoucherDetailId).HasColumnName("VoucherDetailID");

                entity.Property(e => e.VoucherId).HasColumnName("VoucherID");

                entity.Property(e => e.VoucherTypeId).HasColumnName("VoucherTypeID");

                entity.Property(e => e.VoucherTypeName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Hatef>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("hatef");

                entity.Property(e => e.SalcustSi).HasColumnName("salcust_Si");

                entity.Property(e => e._10شمارهخط)
                    .HasColumnName("10شماره خط")
                    .HasMaxLength(50);

                entity.Property(e => e._2نوعخط)
                    .HasColumnName("2نوع خط")
                    .HasMaxLength(50);

                entity.Property(e => e.جنسیت).HasMaxLength(50);

                entity.Property(e => e.شمارهخط1)
                    .HasColumnName("شماره خط1")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط2)
                    .HasColumnName("شماره خط2")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط3)
                    .HasColumnName("شماره خط3")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط4)
                    .HasColumnName("شماره خط4")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط5)
                    .HasColumnName("شماره خط5")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط6)
                    .HasColumnName("شماره خط6")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط7)
                    .HasColumnName("شماره خط7")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط8)
                    .HasColumnName("شماره خط8")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط9)
                    .HasColumnName("شماره خط9")
                    .HasMaxLength(50);

                entity.Property(e => e.نام).HasMaxLength(100);

                entity.Property(e => e.نامخانوادگی)
                    .HasColumnName("نام خانوادگی")
                    .HasMaxLength(100);

                entity.Property(e => e.نوعخط1)
                    .HasColumnName("نوع خط1")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط10)
                    .HasColumnName("نوع خط10")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط3)
                    .HasColumnName("نوع خط3")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط4)
                    .HasColumnName("نوع خط4")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط5)
                    .HasColumnName("نوع خط5")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط6)
                    .HasColumnName("نوع خط6")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط7)
                    .HasColumnName("نوع خط7")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط8)
                    .HasColumnName("نوع خط8")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط9)
                    .HasColumnName("نوع خط9")
                    .HasMaxLength(50);

                entity.Property(e => e.کدمشتری)
                    .HasColumnName("کد مشتری")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<Hatef2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("hatef2");

                entity.Property(e => e.CtbAddrsAddrs)
                    .HasColumnName("CtbAddrs_Addrs")
                    .HasMaxLength(255);

                entity.Property(e => e.SalCityTp)
                    .HasColumnName("SalCity_Tp")
                    .HasMaxLength(100);

                entity.Property(e => e.SalCountryTp)
                    .HasColumnName("SalCountry_Tp")
                    .HasMaxLength(100);

                entity.Property(e => e.SalProvinceTp)
                    .HasColumnName("SalProvince_Tp")
                    .HasMaxLength(100);

                entity.Property(e => e.SalcustSi).HasColumnName("salcust_Si");

                entity.Property(e => e._10شمارهخط)
                    .HasColumnName("10شماره خط")
                    .HasMaxLength(50);

                entity.Property(e => e._2نوعخط)
                    .HasColumnName("2نوع خط")
                    .HasMaxLength(50);

                entity.Property(e => e.جنسیت).HasMaxLength(50);

                entity.Property(e => e.شمارهخط1)
                    .HasColumnName("شماره خط1")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط2)
                    .HasColumnName("شماره خط2")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط3)
                    .HasColumnName("شماره خط3")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط4)
                    .HasColumnName("شماره خط4")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط5)
                    .HasColumnName("شماره خط5")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط6)
                    .HasColumnName("شماره خط6")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط7)
                    .HasColumnName("شماره خط7")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط8)
                    .HasColumnName("شماره خط8")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط9)
                    .HasColumnName("شماره خط9")
                    .HasMaxLength(50);

                entity.Property(e => e.نام).HasMaxLength(100);

                entity.Property(e => e.نامخانوادگی)
                    .HasColumnName("نام خانوادگی")
                    .HasMaxLength(100);

                entity.Property(e => e.نوعخط1)
                    .HasColumnName("نوع خط1")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط10)
                    .HasColumnName("نوع خط10")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط3)
                    .HasColumnName("نوع خط3")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط4)
                    .HasColumnName("نوع خط4")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط5)
                    .HasColumnName("نوع خط5")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط6)
                    .HasColumnName("نوع خط6")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط7)
                    .HasColumnName("نوع خط7")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط8)
                    .HasColumnName("نوع خط8")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط9)
                    .HasColumnName("نوع خط9")
                    .HasMaxLength(50);

                entity.Property(e => e.کدمشتری)
                    .HasColumnName("کد مشتری")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<Hatef22>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("hatef22");

                entity.Property(e => e.Count).HasColumnName("count");

                entity.Property(e => e.CtbAddrsAddrs)
                    .HasColumnName("CtbAddrs_Addrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SalCityTp)
                    .HasColumnName("SalCity_Tp")
                    .HasMaxLength(100);

                entity.Property(e => e.SalCountryTp)
                    .HasColumnName("SalCountry_Tp")
                    .HasMaxLength(100);

                entity.Property(e => e.SalProvinceTp)
                    .HasColumnName("SalProvince_Tp")
                    .HasMaxLength(100);

                entity.Property(e => e.SalcustSi).HasColumnName("salcust_Si");

                entity.Property(e => e._10شمارهخط)
                    .HasColumnName("10شماره خط")
                    .HasMaxLength(50);

                entity.Property(e => e._2نوعخط)
                    .HasColumnName("2نوع خط")
                    .HasMaxLength(50);

                entity.Property(e => e.ادرس2)
                    .HasColumnName("ادرس 2")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.ادرس3)
                    .HasColumnName("ادرس 3")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.ادرس4)
                    .HasColumnName("ادرس 4")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.ادرس5)
                    .HasColumnName("ادرس 5")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.ادرس6)
                    .HasColumnName("ادرس 6")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.ادرسبهعنوان)
                    .HasColumnName("ادرس به عنوان")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.جنسیت).HasMaxLength(50);

                entity.Property(e => e.شمارهخط1)
                    .HasColumnName("شماره خط1")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط2)
                    .HasColumnName("شماره خط2")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط3)
                    .HasColumnName("شماره خط3")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط4)
                    .HasColumnName("شماره خط4")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط5)
                    .HasColumnName("شماره خط5")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط6)
                    .HasColumnName("شماره خط6")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط7)
                    .HasColumnName("شماره خط7")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط8)
                    .HasColumnName("شماره خط8")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط9)
                    .HasColumnName("شماره خط9")
                    .HasMaxLength(50);

                entity.Property(e => e.نام).HasMaxLength(100);

                entity.Property(e => e.نامخانوادگی)
                    .HasColumnName("نام خانوادگی")
                    .HasMaxLength(100);

                entity.Property(e => e.نوعخط1)
                    .HasColumnName("نوع خط1")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط10)
                    .HasColumnName("نوع خط10")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط3)
                    .HasColumnName("نوع خط3")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط4)
                    .HasColumnName("نوع خط4")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط5)
                    .HasColumnName("نوع خط5")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط6)
                    .HasColumnName("نوع خط6")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط7)
                    .HasColumnName("نوع خط7")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط8)
                    .HasColumnName("نوع خط8")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط9)
                    .HasColumnName("نوع خط9")
                    .HasMaxLength(50);

                entity.Property(e => e.کدمشتری)
                    .HasColumnName("کد مشتری")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<Hatef3>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("hatef3");

                entity.Property(e => e.CtbAddrsAddrs)
                    .HasColumnName("CtbAddrs_Addrs")
                    .HasMaxLength(255);

                entity.Property(e => e.SalCityTp)
                    .HasColumnName("SalCity_Tp")
                    .HasMaxLength(100);

                entity.Property(e => e.SalCountryTp)
                    .HasColumnName("SalCountry_Tp")
                    .HasMaxLength(100);

                entity.Property(e => e.SalCustGrpTp)
                    .HasColumnName("SalCustGrp_Tp")
                    .HasMaxLength(50);

                entity.Property(e => e.SalProvinceTp)
                    .HasColumnName("SalProvince_Tp")
                    .HasMaxLength(100);

                entity.Property(e => e.SalcustSi).HasColumnName("salcust_Si");

                entity.Property(e => e._10شمارهخط)
                    .HasColumnName("10شماره خط")
                    .HasMaxLength(50);

                entity.Property(e => e._2نوعخط)
                    .HasColumnName("2نوع خط")
                    .HasMaxLength(50);

                entity.Property(e => e.جنسیت).HasMaxLength(50);

                entity.Property(e => e.شمارهخط1)
                    .HasColumnName("شماره خط1")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط2)
                    .HasColumnName("شماره خط2")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط3)
                    .HasColumnName("شماره خط3")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط4)
                    .HasColumnName("شماره خط4")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط5)
                    .HasColumnName("شماره خط5")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط6)
                    .HasColumnName("شماره خط6")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط7)
                    .HasColumnName("شماره خط7")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط8)
                    .HasColumnName("شماره خط8")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط9)
                    .HasColumnName("شماره خط9")
                    .HasMaxLength(50);

                entity.Property(e => e.نام).HasMaxLength(100);

                entity.Property(e => e.نامخانوادگی)
                    .HasColumnName("نام خانوادگی")
                    .HasMaxLength(100);

                entity.Property(e => e.نوعخط1)
                    .HasColumnName("نوع خط1")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط10)
                    .HasColumnName("نوع خط10")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط3)
                    .HasColumnName("نوع خط3")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط4)
                    .HasColumnName("نوع خط4")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط5)
                    .HasColumnName("نوع خط5")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط6)
                    .HasColumnName("نوع خط6")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط7)
                    .HasColumnName("نوع خط7")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط8)
                    .HasColumnName("نوع خط8")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط9)
                    .HasColumnName("نوع خط9")
                    .HasMaxLength(50);

                entity.Property(e => e.کدمشتری)
                    .HasColumnName("کد مشتری")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<Hatef333>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("hatef333");

                entity.Property(e => e.Count).HasColumnName("count");

                entity.Property(e => e.CtbAddrsAddrs)
                    .HasColumnName("CtbAddrs_Addrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SalCityTp)
                    .HasColumnName("SalCity_Tp")
                    .HasMaxLength(100);

                entity.Property(e => e.SalCountryTp)
                    .HasColumnName("SalCountry_Tp")
                    .HasMaxLength(100);

                entity.Property(e => e.SalCustGrpTp)
                    .HasColumnName("SalCustGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalProvinceTp)
                    .HasColumnName("SalProvince_Tp")
                    .HasMaxLength(100);

                entity.Property(e => e.SalcustSi).HasColumnName("salcust_Si");

                entity.Property(e => e._10شمارهخط)
                    .HasColumnName("10شماره خط")
                    .HasMaxLength(50);

                entity.Property(e => e._2نوعخط)
                    .HasColumnName("2نوع خط")
                    .HasMaxLength(50);

                entity.Property(e => e.ادرس2)
                    .HasColumnName("ادرس 2")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.ادرس3)
                    .HasColumnName("ادرس 3")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.ادرس4)
                    .HasColumnName("ادرس 4")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.ادرس5)
                    .HasColumnName("ادرس 5")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.ادرس6)
                    .HasColumnName("ادرس 6")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.ادرسبهعنوان)
                    .HasColumnName("ادرس به عنوان")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.جنسیت).HasMaxLength(50);

                entity.Property(e => e.شمارهخط1)
                    .HasColumnName("شماره خط1")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط2)
                    .HasColumnName("شماره خط2")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط3)
                    .HasColumnName("شماره خط3")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط4)
                    .HasColumnName("شماره خط4")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط5)
                    .HasColumnName("شماره خط5")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط6)
                    .HasColumnName("شماره خط6")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط7)
                    .HasColumnName("شماره خط7")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط8)
                    .HasColumnName("شماره خط8")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط9)
                    .HasColumnName("شماره خط9")
                    .HasMaxLength(50);

                entity.Property(e => e.نام).HasMaxLength(100);

                entity.Property(e => e.نامخانوادگی)
                    .HasColumnName("نام خانوادگی")
                    .HasMaxLength(100);

                entity.Property(e => e.نوعخط1)
                    .HasColumnName("نوع خط1")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط10)
                    .HasColumnName("نوع خط10")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط3)
                    .HasColumnName("نوع خط3")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط4)
                    .HasColumnName("نوع خط4")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط5)
                    .HasColumnName("نوع خط5")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط6)
                    .HasColumnName("نوع خط6")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط7)
                    .HasColumnName("نوع خط7")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط8)
                    .HasColumnName("نوع خط8")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط9)
                    .HasColumnName("نوع خط9")
                    .HasMaxLength(50);

                entity.Property(e => e.کدمشتری)
                    .HasColumnName("کد مشتری")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<Hatef4>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("hatef4");

                entity.Property(e => e.Count).HasColumnName("count");

                entity.Property(e => e.CtbAddrsAddrs)
                    .HasColumnName("CtbAddrs_Addrs")
                    .HasMaxLength(255);

                entity.Property(e => e.SalBrnchTp)
                    .HasColumnName("SalBrnch_Tp")
                    .HasMaxLength(50);

                entity.Property(e => e.SalCityTp)
                    .HasColumnName("SalCity_Tp")
                    .HasMaxLength(100);

                entity.Property(e => e.SalCountryTp)
                    .HasColumnName("SalCountry_Tp")
                    .HasMaxLength(100);

                entity.Property(e => e.SalCustGrpTp)
                    .HasColumnName("SalCustGrp_Tp")
                    .HasMaxLength(50);

                entity.Property(e => e.SalProvinceTp)
                    .HasColumnName("SalProvince_Tp")
                    .HasMaxLength(100);

                entity.Property(e => e.SalcustSi).HasColumnName("salcust_Si");

                entity.Property(e => e._10شمارهخط)
                    .HasColumnName("10شماره خط")
                    .HasMaxLength(50);

                entity.Property(e => e._2نوعخط)
                    .HasColumnName("2نوع خط")
                    .HasMaxLength(50);

                entity.Property(e => e.ادرس2)
                    .HasColumnName("ادرس 2")
                    .HasMaxLength(255);

                entity.Property(e => e.ادرس3)
                    .HasColumnName("ادرس 3")
                    .HasMaxLength(255);

                entity.Property(e => e.ادرس4)
                    .HasColumnName("ادرس 4")
                    .HasMaxLength(255);

                entity.Property(e => e.ادرس5)
                    .HasColumnName("ادرس 5")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.ادرس6)
                    .HasColumnName("ادرس 6")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.ادرسبهعنوان)
                    .HasColumnName("ادرس به عنوان")
                    .HasMaxLength(50);

                entity.Property(e => e.جنسیت).HasMaxLength(50);

                entity.Property(e => e.شمارهخط1)
                    .HasColumnName("شماره خط1")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط2)
                    .HasColumnName("شماره خط2")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط3)
                    .HasColumnName("شماره خط3")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط4)
                    .HasColumnName("شماره خط4")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط5)
                    .HasColumnName("شماره خط5")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط6)
                    .HasColumnName("شماره خط6")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط7)
                    .HasColumnName("شماره خط7")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط8)
                    .HasColumnName("شماره خط8")
                    .HasMaxLength(50);

                entity.Property(e => e.شمارهخط9)
                    .HasColumnName("شماره خط9")
                    .HasMaxLength(50);

                entity.Property(e => e.نام).HasMaxLength(100);

                entity.Property(e => e.نامخانوادگی)
                    .HasColumnName("نام خانوادگی")
                    .HasMaxLength(100);

                entity.Property(e => e.نوعخط1)
                    .HasColumnName("نوع خط1")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط10)
                    .HasColumnName("نوع خط10")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط3)
                    .HasColumnName("نوع خط3")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط4)
                    .HasColumnName("نوع خط4")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط5)
                    .HasColumnName("نوع خط5")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط6)
                    .HasColumnName("نوع خط6")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط7)
                    .HasColumnName("نوع خط7")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط8)
                    .HasColumnName("نوع خط8")
                    .HasMaxLength(50);

                entity.Property(e => e.نوعخط9)
                    .HasColumnName("نوع خط9")
                    .HasMaxLength(50);

                entity.Property(e => e.کدمشتری)
                    .HasColumnName("کد مشتری")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<HeaderRandomStorage>(entity =>
            {
                entity.ToTable("headerRandomStorage");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Duration).HasColumnName("duration");

                entity.Property(e => e.StartDateDm)
                    .HasColumnName("startDate_Dm")
                    .HasColumnType("date");

                entity.Property(e => e.StartDateDs)
                    .HasColumnName("startDate_Ds")
                    .HasMaxLength(50);

                entity.Property(e => e.Title).HasColumnName("title");
            });

            modelBuilder.Entity<InvAcsDocD>(entity =>
            {
                entity.HasKey(e => e.InvAcsDocDSi);

                entity.Property(e => e.InvAcsDocDSi).HasColumnName("InvAcsDocD_Si");

                entity.Property(e => e.InvAcsDocDAct1).HasColumnName("InvAcsDocD_Act1");

                entity.Property(e => e.InvAcsDocDAct2).HasColumnName("InvAcsDocD_Act2");

                entity.Property(e => e.UsesRec)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<InvBatchNumber>(entity =>
            {
                entity.HasKey(e => e.InvBatchNumberSi);

                entity.Property(e => e.InvBatchNumberSi).HasColumnName("InvBatchNumber_Si");

                entity.Property(e => e.InvBatchNumberCode)
                    .HasColumnName("InvBatchNumber_Code")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocDSi).HasColumnName("InvDocD_Si");

                entity.Property(e => e.InvDocHSi).HasColumnName("InvDocH_Si");

                entity.Property(e => e.InvDocTypSi).HasColumnName("InvDocTyp_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.HasOne(d => d.InvDocDSiNavigation)
                    .WithMany(p => p.InvBatchNumber)
                    .HasForeignKey(d => d.InvDocDSi)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_InvBatchNumber_InvDocD");

                entity.HasOne(d => d.InvDocTypSiNavigation)
                    .WithMany(p => p.InvBatchNumber)
                    .HasForeignKey(d => d.InvDocTypSi)
                    .HasConstraintName("FK_InvBatchNumber_InvDocTyp");

                entity.HasOne(d => d.InvGdsSiNavigation)
                    .WithMany(p => p.InvBatchNumber)
                    .HasForeignKey(d => d.InvGdsSi)
                    .HasConstraintName("FK_InvBatchNumber_InvGds");

                entity.HasOne(d => d.InvInvtSiNavigation)
                    .WithMany(p => p.InvBatchNumber)
                    .HasForeignKey(d => d.InvInvtSi)
                    .HasConstraintName("FK_InvBatchNumber_InvInvt");
            });

            modelBuilder.Entity<InvCdngD>(entity =>
            {
                entity.HasKey(e => e.InvCdngDSi);

                entity.Property(e => e.InvCdngDSi).HasColumnName("InvCdngD_Si");

                entity.Property(e => e.InvCdngDCu)
                    .HasColumnName("InvCdngD_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvCdngDLnk)
                    .IsRequired()
                    .HasColumnName("InvCdngD_Lnk")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.InvCdngDSqnc).HasColumnName("InvCdngD_Sqnc");

                entity.Property(e => e.InvCdngDTp)
                    .HasColumnName("InvCdngD_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvCdngDUid)
                    .HasColumnName("InvCdngD_UID")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvCdngHSi).HasColumnName("InvCdngH_Si");

                entity.HasOne(d => d.InvCdngHSiNavigation)
                    .WithMany(p => p.InvCdngD)
                    .HasForeignKey(d => d.InvCdngHSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_InvCdngD_InvCdngH");
            });

            modelBuilder.Entity<InvCdngH>(entity =>
            {
                entity.HasKey(e => e.InvCdngHSi);

                entity.Property(e => e.InvCdngHSi).HasColumnName("InvCdngH_Si");

                entity.Property(e => e.InvCdngHSqnc).HasColumnName("InvCdngH_Sqnc");

                entity.Property(e => e.InvCdngHTp)
                    .HasColumnName("InvCdngH_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvCdngHTpSqnc).HasColumnName("InvCdngH_TpSqnc");

                entity.Property(e => e.InvCdngHVsCu)
                    .IsRequired()
                    .HasColumnName("InvCdngH_VsCu")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.InvCdngHVsTp)
                    .IsRequired()
                    .HasColumnName("InvCdngH_VsTp")
                    .HasDefaultValueSql("(1)");
            });

            modelBuilder.Entity<InvCntBatchD>(entity =>
            {
                entity.HasKey(e => e.InvCntBatchDSi);

                entity.Property(e => e.InvCntBatchDSi).HasColumnName("InvCntBatchD_Si");

                entity.Property(e => e.InvCntBatchDN1)
                    .HasColumnName("InvCntBatchD_N1")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.InvCntBatchDN2)
                    .HasColumnName("InvCntBatchD_N2")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.InvCntBatchDN3)
                    .HasColumnName("InvCntBatchD_N3")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.InvCntBatchDTag).HasColumnName("InvCntBatchD_Tag");

                entity.Property(e => e.InvCntDqtyN1).HasColumnName("InvCntDQty_N1");

                entity.Property(e => e.InvCntDqtyN2).HasColumnName("InvCntDQty_N2");

                entity.Property(e => e.InvCntDqtyN3).HasColumnName("InvCntDQty_N3");

                entity.Property(e => e.InvCntHSi).HasColumnName("InvCntH_Si");

                entity.Property(e => e.InvDocDExpNo)
                    .HasColumnName("InvDocD_ExpNo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocDExpirDateM)
                    .HasColumnName("InvDocD_ExpirDateM")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.HasOne(d => d.InvGdsSiNavigation)
                    .WithMany(p => p.InvCntBatchD)
                    .HasForeignKey(d => d.InvGdsSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_InvCntBatchD_InvGds");
            });

            modelBuilder.Entity<InvCntCalc>(entity =>
            {
                entity.HasKey(e => e.SiId);

                entity.Property(e => e.DocTypSi).HasColumnName("DocTyp_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.Tp)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<InvCntD>(entity =>
            {
                entity.HasKey(e => e.InvCntDSi);

                entity.Property(e => e.InvCntDSi).HasColumnName("InvCntD_Si");

                entity.Property(e => e.InvCntDN1)
                    .HasColumnName("InvCntD_N1")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.InvCntDN2)
                    .HasColumnName("InvCntD_N2")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.InvCntDN3)
                    .HasColumnName("InvCntD_N3")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.InvCntDQty2).HasColumnName("InvCntD_Qty2");

                entity.Property(e => e.InvCntDTag).HasColumnName("InvCntD_Tag");

                entity.Property(e => e.InvCntDqtyN1).HasColumnName("InvCntDQty_N1");

                entity.Property(e => e.InvCntDqtyN2).HasColumnName("InvCntDQty_N2");

                entity.Property(e => e.InvCntDqtyN3).HasColumnName("InvCntDQty_N3");

                entity.Property(e => e.InvCntHSi).HasColumnName("InvCntH_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.HasOne(d => d.InvCntHSiNavigation)
                    .WithMany(p => p.InvCntD)
                    .HasForeignKey(d => d.InvCntHSi)
                    .HasConstraintName("FK_InvCntD_InvCntH");

                entity.HasOne(d => d.InvGdsSiNavigation)
                    .WithMany(p => p.InvCntD)
                    .HasForeignKey(d => d.InvGdsSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_InvCntD_InvGds");
            });

            modelBuilder.Entity<InvCntH>(entity =>
            {
                entity.HasKey(e => e.InvCntHSi);

                entity.Property(e => e.InvCntHSi).HasColumnName("InvCntH_Si");

                entity.Property(e => e.InvCntHDs)
                    .HasColumnName("InvCntH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.InvCntHTp)
                    .HasColumnName("InvCntH_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.HasOne(d => d.InvInvtSiNavigation)
                    .WithMany(p => p.InvCntH)
                    .HasForeignKey(d => d.InvInvtSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_InvCntH_InvInvt");
            });

            modelBuilder.Entity<InvCntrDocD>(entity =>
            {
                entity.HasKey(e => e.InvCntrDocDSi);

                entity.Property(e => e.InvCntrDocDSi).HasColumnName("InvCntrDocD_Si");

                entity.Property(e => e.InvCntrDocDQty).HasColumnName("InvCntrDocD_Qty");

                entity.Property(e => e.InvCntrDocDTp)
                    .HasColumnName("InvCntrDocD_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvCntrDocHSi).HasColumnName("InvCntrDocH_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTypSi).HasColumnName("InvGdsTyp_Si");

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.HasOne(d => d.InvCntrDocHSiNavigation)
                    .WithMany(p => p.InvCntrDocD)
                    .HasForeignKey(d => d.InvCntrDocHSi)
                    .HasConstraintName("FK_InvCntrDocD_InvCntrDocH");
            });

            modelBuilder.Entity<InvCntrDocH>(entity =>
            {
                entity.HasKey(e => e.InvCntrDocHSi);

                entity.Property(e => e.InvCntrDocHSi).HasColumnName("InvCntrDocH_Si");

                entity.Property(e => e.InvCntrDocHAcp1).HasColumnName("InvCntrDocH_Acp1");

                entity.Property(e => e.InvCntrDocHAcp2).HasColumnName("InvCntrDocH_Acp2");

                entity.Property(e => e.InvCntrDocHCu).HasColumnName("InvCntrDocH_Cu");

                entity.Property(e => e.InvCntrDocHDs)
                    .HasColumnName("InvCntrDocH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.InvCntrDocHRfrncTyp).HasColumnName("InvCntrDocH_RfrncTyp");

                entity.Property(e => e.InvCntrDocHStmpCdt)
                    .HasColumnName("InvCntrDocH_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvCntrDocHStmpCus)
                    .HasColumnName("InvCntrDocH_StmpCUs")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvCntrDocHStmpMdt)
                    .HasColumnName("InvCntrDocH_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvCntrDocHStmpMus)
                    .HasColumnName("InvCntrDocH_StmpMUs")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvCntrDocHSts).HasColumnName("InvCntrDocH_Sts");

                entity.Property(e => e.InvCntrDocHTp)
                    .HasColumnName("InvCntrDocH_Tp")
                    .HasMaxLength(50);

                entity.Property(e => e.InvControlGdsSi).HasColumnName("InvControlGds_Si");

                entity.Property(e => e.InvGdsEssentialSi).HasColumnName("InvGdsEssential_Si");

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvTypSi).HasColumnName("InvTyp_Si");

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");
            });

            modelBuilder.Entity<InvControlGds>(entity =>
            {
                entity.HasKey(e => e.InvControlGdsSi);

                entity.Property(e => e.InvControlGdsSi).HasColumnName("InvControlGds_Si");

                entity.Property(e => e.InvControlGdsAccept1).HasColumnName("InvControlGds_Accept1");

                entity.Property(e => e.InvControlGdsAccept2).HasColumnName("InvControlGds_Accept2");

                entity.Property(e => e.InvControlGdsAcptCdt)
                    .HasColumnName("InvControlGds_AcptCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvControlGdsAcptMus)
                    .HasColumnName("InvControlGds_AcptMUs")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvControlGdsAcptTim)
                    .HasColumnName("InvControlGds_AcptTim")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.InvControlGdsAcs1).HasColumnName("InvControlGds_Acs1");

                entity.Property(e => e.InvControlGdsAcs2).HasColumnName("InvControlGds_Acs2");

                entity.Property(e => e.InvControlGdsAql).HasColumnName("InvControlGds_AQL");

                entity.Property(e => e.InvControlGdsBulK).HasColumnName("InvControlGds_BulK");

                entity.Property(e => e.InvControlGdsCu)
                    .HasColumnName("InvControlGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvControlGdsIncorectQty).HasColumnName("InvControlGds_IncorectQty");

                entity.Property(e => e.InvControlGdsIsBack).HasColumnName("InvControlGds_IsBack");

                entity.Property(e => e.InvControlGdsIsTention).HasColumnName("InvControlGds_IsTention");

                entity.Property(e => e.InvControlGdsLackQty).HasColumnName("InvControlGds_LackQty");

                entity.Property(e => e.InvControlGdsPrsStudy)
                    .HasColumnName("InvControlGds_PrsStudy")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvControlGdsQty).HasColumnName("InvControlGds_Qty");

                entity.Property(e => e.InvControlGdsQtyAccept1).HasColumnName("InvControlGds_QtyAccept1");

                entity.Property(e => e.InvControlGdsQtyAccept2).HasColumnName("InvControlGds_QtyAccept2");

                entity.Property(e => e.InvControlGdsQtycancle).HasColumnName("InvControlGds_Qtycancle");

                entity.Property(e => e.InvControlGdsSndInv).HasColumnName("InvControlGds_SndInv");

                entity.Property(e => e.InvControlGdsStmpCdt)
                    .HasColumnName("InvControlGds_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvControlGdsStmpMus)
                    .HasColumnName("InvControlGds_StmpMUs")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvControlGdsStmpTim)
                    .HasColumnName("InvControlGds_StmpTim")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.InvControlGdsSts).HasColumnName("InvControlGds_Sts");

                entity.Property(e => e.InvControlGdsTp)
                    .HasColumnName("InvControlGds_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTmpDSi).HasColumnName("InvDocTmpD_Si");

                entity.Property(e => e.InvDocTmpHSi).HasColumnName("InvDocTmpH_Si");

                entity.Property(e => e.InvGdsResultSi).HasColumnName("InvGdsResult_Si");
            });

            modelBuilder.Entity<InvControlGdsD>(entity =>
            {
                entity.HasKey(e => e.InvControlGdsDSi);

                entity.Property(e => e.InvControlGdsDSi).HasColumnName("InvControlGdsD_Si");

                entity.Property(e => e.InvControlGdsDAccept1).HasColumnName("InvControlGdsD_Accept1");

                entity.Property(e => e.InvControlGdsDAccept2).HasColumnName("InvControlGdsD_Accept2");

                entity.Property(e => e.InvControlGdsDAcceptInv1).HasColumnName("InvControlGdsD_AcceptInv1");

                entity.Property(e => e.InvControlGdsDAcceptInv2).HasColumnName("InvControlGdsD_AcceptInv2");

                entity.Property(e => e.InvControlGdsDAcpt).HasColumnName("InvControlGdsD_Acpt");

                entity.Property(e => e.InvControlGdsDIsTention).HasColumnName("InvControlGdsD_IsTention");

                entity.Property(e => e.InvControlGdsDIsback).HasColumnName("InvControlGdsD_ISBack");

                entity.Property(e => e.InvControlGdsDQty).HasColumnName("InvControlGdsD_Qty");

                entity.Property(e => e.InvControlGdsDQtyAccept1).HasColumnName("InvControlGdsD_QtyAccept1");

                entity.Property(e => e.InvControlGdsDSndInv).HasColumnName("InvControlGdsD_SndInv");

                entity.Property(e => e.InvControlGdsSi).HasColumnName("InvControlGds_Si");

                entity.HasOne(d => d.InvControlGdsSiNavigation)
                    .WithMany(p => p.InvControlGdsD)
                    .HasForeignKey(d => d.InvControlGdsSi)
                    .HasConstraintName("FK_InvControlGdsD_InvControlGds");
            });

            modelBuilder.Entity<InvCostQc>(entity =>
            {
                entity.HasKey(e => e.InvCostQcSi);

                entity.Property(e => e.InvCostQcSi).HasColumnName("InvCostQc_Si");

                entity.Property(e => e.InvCostQcCu)
                    .HasColumnName("InvCostQc_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvCostQcTp)
                    .HasColumnName("InvCostQc_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<InvCostQcUser>(entity =>
            {
                entity.HasKey(e => e.InvCostQcUserSi);

                entity.Property(e => e.InvCostQcUserSi).HasColumnName("InvCostQcUser_Si");

                entity.Property(e => e.InvCostQcSi).HasColumnName("InvCostQc_Si");

                entity.Property(e => e.InvCostQcUserAccept).HasColumnName("InvCostQcUser_Accept");

                entity.Property(e => e.UserRec)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.HasOne(d => d.InvCostQcSiNavigation)
                    .WithMany(p => p.InvCostQcUser)
                    .HasForeignKey(d => d.InvCostQcSi)
                    .HasConstraintName("FK_InvCostQcUser_InvCostQc");
            });

            modelBuilder.Entity<InvDelivery>(entity =>
            {
                entity.HasKey(e => e.InvdeliverySi)
                    .HasName("PK_Invdelivery");

                entity.Property(e => e.InvdeliverySi).HasColumnName("Invdelivery_Si");

                entity.Property(e => e.InvdeliveryCu)
                    .HasColumnName("Invdelivery_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvdeliveryTp)
                    .HasColumnName("Invdelivery_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<InvDocAuto>(entity =>
            {
                entity.HasKey(e => new { e.InvInvtSiSource, e.InvDocTypSiSource, e.InvInvtSiDest, e.InvDocTypSiDest });

                entity.Property(e => e.InvInvtSiSource).HasColumnName("InvInvt_Si_Source");

                entity.Property(e => e.InvDocTypSiSource).HasColumnName("InvDocTyp_Si_Source");

                entity.Property(e => e.InvInvtSiDest).HasColumnName("InvInvt_Si_Dest");

                entity.Property(e => e.InvDocTypSiDest).HasColumnName("InvDocTyp_Si_Dest");

                entity.Property(e => e.InvDocAutoExpandBom).HasColumnName("InvDocAuto_ExpandBOM");

                entity.HasOne(d => d.InvDocTypSiDestNavigation)
                    .WithMany(p => p.InvDocAutoInvDocTypSiDestNavigation)
                    .HasForeignKey(d => d.InvDocTypSiDest)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_InvDocAuto_InvDocTyp1");

                entity.HasOne(d => d.InvDocTypSiSourceNavigation)
                    .WithMany(p => p.InvDocAutoInvDocTypSiSourceNavigation)
                    .HasForeignKey(d => d.InvDocTypSiSource)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_InvDocAuto_InvDocTyp");

                entity.HasOne(d => d.InvInvtSiDestNavigation)
                    .WithMany(p => p.InvDocAutoInvInvtSiDestNavigation)
                    .HasForeignKey(d => d.InvInvtSiDest)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_InvDocAuto_InvInvt1");

                entity.HasOne(d => d.InvInvtSiSourceNavigation)
                    .WithMany(p => p.InvDocAutoInvInvtSiSourceNavigation)
                    .HasForeignKey(d => d.InvInvtSiSource)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_InvDocAuto_InvInvt");
            });

            modelBuilder.Entity<InvDocD>(entity =>
            {
                entity.HasKey(e => e.InvDocDSi);

                entity.HasIndex(e => e.CtbCostSi)
                    .HasName("IX_CtbCost_Si");

                entity.HasIndex(e => e.CtbProjectSi)
                    .HasName("IX_CtbProject_Si");

                entity.HasIndex(e => e.InvGdsSi)
                    .HasName("IX_InvGds_Si");

                entity.Property(e => e.InvDocDSi).HasColumnName("InvDocD_Si");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.CtbCostSi).HasColumnName("CtbCost_Si");

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.CtbProjectSi).HasColumnName("CtbProject_Si");

                entity.Property(e => e.InvControlGdsCu).HasColumnName("InvControlGds_Cu");

                entity.Property(e => e.InvDocDDesc)
                    .HasColumnName("InvDocD_Desc")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocDExpNo)
                    .HasColumnName("InvDocD_ExpNo")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocDExpirDateM)
                    .HasColumnName("InvDocD_ExpirDateM")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvDocDExpireDate)
                    .HasColumnName("InvDocD_ExpireDate")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.InvDocDFinalCostPrice).HasColumnName("InvDocD_FinalCostPrice");

                entity.Property(e => e.InvDocDPrcDec).HasColumnName("InvDocD_Prc_Dec");

                entity.Property(e => e.InvDocDPrcDec2).HasColumnName("InvDocD_Prc_Dec_2");

                entity.Property(e => e.InvDocDPrcDec3).HasColumnName("InvDocD_Prc_Dec_3");

                entity.Property(e => e.InvDocDPrcInc).HasColumnName("InvDocD_Prc_Inc");

                entity.Property(e => e.InvDocDPrcInc2).HasColumnName("InvDocD_Prc_Inc_2");

                entity.Property(e => e.InvDocDPrcInc3).HasColumnName("InvDocD_Prc_Inc_3");

                entity.Property(e => e.InvDocDPrice)
                    .HasColumnName("InvDocD_Price")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocDPrice2)
                    .HasColumnName("InvDocD_Price_2")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocDPriceBs)
                    .HasColumnName("InvDocD_PriceBs")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocDPriceC)
                    .HasColumnName("InvDocD_PriceC")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocDPriceCbs)
                    .HasColumnName("InvDocD_PriceCBs")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocDQty).HasColumnName("InvDocD_Qty");

                entity.Property(e => e.InvDocDQty2).HasColumnName("InvDocD_Qty2");

                entity.Property(e => e.InvDocDRow).HasColumnName("InvDocD_Row");

                entity.Property(e => e.InvDocDSerialKey)
                    .HasColumnName("InvDocD_SerialKey")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocDSi2).HasColumnName("InvDocD_Si_2");

                entity.Property(e => e.InvDocDSiParent).HasColumnName("InvDocD_Si_Parent");

                entity.Property(e => e.InvDocDSumTotal).HasColumnName("InvDocD_SumTotal");

                entity.Property(e => e.InvDocDTotal)
                    .HasColumnName("InvDocD_Total")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocDTotalBs)
                    .HasColumnName("InvDocD_TotalBs")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocDTotalC)
                    .HasColumnName("InvDocD_TotalC")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocDTotalCbs)
                    .HasColumnName("InvDocD_TotalCBs")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocDTp)
                    .HasColumnName("InvDocD_Tp")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocDstsSi)
                    .HasColumnName("InvDocDSts_Si")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.InvDocHSi).HasColumnName("InvDocH_Si");

                entity.Property(e => e.InvDocRqstSi).HasColumnName("InvDocRqst_Si");

                entity.Property(e => e.InvDocTmpDSi).HasColumnName("InvDocTmpD_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTypSi).HasColumnName("InvGdsTyp_Si");

                entity.Property(e => e.InvOprDefaultValue).HasColumnName("InvOpr_DefaultValue");

                entity.Property(e => e.InvOprDefaultValue2).HasColumnName("InvOpr_DefaultValue_2");

                entity.Property(e => e.InvOprDefaultValue3).HasColumnName("InvOpr_DefaultValue_3");

                entity.Property(e => e.InvOprSi).HasColumnName("InvOpr_Si");

                entity.Property(e => e.InvOprSi2).HasColumnName("InvOpr_Si_2");

                entity.Property(e => e.InvOprSi3).HasColumnName("InvOpr_Si_3");

                entity.Property(e => e.InvOprTp)
                    .HasColumnName("InvOpr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvOprTp2)
                    .HasColumnName("InvOpr_Tp_2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvOprTp3)
                    .HasColumnName("InvOpr_Tp_3")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvRqstDSi).HasColumnName("InvRqstD_Si");

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.Property(e => e.PurchaseRequestId).HasColumnName("PurchaseRequestID");

                entity.Property(e => e.SalExportPrmDSi).HasColumnName("SalExportPrmD_Si");

                entity.HasOne(d => d.AccLmSiNavigation)
                    .WithMany(p => p.InvDocD)
                    .HasForeignKey(d => d.AccLmSi)
                    .HasConstraintName("FK_InvDocD_CtbAccM");

                entity.HasOne(d => d.AccLtSiNavigation)
                    .WithMany(p => p.InvDocD)
                    .HasForeignKey(d => d.AccLtSi)
                    .HasConstraintName("FK_InvDocD_CtbAccT");

                entity.HasOne(d => d.CtbCostSiNavigation)
                    .WithMany(p => p.InvDocD)
                    .HasForeignKey(d => d.CtbCostSi)
                    .HasConstraintName("FK_InvDocD_CtbCost");

                entity.HasOne(d => d.CtbProjectSiNavigation)
                    .WithMany(p => p.InvDocD)
                    .HasForeignKey(d => d.CtbProjectSi)
                    .HasConstraintName("FK_InvDocD_CtbProject");

                entity.HasOne(d => d.InvDocDstsSiNavigation)
                    .WithMany(p => p.InvDocD)
                    .HasForeignKey(d => d.InvDocDstsSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_InvDocD_InvDocDSts");

                entity.HasOne(d => d.InvDocHSiNavigation)
                    .WithMany(p => p.InvDocD)
                    .HasForeignKey(d => d.InvDocHSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_InvDocD_InvDocH");

                entity.HasOne(d => d.InvDocTmpDSiNavigation)
                    .WithMany(p => p.InvDocD)
                    .HasForeignKey(d => d.InvDocTmpDSi)
                    .HasConstraintName("FK_InvDocD_InvDocTmpD");

                entity.HasOne(d => d.InvGdsSiNavigation)
                    .WithMany(p => p.InvDocD)
                    .HasForeignKey(d => d.InvGdsSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_InvDocD_InvGds");

                entity.HasOne(d => d.InvUntSiNavigation)
                    .WithMany(p => p.InvDocD)
                    .HasForeignKey(d => d.InvUntSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_InvDocD_InvUnt");
            });

            modelBuilder.Entity<InvDocDefinit>(entity =>
            {
                entity.HasKey(e => e.InvDocDefinitSi);

                entity.Property(e => e.InvDocDefinitSi).HasColumnName("InvDocDefinit_Si");

                entity.Property(e => e.Inv).HasColumnName("INV");

                entity.Property(e => e.InvDocDefinitTp)
                    .HasColumnName("InvDocDefinit_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LoginName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Mi).HasColumnName("MI");

                entity.Property(e => e.Pm).HasColumnName("PM");

                entity.Property(e => e.Qc).HasColumnName("QC");

                entity.Property(e => e.Sc).HasColumnName("SC");
            });

            modelBuilder.Entity<InvDocDsrl>(entity =>
            {
                entity.ToTable("InvDocDSrl");

                entity.Property(e => e.InvDocDsrlId).HasColumnName("InvDocDSrlID");

                entity.Property(e => e.InvDocDSi).HasColumnName("InvDocD_Si");

                entity.Property(e => e.InvDocDsrlDestroy).HasColumnName("InvDocDSrl_Destroy");

                entity.Property(e => e.InvDocDsrlLock).HasColumnName("InvDocDSrl_Lock");

                entity.Property(e => e.InvDocDsrlSrl)
                    .IsRequired()
                    .HasColumnName("InvDocDSrl_Srl")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocDsrlTyp)
                    .HasColumnName("InvDocDSrl_Typ")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.InvDocHSi).HasColumnName("InvDocH_Si");

                entity.Property(e => e.InvDocTypSi).HasColumnName("InvDocTyp_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTypSi).HasColumnName("InvGdsTyp_Si");

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.HasOne(d => d.InvGds)
                    .WithMany(p => p.InvDocDsrl)
                    .HasForeignKey(d => new { d.InvGdsSi, d.InvGdsTypSi })
                    .HasConstraintName("FK_INVDOCDS_REFERENCE_INVGDSTY");
            });

            modelBuilder.Entity<InvDocDsts>(entity =>
            {
                entity.HasKey(e => e.InvDocDstsSi);

                entity.ToTable("InvDocDSts");

                entity.Property(e => e.InvDocDstsSi).HasColumnName("InvDocDSts_Si");

                entity.Property(e => e.InvDocDstsTp)
                    .HasColumnName("InvDocDSts_Tp")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<InvDocH>(entity =>
            {
                entity.HasKey(e => e.InvDocHSi);

                entity.HasIndex(e => e.InvDocHCu)
                    .HasName("IX_InvDocH_Cu");

                entity.HasIndex(e => e.InvDocHDs)
                    .HasName("IX_InvDocH_Ds");

                entity.HasIndex(e => e.InvDocTypSi)
                    .HasName("IX_InvDocTyp_Si");

                entity.HasIndex(e => e.InvInvtSi)
                    .HasName("IX_InvInvt_Si");

                entity.Property(e => e.InvDocHSi).HasColumnName("InvDocH_Si");

                entity.Property(e => e.AccLmSiHdr).HasColumnName("AccLM_Si_Hdr");

                entity.Property(e => e.AccMSi)
                    .HasColumnName("AccM_Si")
                    .HasComment("حساب عامل مصرف");

                entity.Property(e => e.AccTSi).HasColumnName("AccT_Si");

                entity.Property(e => e.BarNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("شماره بارنامه");

                entity.Property(e => e.DescDriver)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasComment("اطلاعات تکمیلی راننده");

                entity.Property(e => e.InvControlGdsSi)
                    .HasColumnName("InvControlGds_Si")
                    .HasComment("کنترل کیفیت");

                entity.Property(e => e.InvDocDefinitSi).HasColumnName("InvDocDefinit_Si");

                entity.Property(e => e.InvDocHCarNo)
                    .HasColumnName("InvDocH_CarNo")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("شماره کامیون");

                entity.Property(e => e.InvDocHCu)
                    .HasColumnName("InvDocH_Cu")
                    .HasComment("شماره سند");

                entity.Property(e => e.InvDocHCu2)
                    .HasColumnName("InvDocH_Cu2")
                    .HasComment("شماره موقت");

                entity.Property(e => e.InvDocHCuDoc)
                    .HasColumnName("InvDocH_CuDoc")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHDefinite)
                    .IsRequired()
                    .HasColumnName("InvDocH_Definite")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.InvDocHDlvBuy)
                    .HasColumnName("InvDocH_DlvBuy")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("محل خرید");

                entity.Property(e => e.InvDocHDlvLoc)
                    .HasColumnName("InvDocH_DlvLoc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHDm)
                    .HasColumnName("InvDocH_Dm")
                    .HasColumnType("datetime")
                    .HasComment("تاریخ میلادی سند");

                entity.Property(e => e.InvDocHDrivername)
                    .HasColumnName("InvDocH_Drivername")
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasComment("نام راننده");

                entity.Property(e => e.InvDocHDs)
                    .IsRequired()
                    .HasColumnName("InvDocH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasComment("تاریخ سند");

                entity.Property(e => e.InvDocHEstimatePrc).HasColumnName("InvDocH_EstimatePrc");

                entity.Property(e => e.InvDocHExpNo)
                    .HasColumnName("InvDocH_ExpNo")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("کد رهگیری هدر");

                entity.Property(e => e.InvDocHGood)
                    .HasColumnName("InvDocH_Good")
                    .HasComment("کد پروژه");

                entity.Property(e => e.InvDocHLevel)
                    .HasColumnName("InvDocH_Level")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.InvDocHPm)
                    .HasColumnName("InvDocH_PM")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.InvDocHPrcDec)
                    .HasColumnName("InvDocH_Prc_Dec")
                    .HasColumnType("money")
                    .HasComment("کسورات");

                entity.Property(e => e.InvDocHPrcInc)
                    .HasColumnName("InvDocH_Prc_Inc")
                    .HasColumnType("money")
                    .HasComment("اضافات");

                entity.Property(e => e.InvDocHPurName)
                    .HasColumnName("InvDocH_PurName")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHQc)
                    .HasColumnName("InvDocH_Qc")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.InvDocHReference)
                    .HasColumnName("InvDocH_Reference")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("شماره عطف");

                entity.Property(e => e.InvDocHReference2).HasColumnName("InvDocH_Reference_2");

                entity.Property(e => e.InvDocHRfrncTyp)
                    .HasColumnName("InvDocH_RfrncTyp")
                    .HasComment("مبنای سند");

                entity.Property(e => e.InvDocHSentAcc).HasColumnName("InvDocH_SentAcc");

                entity.Property(e => e.InvDocHSi104).HasColumnName("InvDocH_Si_104");

                entity.Property(e => e.InvDocHSi2)
                    .HasColumnName("InvDocH_Si_2")
                    .HasComment("شماره سند مقصد");

                entity.Property(e => e.InvDocHSi214).HasColumnName("InvDocH_Si_214");

                entity.Property(e => e.InvDocHSiParent).HasColumnName("InvDocH_Si_Parent");

                entity.Property(e => e.InvDocHStmpCdt)
                    .HasColumnName("InvDocH_StmpCDT")
                    .HasColumnType("datetime")
                    .HasComment("تاریخ ایجاد سند");

                entity.Property(e => e.InvDocHStmpCus)
                    .HasColumnName("InvDocH_StmpCUs")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("نام کاربر ایجاد کننده");

                entity.Property(e => e.InvDocHStmpMdt)
                    .HasColumnName("InvDocH_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvDocHStmpTime)
                    .HasColumnName("InvDocH_StmpTime")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHStmpTimeEdit)
                    .HasColumnName("InvDocH_StmpTimeEdit")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHSts)
                    .HasColumnName("InvDocH_Sts")
                    .HasComment("وضعیت سند");

                entity.Property(e => e.InvDocHStsAcP107)
                    .HasColumnName("InvDocH_StsAcP107")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHTp)
                    .HasColumnName("InvDocH_Tp")
                    .HasMaxLength(4000)
                    .HasComment("توضیحات سند");

                entity.Property(e => e.InvDocHTp2)
                    .HasColumnName("InvDocH_Tp2")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHTrnsferDb).HasColumnName("InvDocH_TrnsferDB");

                entity.Property(e => e.InvDocHTypeReceipte)
                    .HasColumnName("InvDocH_TypeReceipte")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTmpHSi)
                    .HasColumnName("InvDocTmpH_Si")
                    .HasComment("شماره رسید موقت انبار");

                entity.Property(e => e.InvDocTypSi)
                    .HasColumnName("InvDocTyp_Si")
                    .HasComment("نوع سند");

                entity.Property(e => e.InvDocTypSiParent).HasColumnName("InvDocTyp_SiParent");

                entity.Property(e => e.InvExportPrmHSi)
                    .HasColumnName("InvExportPrmH_Si")
                    .HasComment("کد مجوز");

                entity.Property(e => e.InvInvtSi)
                    .HasColumnName("InvInvt_Si")
                    .HasComment("کد انبار");

                entity.Property(e => e.InvInvtSi2)
                    .HasColumnName("InvInvt_Si_2")
                    .HasComment("انبار مقصد");

                entity.Property(e => e.InvRqstHSi)
                    .HasColumnName("InvRqstH_Si")
                    .HasComment("شماره درخواست");

                entity.Property(e => e.InvStatus)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.InvTypSi)
                    .HasColumnName("InvTyp_Si")
                    .HasComment("نحوه خرید");

                entity.Property(e => e.InvVchrHId).HasColumnName("InvVchrH_Id");

                entity.Property(e => e.InvdeliverySi).HasColumnName("Invdelivery_Si");

                entity.Property(e => e.Invprint).HasComment("تعداد چاپ");

                entity.Property(e => e.InvprintUser)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasComment("نام کاربر چاپ گیرنده");

                entity.Property(e => e.LoginName)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PerPersonnelSi).HasColumnName("PerPersonnel_Si");

                entity.Property(e => e.PerPrsnlSi1)
                    .HasColumnName("PerPrsnl_Si_1")
                    .HasComment("تحویل گیرنده");

                entity.Property(e => e.PerPrsnlSi2)
                    .HasColumnName("PerPrsnl_Si_2")
                    .HasComment("تحویل دهنده");

                entity.Property(e => e.PurVndrSi)
                    .HasColumnName("PurVndr_Si")
                    .HasComment("تامین کننده");

                entity.Property(e => e.PurchaseSendId).HasColumnName("PurchaseSendID");

                entity.Property(e => e.SalCustSi)
                    .HasColumnName("SalCust_Si")
                    .HasComment("کد مشتری");

                entity.Property(e => e.SalDriverSi)
                    .HasColumnName("SalDriver_Si")
                    .HasComment("شماره راننده پرشده در سند تحویل فروش");

                entity.Property(e => e.SalDrvrSi).HasColumnName("SalDrvr_Si");

                entity.Property(e => e.SalExportPrmHSi)
                    .HasColumnName("SalExportPrmH_Si")
                    .HasComment("شماره مجوز فروش");

                entity.Property(e => e.SalInvcHSi)
                    .HasColumnName("SalInvcH_Si")
                    .HasComment("شماره فاکتور");

                entity.Property(e => e.SalPreinvcHSi)
                    .HasColumnName("SalPreinvcH_Si")
                    .HasComment("شماره پیش فاکتور");

                entity.Property(e => e.SalRetInvcHSi)
                    .HasColumnName("SalRetInvcH_Si")
                    .HasComment("شماره فاکتور برگشت از فروش");

                entity.Property(e => e.SalTypSi)
                    .HasColumnName("SalTyp_Si")
                    .HasComment("نحوه فروش");

                entity.Property(e => e.TempDoc).HasDefaultValueSql("((0))");

                entity.Property(e => e.TpCreator)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasComment("ایجاد کننده");

                entity.HasOne(d => d.InvDocTypSiNavigation)
                    .WithMany(p => p.InvDocH)
                    .HasForeignKey(d => d.InvDocTypSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_InvDocH_InvDocTyp");

                entity.HasOne(d => d.InvInvtSiNavigation)
                    .WithMany(p => p.InvDocH)
                    .HasForeignKey(d => d.InvInvtSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_InvDocH_InvInvt");

                entity.HasOne(d => d.PurVndrSiNavigation)
                    .WithMany(p => p.InvDocH)
                    .HasForeignKey(d => d.PurVndrSi)
                    .HasConstraintName("FK_InvDocH_PurVndr");

                entity.HasOne(d => d.SalInvcHSiNavigation)
                    .WithMany(p => p.InvDocH)
                    .HasForeignKey(d => d.SalInvcHSi)
                    .HasConstraintName("FK_InvDocH_SalInvcH");
            });

            modelBuilder.Entity<InvDocPrcMthd>(entity =>
            {
                entity.HasKey(e => new { e.InvInvtSi, e.InvDocTypSi })
                    .HasName("PK_InvPrcMthd");

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvDocTypSi).HasColumnName("InvDocTyp_Si");

                entity.Property(e => e.InvDocPrcMthdAsf).HasColumnName("InvDocPrcMthd_ASF");
            });

            modelBuilder.Entity<InvDocRqst>(entity =>
            {
                entity.HasKey(e => e.InvDocRqstSi);

                entity.Property(e => e.InvDocRqstSi)
                    .HasColumnName("InvDocRqst_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.InvDocDExpNo)
                    .HasColumnName("InvDocD_ExpNo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocRqstAlternativeQty).HasColumnName("InvDocRqst_AlternativeQty");

                entity.Property(e => e.InvDocRqstDs)
                    .HasColumnName("InvDocRqst_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocRqstQty).HasColumnName("InvDocRqst_Qty");

                entity.Property(e => e.InvDocRqstSiParent).HasColumnName("InvDocRqst_SiParent");

                entity.Property(e => e.InvDocRqstType)
                    .HasColumnName("InvDocRqst_Type")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsAlternativeSi).HasColumnName("InvGdsAlternative_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvuntSi).HasColumnName("Invunt_Si");

                entity.Property(e => e.ProductionOrderPlanSheetMrpdetailId).HasColumnName("ProductionOrderPlanSheetMRPDetailID");
            });

            modelBuilder.Entity<InvDocSms>(entity =>
            {
                entity.HasKey(e => e.InvDocSmsSi);

                entity.Property(e => e.InvDocSmsSi).HasColumnName("InvDocSms_Si");

                entity.Property(e => e.InvDocSmsTp)
                    .HasColumnName("InvDocSms_Tp")
                    .HasMaxLength(4000);
            });

            modelBuilder.Entity<InvDocTmpD>(entity =>
            {
                entity.HasKey(e => e.InvDocTmpDSi);

                entity.Property(e => e.InvDocTmpDSi).HasColumnName("InvDocTmpD_Si");

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.InvCostQcSi).HasColumnName("InvCostQc_Si");

                entity.Property(e => e.InvDevoteQc).HasColumnName("InvDevote_Qc");

                entity.Property(e => e.InvDocTmpDExpNo)
                    .HasColumnName("InvDocTmpD_ExpNo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTmpDExpirDateM)
                    .HasColumnName("InvDocTmpD_ExpirDateM")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvDocTmpDPrice)
                    .HasColumnName("InvDocTmpD_Price")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocTmpDPriceC)
                    .HasColumnName("InvDocTmpD_PriceC")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocTmpDQty).HasColumnName("InvDocTmpD_Qty");

                entity.Property(e => e.InvDocTmpDQtyAccept).HasColumnName("InvDocTmpD_QtyAccept");

                entity.Property(e => e.InvDocTmpDQtyInv).HasColumnName("InvDocTmpD_QtyInv");

                entity.Property(e => e.InvDocTmpDQtyreturn).HasColumnName("InvDocTmpD_Qtyreturn");

                entity.Property(e => e.InvDocTmpDTotal)
                    .HasColumnName("InvDocTmpD_Total")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocTmpDTotalC)
                    .HasColumnName("InvDocTmpD_TotalC")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocTmpDTp)
                    .HasColumnName("InvDocTmpD_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTmpHSi).HasColumnName("InvDocTmpH_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTypSi).HasColumnName("InvGdsTyp_Si");

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.PurchaseRequestId).HasColumnName("PurchaseRequestID");

                entity.Property(e => e.PurchaseSendDetailId).HasColumnName("PurchaseSendDetailID");

                entity.HasOne(d => d.InvDocTmpHSiNavigation)
                    .WithMany(p => p.InvDocTmpD)
                    .HasForeignKey(d => d.InvDocTmpHSi)
                    .HasConstraintName("FK_InvDocTmpD_InvDocTmpH");
            });

            modelBuilder.Entity<InvDocTmpH>(entity =>
            {
                entity.HasKey(e => e.InvDocTmpHSi);

                entity.Property(e => e.InvDocTmpHSi).HasColumnName("InvDocTmpH_Si");

                entity.Property(e => e.BarNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DescDriver)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHGood).HasColumnName("InvDocH_Good");

                entity.Property(e => e.InvDocTmpHCarNo)
                    .HasColumnName("InvDocTmpH_CarNo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTmpHCu).HasColumnName("InvDocTmpH_Cu");

                entity.Property(e => e.InvDocTmpHCu2)
                    .HasColumnName("InvDocTmpH_Cu2")
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.InvDocTmpHDlvBuy)
                    .HasColumnName("InvDocTmpH_DlvBuy")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTmpHDlvLoc)
                    .HasColumnName("InvDocTmpH_DlvLoc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTmpHDm)
                    .HasColumnName("InvDocTmpH_Dm")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvDocTmpHDs)
                    .HasColumnName("InvDocTmpH_Ds")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTmpHDsEdit)
                    .HasColumnName("InvDocTmpH_DsEdit")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvDocTmpHExpNo)
                    .HasColumnName("InvDocTmpH_ExpNo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTmpHLock).HasColumnName("InvDocTmpH_Lock");

                entity.Property(e => e.InvDocTmpHLoginEdit)
                    .HasColumnName("InvDocTmpH_LoginEdit")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTmpHPurName)
                    .HasColumnName("InvDocTmpH_PurName")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTmpHRef).HasColumnName("InvDocTmpH_Ref");

                entity.Property(e => e.InvDocTmpHReference)
                    .HasColumnName("InvDocTmpH_Reference")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTmpHSentDoc)
                    .HasColumnName("InvDocTmpH_SentDoc")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.InvDocTmpHStmpCus)
                    .HasColumnName("InvDocTmpH_StmpCUs")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTmpHStmpTim)
                    .HasColumnName("InvDocTmpH_StmpTim")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.InvDocTmpHSts).HasColumnName("InvDocTmpH_Sts");

                entity.Property(e => e.InvDocTmpHTp)
                    .HasColumnName("InvDocTmpH_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvRqstHSi).HasColumnName("InvRqstH_Si");

                entity.Property(e => e.InvTypSi).HasColumnName("InvTyp_Si");

                entity.Property(e => e.PerPrsnlSi2).HasColumnName("PerPrsnl_Si_2");

                entity.Property(e => e.PurOrdBuyHSi).HasColumnName("PurOrdBuyH_Si");

                entity.Property(e => e.PurReqstHSi).HasColumnName("PurReqstH_Si");

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");

                entity.Property(e => e.PurchaseSendId).HasColumnName("PurchaseSendID");

                entity.Property(e => e.RowSi).HasColumnName("Row_Si");

                entity.Property(e => e.SalDriverSi).HasColumnName("SalDriver_Si");
            });

            modelBuilder.Entity<InvDocTmpHattach>(entity =>
            {
                entity.HasKey(e => e.InvDocTmpHattachSi);

                entity.ToTable("InvDocTmpHAttach");

                entity.Property(e => e.InvDocTmpHattachSi).HasColumnName("InvDocTmpHAttach_Si");

                entity.Property(e => e.InvDocTmpHSi).HasColumnName("InvDocTmpH_Si");

                entity.Property(e => e.InvDocTmpHattachDs)
                    .HasColumnName("InvDocTmpHAttach_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTmpHattachFile)
                    .HasColumnName("InvDocTmpHAttach_File")
                    .HasColumnType("image");

                entity.Property(e => e.InvDocTmpHattachFileName)
                    .HasColumnName("InvDocTmpHAttach_FileName")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTmpHattachTp)
                    .HasColumnName("InvDocTmpHAttach_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.HasOne(d => d.InvDocTmpHSiNavigation)
                    .WithMany(p => p.InvDocTmpHattach)
                    .HasForeignKey(d => d.InvDocTmpHSi)
                    .HasConstraintName("FK_InvDocTmpHAttach_InvDocTmpH");
            });

            modelBuilder.Entity<InvDocTyp>(entity =>
            {
                entity.HasKey(e => e.InvDocTypSi);

                entity.Property(e => e.InvDocTypSi)
                    .HasColumnName("InvDocTyp_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.InvDocTypSqnc).HasColumnName("InvDocTyp_Sqnc");

                entity.Property(e => e.InvDocTypTp)
                    .HasColumnName("InvDocTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTypTp2)
                    .HasColumnName("InvDocTyp_Tp2")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<InvDocUser>(entity =>
            {
                entity.HasKey(e => e.InvDocUserSi);

                entity.Property(e => e.InvDocUserSi).HasColumnName("InvDocUser_Si");

                entity.Property(e => e.InvDocTypSi).HasColumnName("InvDocTyp_Si");

                entity.Property(e => e.InvDocUserTp)
                    .HasColumnName("InvDocUser_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<InvDocVchr>(entity =>
            {
                entity.HasKey(e => e.InvDocVchrSi);

                entity.Property(e => e.InvDocVchrSi).HasColumnName("InvDocVchr_Si");

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.InvDocHSi).HasColumnName("InvDocH_Si");

                entity.Property(e => e.InvDocVchrCredit)
                    .HasColumnName("InvDocVchr_Credit")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocVchrCreditC)
                    .HasColumnName("InvDocVchr_CreditC")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocVchrDebit)
                    .HasColumnName("InvDocVchr_Debit")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocVchrDebitC)
                    .HasColumnName("InvDocVchr_DebitC")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocVchrTp)
                    .HasColumnName("InvDocVchr_Tp")
                    .HasMaxLength(4000);
            });

            modelBuilder.Entity<InvDrctCnsuD>(entity =>
            {
                entity.HasKey(e => new { e.InvDrctCnsuHSi, e.InvGdsSi });

                entity.Property(e => e.InvDrctCnsuHSi).HasColumnName("InvDrctCnsuH_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvDrctCnsuDQty)
                    .HasColumnName("InvDrctCnsuD_Qty")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.InvDrctCnsuDTotal)
                    .HasColumnName("InvDrctCnsuD_Total")
                    .HasColumnType("money");

                entity.Property(e => e.InvDrctCnsuDUntPrc)
                    .HasColumnName("InvDrctCnsuD_UntPrc")
                    .HasColumnType("money");

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.PurRqstHSi).HasColumnName("PurRqstH_Si");

                entity.HasOne(d => d.InvDrctCnsuHSiNavigation)
                    .WithMany(p => p.InvDrctCnsuD)
                    .HasForeignKey(d => d.InvDrctCnsuHSi)
                    .HasConstraintName("FK_InvDrctCnsuD_InvDrctCnsuH");

                entity.HasOne(d => d.InvGdsSiNavigation)
                    .WithMany(p => p.InvDrctCnsuD)
                    .HasForeignKey(d => d.InvGdsSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_InvDrctCnsuD_InvGds");
            });

            modelBuilder.Entity<InvDrctCnsuH>(entity =>
            {
                entity.HasKey(e => e.InvDrctCnsuHSi);

                entity.Property(e => e.InvDrctCnsuHSi)
                    .HasColumnName("InvDrctCnsuH_Si")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.BarNumber)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCostSi).HasColumnName("CtbCost_Si");

                entity.Property(e => e.DescDriver)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvDrctCnsuHCarNo)
                    .HasColumnName("InvDrctCnsuH_CarNo")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvDrctCnsuHDlvBuy)
                    .HasColumnName("InvDrctCnsuH_DlvBuy")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvDrctCnsuHDlvLoc)
                    .HasColumnName("InvDrctCnsuH_DlvLoc")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvDrctCnsuHDt)
                    .HasColumnName("InvDrctCnsuH_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.InvDrctCnsuHPc)
                    .HasColumnName("InvDrctCnsuH_PC")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.InvDrctCnsuHPd)
                    .HasColumnName("InvDrctCnsuH_PD")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.InvDrctCnsuHPg)
                    .HasColumnName("InvDrctCnsuH_PG")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.InvDrctCnsuHPi)
                    .HasColumnName("InvDrctCnsuH_PI")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlSi1).HasColumnName("PerPrsnl_Si_1");

                entity.Property(e => e.PerPrsnlSi2).HasColumnName("PerPrsnl_Si_2");

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");
            });

            modelBuilder.Entity<InvDscr>(entity =>
            {
                entity.HasKey(e => e.InvDscrSi);

                entity.Property(e => e.InvDscrSi).HasColumnName("InvDscr_Si");

                entity.Property(e => e.InvDscrTp)
                    .HasColumnName("InvDscr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<InvEssentialAccess>(entity =>
            {
                entity.HasKey(e => e.InvEssentialAccessSi);

                entity.Property(e => e.InvEssentialAccessSi).HasColumnName("InvEssentialAccess_Si");

                entity.Property(e => e.InvEssentialAccessAct1).HasColumnName("InvEssentialAccess_Act1");

                entity.Property(e => e.InvEssentialAccessAct2).HasColumnName("InvEssentialAccess_Act2");

                entity.Property(e => e.UsesRec)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<InvExportPrmD>(entity =>
            {
                entity.HasKey(e => e.InvExportPrmDSi);

                entity.Property(e => e.InvExportPrmDSi).HasColumnName("InvExportPrmD_Si");

                entity.Property(e => e.InvExportPrmDQty).HasColumnName("InvExportPrmD_Qty");

                entity.Property(e => e.InvExportPrmDTp)
                    .HasColumnName("InvExportPrmD_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHSi).HasColumnName("InvExportPrmH_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTypSi).HasColumnName("InvGdsTyp_Si");

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.PurchaseSendDetailId).HasColumnName("PurchaseSendDetailID");

                entity.HasOne(d => d.InvExportPrmHSiNavigation)
                    .WithMany(p => p.InvExportPrmD)
                    .HasForeignKey(d => d.InvExportPrmHSi)
                    .HasConstraintName("FK_InvExportPrmD_InvExportPrmH");
            });

            modelBuilder.Entity<InvExportPrmH>(entity =>
            {
                entity.HasKey(e => e.InvExportPrmHSi);

                entity.Property(e => e.InvExportPrmHSi).HasColumnName("InvExportPrmH_Si");

                entity.Property(e => e.BarNumber)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.DescDriver)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHCar)
                    .HasColumnName("InvExportPrmH_Car")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHCarNo)
                    .HasColumnName("InvExportPrmH_CarNo")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHCu).HasColumnName("InvExportPrmH_Cu");

                entity.Property(e => e.InvExportPrmHDest)
                    .HasColumnName("InvExportPrmH_Dest")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHDlvBuy)
                    .HasColumnName("InvExportPrmH_DlvBuy")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHDriver)
                    .HasColumnName("InvExportPrmH_Driver")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHDs)
                    .HasColumnName("InvExportPrmH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.InvExportPrmHExtCus)
                    .HasColumnName("InvExportPrmH_ExtCus")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHGood).HasColumnName("InvExportPrmH_Good");

                entity.Property(e => e.InvExportPrmHLock).HasColumnName("InvExportPrmH_Lock");

                entity.Property(e => e.InvExportPrmHNo)
                    .HasColumnName("InvExportPrmH_No")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHRfrncTyp).HasColumnName("InvExportPrmH_RfrncTyp");

                entity.Property(e => e.InvExportPrmHStmpCdt)
                    .HasColumnName("InvExportPrmH_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvExportPrmHStmpCus)
                    .HasColumnName("InvExportPrmH_StmpCUs")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHStmpMdt)
                    .HasColumnName("InvExportPrmH_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvExportPrmHStmpMus)
                    .HasColumnName("InvExportPrmH_StmpMUs")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHSts).HasColumnName("InvExportPrmH_Sts");

                entity.Property(e => e.InvExportPrmHTahvil)
                    .HasColumnName("InvExportPrmH_Tahvil")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHTp)
                    .HasColumnName("InvExportPrmH_Tp")
                    .HasMaxLength(50);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvTypSi).HasColumnName("InvTyp_Si");

                entity.Property(e => e.PerPrsnlSi1).HasColumnName("PerPrsnl_Si_1");

                entity.Property(e => e.PerPrsnlSi2).HasColumnName("PerPrsnl_Si_2");

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");

                entity.Property(e => e.SalDriverSi).HasColumnName("SalDriver_Si");
            });

            modelBuilder.Entity<InvGds>(entity =>
            {
                entity.HasKey(e => e.InvGdsSi);

                entity.HasIndex(e => e.InvGdsCu)
                    .HasName("InvGds_Cu");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.CtbCurncySi)
                    .HasColumnName("CtbCurncy_Si")
                    .HasComment("ارز");

                entity.Property(e => e.EmployerNo)
                    .HasColumnName("Employer_No")
                    .HasComment("شماره کارفرما");

                entity.Property(e => e.InvGdsActive)
                    .HasColumnName("InvGds_Active")
                    .HasDefaultValueSql("((1))")
                    .HasComment("فعال");

                entity.Property(e => e.InvGdsActiveSale)
                    .HasColumnName("InvGds_ActiveSale")
                    .HasDefaultValueSql("((1))")
                    .HasComment("فعال در فروش");

                entity.Property(e => e.InvGdsActiveSerial)
                    .HasColumnName("InvGds_ActiveSerial")
                    .HasDefaultValueSql("((0))")
                    .HasComment("سریال پذیر");

                entity.Property(e => e.InvGdsBurden)
                    .HasColumnName("InvGds_burden")
                    .HasComment("وزن");

                entity.Property(e => e.InvGdsCm)
                    .HasColumnName("InvGds_Cm")
                    .HasColumnType("text")
                    .HasComment("توضیحات کالا");

                entity.Property(e => e.InvGdsCountdayInWay)
                    .HasColumnName("InvGds_CountdayInWay")
                    .HasComment("تعداد روزهای در راه");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("کد کالا");

                entity.Property(e => e.InvGdsDateBirth)
                    .HasColumnName("InvGds_DateBirth")
                    .HasColumnType("datetime")
                    .HasComment("تاریخ شناسنامه");

                entity.Property(e => e.InvGdsGrpSi)
                    .HasColumnName("InvGdsGrp_Si")
                    .HasComment("گروه کالا");

                entity.Property(e => e.InvGdsGrpSi2)
                    .HasColumnName("InvGdsGrp_Si_2")
                    .HasComment("گروه کالا-2");

                entity.Property(e => e.InvGdsGrpSiParent)
                    .HasColumnName("invGdsGrp_SiParent")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsHeight)
                    .HasColumnName("InvGds_height")
                    .HasComment("ارتفاع");

                entity.Property(e => e.InvGdsIcntrySi)
                    .HasColumnName("InvGdsICntry_Si")
                    .HasComment("کشور سازنده");

                entity.Property(e => e.InvGdsIcratrSi)
                    .HasColumnName("InvGdsICratr_Si")
                    .HasComment("تولید کننده");

                entity.Property(e => e.InvGdsLength)
                    .HasColumnName("InvGds_length")
                    .HasComment("طول");

                entity.Property(e => e.InvGdsLname)
                    .HasColumnName("InvGds_LName")
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasComment("نام لاتین کالا");

                entity.Property(e => e.InvGdsPrdGds).HasColumnName("InvGds_PrdGds");

                entity.Property(e => e.InvGdsPurchasePrc)
                    .HasColumnName("InvGds_PurchasePrc")
                    .HasColumnType("money")
                    .HasComment("قیمت خرید ارزی");

                entity.Property(e => e.InvGdsPurchasePrcC)
                    .HasColumnName("InvGds_PurchasePrcC")
                    .HasColumnType("money")
                    .HasComment("قیمت خرید ارزی");

                entity.Property(e => e.InvGdsQtyBestInWay).HasColumnName("InvGds_QtyBestInWay");

                entity.Property(e => e.InvGdsQtyMax)
                    .HasColumnName("InvGds_QtyMax")
                    .HasComment("حداکثر موجودی");

                entity.Property(e => e.InvGdsQtyMin)
                    .HasColumnName("InvGds_QtyMin")
                    .HasComment("نقطه سفارش");

                entity.Property(e => e.InvGdsQtyMinOrd)
                    .HasColumnName("InvGds_QtyMinOrd")
                    .HasComment("مقدار سفارش");

                entity.Property(e => e.InvGdsQtyReal)
                    .HasColumnName("InvGds_QtyReal")
                    .HasComment("موجودی واقعی");

                entity.Property(e => e.InvGdsQtySafe)
                    .HasColumnName("InvGds_QtySafe")
                    .HasComment("ذخیره ایمنی");

                entity.Property(e => e.InvGdsQtySale).HasColumnName("InvGds_QtySale");

                entity.Property(e => e.InvGdsQtyVirtual)
                    .HasColumnName("InvGds_QtyVirtual")
                    .HasComment("موجودی مجازی");

                entity.Property(e => e.InvGdsSalePrc)
                    .HasColumnName("InvGds_SalePrc")
                    .HasColumnType("money")
                    .HasComment("قیمت فروش");

                entity.Property(e => e.InvGdsStatusSi)
                    .HasColumnName("InvGdsStatus_Si")
                    .HasComment("وضعیت کالا");

                entity.Property(e => e.InvGdsStdPrc)
                    .HasColumnName("InvGds_StdPrc")
                    .HasColumnType("money")
                    .HasComment("قیمت استاندار");

                entity.Property(e => e.InvGdsTechNo)
                    .HasColumnName("InvGds_TechNo")
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasComment("شماره فنی");

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000)
                    .HasComment("عنوان کالا");

                entity.Property(e => e.InvGdsWidth)
                    .HasColumnName("InvGds_width")
                    .HasComment("عرض");

                entity.Property(e => e.InvUntCount).HasColumnName("InvUnt_Count");

                entity.Property(e => e.InvUntSi)
                    .HasColumnName("InvUnt_Si")
                    .HasComment("واحد سنجش");

                entity.Property(e => e.InvUntSiSale)
                    .HasColumnName("InvUnt_Si_Sale")
                    .HasComment("واحد سنجش فروش");

                entity.Property(e => e.InvbasketGdsSi)
                    .HasColumnName("InvbasketGds_Si")
                    .HasComment("سبد کالا");

                entity.Property(e => e.PlaneNo)
                    .HasColumnName("Plane_No")
                    .HasComment("شماره نقشه");

                entity.Property(e => e.PurGdsGrpSi).HasColumnName("PurGdsGrp_Si");

                entity.Property(e => e.ShowInWeb).HasComment("نمایش در وب");
            });

            modelBuilder.Entity<InvGdsAccC>(entity =>
            {
                entity.HasKey(e => new { e.InvGdsSi, e.AccLcSi });

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.HasOne(d => d.AccLcSiNavigation)
                    .WithMany(p => p.InvGdsAccC)
                    .HasForeignKey(d => d.AccLcSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_InvGdsAccC_CtbCost");

                entity.HasOne(d => d.AccLmSiNavigation)
                    .WithMany(p => p.InvGdsAccC)
                    .HasForeignKey(d => d.AccLmSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_InvGdsAccC_CtbAccM");

                entity.HasOne(d => d.AccLtSiNavigation)
                    .WithMany(p => p.InvGdsAccC)
                    .HasForeignKey(d => d.AccLtSi)
                    .HasConstraintName("FK_InvGdsAccC_CtbAccT");

                entity.HasOne(d => d.InvGdsSiNavigation)
                    .WithMany(p => p.InvGdsAccC)
                    .HasForeignKey(d => d.InvGdsSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_InvGdsAccC_InvGds");
            });

            modelBuilder.Entity<InvGdsAccP>(entity =>
            {
                entity.HasKey(e => new { e.InvGdsSi, e.AccLpSi });

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.HasOne(d => d.AccLmSiNavigation)
                    .WithMany(p => p.InvGdsAccP)
                    .HasForeignKey(d => d.AccLmSi)
                    .HasConstraintName("FK_InvGdsAccP_CtbAccM");

                entity.HasOne(d => d.AccLpSiNavigation)
                    .WithMany(p => p.InvGdsAccP)
                    .HasForeignKey(d => d.AccLpSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_InvGdsAccP_CtbProject");

                entity.HasOne(d => d.AccLtSiNavigation)
                    .WithMany(p => p.InvGdsAccP)
                    .HasForeignKey(d => d.AccLtSi)
                    .HasConstraintName("FK_InvGdsAccP_CtbAccT");

                entity.HasOne(d => d.InvGdsSiNavigation)
                    .WithMany(p => p.InvGdsAccP)
                    .HasForeignKey(d => d.InvGdsSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_InvGdsAccP_InvGds");
            });

            modelBuilder.Entity<InvGdsAttacH>(entity =>
            {
                entity.HasKey(e => e.InvGdsAttacHSi);

                entity.Property(e => e.InvGdsAttacHSi).HasColumnName("InvGdsAttacH_Si");

                entity.Property(e => e.InvGdsAttacHDs)
                    .HasColumnName("InvGdsAttacH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsAttacHFile)
                    .HasColumnName("InvGdsAttacH_File")
                    .HasColumnType("image");

                entity.Property(e => e.InvGdsAttacHFileName)
                    .HasColumnName("InvGdsAttacH_FileName")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsAttacHTp)
                    .HasColumnName("InvGdsAttacH_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");
            });

            modelBuilder.Entity<InvGdsEssential>(entity =>
            {
                entity.HasKey(e => e.InvGdsEssentialSi);

                entity.Property(e => e.InvGdsEssentialSi).HasColumnName("InvGdsEssential_Si");

                entity.Property(e => e.InvControlGdsSi).HasColumnName("InvControlGds_Si");

                entity.Property(e => e.InvDocTmpHSi).HasColumnName("InvDocTmpH_Si");

                entity.Property(e => e.InvGdsEssentialAccepted).HasColumnName("InvGdsEssential_Accepted");

                entity.Property(e => e.InvGdsEssentialAcp1).HasColumnName("InvGdsEssential_Acp1");

                entity.Property(e => e.InvGdsEssentialAcp2).HasColumnName("InvGdsEssential_Acp2");

                entity.Property(e => e.InvGdsEssentialAcptCdt)
                    .HasColumnName("InvGdsEssential_AcptCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvGdsEssentialAcptMus)
                    .HasColumnName("InvGdsEssential_AcptMUs")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsEssentialDesc)
                    .HasColumnName("InvGdsEssential_Desc")
                    .HasMaxLength(50);

                entity.Property(e => e.InvGdsEssentialQty).HasColumnName("InvGdsEssential_Qty");

                entity.Property(e => e.InvGdsEssentialSndGdsControl).HasColumnName("InvGdsEssential_SndGdsControl");

                entity.Property(e => e.InvGdsEssentialSndInv).HasColumnName("InvGdsEssential_SndInv");

                entity.Property(e => e.InvGdsEssentialStatus).HasColumnName("InvGdsEssential_Status");

                entity.Property(e => e.InvGdsEssentialStmpCdt)
                    .HasColumnName("InvGdsEssential_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvGdsEssentialStmpMus)
                    .HasColumnName("InvGdsEssential_StmpMUs")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsEssentialSts).HasColumnName("InvGdsEssential_Sts");
            });

            modelBuilder.Entity<InvGdsGrant>(entity =>
            {
                entity.HasKey(e => e.InvGdsGrantSi);

                entity.Property(e => e.InvGdsGrantSi).HasColumnName("InvGdsGrant_Si");

                entity.Property(e => e.InvGdsGrantCustQty).HasColumnName("InvGdsGrantCust_Qty");

                entity.Property(e => e.InvGdsGrantDs)
                    .HasColumnName("InvGdsGrant_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsGrantIntrmdQty).HasColumnName("InvGdsGrantIntrmd_Qty");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalIntrmdSi).HasColumnName("SalIntrmd_Si");

                entity.HasOne(d => d.InvGdsSiNavigation)
                    .WithMany(p => p.InvGdsGrant)
                    .HasForeignKey(d => d.InvGdsSi)
                    .HasConstraintName("FK_InvGdsGrant_InvGds");

                entity.HasOne(d => d.SalCustSiNavigation)
                    .WithMany(p => p.InvGdsGrant)
                    .HasForeignKey(d => d.SalCustSi)
                    .HasConstraintName("FK_InvGdsGrant_SalCust");

                entity.HasOne(d => d.SalIntrmdSiNavigation)
                    .WithMany(p => p.InvGdsGrant)
                    .HasForeignKey(d => d.SalIntrmdSi)
                    .HasConstraintName("FK_InvGdsGrant_SalIntrmd");
            });

            modelBuilder.Entity<InvGdsGrp>(entity =>
            {
                entity.HasKey(e => e.InvGdsGrpSi);

                entity.HasIndex(e => e.InvGdsGrpSiParent)
                    .HasName("IX_InvGdsGrp_SiParent");

                entity.Property(e => e.InvGdsGrpSi).HasColumnName("InvGdsGrp_Si");

                entity.Property(e => e.InvGdsGrpCu)
                    .HasColumnName("InvGdsGrp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsGrpSiParent).HasColumnName("InvGdsGrp_SiParent");

                entity.Property(e => e.InvGdsGrpTp)
                    .HasColumnName("InvGdsGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<InvGdsGrpUser>(entity =>
            {
                entity.HasKey(e => e.InvGdsGrpUserSi);

                entity.Property(e => e.InvGdsGrpUserSi).HasColumnName("InvGdsGrpUser_Si");

                entity.Property(e => e.InvGdsGrpSi).HasColumnName("InvGdsGrp_Si");

                entity.Property(e => e.InvGdsGrpUserTp)
                    .HasColumnName("InvGdsGrpUser_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<InvGdsIcntry>(entity =>
            {
                entity.HasKey(e => e.InvGdsIcntrySi);

                entity.ToTable("InvGdsICntry");

                entity.Property(e => e.InvGdsIcntrySi).HasColumnName("InvGdsICntry_Si");

                entity.Property(e => e.InvGdsIcntryCu)
                    .HasColumnName("InvGdsICntry_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsIcntryTp)
                    .HasColumnName("InvGdsICntry_Tp")
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<InvGdsIcratr>(entity =>
            {
                entity.HasKey(e => e.InvGdsIcratrSi);

                entity.ToTable("InvGdsICratr");

                entity.Property(e => e.InvGdsIcratrSi).HasColumnName("InvGdsICratr_Si");

                entity.Property(e => e.InvGdsIcratrCu)
                    .HasColumnName("InvGdsICratr_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsIcratrTp)
                    .HasColumnName("InvGdsICratr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<InvGdsPhoto>(entity =>
            {
                entity.HasKey(e => e.InvGdsSi);

                entity.Property(e => e.InvGdsSi)
                    .HasColumnName("InvGds_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.InvGdsPhotoIcon)
                    .HasColumnName("InvGdsPhoto_Icon")
                    .HasColumnType("image");

                entity.Property(e => e.InvGdsPhotoImage)
                    .HasColumnName("InvGdsPhoto_Image")
                    .HasColumnType("image");

                entity.HasOne(d => d.InvGdsSiNavigation)
                    .WithOne(p => p.InvGdsPhoto)
                    .HasForeignKey<InvGdsPhoto>(d => d.InvGdsSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_InvGdsPhoto_InvGds");
            });

            modelBuilder.Entity<InvGdsRepGds>(entity =>
            {
                entity.HasKey(e => e.InvGdsRepGdsSi);

                entity.Property(e => e.InvGdsRepGdsSi).HasColumnName("InvGdsRepGds_Si");

                entity.Property(e => e.InvGdsDSi).HasColumnName("InvGds_D_Si");

                entity.Property(e => e.InvGdsMSi).HasColumnName("InvGds_M_Si");

                entity.HasOne(d => d.InvGdsMSiNavigation)
                    .WithMany(p => p.InvGdsRepGds)
                    .HasForeignKey(d => d.InvGdsMSi)
                    .HasConstraintName("FK_InvGdsRepGds_InvGds");
            });

            modelBuilder.Entity<InvGdsResult>(entity =>
            {
                entity.HasKey(e => e.InvGdsResultSi);

                entity.Property(e => e.InvGdsResultSi)
                    .HasColumnName("InvGdsResult_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.InvGdsResultTp)
                    .HasColumnName("InvGdsResult_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<InvGdsStatus>(entity =>
            {
                entity.HasKey(e => e.InvGdsStatusSi);

                entity.Property(e => e.InvGdsStatusSi)
                    .HasColumnName("InvGdsStatus_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.InvGdsStatusTp)
                    .HasColumnName("InvGdsStatus_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<InvGdsToGds>(entity =>
            {
                entity.HasKey(e => e.InvGdsToGdsSi);

                entity.Property(e => e.InvGdsToGdsSi).HasColumnName("InvGdsToGds_Si");

                entity.Property(e => e.InvGdsSiD).HasColumnName("InvGds_Si_D");

                entity.Property(e => e.InvGdsSiM).HasColumnName("InvGds_Si_M");

                entity.Property(e => e.InvGdsToGdsQty)
                    .HasColumnName("InvGdsToGds_Qty")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.HasOne(d => d.InvInvtSiNavigation)
                    .WithMany(p => p.InvGdsToGds)
                    .HasForeignKey(d => d.InvInvtSi)
                    .HasConstraintName("FK_InvGdsToGds_InvInvt");
            });

            modelBuilder.Entity<InvGdsToInv>(entity =>
            {
                entity.HasKey(e => e.InvGdsToInvSi);

                entity.HasIndex(e => new { e.InvInvtSi, e.InvGdsSi })
                    .HasName("IX_InvGdsToInv")
                    .IsUnique();

                entity.Property(e => e.InvGdsToInvSi).HasColumnName("InvGdsToInv_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsToInvQtyMax).HasColumnName("InvGdsToInv_QtyMax");

                entity.Property(e => e.InvGdsToInvQtyMin).HasColumnName("InvGdsToInv_QtyMin");

                entity.Property(e => e.InvGdsToInvQtyReal).HasColumnName("InvGdsToInv_QtyReal");

                entity.Property(e => e.InvGdsToInvQtySafe).HasColumnName("InvGdsToInv_QtySafe");

                entity.Property(e => e.InvGdsToInvQtySale).HasColumnName("InvGdsToInv_QtySale");

                entity.Property(e => e.InvGdsToInvQtyVirtual).HasColumnName("InvGdsToInv_QtyVirtual");

                entity.Property(e => e.InvGdsToInvShelf)
                    .HasColumnName("InvGdsToInv_Shelf")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsToInvTag).HasColumnName("InvGdsToInv_Tag");

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.HasOne(d => d.InvGdsSiNavigation)
                    .WithMany(p => p.InvGdsToInv)
                    .HasForeignKey(d => d.InvGdsSi)
                    .HasConstraintName("FK_InvGdsToInv_InvGds");

                entity.HasOne(d => d.InvInvtSiNavigation)
                    .WithMany(p => p.InvGdsToInv)
                    .HasForeignKey(d => d.InvInvtSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_InvGdsToInv_InvInvt");
            });

            modelBuilder.Entity<InvGdsTyp>(entity =>
            {
                entity.HasKey(e => new { e.InvGdsSi, e.InvGdsTypSi });

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTypSi).HasColumnName("InvGdsTyp_Si");

                entity.Property(e => e.InvGdsTypTp)
                    .HasColumnName("InvGdsTyp_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.HasOne(d => d.InvUntSiNavigation)
                    .WithMany(p => p.InvGdsTyp)
                    .HasForeignKey(d => d.InvUntSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_InvGdsTyp_InvUnt");
            });

            modelBuilder.Entity<InvInvt>(entity =>
            {
                entity.HasKey(e => e.InvInvtSi);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.AccLcSi)
                    .HasColumnName("AccLC_Si")
                    .HasComment("حساب مرکز");

                entity.Property(e => e.AccLmSi)
                    .HasColumnName("AccLM_Si")
                    .HasComment("حساب معین");

                entity.Property(e => e.AccLpSi)
                    .HasColumnName("AccLP_Si")
                    .HasComment("حساب پروژه");

                entity.Property(e => e.AccLtSi)
                    .HasColumnName("AccLT_Si")
                    .HasComment("حساب تفصیلی");

                entity.Property(e => e.InvInvtAddress)
                    .HasColumnName("InvInvt_Address")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("آدرس انبار");

                entity.Property(e => e.InvInvtCu)
                    .IsRequired()
                    .HasColumnName("InvInvt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasComment("کد انبار");

                entity.Property(e => e.InvInvtIsActive)
                    .HasColumnName("InvInvt_IsActive")
                    .HasComment("فعال");

                entity.Property(e => e.InvInvtIsActiveSale)
                    .HasColumnName("InvInvt_IsActiveSale")
                    .HasComment("فعال در فروش");

                entity.Property(e => e.InvInvtSiParent)
                    .HasColumnName("InvInvt_SiParent")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("نام انبار");

                entity.Property(e => e.InvInvtTypeSi).HasColumnName("InvInvtType_Si");

                entity.HasOne(d => d.AccLcSiNavigation)
                    .WithMany(p => p.InvInvt)
                    .HasForeignKey(d => d.AccLcSi)
                    .HasConstraintName("FK_InvInvt_CtbCost");

                entity.HasOne(d => d.AccLpSiNavigation)
                    .WithMany(p => p.InvInvt)
                    .HasForeignKey(d => d.AccLpSi)
                    .HasConstraintName("FK_InvInvt_CtbProject");

                entity.HasOne(d => d.AccLtSiNavigation)
                    .WithMany(p => p.InvInvt)
                    .HasForeignKey(d => d.AccLtSi)
                    .HasConstraintName("FK_InvInvt_CtbAccT");
            });

            modelBuilder.Entity<InvMetrajCalc>(entity =>
            {
                entity.HasKey(e => e.SiId);

                entity.Property(e => e.DocTypSi).HasColumnName("DocTyp_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.Tp)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<InvRqstD>(entity =>
            {
                entity.HasKey(e => e.InvRqstDSi)
                    .HasName("PK_InvReqD");

                entity.Property(e => e.InvRqstDSi).HasColumnName("InvRqstD_Si");

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTypSi).HasColumnName("InvGdsTyp_Si");

                entity.Property(e => e.InvRqstDQty)
                    .HasColumnName("InvRqstD_Qty")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.InvRqstDQtyAccept).HasColumnName("InvRqstD_QtyAccept");

                entity.Property(e => e.InvRqstDQtyRemain).HasColumnName("InvRqstD_QtyRemain");

                entity.Property(e => e.InvRqstDTp)
                    .HasColumnName("InvRqstD_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvRqstHSi).HasColumnName("InvRqstH_Si");

                entity.Property(e => e.InvRqstStsSi).HasColumnName("InvRqstSts_Si");

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.HasOne(d => d.InvRqstHSiNavigation)
                    .WithMany(p => p.InvRqstD)
                    .HasForeignKey(d => d.InvRqstHSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_InvRqstD_InvRqstH");

                entity.HasOne(d => d.InvRqstStsSiNavigation)
                    .WithMany(p => p.InvRqstD)
                    .HasForeignKey(d => d.InvRqstStsSi)
                    .HasConstraintName("FK_InvRqstD_InvRqstSts");
            });

            modelBuilder.Entity<InvRqstH>(entity =>
            {
                entity.HasKey(e => e.InvRqstHSi);

                entity.Property(e => e.InvRqstHSi).HasColumnName("InvRqstH_Si");

                entity.Property(e => e.InvDocHSi).HasColumnName("InvDocH_Si");

                entity.Property(e => e.InvRqstHCu).HasColumnName("InvRqstH_Cu");

                entity.Property(e => e.InvRqstHCuPur).HasColumnName("InvRqstH_CuPur");

                entity.Property(e => e.InvRqstHDt)
                    .HasColumnName("InvRqstH_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.InvRqstHLock).HasColumnName("InvRqstH_Lock");

                entity.Property(e => e.InvRqstHStmpCdt)
                    .HasColumnName("InvRqstH_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvRqstHStmpCus)
                    .HasColumnName("InvRqstH_StmpCUs")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvRqstHStmpMdt)
                    .HasColumnName("InvRqstH_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvRqstHStmpMus)
                    .HasColumnName("InvRqstH_StmpMUs")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvRqstHStmpTime)
                    .HasColumnName("InvRqstH_StmpTime")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvRqstHStmpTimeEdit)
                    .HasColumnName("InvRqstH_StmpTimeEdit")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvRqstHTp)
                    .HasColumnName("InvRqstH_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.InvRqstTypSi)
                    .HasColumnName("InvRqstTyp_Si")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.InvinvtSi).HasColumnName("invinvt_si");

                entity.Property(e => e.PurReqstHSi).HasColumnName("PurReqstH_Si");
            });

            modelBuilder.Entity<InvRqstSts>(entity =>
            {
                entity.HasKey(e => e.InvRqstStsSi);

                entity.Property(e => e.InvRqstStsSi).HasColumnName("InvRqstSts_Si");

                entity.Property(e => e.InvRqstStsTp)
                    .HasColumnName("InvRqstSts_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<InvRqstTyp>(entity =>
            {
                entity.HasKey(e => e.InvRqstTypSi);

                entity.Property(e => e.InvRqstTypSi).HasColumnName("InvRqstTyp_Si");

                entity.Property(e => e.InvRqstTypTp)
                    .HasColumnName("InvRqstTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<InvTyp>(entity =>
            {
                entity.HasKey(e => e.InvTypSi);

                entity.Property(e => e.InvTypSi).HasColumnName("InvTyp_Si");

                entity.Property(e => e.InvTypCu)
                    .IsRequired()
                    .HasColumnName("InvTyp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvTypTp)
                    .HasColumnName("InvTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<InvUnt>(entity =>
            {
                entity.HasKey(e => e.InvUntSi);

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.InvUntCu)
                    .HasColumnName("InvUnt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<InvUntCnvrt>(entity =>
            {
                entity.HasKey(e => new { e.InvUntSiFr, e.InvUntSiTo });

                entity.Property(e => e.InvUntSiFr).HasColumnName("InvUnt_Si_Fr");

                entity.Property(e => e.InvUntSiTo).HasColumnName("InvUnt_Si_To");

                entity.Property(e => e.InvUntCnvrtCoefficient).HasColumnName("InvUntCnvrt_Coefficient");

                entity.HasOne(d => d.InvUntSiFrNavigation)
                    .WithMany(p => p.InvUntCnvrt)
                    .HasForeignKey(d => d.InvUntSiFr)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_InvUntCnvrt_InvUnt");
            });

            modelBuilder.Entity<InvUntRelated>(entity =>
            {
                entity.HasKey(e => new { e.InvUntSi, e.InvUntSiParent });

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.InvUntSiParent).HasColumnName("InvUnt_Si_Parent");

                entity.HasOne(d => d.InvUntSiParentNavigation)
                    .WithMany(p => p.InvUntRelated)
                    .HasForeignKey(d => d.InvUntSiParent)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_InvUntRelated_InvUnt");
            });

            modelBuilder.Entity<InvUsr>(entity =>
            {
                entity.HasKey(e => e.InvUsrSi);

                entity.HasIndex(e => e.InvUsrLgnName)
                    .HasName("IX_InvUsr")
                    .IsUnique();

                entity.Property(e => e.InvUsrSi).HasColumnName("InvUsr_Si");

                entity.Property(e => e.InvUsrAccount).HasColumnName("InvUsr_Account");

                entity.Property(e => e.InvUsrAcsC).HasColumnName("InvUsr_AcsC");

                entity.Property(e => e.InvUsrAcsM).HasColumnName("InvUsr_AcsM");

                entity.Property(e => e.InvUsrAcsMny).HasColumnName("InvUsr_AcsMny");

                entity.Property(e => e.InvUsrAcsP).HasColumnName("InvUsr_AcsP");

                entity.Property(e => e.InvUsrAcsQty).HasColumnName("InvUsr_AcsQty");

                entity.Property(e => e.InvUsrAcsT).HasColumnName("InvUsr_AcsT");

                entity.Property(e => e.InvUsrLgnName)
                    .IsRequired()
                    .HasColumnName("InvUsr_LgnName")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.InvUsrNumDay).HasColumnName("InvUsr_NumDay");

                entity.Property(e => e.InvUsrTp)
                    .HasColumnName("InvUsr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<InvUsrToInv>(entity =>
            {
                entity.HasKey(e => new { e.InvInvtSi, e.InvUsrSi });

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvUsrSi).HasColumnName("InvUsr_Si");
            });

            modelBuilder.Entity<InvVchrCodeMap>(entity =>
            {
                entity.Property(e => e.InvVchrCodeMapId)
                    .HasColumnName("InvVchrCodeMap_Id")
                    .ValueGeneratedNever();

                entity.Property(e => e.AccLcSiDest).HasColumnName("AccLC_Si_Dest");

                entity.Property(e => e.AccLcSiSource).HasColumnName("AccLC_Si_Source");

                entity.Property(e => e.AccLmSiDest).HasColumnName("AccLM_Si_Dest");

                entity.Property(e => e.AccLmSiSource).HasColumnName("AccLM_Si_Source");

                entity.Property(e => e.AccLpSiDest).HasColumnName("AccLP_Si_Dest");

                entity.Property(e => e.AccLpSiSource).HasColumnName("AccLP_Si_Source");

                entity.Property(e => e.AccLtSiDest).HasColumnName("AccLT_Si_Dest");

                entity.Property(e => e.AccLtSiSource).HasColumnName("AccLT_Si_Source");

                entity.HasOne(d => d.AccLcSiSourceNavigation)
                    .WithMany(p => p.InvVchrCodeMap)
                    .HasForeignKey(d => d.AccLcSiSource)
                    .HasConstraintName("FK_InvVchrCodeMap_CtbCost");

                entity.HasOne(d => d.AccLmSiSourceNavigation)
                    .WithMany(p => p.InvVchrCodeMap)
                    .HasForeignKey(d => d.AccLmSiSource)
                    .HasConstraintName("FK_InvVchrCodeMap_CtbAccM");

                entity.HasOne(d => d.AccLpSiSourceNavigation)
                    .WithMany(p => p.InvVchrCodeMap)
                    .HasForeignKey(d => d.AccLpSiSource)
                    .HasConstraintName("FK_InvVchrCodeMap_CtbProject");

                entity.HasOne(d => d.AccLtSiSourceNavigation)
                    .WithMany(p => p.InvVchrCodeMap)
                    .HasForeignKey(d => d.AccLtSiSource)
                    .HasConstraintName("FK_InvVchrCodeMap_CtbAccT");
            });

            modelBuilder.Entity<InvVchrD>(entity =>
            {
                entity.Property(e => e.InvVchrDId).HasColumnName("InvVchrD_Id");

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.InvVchrDCredit)
                    .HasColumnName("InvVchrD_Credit")
                    .HasColumnType("money");

                entity.Property(e => e.InvVchrDCreditC)
                    .HasColumnName("InvVchrD_CreditC")
                    .HasColumnType("money");

                entity.Property(e => e.InvVchrDDate)
                    .HasColumnName("InvVchrD_Date")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.InvVchrDDebit)
                    .HasColumnName("InvVchrD_Debit")
                    .HasColumnType("money");

                entity.Property(e => e.InvVchrDDebitC)
                    .HasColumnName("InvVchrD_DebitC")
                    .HasColumnType("money");

                entity.Property(e => e.InvVchrDTx)
                    .HasColumnName("InvVchrD_Tx")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvVchrHId).HasColumnName("InvVchrH_Id");

                entity.Property(e => e.InvVchrHRow).HasColumnName("InvVchrH_Row");

                entity.HasOne(d => d.AccLcSiNavigation)
                    .WithMany(p => p.InvVchrD)
                    .HasForeignKey(d => d.AccLcSi)
                    .HasConstraintName("FK_InvVchrD_CtbCost");

                entity.HasOne(d => d.AccLmSiNavigation)
                    .WithMany(p => p.InvVchrD)
                    .HasForeignKey(d => d.AccLmSi)
                    .HasConstraintName("FK_InvVchrD_CtbAccM");

                entity.HasOne(d => d.AccLpSiNavigation)
                    .WithMany(p => p.InvVchrD)
                    .HasForeignKey(d => d.AccLpSi)
                    .HasConstraintName("FK_InvVchrD_CtbProject");

                entity.HasOne(d => d.AccLtSiNavigation)
                    .WithMany(p => p.InvVchrD)
                    .HasForeignKey(d => d.AccLtSi)
                    .HasConstraintName("FK_InvVchrD_CtbAccT");

                entity.HasOne(d => d.InvVchrH)
                    .WithMany(p => p.InvVchrD)
                    .HasForeignKey(d => d.InvVchrHId)
                    .HasConstraintName("FK_InvVchrD_InvVchrH");
            });

            modelBuilder.Entity<InvVchrH>(entity =>
            {
                entity.Property(e => e.InvVchrHId)
                    .HasColumnName("InvVchrH_Id")
                    .ValueGeneratedNever();

                entity.Property(e => e.AccDocHSi).HasColumnName("AccDocH_Si");

                entity.Property(e => e.InvDocTypSi).HasColumnName("InvDocTyp_Si");

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvVchrHDate)
                    .HasColumnName("InvVchrH_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.InvVchrHDateFrom)
                    .HasColumnName("InvVchrH_DateFrom")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.InvVchrHDateUntil)
                    .HasColumnName("InvVchrH_DateUntil")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.InvVchrHSent).HasColumnName("InvVchrH_Sent");

                entity.Property(e => e.InvVchrHTx)
                    .HasColumnName("InvVchrH_Tx")
                    .HasMaxLength(4000);

                entity.HasOne(d => d.AccDocHSiNavigation)
                    .WithMany(p => p.InvVchrH)
                    .HasForeignKey(d => d.AccDocHSi)
                    .HasConstraintName("FK_InvVchrH_AccHDoc");

                entity.HasOne(d => d.InvDocTypSiNavigation)
                    .WithMany(p => p.InvVchrH)
                    .HasForeignKey(d => d.InvDocTypSi)
                    .HasConstraintName("FK_InvVchrH_InvDocTyp");

                entity.HasOne(d => d.InvInvtSiNavigation)
                    .WithMany(p => p.InvVchrH)
                    .HasForeignKey(d => d.InvInvtSi)
                    .HasConstraintName("FK_InvVchrH_InvInvt");
            });

            modelBuilder.Entity<InvbasketGds>(entity =>
            {
                entity.HasKey(e => e.InvbasketGdsSi);

                entity.Property(e => e.InvbasketGdsSi).HasColumnName("InvbasketGds_Si");

                entity.Property(e => e.InvbasketGdsCu)
                    .HasColumnName("InvbasketGds_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvbasketGdsTp)
                    .HasColumnName("InvbasketGds_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Invgds2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("invgds2");

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.EmployerNo).HasColumnName("Employer_No");

                entity.Property(e => e.InvGdsActive).HasColumnName("InvGds_Active");

                entity.Property(e => e.InvGdsActiveSale).HasColumnName("InvGds_ActiveSale");

                entity.Property(e => e.InvGdsActiveSerial).HasColumnName("InvGds_ActiveSerial");

                entity.Property(e => e.InvGdsBurden).HasColumnName("InvGds_burden");

                entity.Property(e => e.InvGdsCm)
                    .HasColumnName("InvGds_Cm")
                    .HasColumnType("text");

                entity.Property(e => e.InvGdsCountdayInWay).HasColumnName("InvGds_CountdayInWay");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsDateBirth)
                    .HasColumnName("InvGds_DateBirth")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvGdsGrpSi).HasColumnName("InvGdsGrp_Si");

                entity.Property(e => e.InvGdsGrpSi2).HasColumnName("InvGdsGrp_Si_2");

                entity.Property(e => e.InvGdsGrpSiParent)
                    .HasColumnName("invGdsGrp_SiParent")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsHeight).HasColumnName("InvGds_height");

                entity.Property(e => e.InvGdsIcntrySi).HasColumnName("InvGdsICntry_Si");

                entity.Property(e => e.InvGdsIcratrSi).HasColumnName("InvGdsICratr_Si");

                entity.Property(e => e.InvGdsLength).HasColumnName("InvGds_length");

                entity.Property(e => e.InvGdsLname)
                    .HasColumnName("InvGds_LName")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsPrdGds).HasColumnName("InvGds_PrdGds");

                entity.Property(e => e.InvGdsPurchasePrc)
                    .HasColumnName("InvGds_PurchasePrc")
                    .HasColumnType("money");

                entity.Property(e => e.InvGdsPurchasePrcC)
                    .HasColumnName("InvGds_PurchasePrcC")
                    .HasColumnType("money");

                entity.Property(e => e.InvGdsQtyBestInWay).HasColumnName("InvGds_QtyBestInWay");

                entity.Property(e => e.InvGdsQtyMax).HasColumnName("InvGds_QtyMax");

                entity.Property(e => e.InvGdsQtyMin).HasColumnName("InvGds_QtyMin");

                entity.Property(e => e.InvGdsQtyMinOrd).HasColumnName("InvGds_QtyMinOrd");

                entity.Property(e => e.InvGdsQtyReal).HasColumnName("InvGds_QtyReal");

                entity.Property(e => e.InvGdsQtySafe).HasColumnName("InvGds_QtySafe");

                entity.Property(e => e.InvGdsQtySale).HasColumnName("InvGds_QtySale");

                entity.Property(e => e.InvGdsQtyVirtual).HasColumnName("InvGds_QtyVirtual");

                entity.Property(e => e.InvGdsSalePrc)
                    .HasColumnName("InvGds_SalePrc")
                    .HasColumnType("money");

                entity.Property(e => e.InvGdsSi)
                    .HasColumnName("InvGds_Si")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.InvGdsStatusSi).HasColumnName("InvGdsStatus_Si");

                entity.Property(e => e.InvGdsStdPrc)
                    .HasColumnName("InvGds_StdPrc")
                    .HasColumnType("money");

                entity.Property(e => e.InvGdsTechNo)
                    .HasColumnName("InvGds_TechNo")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvGdsWidth).HasColumnName("InvGds_width");

                entity.Property(e => e.InvUntCount).HasColumnName("InvUnt_Count");

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.InvUntSiSale).HasColumnName("InvUnt_Si_Sale");

                entity.Property(e => e.InvbasketGdsSi).HasColumnName("InvbasketGds_Si");

                entity.Property(e => e.PlaneNo).HasColumnName("Plane_No");

                entity.Property(e => e.PurGdsGrpSi).HasColumnName("PurGdsGrp_Si");
            });

            modelBuilder.Entity<KabisehYears>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.KabisehYears1)
                    .IsRequired()
                    .HasColumnName("KabisehYears")
                    .HasMaxLength(4)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Kolnrf90>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("kolnrf90$");

                entity.Property(e => e.Desbedkol)
                    .HasColumnName("desbedkol")
                    .HasMaxLength(255);

                entity.Property(e => e.Desbeskol)
                    .HasColumnName("desbeskol")
                    .HasMaxLength(255);

                entity.Property(e => e.FarSt)
                    .HasColumnName("far_st")
                    .HasMaxLength(255);

                entity.Property(e => e.HsbKind)
                    .HasColumnName("hsb_kind")
                    .HasMaxLength(255);

                entity.Property(e => e.HsbKol)
                    .HasColumnName("hsb_kol")
                    .HasMaxLength(255);

                entity.Property(e => e.HsbKolNm)
                    .HasColumnName("hsb_kol_nm")
                    .HasMaxLength(255);

                entity.Property(e => e.KolOld)
                    .HasColumnName("kol_old")
                    .HasMaxLength(255);

                entity.Property(e => e.Mahiat)
                    .HasColumnName("mahiat")
                    .HasMaxLength(255);

                entity.Property(e => e.OlvtKol)
                    .HasColumnName("olvt_kol")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<KpurBuyD>(entity =>
            {
                entity.HasKey(e => e.PurBuyDSi);

                entity.Property(e => e.PurBuyDSi).HasColumnName("purBuyD_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.PurBuyDPrc).HasColumnName("purBuyD_Prc");

                entity.Property(e => e.PurBuyDQty).HasColumnName("purBuyD_Qty");

                entity.Property(e => e.PurBuyHSi).HasColumnName("purBuyH_Si");
            });

            modelBuilder.Entity<KpurBuyH>(entity =>
            {
                entity.HasKey(e => e.PurBuyHSi)
                    .HasName("PK_KPurBuy");

                entity.ToTable("KPurBuyH");

                entity.Property(e => e.PurBuyHSi).HasColumnName("PurBuyH_Si");

                entity.Property(e => e.PurBuyHCm)
                    .HasColumnName("PurBuyH_Cm")
                    .HasMaxLength(150);

                entity.Property(e => e.PurBuyHCu)
                    .HasColumnName("PurBuyH_Cu")
                    .HasMaxLength(50);

                entity.Property(e => e.PurBuyHDt)
                    .HasColumnName("PurBuyH_Dt")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurBuyHFaDt)
                    .HasColumnName("PurBuyH_FaDt")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurBuyHVnFno)
                    .HasColumnName("PurBuyH_VnFno")
                    .HasMaxLength(50);

                entity.Property(e => e.PurOrdrHSi).HasColumnName("PurOrdrH_Si");
            });

            modelBuilder.Entity<KpurHis>(entity =>
            {
                entity.HasKey(e => e.PurHisSi);

                entity.ToTable("KPurHis");

                entity.Property(e => e.PurHisSi).HasColumnName("PurHis_Si");

                entity.Property(e => e.PurHisCu)
                    .HasColumnName("PurHis_Cu")
                    .HasMaxLength(10);

                entity.Property(e => e.PurHisDs)
                    .HasColumnName("PurHis_Ds")
                    .HasMaxLength(100);

                entity.Property(e => e.PurHisDt)
                    .HasColumnName("PurHis_Dt")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurHisUser)
                    .HasColumnName("PurHis_User")
                    .HasMaxLength(25);

                entity.Property(e => e.PurHisUserLvl).HasColumnName("PurHis_UserLvl");

                entity.Property(e => e.PurLvlSi).HasColumnName("PurLvl_Si");

                entity.Property(e => e.PurRqstHSi).HasColumnName("PurRqstH_Si");
            });

            modelBuilder.Entity<KpurLvlD>(entity =>
            {
                entity.HasKey(e => e.PurLvlDSi);

                entity.ToTable("KPurLvlD");

                entity.Property(e => e.PurLvlDSi).HasColumnName("PurLvlD_Si");

                entity.Property(e => e.KpurLvlHSi).HasColumnName("KPurLvlH_Si");

                entity.Property(e => e.PurLvlDCu)
                    .HasColumnName("PurLvlD_Cu")
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<KpurLvlH>(entity =>
            {
                entity.HasKey(e => e.KpurLvlHSi);

                entity.ToTable("KPurLvlH");

                entity.Property(e => e.KpurLvlHSi).HasColumnName("KPurLvlH_Si");

                entity.Property(e => e.KpurLvlHCu)
                    .HasColumnName("KPurLvlH_Cu")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<KpurOrdD>(entity =>
            {
                entity.HasKey(e => e.PurOrdDSi);

                entity.Property(e => e.PurOrdDSi).HasColumnName("purOrdD_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.PurOrdDPrc).HasColumnName("purOrdD_Prc");

                entity.Property(e => e.PurOrdDQty).HasColumnName("purOrdD_Qty");

                entity.Property(e => e.PurOrdHSi).HasColumnName("purOrdH_Si");

                entity.Property(e => e.PurRqstDSi).HasColumnName("PurRqstD_Si");

                entity.HasOne(d => d.PurOrdHSiNavigation)
                    .WithMany(p => p.KpurOrdD)
                    .HasForeignKey(d => d.PurOrdHSi)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_KpurOrdD_KPurOrdrH");
            });

            modelBuilder.Entity<KpurOrdrH>(entity =>
            {
                entity.HasKey(e => e.PurOrdrHSi);

                entity.ToTable("KPurOrdrH");

                entity.Property(e => e.PurOrdrHSi).HasColumnName("PurOrdrH_Si");

                entity.Property(e => e.PurOrdrHCu)
                    .HasColumnName("PurOrdrH_Cu")
                    .HasMaxLength(50);

                entity.Property(e => e.PurOrdrHDs)
                    .HasColumnName("PurOrdrH_Ds")
                    .HasMaxLength(150);

                entity.Property(e => e.PurOrdrHDt)
                    .HasColumnName("PurOrdrH_Dt")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurOrdrHOfficial)
                    .HasColumnName("PurOrdrH_Official")
                    .HasMaxLength(50)
                    .IsFixedLength();

                entity.Property(e => e.PurOrdrHOk).HasColumnName("PurOrdrH_Ok");

                entity.Property(e => e.PurQryCu)
                    .HasColumnName("PurQry_Cu")
                    .HasMaxLength(50);

                entity.Property(e => e.PurRespSi).HasColumnName("PurResp_Si");

                entity.Property(e => e.PurRqstHSi).HasColumnName("PurRqstH_Si");

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");
            });

            modelBuilder.Entity<KpurQry>(entity =>
            {
                entity.HasKey(e => e.PurQrySi);

                entity.ToTable("KPurQry");

                entity.Property(e => e.PurQrySi).HasColumnName("PurQry_Si");

                entity.Property(e => e.PurQryComment)
                    .HasColumnName("PurQry_Comment")
                    .HasMaxLength(200);

                entity.Property(e => e.PurQryCond)
                    .HasColumnName("PurQry_Cond")
                    .HasMaxLength(100);

                entity.Property(e => e.PurQryCu)
                    .HasColumnName("PurQry_Cu")
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.PurQryDiscount).HasColumnName("PurQry_Discount");

                entity.Property(e => e.PurQryDt)
                    .HasColumnName("PurQry_Dt")
                    .HasMaxLength(10);

                entity.Property(e => e.PurQryEndDt)
                    .HasColumnName("PurQry_EndDt")
                    .HasMaxLength(100);

                entity.Property(e => e.PurQryKind)
                    .HasColumnName("PurQry_Kind")
                    .HasMaxLength(100);

                entity.Property(e => e.PurQryLastPrice)
                    .HasColumnName("PurQry_LastPrice")
                    .HasColumnType("money");

                entity.Property(e => e.PurQryPrice)
                    .HasColumnName("PurQry_Price")
                    .HasColumnType("money");

                entity.Property(e => e.PurQryReciptDt)
                    .HasColumnName("PurQry_ReciptDt")
                    .HasMaxLength(100);

                entity.Property(e => e.PurRqstHSi).HasColumnName("PurRqstH_Si");

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");
            });

            modelBuilder.Entity<KpurQryD>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.KpurqryDPrc)
                    .HasColumnName("KpurqryD_Prc")
                    .HasColumnType("money");

                entity.Property(e => e.PurQrySi).HasColumnName("PurQry_Si");

                entity.Property(e => e.PurRqstDQty).HasColumnName("PurRqstD_Qty");
            });

            modelBuilder.Entity<KpurRqstD>(entity =>
            {
                entity.HasKey(e => e.PurRqstDSi);

                entity.Property(e => e.PurRqstDSi).HasColumnName("PurRqstD_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.PurRqstDDrftDate)
                    .HasColumnName("PurRqstD_DrftDate")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurRqstDDrftNo)
                    .HasColumnName("PurRqstD_DrftNo")
                    .HasMaxLength(50);

                entity.Property(e => e.PurRqstDDt)
                    .HasColumnName("PurRqstD_DT")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurRqstDPurKind).HasColumnName("PurRqstD_PurKind");

                entity.Property(e => e.PurRqstDQty).HasColumnName("PurRqstD_Qty");

                entity.Property(e => e.PurRqstDQtyInv).HasColumnName("PurRqstD_QtyInv");

                entity.Property(e => e.PurRqstHSi).HasColumnName("PurRqstH_Si");
            });

            modelBuilder.Entity<KpurRqstH>(entity =>
            {
                entity.HasKey(e => e.PurRqstHSi);

                entity.ToTable("KPurRqstH");

                entity.Property(e => e.PurRqstHSi).HasColumnName("PurRqstH_Si");

                entity.Property(e => e.CtbOrgDepSi).HasColumnName("CtbOrgDep_Si");

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.Property(e => e.PurRqstHCu)
                    .HasColumnName("PurRqstH_Cu")
                    .HasMaxLength(15);

                entity.Property(e => e.PurRqstHDt)
                    .HasColumnName("PurRqstH_Dt")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurRqstHOffNext).HasColumnName("PurRqstH_OffNext");

                entity.Property(e => e.PurRqstHOfficial)
                    .HasColumnName("PurRqstH_Official")
                    .HasMaxLength(50);

                entity.Property(e => e.PurRqstHPlace).HasColumnName("PurRqstH_Place");

                entity.Property(e => e.PurRqstHQryNo).HasColumnName("PurRqstH_QryNo");

                entity.Property(e => e.PurRqstHQryTp)
                    .HasColumnName("PurRqstH_QryTp")
                    .HasMaxLength(150)
                    .IsFixedLength();

                entity.Property(e => e.PurRqstHTp)
                    .HasColumnName("PurRqstH_Tp")
                    .HasMaxLength(150);

                entity.Property(e => e.PurRqstLastUserLvl).HasColumnName("PurRqst_LastUserLvl");

                entity.Property(e => e.UserName)
                    .HasColumnName("UserName_")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<KpurUser>(entity =>
            {
                entity.HasKey(e => e.PurUserSi);

                entity.ToTable("KPurUser");

                entity.Property(e => e.PurUserSi).HasColumnName("PurUser_Si");

                entity.Property(e => e.CtbOrgDepSi).HasColumnName("CtbOrgDep_Si");

                entity.Property(e => e.PurLvlDSi).HasColumnName("PurLvlD_Si");

                entity.Property(e => e.PurUserCu)
                    .HasColumnName("PurUser_Cu")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<KsysTableName>(entity =>
            {
                entity.HasKey(e => e.TabId);

                entity.ToTable("KSYS_TableName");

                entity.Property(e => e.TabId).HasColumnName("TabID");

                entity.Property(e => e.Tabname).HasMaxLength(100);
            });

            modelBuilder.Entity<MemberShip>(entity =>
            {
                entity.ToTable("MemberShip", "web");

                entity.Property(e => e.MemberShipId).HasColumnName("MemberShipID");

                entity.Property(e => e.Password)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.PasswordSalt)
                    .IsRequired()
                    .HasMaxLength(128);

                entity.Property(e => e.SalIntrmdSi).HasColumnName("SalIntrmd_Si");

                entity.Property(e => e.Username)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.HasOne(d => d.SalIntrmdSiNavigation)
                    .WithMany(p => p.MemberShip)
                    .HasForeignKey(d => d.SalIntrmdSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_MemberShip_SalIntrmd");
            });

            modelBuilder.Entity<MonitorAccess>(entity =>
            {
                entity.HasKey(e => e.Code)
                    .HasName("PK_ReportAccess");

                entity.ToTable("MonitorAccess", "Monitor");

                entity.Property(e => e.Code).ValueGeneratedNever();

                entity.Property(e => e.DefaultBehavior)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ExceptUserNames).HasMaxLength(1024);
            });

            modelBuilder.Entity<MonitorPrint>(entity =>
            {
                entity.ToTable("MonitorPrint", "Monitor");

                entity.Property(e => e.MonitorPrintId).HasColumnName("MonitorPrintID");

                entity.Property(e => e.CreateDate).HasColumnType("smalldatetime");

                entity.Property(e => e.FileContent).IsRequired();

                entity.Property(e => e.ModifiedDate).HasColumnType("smalldatetime");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<MonitorProperty>(entity =>
            {
                entity.HasKey(e => e.Code)
                    .HasName("PK_MonitorDesc");

                entity.ToTable("MonitorProperty", "Monitor");

                entity.Property(e => e.Code).ValueGeneratedNever();

                entity.Property(e => e.Color).HasMaxLength(10);

                entity.Property(e => e.Hotkey).HasMaxLength(50);
            });

            modelBuilder.Entity<MonitorRule>(entity =>
            {
                entity.HasKey(e => e.Code);

                entity.ToTable("MonitorRule", "Monitor");

                entity.Property(e => e.Code).ValueGeneratedNever();
            });

            modelBuilder.Entity<Myprs>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("myprs");

                entity.Property(e => e.Birthdate)
                    .HasColumnName("birthdate")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Empdate)
                    .HasColumnName("empdate")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlCu)
                    .IsRequired()
                    .HasColumnName("PerPrsnl_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PerAdv>(entity =>
            {
                entity.HasKey(e => e.PerAdvSi);

                entity.Property(e => e.PerAdvSi).HasColumnName("PerAdv_Si");

                entity.Property(e => e.PerAdvCu).HasColumnName("PerAdv_Cu");

                entity.Property(e => e.PerAdvDs)
                    .IsRequired()
                    .HasColumnName("PerAdv_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerAdvPrice)
                    .HasColumnName("PerAdv_Price")
                    .HasColumnType("money");

                entity.Property(e => e.PerAdvTp)
                    .HasColumnName("PerAdv_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.Property(e => e.PerPyrlPeriodSi).HasColumnName("PerPyrlPeriod_Si");

                entity.HasOne(d => d.PerPrsnlSiNavigation)
                    .WithMany(p => p.PerAdv)
                    .HasForeignKey(d => d.PerPrsnlSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PerAdv_PerPrsnl");

                entity.HasOne(d => d.PerPyrlPeriodSiNavigation)
                    .WithMany(p => p.PerAdv)
                    .HasForeignKey(d => d.PerPyrlPeriodSi)
                    .HasConstraintName("FK_PerAdv_PerPyrlPeriod");
            });

            modelBuilder.Entity<PerAirLine>(entity =>
            {
                entity.HasKey(e => e.PerAirLineSi);

                entity.Property(e => e.PerAirLineSi).HasColumnName("PerAirLine_Si");

                entity.Property(e => e.PerAirLineTp)
                    .HasColumnName("PerAirLine_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PerBnkmaster>(entity =>
            {
                entity.HasKey(e => e.PerBnkmasterSi);

                entity.Property(e => e.PerBnkmasterSi).HasColumnName("PerBnkmaster_Si");

                entity.Property(e => e.PerBnkmasterAccountNo)
                    .HasColumnName("PerBnkmaster_AccountNo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerBnkmasterTp)
                    .HasColumnName("PerBnkmaster_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PerCmd>(entity =>
            {
                entity.HasKey(e => e.PerCmdSi)
                    .IsClustered(false);

                entity.HasIndex(e => e.PerCmdBgnDs)
                    .HasName("IX_PerCmd_Bgn_Ds");

                entity.HasIndex(e => e.PerCmdCu)
                    .HasName("IX_PerCmd_Cu")
                    .IsUnique();

                entity.HasIndex(e => e.PerCmdEndDs)
                    .HasName("IX_PerCmd_End_Ds");

                entity.Property(e => e.PerCmdSi).HasColumnName("PerCmd_Si");

                entity.Property(e => e.CtbCostSi).HasColumnName("CtbCost_Si");

                entity.Property(e => e.CtbOrgDepSi).HasColumnName("CtbOrgDep_Si");

                entity.Property(e => e.CtbOrgJobSi).HasColumnName("CtbOrgJob_Si");

                entity.Property(e => e.CtbOrgPstSi).HasColumnName("CtbOrgPst_Si");

                entity.Property(e => e.CtbProjectSi).HasColumnName("CtbProject_Si");

                entity.Property(e => e.PerCmdAct).HasColumnName("PerCmd_Act");

                entity.Property(e => e.PerCmdBgnDs)
                    .IsRequired()
                    .HasColumnName("PerCmd_Bgn_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdCntrctNo)
                    .HasColumnName("PerCmd_CntrctNo")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdCu)
                    .IsRequired()
                    .HasColumnName("PerCmd_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdDelayed).HasColumnName("PerCmd_Delayed");

                entity.Property(e => e.PerCmdDs)
                    .HasColumnName("PerCmd_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdEndDs)
                    .IsRequired()
                    .HasColumnName("PerCmd_End_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdStmpCdt)
                    .HasColumnName("PerCmd_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.PerCmdStmpCus)
                    .HasColumnName("PerCmd_StmpCUs")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdStmpMdt)
                    .HasColumnName("PerCmd_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.PerCmdStmpMus)
                    .HasColumnName("PerCmd_StmpMUs")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdStmpTime)
                    .HasColumnName("PerCmd_StmpTime")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdStmpTimeEdit)
                    .HasColumnName("PerCmd_StmpTimeEdit")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdTp)
                    .HasColumnName("PerCmd_Tp")
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdTypSi).HasColumnName("PerCmdTyp_Si");

                entity.Property(e => e.PerEmpTypSi).HasColumnName("PerEmpTyp_Si");

                entity.Property(e => e.PerOprGrpSi)
                    .HasColumnName("PerOprGrp_Si")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.Property(e => e.PerjobTypSi).HasColumnName("PerjobTyp_Si");

                entity.HasOne(d => d.CtbCostSiNavigation)
                    .WithMany(p => p.PerCmd)
                    .HasForeignKey(d => d.CtbCostSi)
                    .HasConstraintName("FK_PerCmd_CtbCost");

                entity.HasOne(d => d.CtbOrgDepSiNavigation)
                    .WithMany(p => p.PerCmd)
                    .HasForeignKey(d => d.CtbOrgDepSi)
                    .HasConstraintName("FK_PerCmd_CtbOrgDep");

                entity.HasOne(d => d.CtbOrgJobSiNavigation)
                    .WithMany(p => p.PerCmd)
                    .HasForeignKey(d => d.CtbOrgJobSi)
                    .HasConstraintName("FK_PerCmd_CtbOrgJob");

                entity.HasOne(d => d.CtbOrgPstSiNavigation)
                    .WithMany(p => p.PerCmd)
                    .HasForeignKey(d => d.CtbOrgPstSi)
                    .HasConstraintName("FK_PerCmd_CtbOrgPst");

                entity.HasOne(d => d.PerCmdTypSiNavigation)
                    .WithMany(p => p.PerCmd)
                    .HasForeignKey(d => d.PerCmdTypSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PerCmd_PerCmdTyp");

                entity.HasOne(d => d.PerEmpTypSiNavigation)
                    .WithMany(p => p.PerCmd)
                    .HasForeignKey(d => d.PerEmpTypSi)
                    .HasConstraintName("FK_PerCmd_PerEmpTyp");

                entity.HasOne(d => d.PerOprGrpSiNavigation)
                    .WithMany(p => p.PerCmd)
                    .HasForeignKey(d => d.PerOprGrpSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PerCmd_PerOprGrp");

                entity.HasOne(d => d.PerPrsnlSiNavigation)
                    .WithMany(p => p.PerCmd)
                    .HasForeignKey(d => d.PerPrsnlSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PerCmd_PerPrsnl");
            });

            modelBuilder.Entity<PerCmdDesc>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.PerCmdDescTp)
                    .IsRequired()
                    .HasColumnName("PerCmdDesc_Tp")
                    .HasMaxLength(512)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PerCmdOpr>(entity =>
            {
                entity.HasKey(e => e.PerCmdOprSi)
                    .IsClustered(false);

                entity.HasIndex(e => new { e.PerCmdSi, e.PerCmdOprCu })
                    .HasName("IX_PerCmdOpr")
                    .IsUnique();

                entity.Property(e => e.PerCmdOprSi).HasColumnName("PerCmdOpr_Si");

                entity.Property(e => e.PerCmdOprCalc)
                    .IsRequired()
                    .HasColumnName("PerCmdOpr_Calc")
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdOprCu)
                    .IsRequired()
                    .HasColumnName("PerCmdOpr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdOprIf)
                    .HasColumnName("PerCmdOpr_If")
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdOprIsMovagh).HasColumnName("PerCmdOpr_IsMovagh");

                entity.Property(e => e.PerCmdOprSeq).HasColumnName("PerCmdOpr_Seq");

                entity.Property(e => e.PerCmdOprTp)
                    .HasColumnName("PerCmdOpr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdSi).HasColumnName("PerCmd_Si");

                entity.HasOne(d => d.PerCmdSiNavigation)
                    .WithMany(p => p.PerCmdOpr)
                    .HasForeignKey(d => d.PerCmdSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PerCmdOpr_PerCmd");
            });

            modelBuilder.Entity<PerCmdTyp>(entity =>
            {
                entity.HasKey(e => e.PerCmdTypSi);

                entity.Property(e => e.PerCmdTypSi).HasColumnName("PerCmdTyp_Si");

                entity.Property(e => e.PerCmdTypCu)
                    .IsRequired()
                    .HasColumnName("PerCmdTyp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdTypTp)
                    .IsRequired()
                    .HasColumnName("PerCmdTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdTypTyp).HasColumnName("PerCmdTyp_Typ");
            });

            modelBuilder.Entity<PerContractTyp>(entity =>
            {
                entity.HasKey(e => e.PerContractTypSi);

                entity.HasIndex(e => e.PerContractTypCu)
                    .HasName("IX_PerContractTyp")
                    .IsUnique();

                entity.Property(e => e.PerContractTypSi).HasColumnName("PerContractTyp_Si");

                entity.Property(e => e.PerContractTypCu)
                    .IsRequired()
                    .HasColumnName("PerContractTyp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerContractTypTp)
                    .HasColumnName("PerContractTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PerCurency>(entity =>
            {
                entity.HasKey(e => e.PerCurencySi);

                entity.HasIndex(e => e.PerCurencyCu)
                    .HasName("IX_PerCurency")
                    .IsUnique();

                entity.Property(e => e.PerCurencySi).HasColumnName("PerCurency_Si");

                entity.Property(e => e.PerCurencyCu)
                    .IsRequired()
                    .HasColumnName("PerCurency_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerCurencyTp)
                    .HasColumnName("PerCurency_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PerDelay>(entity =>
            {
                entity.HasKey(e => e.PerDelaySi);

                entity.Property(e => e.PerDelaySi).HasColumnName("PerDelay_Si");

                entity.Property(e => e.PerOprCu)
                    .HasColumnName("PerOpr_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.Property(e => e.PerPyrlPeriodSi).HasColumnName("PerPyrlPeriod_Si");
            });

            modelBuilder.Entity<PerDskTaxPrimeH>(entity =>
            {
                entity.HasKey(e => e.PerDskTaxPrimeHSi);

                entity.Property(e => e.PerDskTaxPrimeHSi).HasColumnName("PerDskTaxPrimeH_Si");

                entity.Property(e => e.Description)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.PerDskTaxPrimeHCu)
                    .HasColumnName("PerDskTaxPrimeH_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerDskTaxPrimeHTp)
                    .HasColumnName("PerDskTaxPrimeH_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PerDskTaxPrimeK>(entity =>
            {
                entity.HasKey(e => e.PerDskTaxPrimeKSi);

                entity.Property(e => e.PerDskTaxPrimeKSi).HasColumnName("PerDskTaxPrimeK_Si");

                entity.Property(e => e.Description)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.PerDskTaxPrimeKCu)
                    .HasColumnName("PerDskTaxPrimeK_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerDskTaxPrimeKTp)
                    .HasColumnName("PerDskTaxPrimeK_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PerDskTaxPrimeP>(entity =>
            {
                entity.HasKey(e => e.PerDskTaxPrimePSi);

                entity.Property(e => e.PerDskTaxPrimePSi).HasColumnName("PerDskTaxPrimeP_Si");

                entity.Property(e => e.Description)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.PerDskTaxPrimePCu)
                    .HasColumnName("PerDskTaxPrimeP_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerDskTaxPrimePTp)
                    .HasColumnName("PerDskTaxPrimeP_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PerEmpTyp>(entity =>
            {
                entity.HasKey(e => e.PerEmpTypSi);

                entity.HasIndex(e => e.PerEmpTypCu)
                    .HasName("IX_PerEmpTyp")
                    .IsUnique();

                entity.Property(e => e.PerEmpTypSi).HasColumnName("PerEmpTyp_Si");

                entity.Property(e => e.PerEmpTypCu)
                    .IsRequired()
                    .HasColumnName("PerEmpTyp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerEmpTypTp)
                    .HasColumnName("PerEmpTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PerExempt>(entity =>
            {
                entity.HasKey(e => e.PerExemptSi);

                entity.Property(e => e.PerExemptSi).HasColumnName("PerExempt_Si");

                entity.Property(e => e.PerExemptCu)
                    .HasColumnName("PerExempt_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerExemptTp)
                    .HasColumnName("PerExempt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PerFn>(entity =>
            {
                entity.HasKey(e => e.PerFnSi);

                entity.Property(e => e.PerFnSi)
                    .HasColumnName("PerFn_Si")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerFnTp)
                    .HasColumnName("PerFn_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PerFurnitureFlag>(entity =>
            {
                entity.HasKey(e => e.PerFurnitureFlagSi);

                entity.Property(e => e.PerFurnitureFlagSi).HasColumnName("PerFurnitureFlag_Si");

                entity.Property(e => e.PerFurnitureFlagCu)
                    .HasColumnName("PerFurnitureFlag_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerFurnitureFlagTp)
                    .HasColumnName("PerFurnitureFlag_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PerHaml>(entity =>
            {
                entity.HasKey(e => e.PerHamlSi);

                entity.Property(e => e.PerHamlSi)
                    .HasColumnName("PerHaml_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.PerHamlTp)
                    .HasColumnName("PerHaml_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PerHtyp>(entity =>
            {
                entity.HasKey(e => e.PerHtypSi);

                entity.Property(e => e.PerHtypSi).HasColumnName("PerHtyp_Si");

                entity.Property(e => e.PerHtypTp)
                    .HasColumnName("PerHtyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PerIncDec>(entity =>
            {
                entity.HasKey(e => e.PerIncDecSi)
                    .IsClustered(false);

                entity.Property(e => e.PerIncDecSi).HasColumnName("PerIncDec_Si");

                entity.Property(e => e.PerIncDecDs)
                    .IsRequired()
                    .HasColumnName("PerIncDec_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerIncDecPrc)
                    .HasColumnName("PerIncDec_Prc")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PerIncDecTp)
                    .HasColumnName("PerIncDec_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.HasOne(d => d.PerPrsnlSiNavigation)
                    .WithMany(p => p.PerIncDec)
                    .HasForeignKey(d => d.PerPrsnlSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PerIncDec_PerPrsnl");
            });

            modelBuilder.Entity<PerInsrnPromise>(entity =>
            {
                entity.HasKey(e => e.PerInsrnPromiseSi);

                entity.Property(e => e.PerInsrnPromiseSi).HasColumnName("PerInsrnPromise_Si");

                entity.Property(e => e.PerInsrncGrpSi).HasColumnName("PerInsrncGrp_Si");

                entity.Property(e => e.PerInsrnpromiseCu)
                    .HasColumnName("PerInsrnpromise_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerInsrnpromiseTp)
                    .HasColumnName("PerInsrnpromise_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PerInsrncGrp>(entity =>
            {
                entity.HasKey(e => e.PerInsrncGrpSi);

                entity.Property(e => e.PerInsrncGrpSi).HasColumnName("PerInsrncGrp_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.InsrncBnkAdrs)
                    .HasColumnName("InsrncBnk_Adrs")
                    .HasMaxLength(4000);

                entity.Property(e => e.InsrncBnkEmployer)
                    .HasColumnName("InsrncBnk_Employer")
                    .HasMaxLength(50);

                entity.Property(e => e.InsrncBnkId)
                    .HasColumnName("InsrncBnk_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.InsrncBnkName)
                    .HasColumnName("InsrncBnk_Name")
                    .HasMaxLength(50);

                entity.Property(e => e.PerInsrncGrpAdrs)
                    .HasColumnName("PerInsrncGrp_Adrs")
                    .HasMaxLength(4000);

                entity.Property(e => e.PerInsrncGrpBrnch)
                    .HasColumnName("PerInsrncGrp_Brnch")
                    .HasMaxLength(50);

                entity.Property(e => e.PerInsrncGrpNo)
                    .HasColumnName("PerInsrncGrp_No")
                    .HasMaxLength(50);

                entity.Property(e => e.PerInsrncGrpTp)
                    .IsRequired()
                    .HasColumnName("PerInsrncGrp_Tp")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<PerInsurType>(entity =>
            {
                entity.HasKey(e => e.PerInsurTypeSi);

                entity.Property(e => e.PerInsurTypeSi).HasColumnName("PerInsurType_Si");

                entity.Property(e => e.PerInsurTypeCu)
                    .HasColumnName("PerInsurType_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerInsurTypeTp)
                    .HasColumnName("PerInsurType_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PerInterNational>(entity =>
            {
                entity.HasKey(e => e.PerInterNationalSi);

                entity.Property(e => e.PerInterNationalSi).HasColumnName("PerInterNational_Si");

                entity.Property(e => e.PerInterNationalCu)
                    .HasColumnName("PerInterNational_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerInterNationalTp)
                    .HasColumnName("PerInterNational_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PerLoanGivBak>(entity =>
            {
                entity.HasKey(e => e.PerLoanGivBakSi)
                    .HasName("PK_PerGivBakLoan");

                entity.Property(e => e.PerLoanGivBakSi).HasColumnName("PerLoanGivBak_Si");

                entity.Property(e => e.PerLoanGivBakDs)
                    .IsRequired()
                    .HasColumnName("PerLoanGivBak_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerLoanGivBakPrice)
                    .HasColumnName("PerLoanGivBak_Price")
                    .HasColumnType("money");

                entity.Property(e => e.PerLoanGivBakTp)
                    .HasColumnName("PerLoanGivBak_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PerLoanSi).HasColumnName("PerLoan_Si");

                entity.Property(e => e.PerPyrlPeriodSi).HasColumnName("PerPyrlPeriod_Si");

                entity.HasOne(d => d.PerLoanSiNavigation)
                    .WithMany(p => p.PerLoanGivBak)
                    .HasForeignKey(d => d.PerLoanSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PerLoanGivBak_PerLoans");

                entity.HasOne(d => d.PerPyrlPeriodSiNavigation)
                    .WithMany(p => p.PerLoanGivBak)
                    .HasForeignKey(d => d.PerPyrlPeriodSi)
                    .HasConstraintName("FK_PerLoanGivBak_PerPyrlPeriod");
            });

            modelBuilder.Entity<PerLoanRqst>(entity =>
            {
                entity.HasKey(e => e.PerLoanRqstSi);

                entity.Property(e => e.PerLoanRqstSi).HasColumnName("PerLoanRqst_Si");

                entity.Property(e => e.PerLoanRqstAccept).HasColumnName("PerLoanRqst_Accept");

                entity.Property(e => e.PerLoanRqstCountpayment).HasColumnName("PerLoanRqst_Countpayment");

                entity.Property(e => e.PerLoanRqstCu).HasColumnName("PerLoanRqst_Cu");

                entity.Property(e => e.PerLoanRqstDateAccept)
                    .HasColumnName("PerLoanRqst_DateAccept")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerLoanRqstDateInsert)
                    .HasColumnName("PerLoanRqst_DateInsert")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerLoanRqstDescAccept)
                    .HasColumnName("PerLoanRqst_DescAccept")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.PerLoanRqstDs)
                    .IsRequired()
                    .HasColumnName("PerLoanRqst_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerLoanRqstPrice)
                    .HasColumnName("PerLoanRqst_Price")
                    .HasColumnType("money");

                entity.Property(e => e.PerLoanRqstRem)
                    .HasColumnName("PerLoanRqst_Rem")
                    .HasColumnType("money");

                entity.Property(e => e.PerLoanRqstTp)
                    .HasColumnName("PerLoanRqst_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerLoanRqstUserAccept)
                    .HasColumnName("PerLoanRqst_UserAccept")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerLoanRqstUserInsert)
                    .HasColumnName("PerLoanRqst_UserInsert")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerLoanSi).HasColumnName("PerLoan_Si");

                entity.Property(e => e.PerLoanTypSi).HasColumnName("PerLoanTyp_Si");

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");
            });

            modelBuilder.Entity<PerLoanTyp>(entity =>
            {
                entity.HasKey(e => e.PerLoanTypSi);

                entity.Property(e => e.PerLoanTypSi).HasColumnName("PerLoanTyp_Si");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.PerLoanTypCu)
                    .IsRequired()
                    .HasColumnName("PerLoanTyp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerLoanTypTp)
                    .HasColumnName("PerLoanTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PerLoans>(entity =>
            {
                entity.HasKey(e => e.PerLoanSi)
                    .HasName("PK_PerLoan");

                entity.Property(e => e.PerLoanSi).HasColumnName("PerLoan_Si");

                entity.Property(e => e.PerLoanCu).HasColumnName("PerLoan_Cu");

                entity.Property(e => e.PerLoanDs)
                    .IsRequired()
                    .HasColumnName("PerLoan_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerLoanFinished)
                    .IsRequired()
                    .HasColumnName("PerLoan_Finished")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PerLoanPrice)
                    .HasColumnName("PerLoan_Price")
                    .HasColumnType("money");

                entity.Property(e => e.PerLoanRem)
                    .HasColumnName("PerLoan_Rem")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PerLoanRqstSi).HasColumnName("PerLoanRqst_Si");

                entity.Property(e => e.PerLoanStgFirstDate)
                    .IsRequired()
                    .HasColumnName("PerLoan_StgFirstDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerLoanStgPrice)
                    .HasColumnName("PerLoan_StgPrice")
                    .HasColumnType("money");

                entity.Property(e => e.PerLoanStgQty).HasColumnName("PerLoan_StgQty");

                entity.Property(e => e.PerLoanTp)
                    .HasColumnName("PerLoan_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerLoanTypSi).HasColumnName("PerLoanTyp_Si");

                entity.Property(e => e.PerLoanZamen)
                    .HasColumnName("PerLoan_Zamen")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.HasOne(d => d.PerLoanTypSiNavigation)
                    .WithMany(p => p.PerLoans)
                    .HasForeignKey(d => d.PerLoanTypSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PerLoans_PerLoanTyp");

                entity.HasOne(d => d.PerPrsnlSiNavigation)
                    .WithMany(p => p.PerLoans)
                    .HasForeignKey(d => d.PerPrsnlSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PerLoans_PerPrsnl");
            });

            modelBuilder.Entity<PerLoc>(entity =>
            {
                entity.HasKey(e => e.PerPrsnlDlocSi)
                    .HasName("PK_PerPrsnlDLoc");

                entity.Property(e => e.PerPrsnlDlocSi).HasColumnName("PerPrsnlDLoc_Si");

                entity.Property(e => e.PerPrsnlDlocTp)
                    .HasColumnName("PerPrsnlDLoc_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PerLocGrp>(entity =>
            {
                entity.HasKey(e => e.PerLocGrpSi);

                entity.Property(e => e.PerLocGrpSi).HasColumnName("PerLocGrp_Si");

                entity.Property(e => e.AccDocHSi).HasColumnName("AccDocH_Si");

                entity.Property(e => e.PerLocSi).HasColumnName("PerLoc_Si");

                entity.Property(e => e.PerPyrlPeriodSi).HasColumnName("PerPyrlPeriod_Si");
            });

            modelBuilder.Entity<PerLocUser>(entity =>
            {
                entity.HasKey(e => e.PerLocuserSi)
                    .HasName("PK_PerLocuser");

                entity.Property(e => e.PerLocuserSi).HasColumnName("PerLocuser_Si");

                entity.Property(e => e.PerLocSi).HasColumnName("PerLoc_Si");

                entity.Property(e => e.UserRec)
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PerMajor>(entity =>
            {
                entity.HasKey(e => e.PerMajorSi);

                entity.Property(e => e.PerMajorSi).HasColumnName("PerMajor_Si");

                entity.Property(e => e.PerMajorCu)
                    .HasColumnName("PerMajor_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerMajorTp)
                    .HasColumnName("PerMajor_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PerMamor>(entity =>
            {
                entity.HasKey(e => e.PerMamorSi);

                entity.Property(e => e.PerMamorSi).HasColumnName("PerMamor_Si");

                entity.Property(e => e.PerAirLineSi).HasColumnName("PerAirLine_Si");

                entity.Property(e => e.PerHamlSi).HasColumnName("PerHaml_Si");

                entity.Property(e => e.PerMamorBrkFcount).HasColumnName("PerMamor_BrkFCount");

                entity.Property(e => e.PerMamorCity)
                    .HasColumnName("PerMamor_City")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerMamorDay).HasColumnName("PerMamor_Day");

                entity.Property(e => e.PerMamorDesc)
                    .HasColumnName("PerMamor_Desc")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.PerMamorDnCount).HasColumnName("PerMamor_DnCount");

                entity.Property(e => e.PerMamorDs)
                    .HasColumnName("PerMamor_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PerMamorKmGo).HasColumnName("PerMamor_KmGo");

                entity.Property(e => e.PerMamorKmReturn).HasColumnName("PerMamor_KmReturn");

                entity.Property(e => e.PerMamorKmSum).HasColumnName("PerMamor_KmSum");

                entity.Property(e => e.PerMamorMfds)
                    .HasColumnName("PerMamor_MFDs")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PerMamorMfweek)
                    .HasColumnName("PerMamor_MFWeek")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerMamorMlds)
                    .HasColumnName("PerMamor_MLDs")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PerMamorMlweek)
                    .HasColumnName("PerMamor_MLWeek")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerMamorNaharCount).HasColumnName("PerMamor_NaharCount");

                entity.Property(e => e.PerMamorNightCount).HasColumnName("PerMamor_NightCount");

                entity.Property(e => e.PerMamorOnewayTicket).HasColumnName("PerMamor_OnewayTicket");

                entity.Property(e => e.PerMamorPlaceSi).HasColumnName("PerMamorPlace_Si");

                entity.Property(e => e.PerMamorPrice).HasColumnName("PerMamor_Price");

                entity.Property(e => e.PerMamorTashilFrDs)
                    .HasColumnName("PerMamor_TashilFrDs")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PerMamorTashilToDs)
                    .HasColumnName("PerMamor_TashilToDs")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PerMamorTashilat).HasColumnName("PerMamor_Tashilat");

                entity.Property(e => e.PerMamorTime).HasColumnName("PerMamor_Time");

                entity.Property(e => e.PerMamorTimeGo)
                    .HasColumnName("PerMamor_TimeGo")
                    .HasColumnType("datetime");

                entity.Property(e => e.PerMamorTimeReturn)
                    .HasColumnName("PerMamor_TimeReturn")
                    .HasColumnType("datetime");

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");
            });

            modelBuilder.Entity<PerMamorPlace>(entity =>
            {
                entity.HasKey(e => e.PerMamorPlaceSi);

                entity.Property(e => e.PerMamorPlaceSi).HasColumnName("PerMamorPlace_Si");

                entity.Property(e => e.PerMamorPlaceCu)
                    .HasColumnName("PerMamorPlace_Cu")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PerMamorPlaceTp)
                    .HasColumnName("PerMamorPlace_Tp")
                    .HasMaxLength(4000);
            });

            modelBuilder.Entity<PerOpr>(entity =>
            {
                entity.HasKey(e => e.PerOprSi);

                entity.HasIndex(e => new { e.PerOprCu, e.PerOprGrpSi })
                    .HasName("IX_PerOpr_Cu")
                    .IsUnique();

                entity.HasIndex(e => new { e.PerOprSeq, e.PerOprGrpSi })
                    .HasName("IX_PerOpr_Seq")
                    .IsUnique();

                entity.Property(e => e.PerOprSi).HasColumnName("PerOpr_Si");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.CtbCostSi).HasColumnName("CtbCost_Si");

                entity.Property(e => e.CtbProjectSi).HasColumnName("CtbProject_Si");

                entity.Property(e => e.PerOprAccNature)
                    .HasColumnName("PerOpr_AccNature")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.PerOprCalc)
                    .IsRequired()
                    .HasColumnName("PerOpr_Calc")
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.PerOprCu)
                    .IsRequired()
                    .HasColumnName("PerOpr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerOprDisplayFormat)
                    .HasColumnName("PerOpr_DisplayFormat")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerOprDisplayType)
                    .HasColumnName("PerOpr_DisplayType")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PerOprGrpSi).HasColumnName("PerOprGrp_Si");

                entity.Property(e => e.PerOprIf)
                    .HasColumnName("PerOpr_If")
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.PerOprIsReadFish).HasColumnName("PerOpr_IsReadFish");

                entity.Property(e => e.PerOprIsmovagh).HasColumnName("PerOpr_Ismovagh");

                entity.Property(e => e.PerOprLock).HasColumnName("PerOpr_Lock");

                entity.Property(e => e.PerOprNotShwSumFish).HasColumnName("PerOpr_NotShwSumFish");

                entity.Property(e => e.PerOprReadOnly)
                    .IsRequired()
                    .HasColumnName("PerOpr_ReadOnly")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PerOprSeq).HasColumnName("PerOpr_Seq");

                entity.Property(e => e.PerOprShowInCmd)
                    .IsRequired()
                    .HasColumnName("PerOpr_ShowInCmd")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PerOprShowInFish).HasColumnName("PerOpr_ShowInFish");

                entity.Property(e => e.PerOprShowInPyrl)
                    .IsRequired()
                    .HasColumnName("PerOpr_ShowInPyrl")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PerOprShowInWlst)
                    .IsRequired()
                    .HasColumnName("PerOpr_ShowInWLst")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PerOprShowprnCmd).HasColumnName("PerOpr_ShowprnCmd");

                entity.Property(e => e.PerOprTp)
                    .HasColumnName("PerOpr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PerOprView)
                    .IsRequired()
                    .HasColumnName("PerOpr_View")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.PerOprWthAccT)
                    .IsRequired()
                    .HasColumnName("PerOpr_WthAccT")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PerOprWthCmdAccT).HasColumnName("PerOpr_WthCmdAccT");

                entity.Property(e => e.PerOprWthCtbCost)
                    .IsRequired()
                    .HasColumnName("PerOpr_WthCtbCost")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PerOprWthCtbProject).HasColumnName("PerOpr_WthCtbProject");

                entity.Property(e => e.PerOprWthCtbWrkLst).HasColumnName("PerOpr_WthCtbWrkLst");

                entity.HasOne(d => d.AccLmSiNavigation)
                    .WithMany(p => p.PerOpr)
                    .HasForeignKey(d => d.AccLmSi)
                    .HasConstraintName("FK_PerOpr_CtbAccM");

                entity.HasOne(d => d.AccLtSiNavigation)
                    .WithMany(p => p.PerOpr)
                    .HasForeignKey(d => d.AccLtSi)
                    .HasConstraintName("FK_PerOpr_CtbAccT");

                entity.HasOne(d => d.PerOprGrpSiNavigation)
                    .WithMany(p => p.PerOpr)
                    .HasForeignKey(d => d.PerOprGrpSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PerOpr_PerOprGrp");
            });

            modelBuilder.Entity<PerOprGrp>(entity =>
            {
                entity.HasKey(e => e.PerOprGrpSi)
                    .HasName("PK_PerOprTyp");

                entity.Property(e => e.PerOprGrpSi).HasColumnName("PerOprGrp_Si");

                entity.Property(e => e.PerOprGrpCu)
                    .HasColumnName("PerOprGrp_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerOprGrpTp)
                    .IsRequired()
                    .HasColumnName("PerOprGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PerPaidType>(entity =>
            {
                entity.HasKey(e => e.PerPaidTypeSi);

                entity.Property(e => e.PerPaidTypeSi).HasColumnName("PerPaidType_Si");

                entity.Property(e => e.PerPaidTypeCu)
                    .HasColumnName("PerPaidType_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPaidTypeTp)
                    .HasColumnName("PerPaidType_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PerPaySummery>(entity =>
            {
                entity.HasKey(e => e.PerPaySummerySi);

                entity.Property(e => e.PerPaySummerySi).HasColumnName("PerPaySummery_Si");

                entity.Property(e => e.CtbBankSi).HasColumnName("CtbBank_Si");

                entity.Property(e => e.PerPaidTypeSi).HasColumnName("PerPaidType_Si");

                entity.Property(e => e.PerPaySummeryCheqPrice)
                    .HasColumnName("PerPaySummery_CheqPrice")
                    .HasColumnType("money");

                entity.Property(e => e.PerPaySummeryChpAccNo)
                    .HasColumnName("PerPaySummery_ChpAccNo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPaySummeryChpBankName)
                    .HasColumnName("PerPaySummery_ChpBankName")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPaySummeryChpBrnchName)
                    .HasColumnName("PerPaySummery_ChpBrnchName")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPaySummeryChpDate)
                    .HasColumnName("PerPaySummery_ChpDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerPaySummeryChpNo)
                    .HasColumnName("PerPaySummery_ChpNo")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PerPaySummeryDateInsu)
                    .HasColumnName("PerPaySummery_DateInsu")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerPaySummeryForNumPer).HasColumnName("PerPaySummery_ForNumPer");

                entity.Property(e => e.PerPaySummeryNumPer).HasColumnName("PerPaySummery_NumPer");

                entity.Property(e => e.PerPaySummeryPayDate)
                    .HasColumnName("PerPaySummery_PayDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerPaySummeryPayTypIn).HasColumnName("PerPaySummery_PayTypIn");

                entity.Property(e => e.PerPaySummeryPayType)
                    .HasColumnName("PerPaySummery_PayType")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPaySummeryPenalty1).HasColumnName("PerPaySummery_Penalty1");

                entity.Property(e => e.PerPaySummeryPenalty1Pre).HasColumnName("PerPaySummery_Penalty1Pre");

                entity.Property(e => e.PerPaySummeryPenalty2).HasColumnName("PerPaySummery_Penalty2");

                entity.Property(e => e.PerPaySummeryPenaltyPre).HasColumnName("PerPaySummery_PenaltyPre");

                entity.Property(e => e.PerPaySummerySum1Now).HasColumnName("PerPaySummery_Sum1Now");

                entity.Property(e => e.PerPaySummerySum1Pre).HasColumnName("PerPaySummery_Sum1Pre");

                entity.Property(e => e.PerPaySummerySum2Now).HasColumnName("PerPaySummery_Sum2Now");

                entity.Property(e => e.PerPaySummerySum2Pre).HasColumnName("PerPaySummery_Sum2Pre");

                entity.Property(e => e.PerPaySummerySumTaxNow).HasColumnName("PerPaySummery_SumTaxNow");

                entity.Property(e => e.PerPaySummerySumTaxPre).HasColumnName("PerPaySummery_SumTaxPre");

                entity.Property(e => e.PerPaySummeryTax).HasColumnName("PerPaySummery_Tax");

                entity.Property(e => e.PerPaySummeryTaxDebitNow).HasColumnName("PerPaySummery_TaxDebitNow");

                entity.Property(e => e.PerPaySummeryTaxDebitPre).HasColumnName("PerPaySummery_TaxDebitPre");

                entity.Property(e => e.PerPaySummeryTaxPay).HasColumnName("PerPaySummery_TaxPay");

                entity.Property(e => e.PerPayerHSi).HasColumnName("PerPayerH_Si");

                entity.Property(e => e.PerPaymentTypeSi).HasColumnName("PerPaymentType_Si");

                entity.Property(e => e.PerPyrlPeriodSi).HasColumnName("PerPyrlPeriod_Si");

                entity.Property(e => e.PerTaxGrpSi).HasColumnName("PerTaxGrp_Si");
            });

            modelBuilder.Entity<PerPaySummeryInfo>(entity =>
            {
                entity.HasKey(e => e.PerPaySummeryInfoSi);

                entity.Property(e => e.PerPaySummeryInfoSi).HasColumnName("PerPaySummeryInfo_Si");

                entity.Property(e => e.PerPaySummerySum1Now)
                    .HasColumnName("PerPaySummery_Sum1Now")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPaySummerySum1Pre)
                    .HasColumnName("PerPaySummery_Sum1Pre")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPaySummerySum2Now)
                    .HasColumnName("PerPaySummery_Sum2Now")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPaySummerySum2Pre)
                    .HasColumnName("PerPaySummery_Sum2Pre")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPaySummerySumTaxNow)
                    .HasColumnName("PerPaySummery_SumTaxNow")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPaySummerySumTaxPre)
                    .HasColumnName("PerPaySummery_SumTaxPre")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PerPayer>(entity =>
            {
                entity.HasKey(e => e.PerPayerSi)
                    .HasName("PK_PerPayerD");

                entity.Property(e => e.PerPayerSi).HasColumnName("PerPayer_Si");

                entity.Property(e => e.MmoadiType).HasColumnName("MMoadiType");

                entity.Property(e => e.PerHtypSi).HasColumnName("PerHtyp_Si");

                entity.Property(e => e.PerPayerAddress)
                    .HasColumnName("PerPayer_Address")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayerBrnch)
                    .HasColumnName("PerPayer_Brnch")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayerCodeTax).HasColumnName("PerPayer_CodeTax");

                entity.Property(e => e.PerPayerCompanyName)
                    .HasColumnName("PerPayer_CompanyName")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayerD1fname)
                    .HasColumnName("PerPayer_D1FName")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayerD1job)
                    .HasColumnName("PerPayer_D1Job")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayerD1lname)
                    .HasColumnName("PerPayer_D1LName")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayerD1meliCode)
                    .HasColumnName("PerPayer_D1MeliCode")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayerD2fname)
                    .HasColumnName("PerPayer_D2FName")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayerD2job)
                    .HasColumnName("PerPayer_D2Job")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayerD2lname)
                    .HasColumnName("PerPayer_D2LName")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayerD2meliCode)
                    .HasColumnName("PerPayer_D2MeliCode")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayerFname)
                    .HasColumnName("PerPayer_FName")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayerHtyp)
                    .HasColumnName("PerPayer_Htyp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayerIntreNnalCode)
                    .HasColumnName("PerPayer_IntreNnalCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayerLname)
                    .HasColumnName("PerPayer_LName")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayerModiType)
                    .HasColumnName("PerPayer_ModiType")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayerModiTypeIn).HasColumnName("PerPayer_ModiTypeIn");

                entity.Property(e => e.PerPayerPostCode)
                    .HasColumnName("PerPayer_PostCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayerTelNumber).HasColumnName("PerPayer_TelNumber");

                entity.Property(e => e.Tfn)
                    .HasColumnName("TFN")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PerPayerD>(entity =>
            {
                entity.HasKey(e => e.PerPayerDSi)
                    .HasName("PK_PerPayerD1");

                entity.Property(e => e.PerPayerDSi).HasColumnName("PerPayerD_Si");

                entity.Property(e => e.MmoadiType).HasColumnName("MMoadiType");

                entity.Property(e => e.PerHtypSi).HasColumnName("PerHtyp_Si");

                entity.Property(e => e.PerPayerAddress)
                    .HasColumnName("PerPayer_Address")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayerBrnch)
                    .HasColumnName("PerPayer_Brnch")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayerCodeTax).HasColumnName("PerPayer_CodeTax");

                entity.Property(e => e.PerPayerCompanyName)
                    .HasColumnName("PerPayer_CompanyName")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayerD1fname)
                    .HasColumnName("PerPayer_D1FName")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayerD1job)
                    .HasColumnName("PerPayer_D1Job")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayerD1lname)
                    .HasColumnName("PerPayer_D1LName")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayerD1meliCode)
                    .HasColumnName("PerPayer_D1MeliCode")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayerD2fname)
                    .HasColumnName("PerPayer_D2FName")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayerD2job)
                    .HasColumnName("PerPayer_D2Job")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayerD2lname)
                    .HasColumnName("PerPayer_D2LName")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayerD2meliCode)
                    .HasColumnName("PerPayer_D2MeliCode")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayerFname)
                    .HasColumnName("PerPayer_FName")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayerHSi).HasColumnName("PerPayerH_Si");

                entity.Property(e => e.PerPayerHtyp)
                    .HasColumnName("PerPayer_Htyp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayerIntreNnalCode)
                    .HasColumnName("PerPayer_IntreNnalCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayerLname)
                    .HasColumnName("PerPayer_LName")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayerModiType)
                    .HasColumnName("PerPayer_ModiType")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayerModiTypeIn).HasColumnName("PerPayer_ModiTypeIn");

                entity.Property(e => e.PerPayerPostCode)
                    .HasColumnName("PerPayer_PostCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayerTelNumber).HasColumnName("PerPayer_TelNumber");
            });

            modelBuilder.Entity<PerPayerH>(entity =>
            {
                entity.HasKey(e => e.PerPayerHSi);

                entity.Property(e => e.PerPayerHSi).HasColumnName("PerPayerH_Si");

                entity.Property(e => e.MmoadiType).HasColumnName("MMoadiType");

                entity.Property(e => e.PerPayerHCu)
                    .HasColumnName("PerPayerH_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PerPaymentType>(entity =>
            {
                entity.HasKey(e => e.PerPaymentTypeSi);

                entity.Property(e => e.PerPaymentTypeSi).HasColumnName("PerPaymentType_Si");

                entity.Property(e => e.PerPaymentTypeCu)
                    .HasColumnName("PerPaymentType_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPaymentTypeTp)
                    .HasColumnName("PerPaymentType_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PerPayroll>(entity =>
            {
                entity.HasKey(e => e.PerPayrollSi)
                    .HasName("PK_PerPayrl")
                    .IsClustered(false);

                entity.HasIndex(e => new { e.PerPrsnlSi, e.PerPyrlPeriodSi, e.PerPayrollCu, e.PerPayrollDelayed })
                    .HasName("IX_PerPayroll")
                    .IsUnique();

                entity.HasIndex(e => new { e.PerPayrollCalc, e.PerPayrollDelayed, e.PerPayrollIf, e.PerPayrollIsmovagh, e.PerPayrollSeq, e.PerPayrollTp, e.PerPayrollValue, e.PerPayrollCu, e.PerPyrlPeriodSi, e.PerCmdSi })
                    .HasName("<Name of Missing Index, sysname,>");

                entity.Property(e => e.PerPayrollSi).HasColumnName("PerPayroll_Si");

                entity.Property(e => e.PerCmdSi).HasColumnName("PerCmd_Si");

                entity.Property(e => e.PerPayrollCalc)
                    .IsRequired()
                    .HasColumnName("PerPayroll_Calc")
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayrollCu)
                    .IsRequired()
                    .HasColumnName("PerPayroll_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayrollDelayed).HasColumnName("PerPayroll_Delayed");

                entity.Property(e => e.PerPayrollIf)
                    .HasColumnName("PerPayroll_If")
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayrollIsmovagh).HasColumnName("PerPayroll_Ismovagh");

                entity.Property(e => e.PerPayrollSeq).HasColumnName("PerPayroll_Seq");

                entity.Property(e => e.PerPayrollTp)
                    .HasColumnName("PerPayroll_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayrollValue)
                    .HasColumnName("PerPayroll_Value")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.Property(e => e.PerPyrlPeriodSi).HasColumnName("PerPyrlPeriod_Si");
            });

            modelBuilder.Entity<PerPayrollDelayed>(entity =>
            {
                entity.HasKey(e => e.PerPayrollDelayedSi)
                    .HasName("PK_PerPayrollDelayedl")
                    .IsClustered(false);

                entity.Property(e => e.PerPayrollDelayedSi).HasColumnName("PerPayrollDelayed_Si");

                entity.Property(e => e.PerCmdSi).HasColumnName("PerCmd_Si");

                entity.Property(e => e.PerPayrollDelayedCalc)
                    .HasColumnName("PerPayrollDelayed_Calc")
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayrollDelayedCu)
                    .IsRequired()
                    .HasColumnName("PerPayrollDelayed_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayrollDelayedIf)
                    .HasColumnName("PerPayrollDelayed_If")
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayrollDelayedSeq).HasColumnName("PerPayrollDelayed_Seq");

                entity.Property(e => e.PerPayrollDelayedTp)
                    .HasColumnName("PerPayrollDelayed_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayrollDelayedValue)
                    .HasColumnName("PerPayrollDelayed_Value")
                    .HasColumnType("money");

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.Property(e => e.PerPyrlPeriodSi).HasColumnName("PerPyrlPeriod_Si");
            });

            modelBuilder.Entity<PerPlaceOfficeStatus>(entity =>
            {
                entity.HasKey(e => e.PerPlaceOfficeStatusSi);

                entity.HasIndex(e => e.PerPlaceOfficeStatusCu)
                    .HasName("IX_PerPlaceOfficeStatus")
                    .IsUnique();

                entity.Property(e => e.PerPlaceOfficeStatusSi).HasColumnName("PerPlaceOfficeStatus_Si");

                entity.Property(e => e.PerPlaceOfficeStatusCu)
                    .IsRequired()
                    .HasColumnName("PerPlaceOfficeStatus_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPlaceOfficeStatusTp)
                    .HasColumnName("PerPlaceOfficeStatus_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PerPrsnl>(entity =>
            {
                entity.HasKey(e => e.PerPrsnlSi)
                    .IsClustered(false);

                entity.HasIndex(e => e.PerPrsnlCu)
                    .HasName("IX_PerPrsnl_Cu")
                    .IsUnique();

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.Property(e => e.CtbOrgDepSi).HasColumnName("CtbOrgDep_Si");

                entity.Property(e => e.CtbOrgJobSi).HasColumnName("CtbOrgJob_Si");

                entity.Property(e => e.CtbOrgPstSi).HasColumnName("CtbOrgPst_Si");

                entity.Property(e => e.PerPrsnlAct).HasColumnName("PerPrsnl_Act");

                entity.Property(e => e.PerPrsnlCu)
                    .IsRequired()
                    .HasColumnName("PerPrsnl_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlFname)
                    .HasColumnName("PerPrsnl_FName")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlLname)
                    .IsRequired()
                    .HasColumnName("PerPrsnl_LName")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlTp)
                    .HasColumnName("PerPrsnl_Tp")
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasComputedColumnSql("(([PerPrsnl_LName]+' ')+[PerPrsnl_FName])");
            });

            modelBuilder.Entity<PerPrsnlAttach>(entity =>
            {
                entity.HasKey(e => e.PerPrsnlAttachSi);

                entity.Property(e => e.PerPrsnlAttachSi).HasColumnName("PerPrsnlAttach_Si");

                entity.Property(e => e.PerPrsnlAttachDs)
                    .HasColumnName("PerPrsnlAttach_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlAttachFile)
                    .HasColumnName("PerPrsnlAttach_File")
                    .HasColumnType("image");

                entity.Property(e => e.PerPrsnlAttachFileName)
                    .HasColumnName("PerPrsnlAttach_FileName")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlAttachTp)
                    .HasColumnName("PerPrsnlAttach_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.HasOne(d => d.PerPrsnlSiNavigation)
                    .WithMany(p => p.PerPrsnlAttach)
                    .HasForeignKey(d => d.PerPrsnlSi)
                    .HasConstraintName("FK_PerPrsnlAttach_PerPrsnl");
            });

            modelBuilder.Entity<PerPrsnlD>(entity =>
            {
                entity.HasKey(e => e.PerPrsnlSi)
                    .IsClustered(false);

                entity.Property(e => e.PerPrsnlSi)
                    .HasColumnName("PerPrsnl_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.BankAccountNo).HasColumnName("BankAccountNO");

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.InsrncDname)
                    .HasColumnName("Insrnc_DName")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InsrncFname)
                    .HasColumnName("Insrnc_FName")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InsrncIdno)
                    .HasColumnName("Insrnc_IDNO")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InsrncIdplc)
                    .HasColumnName("Insrnc_IDPLC")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InsrncLname)
                    .HasColumnName("Insrnc_LName")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InsrncNat)
                    .HasColumnName("Insrnc_NAT")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InsrncNo)
                    .HasColumnName("Insrnc_No")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InsrncOcp)
                    .HasColumnName("Insrnc_OCP")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InsrncOcpcode)
                    .HasColumnName("Insrnc_OCPCode")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InsrncOcptp)
                    .HasColumnName("Insrnc_OCPTp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerContractTypSi).HasColumnName("PerContractTyp_Si");

                entity.Property(e => e.PerCurencySi).HasColumnName("PerCurency_Si");

                entity.Property(e => e.PerExemptSi).HasColumnName("PerExempt_Si");

                entity.Property(e => e.PerFurnitureFlagSi).HasColumnName("PerFurnitureFlag_Si");

                entity.Property(e => e.PerInsrnPromiseSi).HasColumnName("PerInsrnPromise_Si");

                entity.Property(e => e.PerInsrncGrpSi).HasColumnName("PerInsrncGrp_Si");

                entity.Property(e => e.PerInsurnceName)
                    .HasColumnName("PerInsurnce_Name")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerInterNationalSi).HasColumnName("PerInterNational_Si");

                entity.Property(e => e.PerLocSi).HasColumnName("PerLoc_Si");

                entity.Property(e => e.PerMajorSi).HasColumnName("PerMajor_Si");

                entity.Property(e => e.PerPaidTypeSi).HasColumnName("PerPaidType_Si");

                entity.Property(e => e.PerPlaceOfficeStatusSi).HasColumnName("PerPlaceOfficeStatus_Si");

                entity.Property(e => e.PerPrsnlDAdrs)
                    .HasColumnName("PerPrsnlD_Adrs")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDBnkAccNo)
                    .HasColumnName("PerPrsnlD_Bnk_AccNo")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDBnkAccTyp)
                    .HasColumnName("PerPrsnlD_Bnk_AccTyp")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDBnkBrnch)
                    .HasColumnName("PerPrsnlD_Bnk_Brnch")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDBnkName)
                    .HasColumnName("PerPrsnlD_Bnk_Name")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDBrtDte)
                    .HasColumnName("PerPrsnlD_BrtDte")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDBuyBak)
                    .HasColumnName("PerPrsnlD_BuyBak")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PerPrsnlDChld).HasColumnName("PerPrsnlD_Chld");

                entity.Property(e => e.PerPrsnlDCm)
                    .HasColumnName("PerPrsnlD_Cm")
                    .HasColumnType("text");

                entity.Property(e => e.PerPrsnlDCountry)
                    .HasColumnName("PerPrsnlD_Country")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDEdu)
                    .HasColumnName("PerPrsnlD_Edu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDEmail)
                    .HasColumnName("PerPrsnlD_EMail")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDEmpDte)
                    .HasColumnName("PerPrsnlD_EmpDte")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDEmpStatus)
                    .HasColumnName("PerPrsnlD_EmpStatus")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDExpert).HasColumnName("PerPrsnlD_Expert");

                entity.Property(e => e.PerPrsnlDFax)
                    .HasColumnName("PerPrsnlD_Fax")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDFrgn).HasColumnName("PerPrsnlD_Frgn");

                entity.Property(e => e.PerPrsnlDGroupCode).HasColumnName("PerPrsnlD_GroupCode");

                entity.Property(e => e.PerPrsnlDHardCode)
                    .HasColumnName("PerPrsnlD_HardCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDHistoryJob).HasColumnName("PerPrsnlD_HistoryJob");

                entity.Property(e => e.PerPrsnlDHome).HasColumnName("PerPrsnlD_Home");

                entity.Property(e => e.PerPrsnlDIddte)
                    .HasColumnName("PerPrsnlD_IDDte")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDIdentityJob)
                    .HasColumnName("PerPrsnlD_IdentityJob")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDIdloc)
                    .HasColumnName("PerPrsnlD_IDLoc")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDIdno)
                    .HasColumnName("PerPrsnlD_IDNo")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDInsureType).HasColumnName("PerPrsnlD_InsureType");

                entity.Property(e => e.PerPrsnlDJobPlace)
                    .HasColumnName("PerPrsnlD_JobPlace")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDJobType)
                    .HasColumnName("PerPrsnlD_JobType")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDLiberal)
                    .HasColumnName("PerPrsnlD_liberal")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDMajor)
                    .HasColumnName("PerPrsnlD_Major")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDMarid).HasColumnName("PerPrsnlD_Marid");

                entity.Property(e => e.PerPrsnlDPhoto)
                    .HasColumnName("PerPrsnlD_Photo")
                    .HasColumnType("image");

                entity.Property(e => e.PerPrsnlDPlaceOffice)
                    .HasColumnName("PerPrsnlD_placeOffice")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDPlcBrth)
                    .HasColumnName("PerPrsnlD_PlcBrth")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDPname)
                    .HasColumnName("PerPrsnlD_PName")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDPost)
                    .HasColumnName("PerPrsnlD_Post")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDPostCode)
                    .HasColumnName("PerPrsnlD_PostCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDPostName)
                    .HasColumnName("PerPrsnlD_PostName")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDReligion)
                    .HasColumnName("PerPrsnlD_Religion")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDSex).HasColumnName("PerPrsnlD_Sex");

                entity.Property(e => e.PerPrsnlDSldr)
                    .HasColumnName("PerPrsnlD_Sldr")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDSponsorShipNo).HasColumnName("PerPrsnlD_SponsorShipNo");

                entity.Property(e => e.PerPrsnlDTel1)
                    .HasColumnName("PerPrsnlD_Tel1")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDTel2)
                    .HasColumnName("PerPrsnlD_Tel2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDTimeInwar)
                    .HasColumnName("PerPrsnlD_TimeInwar")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDTimeWorkAcc)
                    .HasColumnName("PerPrsnlD_TimeWorkAcc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDTypJob)
                    .HasColumnName("PerPrsnlD_TypJob")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDTypeCmd).HasColumnName("PerPrsnlD_TypeCmd");

                entity.Property(e => e.PerPrsnlDUniverCity)
                    .HasColumnName("PerPrsnlD_UniverCity")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDUrl)
                    .HasColumnName("PerPrsnlD_URL")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDWrkBgnDte)
                    .HasColumnName("PerPrsnlD_WrkBgnDte")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDWrkEndDte)
                    .HasColumnName("PerPrsnlD_WrkEndDte")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlIdNatCode)
                    .HasColumnName("PerPrsnlID_NatCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlIdPassportCode)
                    .HasColumnName("PerPrsnlID_PassportCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlNotBimeh).HasColumnName("PerPrsnl_NotBimeh");

                entity.Property(e => e.PerTaxGrpSi).HasColumnName("PerTaxGrp_Si");

                entity.Property(e => e.PerVehicleFlagSi).HasColumnName("PerVehicleFlag_Si");

                entity.Property(e => e.PereEducateSi).HasColumnName("PereEducate_Si");

                entity.Property(e => e.PeremployeeStatusSi).HasColumnName("PeremployeeStatus_Si");

                entity.HasOne(d => d.AccLtSiNavigation)
                    .WithMany(p => p.PerPrsnlD)
                    .HasForeignKey(d => d.AccLtSi)
                    .HasConstraintName("FK_PerPrsnlD_CtbAccT");

                entity.HasOne(d => d.PerInsrncGrpSiNavigation)
                    .WithMany(p => p.PerPrsnlD)
                    .HasForeignKey(d => d.PerInsrncGrpSi)
                    .HasConstraintName("FK_PerPrsnlD_PerInsrncGrp");
            });

            modelBuilder.Entity<PerPrsnlHstryEdu>(entity =>
            {
                entity.HasKey(e => e.PerPrsnlHstryEduSi);

                entity.Property(e => e.PerPrsnlHstryEduSi).HasColumnName("PerPrsnlHstryEdu_Si");

                entity.Property(e => e.PerPrsnlHstryEduAvg)
                    .HasColumnName("PerPrsnlHstryEdu_Avg")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PerPrsnlHstryEduBrnch)
                    .HasColumnName("PerPrsnlHstryEdu_Brnch")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlHstryEduDateEnd)
                    .HasColumnName("PerPrsnlHstryEdu_DateEnd")
                    .HasColumnType("datetime");

                entity.Property(e => e.PerPrsnlHstryEduDateStr)
                    .HasColumnName("PerPrsnlHstryEdu_DateStr")
                    .HasColumnType("datetime");

                entity.Property(e => e.PerPrsnlHstryEduEduPlc)
                    .HasColumnName("PerPrsnlHstryEdu_EduPlc")
                    .HasMaxLength(50);

                entity.Property(e => e.PerPrsnlHstryEduMadrak)
                    .HasColumnName("PerPrsnlHstryEdu_Madrak")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");
            });

            modelBuilder.Entity<PerPrsnlHstryFml>(entity =>
            {
                entity.HasKey(e => e.PerPrsnlHstryFmlSi);

                entity.Property(e => e.PerPrsnlHstryFmlSi).HasColumnName("PerPrsnlHstryFml_Si");

                entity.Property(e => e.PerPrsnlHstryFmlDateBrth)
                    .HasColumnName("PerPrsnlHstryFml_DateBrth")
                    .HasColumnType("datetime");

                entity.Property(e => e.PerPrsnlHstryFmlMadrak)
                    .HasColumnName("PerPrsnlHstryFml_Madrak")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlHstryFmlTp)
                    .HasColumnName("PerPrsnlHstryFml_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlHstryFmlTyp)
                    .HasColumnName("PerPrsnlHstryFml_Typ")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");
            });

            modelBuilder.Entity<PerPrsnlHstryLng>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.PerPrsnlHstryLngLsn).HasColumnName("PerPrsnlHstryLng_Lsn");

                entity.Property(e => e.PerPrsnlHstryLngRead).HasColumnName("PerPrsnlHstryLng_Read");

                entity.Property(e => e.PerPrsnlHstryLngSi)
                    .HasColumnName("PerPrsnlHstryLng_Si")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.PerPrsnlHstryLngSpk).HasColumnName("PerPrsnlHstryLng_Spk");

                entity.Property(e => e.PerPrsnlHstryLngTp)
                    .HasColumnName("PerPrsnlHstryLng_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlHstryLngWrt).HasColumnName("PerPrsnlHstryLng_wrt");

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");
            });

            modelBuilder.Entity<PerPrsnlHstryMrg>(entity =>
            {
                entity.HasKey(e => e.PerPrsnlHstryMrgSi);

                entity.Property(e => e.PerPrsnlHstryMrgSi).HasColumnName("PerPrsnlHstryMrg_Si");

                entity.Property(e => e.PerPrsnlHstryMrgDateStr)
                    .HasColumnName("PerPrsnlHstryMrg_DateStr")
                    .HasColumnType("datetime");

                entity.Property(e => e.PerPrsnlHstryMrgDesc)
                    .HasColumnName("PerPrsnlHstryMrg_Desc")
                    .HasMaxLength(50);

                entity.Property(e => e.PerPrsnlHstryMrgTp)
                    .HasColumnName("PerPrsnlHstryMrg_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");
            });

            modelBuilder.Entity<PerPrsnlHstryTch>(entity =>
            {
                entity.HasKey(e => e.PerPrsnlHstryTchSi);

                entity.Property(e => e.PerPrsnlHstryTchSi).HasColumnName("PerPrsnlHstryTch_Si");

                entity.Property(e => e.PerPrsnlHstryTchDateEnd)
                    .HasColumnName("PerPrsnlHstryTch_DateEnd")
                    .HasColumnType("datetime");

                entity.Property(e => e.PerPrsnlHstryTchDateStr)
                    .HasColumnName("PerPrsnlHstryTch_DateStr")
                    .HasColumnType("datetime");

                entity.Property(e => e.PerPrsnlHstryTchPlc)
                    .HasColumnName("PerPrsnlHstryTch_Plc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlHstryTchTime)
                    .HasColumnName("PerPrsnlHstryTch_time")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PerPrsnlHstryTchTp)
                    .HasColumnName("PerPrsnlHstryTch_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlHstryTchTyp)
                    .HasColumnName("PerPrsnlHstryTch_typ")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");
            });

            modelBuilder.Entity<PerPrsnlHstryWrk>(entity =>
            {
                entity.HasKey(e => e.PerPrsnlHstrywrkSi);

                entity.Property(e => e.PerPrsnlHstrywrkSi).HasColumnName("PerPrsnlHstrywrk_Si");

                entity.Property(e => e.PerPrsnlHstrywrkDateEnd)
                    .HasColumnName("PerPrsnlHstrywrk_DateEnd")
                    .HasColumnType("datetime");

                entity.Property(e => e.PerPrsnlHstrywrkDateStr)
                    .HasColumnName("PerPrsnlHstrywrk_DateStr")
                    .HasColumnType("datetime");

                entity.Property(e => e.PerPrsnlHstrywrkDay)
                    .HasColumnName("PerPrsnlHstrywrk_day")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PerPrsnlHstrywrkEdu)
                    .HasColumnName("PerPrsnlHstrywrk_Edu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlHstrywrkJob)
                    .HasColumnName("PerPrsnlHstrywrk_job")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlHstrywrkRelated)
                    .HasColumnName("PerPrsnlHstrywrk_related")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlHstrywrkResaonEnd)
                    .HasColumnName("PerPrsnlHstrywrk_resaonEnd")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlHstrywrkResoanGo)
                    .HasColumnName("PerPrsnlHstrywrk_ResoanGo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlHstrywrkTel)
                    .HasColumnName("PerPrsnlHstrywrk_Tel")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlHstrywrkTp)
                    .HasColumnName("PerPrsnlHstrywrk_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");
            });

            modelBuilder.Entity<PerPw1100>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Per_PW1100");

                entity.Property(e => e.Card)
                    .HasColumnName("CARD")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Dirkard)
                    .HasColumnName("DIRKARD")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Edare)
                    .HasColumnName("EDARE")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Ezaf)
                    .HasColumnName("EZAF")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Ezaff)
                    .HasColumnName("EZAFF")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Ezafkh)
                    .HasColumnName("EZAFKH")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Ezaft)
                    .HasColumnName("EZAFT")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Geibat)
                    .HasColumnName("GEIBAT")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Hozour)
                    .HasColumnName("HOZOUR")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Karkard)
                    .HasColumnName("KARKARD")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Kasrkar)
                    .HasColumnName("KASRKAR")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Mar5)
                    .HasColumnName("MAR5")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Mar6)
                    .HasColumnName("MAR6")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Mar7)
                    .HasColumnName("MAR7")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Mar8)
                    .HasColumnName("MAR8")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Mars1)
                    .HasColumnName("MARS1")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Mars2)
                    .HasColumnName("MARS2")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Mars3)
                    .HasColumnName("MARS3")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Mars4)
                    .HasColumnName("MARS4")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Mor10)
                    .HasColumnName("MOR10")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Mor11)
                    .HasColumnName("MOR11")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Mor12)
                    .HasColumnName("MOR12")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Mor13)
                    .HasColumnName("MOR13")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Mor14)
                    .HasColumnName("MOR14")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Mor15)
                    .HasColumnName("MOR15")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Mor5)
                    .HasColumnName("MOR5")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Mor6)
                    .HasColumnName("MOR6")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Mor7)
                    .HasColumnName("MOR7")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Mor8)
                    .HasColumnName("MOR8")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Mor9)
                    .HasColumnName("MOR9")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Mors1)
                    .HasColumnName("MORS1")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Mors2)
                    .HasColumnName("MORS2")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Mors3)
                    .HasColumnName("MORS3")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Mors4)
                    .HasColumnName("MORS4")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Param1)
                    .HasColumnName("PARAM1")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Param2)
                    .HasColumnName("PARAM2")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Param3)
                    .HasColumnName("PARAM3")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Param4)
                    .HasColumnName("PARAM4")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PerPyrlPeriodSi).HasColumnName("PerPyrlPeriod_Si");

                entity.Property(e => e.Persnl)
                    .HasColumnName("PERSNL")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Service)
                    .HasColumnName("SERVICE")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Shabkari)
                    .HasColumnName("SHABKARI")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Shift)
                    .HasColumnName("SHIFT")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Tajilin)
                    .HasColumnName("TAJILIN")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Tajilout)
                    .HasColumnName("TAJILOUT")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<PerPyrlPeriod>(entity =>
            {
                entity.HasKey(e => e.PerPyrlPeriodSi)
                    .HasName("PK_PerPyrlTime");

                entity.Property(e => e.PerPyrlPeriodSi)
                    .HasColumnName("PerPyrlPeriod_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.AccDocHSi).HasColumnName("AccDocH_Si");

                entity.Property(e => e.PerLocGrpSi).HasColumnName("PerLocGrp_Si");

                entity.Property(e => e.PerPyrlPeriodCalculated)
                    .IsRequired()
                    .HasColumnName("PerPyrlPeriod_Calculated")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PerPyrlPeriodDsEnd)
                    .IsRequired()
                    .HasColumnName("PerPyrlPeriod_DsEnd")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerPyrlPeriodDsStart)
                    .IsRequired()
                    .HasColumnName("PerPyrlPeriod_DsStart")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerPyrlPeriodTp)
                    .IsRequired()
                    .HasColumnName("PerPyrlPeriod_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPyrlPeriodWrkDays)
                    .HasColumnName("PerPyrlPeriod_WrkDays")
                    .HasDefaultValueSql("(0)");

                entity.HasOne(d => d.AccDocHSiNavigation)
                    .WithMany(p => p.PerPyrlPeriod)
                    .HasForeignKey(d => d.AccDocHSi)
                    .HasConstraintName("FK_PerPyrlPeriod_AccHDoc");
            });

            modelBuilder.Entity<PerSponserShipD>(entity =>
            {
                entity.HasKey(e => e.PerSponserShipDSi);

                entity.Property(e => e.PerSponserShipDSi).HasColumnName("PerSponserShipD_Si");

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.Property(e => e.PerSponserShipBrtDte)
                    .HasColumnName("PerSponserShip_BrtDte")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerSponserShipDCu)
                    .IsRequired()
                    .HasColumnName("PerSponserShipD_Cu")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PerSponserShipDFname)
                    .HasColumnName("PerSponserShipD_FName")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.PerSponserShipDIdno)
                    .HasColumnName("PerSponserShipD_IDNo")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PerSponserShipDInsrncIdno)
                    .HasColumnName("PerSponserShipD_InsrncIDNO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerSponserShipDLname)
                    .HasColumnName("PerSponserShipD_LName")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.PerSponserShipDNatCode).HasColumnName("PerSponserShipD_NatCode");

                entity.Property(e => e.PerSponserShipDOk).HasColumnName("PerSponserShipD_Ok");

                entity.Property(e => e.PerSponserShipDRelatedCode).HasColumnName("PerSponserShipD_RelatedCode");

                entity.Property(e => e.PerSponserShipKasrBimeSi).HasColumnName("PerSponserShipKasrBime_Si");

                entity.Property(e => e.PerSponserShipRelatedSi).HasColumnName("PerSponserShipRelated_Si");
            });

            modelBuilder.Entity<PerSponserShipKasrBime>(entity =>
            {
                entity.HasKey(e => e.PerSponserShipKasrBimeSi);

                entity.Property(e => e.PerSponserShipKasrBimeSi)
                    .HasColumnName("PerSponserShipKasrBime_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.PerSponserShipKasrBimeTp)
                    .HasColumnName("PerSponserShipKasrBime_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PerSponserShipRelated>(entity =>
            {
                entity.HasKey(e => e.PerSponserShipRelatedSi);

                entity.Property(e => e.PerSponserShipRelatedSi)
                    .HasColumnName("PerSponserShipRelated_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.PerSponserShipRelatedTp)
                    .HasColumnName("PerSponserShipRelated_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PerTaxD>(entity =>
            {
                entity.HasKey(e => e.PerTaxDSi);

                entity.Property(e => e.PerTaxDSi).HasColumnName("PerTaxD_Si");

                entity.Property(e => e.PerTaxDPersent)
                    .HasColumnName("PerTaxD_Persent")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PerTaxDPrice)
                    .HasColumnName("PerTaxD_Price")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PerTaxDSalaryMonth)
                    .HasColumnName("PerTaxD_Salary_Month")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PerTaxDSalaryYear)
                    .HasColumnName("PerTaxD_Salary_Year")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PerTaxHSi).HasColumnName("PerTaxH_Si");

                entity.HasOne(d => d.PerTaxHSiNavigation)
                    .WithMany(p => p.PerTaxD)
                    .HasForeignKey(d => d.PerTaxHSi)
                    .HasConstraintName("FK_PerTaxD_PerTaxH");
            });

            modelBuilder.Entity<PerTaxGrp>(entity =>
            {
                entity.HasKey(e => e.PerTaxGrpSi);

                entity.Property(e => e.PerTaxGrpSi).HasColumnName("PerTaxGrp_Si");

                entity.Property(e => e.PerTaxGrpCu)
                    .HasColumnName("PerTaxGrp_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerTaxGrpTp)
                    .HasColumnName("PerTaxGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PerTaxH>(entity =>
            {
                entity.HasKey(e => e.PerTaxHSi);

                entity.Property(e => e.PerTaxHSi).HasColumnName("PerTaxH_Si");

                entity.Property(e => e.PerTaxHAct)
                    .IsRequired()
                    .HasColumnName("PerTaxH_Act")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PerTaxHDs)
                    .IsRequired()
                    .HasColumnName("PerTaxH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerTaxHTp)
                    .HasColumnName("PerTaxH_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PerVchrD>(entity =>
            {
                entity.Property(e => e.PerVchrDId).HasColumnName("PerVchrD_Id");

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.PerVchrDCredit)
                    .HasColumnName("PerVchrD_Credit")
                    .HasColumnType("money");

                entity.Property(e => e.PerVchrDCreditC)
                    .HasColumnName("PerVchrD_CreditC")
                    .HasColumnType("money");

                entity.Property(e => e.PerVchrDDate)
                    .HasColumnName("PerVchrD_Date")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerVchrDDebit)
                    .HasColumnName("PerVchrD_Debit")
                    .HasColumnType("money");

                entity.Property(e => e.PerVchrDDebitC)
                    .HasColumnName("PerVchrD_DebitC")
                    .HasColumnType("money");

                entity.Property(e => e.PerVchrDTx)
                    .HasColumnName("PerVchrD_Tx")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.PerVchrHId).HasColumnName("PerVchrH_Id");

                entity.Property(e => e.PerVchrHRow).HasColumnName("PerVchrH_Row");

                entity.HasOne(d => d.AccLcSiNavigation)
                    .WithMany(p => p.PerVchrD)
                    .HasForeignKey(d => d.AccLcSi)
                    .HasConstraintName("FK_PerVchrD_CtbCost");

                entity.HasOne(d => d.AccLmSiNavigation)
                    .WithMany(p => p.PerVchrD)
                    .HasForeignKey(d => d.AccLmSi)
                    .HasConstraintName("FK_PerVchrD_CtbAccM");

                entity.HasOne(d => d.AccLpSiNavigation)
                    .WithMany(p => p.PerVchrD)
                    .HasForeignKey(d => d.AccLpSi)
                    .HasConstraintName("FK_PerVchrDD_CtbProject");

                entity.HasOne(d => d.AccLtSiNavigation)
                    .WithMany(p => p.PerVchrD)
                    .HasForeignKey(d => d.AccLtSi)
                    .HasConstraintName("FK_PerVchrD_CtbAccT");

                entity.HasOne(d => d.PerVchrH)
                    .WithMany(p => p.PerVchrD)
                    .HasForeignKey(d => d.PerVchrHId)
                    .HasConstraintName("FK_PerVchrD_PerVchrH");
            });

            modelBuilder.Entity<PerVchrH>(entity =>
            {
                entity.Property(e => e.PerVchrHId)
                    .HasColumnName("PerVchrH_Id")
                    .ValueGeneratedNever();

                entity.Property(e => e.AccDocHSi).HasColumnName("AccDocH_Si");

                entity.Property(e => e.PerLocSi).HasColumnName("PerLoc_Si");

                entity.Property(e => e.PerPyrlPeriodSi).HasColumnName("PerPyrlPeriod_Si");

                entity.Property(e => e.PerVchrHDate)
                    .HasColumnName("PerVchrH_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PerVchrHDateFrom)
                    .HasColumnName("PerVchrH_DateFrom")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PerVchrHDateUntil)
                    .HasColumnName("PerVchrH_DateUntil")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PerVchrHSent).HasColumnName("PerVchrH_Sent");

                entity.Property(e => e.PerVchrHTx)
                    .HasColumnName("PerVchrH_Tx")
                    .HasMaxLength(4000);

                entity.HasOne(d => d.PerPyrlPeriodSiNavigation)
                    .WithMany(p => p.PerVchrH)
                    .HasForeignKey(d => d.PerPyrlPeriodSi)
                    .HasConstraintName("FK_PerVchrH_PerPyrlPeriod");
            });

            modelBuilder.Entity<PerVehicleFlag>(entity =>
            {
                entity.HasKey(e => e.PerVehicleFlagSi)
                    .HasName("PK_PerVehicleFlagg");

                entity.Property(e => e.PerVehicleFlagSi).HasColumnName("PerVehicleFlag_Si");

                entity.Property(e => e.PerVehicleFlagCu)
                    .HasColumnName("PerVehicleFlag_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerVehicleFlagTp)
                    .HasColumnName("PerVehicleFlag_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PerWrkLst>(entity =>
            {
                entity.HasKey(e => new { e.PerPrsnlSi, e.PerPyrlPeriodSi, e.PerWrkLstCu });

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.Property(e => e.PerPyrlPeriodSi).HasColumnName("PerPyrlPeriod_Si");

                entity.Property(e => e.PerWrkLstCu)
                    .HasColumnName("PerWrkLst_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerWrkLstTp)
                    .HasColumnName("PerWrkLst_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerWrkLstValue).HasColumnName("PerWrkLst_Value");

                entity.HasOne(d => d.PerPrsnlSiNavigation)
                    .WithMany(p => p.PerWrkLst)
                    .HasForeignKey(d => d.PerPrsnlSi)
                    .HasConstraintName("FK_PerWrkLst_PerPrsnl");

                entity.HasOne(d => d.PerPyrlPeriodSiNavigation)
                    .WithMany(p => p.PerWrkLst)
                    .HasForeignKey(d => d.PerPyrlPeriodSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PerWrkLst_PerPyrlPeriod");
            });

            modelBuilder.Entity<PerWrkLstAttach>(entity =>
            {
                entity.HasKey(e => e.PerWrkLstAttachSi);

                entity.Property(e => e.PerWrkLstAttachSi).HasColumnName("PerWrkLstAttach_Si");

                entity.Property(e => e.PerWrkLstAttachDs)
                    .HasColumnName("PerWrkLstAttach_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerWrkLstAttachFile)
                    .HasColumnName("PerWrkLstAttach_File")
                    .HasColumnType("image");

                entity.Property(e => e.PerWrkLstAttachFileName)
                    .HasColumnName("PerWrkLstAttach_FileName")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.PerWrkLstAttachTp)
                    .HasColumnName("PerWrkLstAttach_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PereEducate>(entity =>
            {
                entity.HasKey(e => e.PereEducateSi);

                entity.Property(e => e.PereEducateSi).HasColumnName("PereEducate_Si");

                entity.Property(e => e.PereEducateCu)
                    .HasColumnName("PereEducate_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PereEducateTp)
                    .HasColumnName("PereEducate_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PeremployeeStatus>(entity =>
            {
                entity.HasKey(e => e.PeremployeeStatusSi)
                    .HasName("PK_PeremployeeStatuse");

                entity.Property(e => e.PeremployeeStatusSi).HasColumnName("PeremployeeStatus_Si");

                entity.Property(e => e.PeremployeeStatusCu)
                    .HasColumnName("PeremployeeStatus_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PeremployeeStatusTp)
                    .HasColumnName("PeremployeeStatus_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PerjobTyp>(entity =>
            {
                entity.HasKey(e => e.PerjobTypSi);

                entity.Property(e => e.PerjobTypSi).HasColumnName("PerjobTyp_Si");

                entity.Property(e => e.PerjobTypCu)
                    .IsRequired()
                    .HasColumnName("PerjobTyp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerjobTypTp)
                    .HasColumnName("PerjobTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PersWorkHolidays>(entity =>
            {
                entity.HasKey(e => e.PersWorkHolidaysSi);

                entity.Property(e => e.PersWorkHolidaysSi).HasColumnName("PersWorkHolidays_Si");

                entity.Property(e => e.PerPyrlPeriodSi).HasColumnName("PerPyrlPeriod_Si");

                entity.Property(e => e.PersWorkHolidaysNumber).HasColumnName("PersWorkHolidays_Number");
            });

            modelBuilder.Entity<PersWorkList>(entity =>
            {
                entity.HasKey(e => new { e.PerPrsnlSi, e.PerPyrlPeriodSi });

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.Property(e => e.PerPyrlPeriodSi).HasColumnName("PerPyrlPeriod_Si");

                entity.Property(e => e.CtbCostSi).HasColumnName("CtbCost_Si");

                entity.Property(e => e.PersWorkListAbsence).HasColumnName("PersWorkList_Absence");

                entity.Property(e => e.PersWorkListCalc).HasColumnName("PersWorkList_Calc");

                entity.Property(e => e.PersWorkListHolidays).HasColumnName("PersWorkList_Holidays");

                entity.Property(e => e.PersWorkListIncrgOverTime).HasColumnName("PersWorkList_IncrgOverTime");

                entity.Property(e => e.PersWorkListMeritLeave).HasColumnName("PersWorkList_MeritLeave");

                entity.Property(e => e.PersWorkListMission).HasColumnName("PersWorkList_Mission");

                entity.Property(e => e.PersWorkListNoSalaryLeave).HasColumnName("PersWorkList_NoSalaryLeave");

                entity.Property(e => e.PersWorkListNovice)
                    .HasColumnName("PersWorkList_Novice")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PersWorkListOffReplace).HasColumnName("PersWorkList_OffReplace");

                entity.Property(e => e.PersWorkListRemedialLeave).HasColumnName("PersWorkList_RemedialLeave");

                entity.Property(e => e.PersWorkListShiftNum2).HasColumnName("PersWorkList_ShiftNum2");

                entity.Property(e => e.PersWorkListShiftNumber).HasColumnName("PersWorkList_ShiftNumber");

                entity.Property(e => e.PersWorkListShiftTyp2).HasColumnName("PersWorkList_ShiftTyp2");

                entity.Property(e => e.PersWorkListShiftType).HasColumnName("PersWorkList_ShiftType");

                entity.Property(e => e.PersWorkListTimax).HasColumnName("PersWorkList_Timax");

                entity.Property(e => e.PersWorkListTimeLeave).HasColumnName("PersWorkList_TimeLeave");

                entity.Property(e => e.PersWorkListWorkDays).HasColumnName("PersWorkList_WorkDays");

                entity.Property(e => e.PersWorkingSchdlSi).HasColumnName("PersWorkingSchdl_Si");
            });

            modelBuilder.Entity<PersWorkListCalc>(entity =>
            {
                entity.HasKey(e => e.PersWorkListCalcSi);

                entity.Property(e => e.PersWorkListCalcSi).HasColumnName("PersWorkListCalc_Si");

                entity.Property(e => e.CtbCostSi).HasColumnName("CtbCost_Si");

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.Property(e => e.PerPyrlPeriodSi).HasColumnName("PerPyrlPeriod_Si");

                entity.Property(e => e.PersWorkListCalcDecWorkTime).HasColumnName("PersWorkListCalc_DecWorkTime");

                entity.Property(e => e.PersWorkListCalcIncWorkTime).HasColumnName("PersWorkListCalc_IncWorkTime");

                entity.Property(e => e.PersWorkListCalcNightWork).HasColumnName("PersWorkListCalc_NightWork");

                entity.Property(e => e.PersWorkListCalcWorkList).HasColumnName("PersWorkListCalc_WorkList");
            });

            modelBuilder.Entity<PersWorkOverTime>(entity =>
            {
                entity.HasKey(e => e.PersWorkOverTimeSi)
                    .HasName("PK_PersWorlOverTime");

                entity.Property(e => e.PersWorkOverTimeSi).HasColumnName("PersWorkOverTime_Si");

                entity.Property(e => e.CtbCostSi).HasColumnName("CtbCost_Si");

                entity.Property(e => e.PersWorkOverTimeBeth).HasColumnName("PersWorkOverTime_Beth");

                entity.Property(e => e.PersWorkOverTimePerson).HasColumnName("PersWorkOverTime_Person");

                entity.Property(e => e.PersWorkOverTimeValue129).HasColumnName("PersWorkOverTime_Value1_29");

                entity.Property(e => e.PersWorkOverTimeValue130).HasColumnName("PersWorkOverTime_Value1_30");

                entity.Property(e => e.PersWorkOverTimeValue131).HasColumnName("PersWorkOverTime_Value1_31");

                entity.Property(e => e.PersWorkOverTimeValue229).HasColumnName("PersWorkOverTime_Value2_29");

                entity.Property(e => e.PersWorkOverTimeValue230).HasColumnName("PersWorkOverTime_Value2_30");

                entity.Property(e => e.PersWorkOverTimeValue231).HasColumnName("PersWorkOverTime_Value2_31");

                entity.Property(e => e.PersWorkOverTimeWorkDay).HasColumnName("PersWorkOverTime_WorkDay");
            });

            modelBuilder.Entity<PersWorkTime>(entity =>
            {
                entity.HasKey(e => e.PersWorkTimeSi);

                entity.Property(e => e.PersWorkTimeSi).HasColumnName("PersWorkTime_Si");

                entity.Property(e => e.PerPyrlPeriodSi).HasColumnName("PerPyrlPeriod_Si");

                entity.Property(e => e.PersWorkTimeRate).HasColumnName("PersWorkTime_Rate");
            });

            modelBuilder.Entity<PersWorkingSchdl>(entity =>
            {
                entity.HasKey(e => e.PersWorkingSchdlSi);

                entity.Property(e => e.PersWorkingSchdlSi)
                    .HasColumnName("PersWorkingSchdl_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.PersWorkingSchdlShiftNo).HasColumnName("PersWorkingSchdl_ShiftNo");

                entity.Property(e => e.PersWorkingSchdlTp)
                    .HasColumnName("PersWorkingSchdl_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PmAccess>(entity =>
            {
                entity.Property(e => e.PmAccessId).HasColumnName("PmAccess_Id");

                entity.Property(e => e.PmAccessDesc)
                    .HasColumnName("PmAccess_Desc")
                    .HasMaxLength(100);

                entity.Property(e => e.PmAcessCode).HasColumnName("PmAcess_Code");
            });

            modelBuilder.Entity<PmActivity>(entity =>
            {
                entity.Property(e => e.PmActivityId).HasColumnName("PmActivity_ID");

                entity.Property(e => e.PmActivityDesc)
                    .HasColumnName("PmActivity_Desc")
                    .HasMaxLength(50);

                entity.Property(e => e.PmServiceRefId).HasColumnName("PmService_Ref_ID");
            });

            modelBuilder.Entity<PmCauseDestroy>(entity =>
            {
                entity.Property(e => e.PmCauseDestroyId)
                    .HasColumnName("PmCauseDestroy_Id")
                    .ValueGeneratedNever();

                entity.Property(e => e.PmCauseDestroyCode).HasColumnName("PmCauseDestroy_Code");

                entity.Property(e => e.PmCauseDestroyDesc)
                    .HasColumnName("PmCauseDestroy_Desc")
                    .HasMaxLength(50);

                entity.Property(e => e.PmCauseDestroySolution)
                    .HasColumnName("PmCauseDestroy_Solution")
                    .HasMaxLength(50);

                entity.Property(e => e.PmDestroySpecRefId).HasColumnName("PmDestroySpec_Ref_Id");
            });

            modelBuilder.Entity<PmDestroy>(entity =>
            {
                entity.Property(e => e.PmDestroyId).HasColumnName("PmDestroy_Id");

                entity.Property(e => e.PmDestroyCode).HasColumnName("PmDestroy_Code");

                entity.Property(e => e.PmDestroyDesc)
                    .HasColumnName("PmDestroy_Desc")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<PmDserVice>(entity =>
            {
                entity.ToTable("PmDSerVice");

                entity.Property(e => e.PmDserviceId).HasColumnName("PmDService_Id");

                entity.Property(e => e.PmDaccessRefId).HasColumnName("PmDAccess_Ref_Id");

                entity.Property(e => e.PmDcarCategoryRefId).HasColumnName("PmDCarCategory_Ref_Id");

                entity.Property(e => e.PmDpriorityRefId).HasColumnName("PmDPriority_Ref_Id");

                entity.Property(e => e.PmDserviceCode).HasColumnName("PmDService_Code");

                entity.Property(e => e.PmDserviceDesc)
                    .HasColumnName("PmDService_Desc")
                    .HasMaxLength(50);

                entity.Property(e => e.PmDserviceTime).HasColumnName("PmDService_Time");

                entity.Property(e => e.PmDserviceType).HasColumnName("PmDService_Type");
            });

            modelBuilder.Entity<PmEquip>(entity =>
            {
                entity.HasKey(e => e.PmAccessEquipId);

                entity.Property(e => e.PmAccessEquipId)
                    .HasColumnName("PmAccessEquip_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.PmAccessEquipCode)
                    .HasColumnName("PmAccessEquip_Code")
                    .HasMaxLength(50);

                entity.Property(e => e.PmAccessEquipDesc)
                    .HasColumnName("PmAccessEquip_DESC")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<PmOperationDes>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.PmOperationDesId).HasColumnName("PmOperationDes_Id");

                entity.Property(e => e.PmOperationDesRefId).HasColumnName("PmOperationDes_Ref_Id");

                entity.Property(e => e.PmoperationDesDesc)
                    .HasColumnName("PMOperationDes_Desc")
                    .HasMaxLength(800);
            });

            modelBuilder.Entity<PmService>(entity =>
            {
                entity.Property(e => e.PmServiceId).HasColumnName("PmService_Id");

                entity.Property(e => e.PmAccessRefId).HasColumnName("PmAccess_Ref_Id");

                entity.Property(e => e.PmCarCategoryRefId).HasColumnName("PmCarCategory_Ref_Id");

                entity.Property(e => e.PmPriorityRefId).HasColumnName("PmPriority_Ref_Id");

                entity.Property(e => e.PmServiceCode).HasColumnName("PmService_Code");

                entity.Property(e => e.PmServiceDesc)
                    .HasColumnName("PmService_Desc")
                    .HasMaxLength(50);

                entity.Property(e => e.PmServiceTime).HasColumnName("PmService_Time");

                entity.Property(e => e.PmServiceType).HasColumnName("PmService_Type");
            });

            modelBuilder.Entity<PmShift>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.PmShiftCode).HasColumnName("PmShift_Code");

                entity.Property(e => e.PmShiftDesc)
                    .HasColumnName("PmShift_Desc")
                    .HasMaxLength(50);

                entity.Property(e => e.PmShiftEndTime).HasColumnName("PmShift_EndTime");

                entity.Property(e => e.PmShiftId).HasColumnName("PmShift_Id");

                entity.Property(e => e.PmShiftStartTime).HasColumnName("PmShift_StartTime");

                entity.Property(e => e.PmShiftStatus).HasColumnName("PmShift_Status");
            });

            modelBuilder.Entity<PmSysTem>(entity =>
            {
                entity.Property(e => e.PmSysTemId).HasColumnName("PmSysTem_Id");

                entity.Property(e => e.PmCarCategoryRefId).HasColumnName("PmCarCategory_Ref_Id");

                entity.Property(e => e.PmSysTemCode).HasColumnName("PmSysTEm_Code");

                entity.Property(e => e.PmSysTemDesc)
                    .HasColumnName("PmSysTem_Desc")
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<PmcarCategory>(entity =>
            {
                entity.ToTable("PMCarCategory");

                entity.Property(e => e.PmCarCategoryId).HasColumnName("PmCarCategory_Id");

                entity.Property(e => e.PmCarCategoryCode)
                    .HasColumnName("PmCarCategory_Code")
                    .HasMaxLength(50);

                entity.Property(e => e.PmCarCategoryCostStop).HasColumnName("PmCarCategory_Cost_Stop");

                entity.Property(e => e.PmCarCategoryDayWork).HasColumnName("PmCarCategory_Day_Work");

                entity.Property(e => e.PmCarCategoryDesc)
                    .HasColumnName("PmCarCategory_Desc")
                    .HasMaxLength(50);

                entity.Property(e => e.PmCarCategoryUnitRefId).HasColumnName("PmCarCategory_Unit_Ref_Id");
            });

            modelBuilder.Entity<PmdestroySpec>(entity =>
            {
                entity.ToTable("PMdestroySpec");

                entity.Property(e => e.PmDestroySpecId)
                    .HasColumnName("PmDestroySpec_Id")
                    .ValueGeneratedNever();

                entity.Property(e => e.PmDestroySpecCode).HasColumnName("PmDestroySpec_Code");

                entity.Property(e => e.PmDestroySpecDesc)
                    .HasColumnName("PmDestroySpec_Desc")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<Pmplan>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PMplan");

                entity.Property(e => e.PmOperationDesRefId).HasColumnName("PmOperationDes_Ref_Id");

                entity.Property(e => e.PmPlanId).HasColumnName("PmPlan_Id");

                entity.Property(e => e.PmPlanTime).HasColumnName("PmPlan_Time");

                entity.Property(e => e.PmPlanWork).HasColumnName("Pm_Plan_Work");
            });

            modelBuilder.Entity<Pmplaning>(entity =>
            {
                entity.HasKey(e => e.PmPlanId);

                entity.ToTable("PMplaning");

                entity.Property(e => e.PmPlanId).HasColumnName("PmPlan_Id");

                entity.Property(e => e.PmPlanCode).HasColumnName("PmPlan_Code");

                entity.Property(e => e.PmPlanMabna).HasColumnName("PmPlan_Mabna");

                entity.Property(e => e.PmPlanUnit1).HasColumnName("PmPlan_Unit_1");

                entity.Property(e => e.PmPlanUnit2).HasColumnName("PmPlan_Unit_2");

                entity.Property(e => e.PmPlanValue1).HasColumnName("PmPlan_Value1");

                entity.Property(e => e.PmPlanValue2).HasColumnName("PmPlan_Value_2");

                entity.Property(e => e.PmServiceRefId).HasColumnName("PmService_Ref_Id");
            });

            modelBuilder.Entity<Pmpriority>(entity =>
            {
                entity.ToTable("PMPriority");

                entity.Property(e => e.PmpriorityId).HasColumnName("PMPriority_ID");

                entity.Property(e => e.PmpriorityCode)
                    .HasColumnName("PMPriority_Code")
                    .HasMaxLength(50);

                entity.Property(e => e.PmpriorityDesc)
                    .HasColumnName("PMPriority_Desc")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<PmscArcAtegory>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("pmscARcATEGORY");

                entity.Property(e => e.PmCarCategoryCode)
                    .HasColumnName("PmCarCategory_Code")
                    .HasMaxLength(50);

                entity.Property(e => e.PmCarCategoryCostStop).HasColumnName("PmCarCategory_Cost_Stop");

                entity.Property(e => e.PmCarCategoryDayWork).HasColumnName("PmCarCategory_Day_Work");

                entity.Property(e => e.PmCarCategoryDesc)
                    .HasColumnName("PmCarCategory_Desc")
                    .HasMaxLength(50);

                entity.Property(e => e.PmCarCategoryId)
                    .HasColumnName("PmCarCategory_Id")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.PmCarCategoryUnitRefId).HasColumnName("PmCarCategory_Unit_Ref_Id");
            });

            modelBuilder.Entity<Pmworkmessure>(entity =>
            {
                entity.HasKey(e => e.WorkDurMessureId);

                entity.Property(e => e.WorkDurMessureTitle).HasMaxLength(50);

                entity.Property(e => e.WorkDurMessureTitleLatin)
                    .HasColumnName("WorkDurMessureTitle_Latin")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<PrdcBom>(entity =>
            {
                entity.HasKey(e => e.PrdcBomSi);

                entity.ToTable("PrdcBOM");

                entity.HasIndex(e => new { e.InvGdsSi, e.PrdcBomFormula })
                    .HasName("IX_PrdcBOM")
                    .IsUnique();

                entity.Property(e => e.PrdcBomSi).HasColumnName("PrdcBOM_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.PrdcBomActive).HasColumnName("PrdcBOM_Active");

                entity.Property(e => e.PrdcBomChangeInWorkOrder)
                    .HasColumnName("PrdcBOM_ChangeInWorkOrder")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.PrdcBomDefineDate)
                    .HasColumnName("PrdcBOM_DefineDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcBomDescription)
                    .HasColumnName("PrdcBOM_Description")
                    .HasMaxLength(255);

                entity.Property(e => e.PrdcBomFile)
                    .HasColumnName("PrdcBOM_File")
                    .HasColumnType("image");

                entity.Property(e => e.PrdcBomFileName)
                    .HasColumnName("PrdcBOM_FileName")
                    .HasMaxLength(100);

                entity.Property(e => e.PrdcBomFormula)
                    .HasColumnName("PrdcBOM_Formula")
                    .HasMaxLength(100);

                entity.Property(e => e.PrdcBomIsAlternative).HasColumnName("PrdcBOM_IsAlternative");

                entity.Property(e => e.PrdcBomQuantity).HasColumnName("PrdcBOM_Quantity");

                entity.HasOne(d => d.InvGdsSiNavigation)
                    .WithMany(p => p.PrdcBom)
                    .HasForeignKey(d => d.InvGdsSi)
                    .HasConstraintName("FK_PrdcBOM_InvGds");
            });

            modelBuilder.Entity<PrdcBomd>(entity =>
            {
                entity.HasKey(e => e.PrdcBomdSi);

                entity.ToTable("PrdcBOMD");

                entity.HasIndex(e => new { e.PrdcBomSi, e.InvGdsSi })
                    .HasName("IX_PrdcBOMD")
                    .IsUnique();

                entity.Property(e => e.PrdcBomdSi).HasColumnName("PrdcBOMD_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.PrdcBomSi).HasColumnName("PrdcBOM_Si");

                entity.Property(e => e.PrdcBomdScrapValue).HasColumnName("PrdcBOMD_ScrapValue");

                entity.Property(e => e.PrdcBomdStatus).HasColumnName("PrdcBOMD_Status");

                entity.Property(e => e.PrdcBomdValue).HasColumnName("PrdcBOMD_Value");

                entity.HasOne(d => d.InvGdsSiNavigation)
                    .WithMany(p => p.PrdcBomd)
                    .HasForeignKey(d => d.InvGdsSi)
                    .HasConstraintName("FK_PrdcBOMD_InvGds");

                entity.HasOne(d => d.PrdcBomSiNavigation)
                    .WithMany(p => p.PrdcBomd)
                    .HasForeignKey(d => d.PrdcBomSi)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_PrdcBOMD_PrdcBOM");
            });

            modelBuilder.Entity<PrdcLine>(entity =>
            {
                entity.HasKey(e => e.PrdcLineSi)
                    .HasName("PK_PrdcLine_1");

                entity.Property(e => e.PrdcLineSi).HasColumnName("PrdcLine_Si");

                entity.Property(e => e.CtbCostSi).HasColumnName("CtbCost_Si");

                entity.Property(e => e.PrdcLineChangeInWorkOrder)
                    .HasColumnName("PrdcLine_ChangeInWorkOrder")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.PrdcLineContractorTime)
                    .HasColumnName("PrdcLine_ContractorTime")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PrdcLineHumanTime).HasColumnName("PrdcLine_HumanTime");

                entity.Property(e => e.PrdcLineMachineTime).HasColumnName("PrdcLine_MachineTime");

                entity.Property(e => e.PrdcLineScrapValue).HasColumnName("PrdcLine_ScrapValue");

                entity.Property(e => e.PrdcLineTitleSi).HasColumnName("PrdcLineTitle_Si");

                entity.Property(e => e.PrdcStationSi).HasColumnName("PrdcStation_Si");

                entity.HasOne(d => d.CtbCostSiNavigation)
                    .WithMany(p => p.PrdcLine)
                    .HasForeignKey(d => d.CtbCostSi)
                    .HasConstraintName("FK_PrdcLine_CtbCost");

                entity.HasOne(d => d.PrdcLineTitleSiNavigation)
                    .WithMany(p => p.PrdcLine)
                    .HasForeignKey(d => d.PrdcLineTitleSi)
                    .HasConstraintName("FK_PrdcLine_PrdcLineTitle");

                entity.HasOne(d => d.PrdcStationSiNavigation)
                    .WithMany(p => p.PrdcLine)
                    .HasForeignKey(d => d.PrdcStationSi)
                    .HasConstraintName("FK_PrdcLine_PrdcStation");
            });

            modelBuilder.Entity<PrdcLineTitle>(entity =>
            {
                entity.HasKey(e => e.PrdcLineTitleSi);

                entity.HasIndex(e => new { e.PrdcLineTitleCu, e.PrdcBomSi })
                    .HasName("IX_PrdcLineTitle")
                    .IsUnique();

                entity.Property(e => e.PrdcLineTitleSi).HasColumnName("PrdcLineTitle_Si");

                entity.Property(e => e.PrdcBomSi).HasColumnName("PrdcBOM_Si");

                entity.Property(e => e.PrdcLineTitleCu).HasColumnName("PrdcLineTitle_Cu");

                entity.Property(e => e.PrdcLineTitleTp)
                    .HasColumnName("PrdcLineTitle_Tp")
                    .HasMaxLength(100);

                entity.HasOne(d => d.PrdcBomSiNavigation)
                    .WithMany(p => p.PrdcLineTitle)
                    .HasForeignKey(d => d.PrdcBomSi)
                    .HasConstraintName("FK_PrdcLineTitle_PrdcBOM");
            });

            modelBuilder.Entity<PrdcStation>(entity =>
            {
                entity.HasKey(e => e.PrdcStationSi)
                    .HasName("PK_PrdcLine");

                entity.Property(e => e.PrdcStationSi).HasColumnName("PrdcStation_Si");

                entity.Property(e => e.CtbCostSi).HasColumnName("CtbCost_Si");

                entity.Property(e => e.PrdcStationCapasity).HasColumnName("PrdcStation_Capasity");

                entity.Property(e => e.PrdcStationCu).HasColumnName("PrdcStation_Cu");

                entity.Property(e => e.PrdcStationTimeType)
                    .HasColumnName("PrdcStation_TimeType")
                    .HasMaxLength(1);

                entity.Property(e => e.PrdcStationTp)
                    .HasColumnName("PrdcStation_Tp")
                    .HasMaxLength(100);

                entity.Property(e => e.PrdcStationTypeSi)
                    .HasColumnName("PrdcStationType_Si")
                    .HasDefaultValueSql("(0)");

                entity.HasOne(d => d.CtbCostSiNavigation)
                    .WithMany(p => p.PrdcStation)
                    .HasForeignKey(d => d.CtbCostSi)
                    .HasConstraintName("FK_PrdcStation_CtbCost");
            });

            modelBuilder.Entity<PrdcTraceDinfo>(entity =>
            {
                entity.HasKey(e => e.PrdcTraceDinfoSi);

                entity.ToTable("PrdcTraceDInfo");

                entity.Property(e => e.PrdcTraceDinfoSi).HasColumnName("PrdcTraceDInfo_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.PrdcBomSi).HasColumnName("PrdcBOM_Si");

                entity.Property(e => e.PrdcLineTitleSi).HasColumnName("PrdcLineTitle_Si");

                entity.Property(e => e.PrdcTraceDinfoInvDocType).HasColumnName("PrdcTraceDInfo_InvDocType");

                entity.Property(e => e.PrdcTraceDinfoQuantity).HasColumnName("PrdcTraceDInfo_Quantity");

                entity.Property(e => e.PrdcTraceHSi).HasColumnName("PrdcTraceH_Si");

                entity.Property(e => e.PrdcWorkOrderDinfoSi).HasColumnName("PrdcWorkOrderDInfo_Si");

                entity.HasOne(d => d.InvGdsSiNavigation)
                    .WithMany(p => p.PrdcTraceDinfo)
                    .HasForeignKey(d => d.InvGdsSi)
                    .HasConstraintName("FK_PrdcTraceDInfo_InvGds");

                entity.HasOne(d => d.PrdcBomSiNavigation)
                    .WithMany(p => p.PrdcTraceDinfo)
                    .HasForeignKey(d => d.PrdcBomSi)
                    .HasConstraintName("FK_PrdcTraceDInfo_PrdcBOM");

                entity.HasOne(d => d.PrdcLineTitleSiNavigation)
                    .WithMany(p => p.PrdcTraceDinfo)
                    .HasForeignKey(d => d.PrdcLineTitleSi)
                    .HasConstraintName("FK_PrdcTraceDInfo_PrdcLineTitle");

                entity.HasOne(d => d.PrdcTraceHSiNavigation)
                    .WithMany(p => p.PrdcTraceDinfo)
                    .HasForeignKey(d => d.PrdcTraceHSi)
                    .HasConstraintName("FK_PrdcTraceDInfo_PrdcTraceH");
            });

            modelBuilder.Entity<PrdcTraceDmaterial>(entity =>
            {
                entity.HasKey(e => e.PrdcTraceDmaterialSi);

                entity.ToTable("PrdcTraceDMaterial");

                entity.Property(e => e.PrdcTraceDmaterialSi).HasColumnName("PrdcTraceDMaterial_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.PrdcTraceDinfoSi).HasColumnName("PrdcTraceDInfo_Si");

                entity.Property(e => e.PrdcTraceDmaterialInvDocType).HasColumnName("PrdcTraceDMaterial_InvDocType");

                entity.Property(e => e.PrdcTraceDmaterialValue).HasColumnName("PrdcTraceDMaterial_Value");

                entity.Property(e => e.PrdcWorkOrderDmaterialSi).HasColumnName("PrdcWorkOrderDMaterial_Si");

                entity.HasOne(d => d.InvGdsSiNavigation)
                    .WithMany(p => p.PrdcTraceDmaterial)
                    .HasForeignKey(d => d.InvGdsSi)
                    .HasConstraintName("FK_PrdcTraceDMaterial_InvGds");

                entity.HasOne(d => d.PrdcTraceDinfoSiNavigation)
                    .WithMany(p => p.PrdcTraceDmaterial)
                    .HasForeignKey(d => d.PrdcTraceDinfoSi)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_PrdcTraceDMaterial_PrdcTraceDInfo");
            });

            modelBuilder.Entity<PrdcTraceDprocess>(entity =>
            {
                entity.HasKey(e => e.PrdcTraceDprocessSi)
                    .HasName("PK_PrdcTracDProcess");

                entity.ToTable("PrdcTraceDProcess");

                entity.Property(e => e.PrdcTraceDprocessSi).HasColumnName("PrdcTraceDProcess_Si");

                entity.Property(e => e.CtbCostSi).HasColumnName("CtbCost_Si");

                entity.Property(e => e.PrdcStationSi).HasColumnName("PrdcStation_Si");

                entity.Property(e => e.PrdcTraceDinfoSi).HasColumnName("PrdcTraceDInfo_Si");

                entity.Property(e => e.PrdcTraceDprocessContractor).HasColumnName("PrdcTraceDProcess_Contractor");

                entity.Property(e => e.PrdcTraceDprocessHumanTime).HasColumnName("PrdcTraceDProcess_HumanTime");

                entity.Property(e => e.PrdcTraceDprocessMachineTime).HasColumnName("PrdcTraceDProcess_MachineTime");

                entity.Property(e => e.PrdcWorkOrderDprocessSi).HasColumnName("PrdcWorkOrderDProcess_Si");

                entity.HasOne(d => d.CtbCostSiNavigation)
                    .WithMany(p => p.PrdcTraceDprocess)
                    .HasForeignKey(d => d.CtbCostSi)
                    .HasConstraintName("FK_PrdcTraceDProcess_CtbCost");

                entity.HasOne(d => d.PrdcStationSiNavigation)
                    .WithMany(p => p.PrdcTraceDprocess)
                    .HasForeignKey(d => d.PrdcStationSi)
                    .HasConstraintName("FK_PrdcTraceDProcess_PrdcStation");

                entity.HasOne(d => d.PrdcTraceDinfoSiNavigation)
                    .WithMany(p => p.PrdcTraceDprocess)
                    .HasForeignKey(d => d.PrdcTraceDinfoSi)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_PrdcTraceDProcess_PrdcTraceDInfo");
            });

            modelBuilder.Entity<PrdcTraceH>(entity =>
            {
                entity.HasKey(e => e.PrdcTraceHSi)
                    .HasName("PK_PrdcTrace");

                entity.Property(e => e.PrdcTraceHSi).HasColumnName("PrdcTraceH_Si");

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.PrdcTraceHConfirmationUser)
                    .HasColumnName("PrdcTraceH_ConfirmationUser")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcTraceHCreatorUser)
                    .HasColumnName("PrdcTraceH_CreatorUser")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcTraceHCu)
                    .HasColumnName("PrdcTraceH_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcTraceHDate)
                    .HasColumnName("PrdcTraceH_Date")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcTraceHDescription)
                    .HasColumnName("PrdcTraceH_Description")
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcTraceHLock)
                    .HasColumnName("PrdcTraceH_Lock")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PrdcTraceHSendDoc)
                    .HasColumnName("PrdcTraceH_SendDoc")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PrdcWorkOrderHSi).HasColumnName("PrdcWorkOrderH_Si");

                entity.HasOne(d => d.InvInvtSiNavigation)
                    .WithMany(p => p.PrdcTraceH)
                    .HasForeignKey(d => d.InvInvtSi)
                    .HasConstraintName("FK_PrdcTraceH_InvInvt");
            });

            modelBuilder.Entity<PrdcWorkOrderDinfo>(entity =>
            {
                entity.HasKey(e => e.PrdcWorkOrderDinfoSi);

                entity.ToTable("PrdcWorkOrderDInfo");

                entity.HasIndex(e => new { e.PrdcWorkOrderHSi, e.InvGdsSi, e.PrdcBomSi, e.PrdcLineTitleSi })
                    .HasName("IX_PrdcWorkOrderDInfo")
                    .IsUnique();

                entity.Property(e => e.PrdcWorkOrderDinfoSi).HasColumnName("PrdcWorkOrderDInfo_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.PrdcBomSi).HasColumnName("PrdcBOM_Si");

                entity.Property(e => e.PrdcLineTitleSi).HasColumnName("PrdcLineTitle_Si");

                entity.Property(e => e.PrdcWorkOrderDinfoQuantity).HasColumnName("PrdcWorkOrderDInfo_Quantity");

                entity.Property(e => e.PrdcWorkOrderHSi).HasColumnName("PrdcWorkOrderH_Si");

                entity.HasOne(d => d.InvGdsSiNavigation)
                    .WithMany(p => p.PrdcWorkOrderDinfo)
                    .HasForeignKey(d => d.InvGdsSi)
                    .HasConstraintName("FK_PrdcWorkOrderDInfo_InvGds");

                entity.HasOne(d => d.PrdcBomSiNavigation)
                    .WithMany(p => p.PrdcWorkOrderDinfo)
                    .HasForeignKey(d => d.PrdcBomSi)
                    .HasConstraintName("FK_PrdcWorkOrderDInfo_PrdcBOM");

                entity.HasOne(d => d.PrdcLineTitleSiNavigation)
                    .WithMany(p => p.PrdcWorkOrderDinfo)
                    .HasForeignKey(d => d.PrdcLineTitleSi)
                    .HasConstraintName("FK_PrdcWorkOrderDInfo_PrdcLineTitle");

                entity.HasOne(d => d.PrdcWorkOrderHSiNavigation)
                    .WithMany(p => p.PrdcWorkOrderDinfo)
                    .HasForeignKey(d => d.PrdcWorkOrderHSi)
                    .HasConstraintName("FK_PrdcWorkOrderDInfo_PrdcWorkOrderH");
            });

            modelBuilder.Entity<PrdcWorkOrderDmaterial>(entity =>
            {
                entity.HasKey(e => e.PrdcWorkOrderDmaterialSi);

                entity.ToTable("PrdcWorkOrderDMaterial");

                entity.HasIndex(e => new { e.PrdcWorkOrderDinfoSi, e.InvGdsSi })
                    .HasName("IX_PrdcWorkOrderDMaterial")
                    .IsUnique();

                entity.Property(e => e.PrdcWorkOrderDmaterialSi).HasColumnName("PrdcWorkOrderDMaterial_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.PrdcBomdSi).HasColumnName("PrdcBOMD_Si");

                entity.Property(e => e.PrdcWorkOrderDinfoSi).HasColumnName("PrdcWorkOrderDInfo_Si");

                entity.Property(e => e.PrdcWorkOrderDmaterialValue).HasColumnName("PrdcWorkOrderDMaterial_Value");

                entity.HasOne(d => d.InvGdsSiNavigation)
                    .WithMany(p => p.PrdcWorkOrderDmaterial)
                    .HasForeignKey(d => d.InvGdsSi)
                    .HasConstraintName("FK_PrdcWorkOrderDMaterial_InvGds");

                entity.HasOne(d => d.PrdcWorkOrderDinfoSiNavigation)
                    .WithMany(p => p.PrdcWorkOrderDmaterial)
                    .HasForeignKey(d => d.PrdcWorkOrderDinfoSi)
                    .HasConstraintName("FK_PrdcWorkOrderDMaterial_PrdcWorkOrderDInfo");
            });

            modelBuilder.Entity<PrdcWorkOrderDprocess>(entity =>
            {
                entity.HasKey(e => e.PrdcWorkOrderDprocessSi);

                entity.ToTable("PrdcWorkOrderDProcess");

                entity.HasIndex(e => new { e.PrdcWorkOrderDinfoSi, e.CtbCostSi, e.PrdcStationSi })
                    .HasName("IX_PrdcWorkOrderDProcess")
                    .IsUnique();

                entity.Property(e => e.PrdcWorkOrderDprocessSi).HasColumnName("PrdcWorkOrderDProcess_Si");

                entity.Property(e => e.CtbCostSi).HasColumnName("CtbCost_Si");

                entity.Property(e => e.PrdcLineSi).HasColumnName("PrdcLine_Si");

                entity.Property(e => e.PrdcStationSi).HasColumnName("PrdcStation_Si");

                entity.Property(e => e.PrdcWorkOrderDinfoSi).HasColumnName("PrdcWorkOrderDInfo_Si");

                entity.Property(e => e.PrdcWorkOrderDprocessContractorTime).HasColumnName("PrdcWorkOrderDProcess_ContractorTime");

                entity.Property(e => e.PrdcWorkOrderDprocessHumanTime).HasColumnName("PrdcWorkOrderDProcess_HumanTime");

                entity.Property(e => e.PrdcWorkOrderDprocessMachineTime).HasColumnName("PrdcWorkOrderDProcess_MachineTime");

                entity.HasOne(d => d.CtbCostSiNavigation)
                    .WithMany(p => p.PrdcWorkOrderDprocess)
                    .HasForeignKey(d => d.CtbCostSi)
                    .HasConstraintName("FK_PrdcWorkOrderDProcess_CtbCost");

                entity.HasOne(d => d.PrdcStationSiNavigation)
                    .WithMany(p => p.PrdcWorkOrderDprocess)
                    .HasForeignKey(d => d.PrdcStationSi)
                    .HasConstraintName("FK_PrdcWorkOrderDProcess_PrdcStation");

                entity.HasOne(d => d.PrdcWorkOrderDinfoSiNavigation)
                    .WithMany(p => p.PrdcWorkOrderDprocess)
                    .HasForeignKey(d => d.PrdcWorkOrderDinfoSi)
                    .HasConstraintName("FK_PrdcWorkOrderDProcess_PrdcWorkOrderDInfo");
            });

            modelBuilder.Entity<PrdcWorkOrderH>(entity =>
            {
                entity.HasKey(e => e.PrdcWorkOrderHSi)
                    .HasName("PK_PrdcWorkOrder");

                entity.Property(e => e.PrdcWorkOrderHSi).HasColumnName("PrdcWorkOrderH_Si");

                entity.Property(e => e.PrdcWorkOrderHConfirmationUser)
                    .HasColumnName("PrdcWorkOrderH_ConfirmationUser")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcWorkOrderHCreatorUser)
                    .HasColumnName("PrdcWorkOrderH_CreatorUser")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcWorkOrderHCu)
                    .HasColumnName("PrdcWorkOrderH_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcWorkOrderHDate)
                    .HasColumnName("PrdcWorkOrderH_Date")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcWorkOrderHDescription)
                    .HasColumnName("PrdcWorkOrderH_Description")
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcWorkOrderHFromDate)
                    .HasColumnName("PrdcWorkOrderH_FromDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcWorkOrderHIsTrace1)
                    .HasColumnName("PrdcWorkOrderH_IsTrace1")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PrdcWorkOrderHIsTrace2)
                    .HasColumnName("PrdcWorkOrderH_IsTrace2")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PrdcWorkOrderHLock)
                    .HasColumnName("PrdcWorkOrderH_Lock")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PrdcWorkOrderHPriority).HasColumnName("PrdcWorkOrderH_Priority");

                entity.Property(e => e.PrdcWorkOrderHStatus).HasColumnName("PrdcWorkOrderH_Status");

                entity.Property(e => e.PrdcWorkOrderHToDate)
                    .HasColumnName("PrdcWorkOrderH_ToDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcWorkOrderTypeSi).HasColumnName("PrdcWorkOrderType_Si");
            });

            modelBuilder.Entity<PurBuyD>(entity =>
            {
                entity.HasKey(e => e.PurBuyDSi);

                entity.Property(e => e.PurBuyDSi).HasColumnName("PurBuyD_Si");

                entity.Property(e => e.PurBuyDPrice).HasColumnName("PurBuyD_Price");

                entity.Property(e => e.PurBuyDQty).HasColumnName("PurBuyD_Qty");

                entity.Property(e => e.PurBuyHSi).HasColumnName("PurBuyH_Si");

                entity.Property(e => e.PurOrdBuyDSi).HasColumnName("PurOrdBuyD_Si");

                entity.Property(e => e.PurOrderDSi).HasColumnName("PurOrderD_Si");

                entity.Property(e => e.PurPreInvcDSi).HasColumnName("PurPreInvcD_Si");

                entity.HasOne(d => d.PurBuyHSiNavigation)
                    .WithMany(p => p.PurBuyD)
                    .HasForeignKey(d => d.PurBuyHSi)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_PurBuyD_PurBuyH");
            });

            modelBuilder.Entity<PurBuyH>(entity =>
            {
                entity.HasKey(e => e.PurBuyHSi)
                    .HasName("PK_PurBuy");

                entity.Property(e => e.PurBuyHSi).HasColumnName("PurBuyH_Si");

                entity.Property(e => e.PurBuyHCu)
                    .HasColumnName("PurBuyH_Cu")
                    .HasMaxLength(15);

                entity.Property(e => e.PurBuyHCustNo)
                    .HasColumnName("PurBuyH_CustNo")
                    .HasMaxLength(20);

                entity.Property(e => e.PurBuyHDesc)
                    .HasColumnName("PurBuyH_Desc")
                    .HasMaxLength(4000);

                entity.Property(e => e.PurBuyHDs)
                    .HasColumnName("PurBuyH_Ds")
                    .HasMaxLength(150);

                entity.Property(e => e.PurBuyHDt)
                    .HasColumnName("PurBuyH_Dt")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurBuyHFile)
                    .HasColumnName("PurBuyH_File")
                    .HasColumnType("image");

                entity.Property(e => e.PurBuyHFileName)
                    .HasColumnName("PurBuyH_FileName")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.PurBuyHKind).HasColumnName("PurBuyH_Kind");

                entity.Property(e => e.PurBuyHPrice)
                    .HasColumnName("PurBuyH_Price")
                    .HasColumnType("money");

                entity.Property(e => e.PurOrdBuyHSi).HasColumnName("PurOrdBuyH_Si");

                entity.Property(e => e.PurOrderHSi).HasColumnName("PurOrderH_Si");

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");
            });

            modelBuilder.Entity<PurBuySt>(entity =>
            {
                entity.HasKey(e => e.PurBuyStSi);

                entity.Property(e => e.PurBuyStSi).HasColumnName("PurBuySt_Si");

                entity.Property(e => e.PurBuyStCu)
                    .HasColumnName("PurBuySt_Cu")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<PurBuyStUser>(entity =>
            {
                entity.HasKey(e => e.PurBuyStUserSi);

                entity.Property(e => e.PurBuyStUserSi).HasColumnName("PurBuyStUser_Si");

                entity.Property(e => e.PurBuyStSi).HasColumnName("PurBuySt_Si");

                entity.Property(e => e.UserRec)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PurEnqry>(entity =>
            {
                entity.HasKey(e => e.PurEnqrySi);

                entity.Property(e => e.PurEnqrySi)
                    .HasColumnName("PurEnqry_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.PurEnqryDt)
                    .HasColumnName("PurEnqry_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PurEnqryTp)
                    .HasColumnName("PurEnqry_Tp")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.PurEnqryUntPrc)
                    .HasColumnName("PurEnqry_UntPrc")
                    .HasColumnType("money");

                entity.Property(e => e.PurOrdrSi).HasColumnName("PurOrdr_Si");

                entity.Property(e => e.PurRespSi).HasColumnName("PurResp_Si");

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");

                entity.HasOne(d => d.InvGdsSiNavigation)
                    .WithMany(p => p.PurEnqry)
                    .HasForeignKey(d => d.InvGdsSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PurEnqry_InvGds");

                entity.HasOne(d => d.PurOrdrSiNavigation)
                    .WithMany(p => p.PurEnqry)
                    .HasForeignKey(d => d.PurOrdrSi)
                    .HasConstraintName("FK_PurEnqry_PurOrdr");

                entity.HasOne(d => d.PurVndrSiNavigation)
                    .WithMany(p => p.PurEnqry)
                    .HasForeignKey(d => d.PurVndrSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PurEnqry_PurVndr");
            });

            modelBuilder.Entity<PurGdsGrp>(entity =>
            {
                entity.HasKey(e => e.PurGdsGrpSi);

                entity.Property(e => e.PurGdsGrpSi).HasColumnName("PurGdsGrp_Si");

                entity.Property(e => e.PurGdsGrpCu)
                    .HasColumnName("PurGdsGrp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurGdsGrpSiParent).HasColumnName("PurGdsGrp_SiParent");

                entity.Property(e => e.PurGdsGrpTp)
                    .HasColumnName("PurGdsGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PurGdsToVndr>(entity =>
            {
                entity.HasKey(e => e.PurGdsToVndrSi);

                entity.HasIndex(e => new { e.InvGdsSi, e.PurVndrSi })
                    .HasName("IX_PurGdsToVndr")
                    .IsUnique();

                entity.Property(e => e.PurGdsToVndrSi).HasColumnName("PurGdsToVndr_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");
            });

            modelBuilder.Entity<PurIncDecFactor>(entity =>
            {
                entity.HasKey(e => e.PurIncDecFactorSi);

                entity.Property(e => e.PurIncDecFactorSi).HasColumnName("PurIncDecFactor_Si");

                entity.Property(e => e.PurBuyDSi).HasColumnName("PurBuyD_Si");

                entity.Property(e => e.PurIncDecFactorAmnt)
                    .HasColumnName("PurIncDecFactor_Amnt")
                    .HasColumnType("money");

                entity.Property(e => e.PurIncDecFactorDesc)
                    .HasColumnName("PurIncDecFactor_Desc")
                    .HasMaxLength(4000);

                entity.Property(e => e.PurIncDecFactorPerc).HasColumnName("PurIncDecFactor_perc");

                entity.Property(e => e.PurIncDecFactorTypeSi).HasColumnName("PurIncDecFactorType_Si");

                entity.HasOne(d => d.PurBuyDSiNavigation)
                    .WithMany(p => p.PurIncDecFactor)
                    .HasForeignKey(d => d.PurBuyDSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PurIncDecFactor_PurBuyD");

                entity.HasOne(d => d.PurIncDecFactorTypeSiNavigation)
                    .WithMany(p => p.PurIncDecFactor)
                    .HasForeignKey(d => d.PurIncDecFactorTypeSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PurIncDecFactor_PurIncDecFactorType");
            });

            modelBuilder.Entity<PurIncDecFactorH>(entity =>
            {
                entity.HasKey(e => e.PurIncDecFactorHSi);

                entity.Property(e => e.PurIncDecFactorHSi).HasColumnName("PurIncDecFactorH_Si");

                entity.Property(e => e.PurBuyHSi).HasColumnName("PurBuyH_Si");

                entity.Property(e => e.PurIncDecFactorHAmnt)
                    .HasColumnName("PurIncDecFactorH_Amnt")
                    .HasColumnType("money");

                entity.Property(e => e.PurIncDecFactorHDesc)
                    .HasColumnName("PurIncDecFactorH_Desc")
                    .HasMaxLength(4000);

                entity.Property(e => e.PurIncDecFactorHPerc).HasColumnName("PurIncDecFactorH_perc");

                entity.Property(e => e.PurIncDecFactorTypeSi).HasColumnName("PurIncDecFactorType_Si");

                entity.HasOne(d => d.PurBuyHSiNavigation)
                    .WithMany(p => p.PurIncDecFactorH)
                    .HasForeignKey(d => d.PurBuyHSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PurIncDecFactorH_PurBuyH");

                entity.HasOne(d => d.PurIncDecFactorTypeSiNavigation)
                    .WithMany(p => p.PurIncDecFactorH)
                    .HasForeignKey(d => d.PurIncDecFactorTypeSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PurIncDecFactorH_PurIncDecFactorType");
            });

            modelBuilder.Entity<PurIncDecFactorType>(entity =>
            {
                entity.HasKey(e => e.PurIncDecFactorTypeSi);

                entity.Property(e => e.PurIncDecFactorTypeSi).HasColumnName("PurIncDecFactorType_Si");

                entity.Property(e => e.PurIncDecFactorTypeCu)
                    .HasColumnName("PurIncDecFactorType_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurIncDecFactorTypeIncDecFlag).HasColumnName("PurIncDecFactorType_IncDecFlag");

                entity.Property(e => e.PurIncDecFactorTypeTp)
                    .HasColumnName("PurIncDecFactorType_Tp")
                    .HasMaxLength(150)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PurInvcD>(entity =>
            {
                entity.HasKey(e => new { e.PurInvcHSi, e.InvGdsSi });

                entity.HasIndex(e => e.InvGdsSi)
                    .HasName("IX_InvGds_Si");

                entity.HasIndex(e => e.PurInvcHSi)
                    .HasName("IX_PurInvcH_Si");

                entity.Property(e => e.PurInvcHSi).HasColumnName("PurInvcH_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvDocHDt)
                    .HasColumnName("InvDocH_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.InvDocHSi).HasColumnName("InvDocH_Si");

                entity.Property(e => e.PurInvcDDecPrc)
                    .HasColumnName("PurInvcD_DecPrc")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PurInvcDIncPrc)
                    .HasColumnName("PurInvcD_IncPrc")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PurInvcDQty)
                    .HasColumnName("PurInvcD_Qty")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PurInvcDRow).HasColumnName("PurInvcD_Row");

                entity.Property(e => e.PurInvcDTotal)
                    .HasColumnName("PurInvcD_Total")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PurInvcDTp)
                    .HasColumnName("PurInvcD_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurInvcDUntPrc)
                    .HasColumnName("PurInvcD_UntPrc")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PurOrdrSi).HasColumnName("PurOrdr_Si");

                entity.Property(e => e.PurRqstHDt)
                    .HasColumnName("PurRqstH_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PurRqstHSi).HasColumnName("PurRqstH_Si");

                entity.HasOne(d => d.InvDocHSiNavigation)
                    .WithMany(p => p.PurInvcD)
                    .HasForeignKey(d => d.InvDocHSi)
                    .HasConstraintName("FK_PurInvcD_InvDocH");

                entity.HasOne(d => d.InvGdsSiNavigation)
                    .WithMany(p => p.PurInvcD)
                    .HasForeignKey(d => d.InvGdsSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PurInvcD_InvGds");

                entity.HasOne(d => d.PurInvcHSiNavigation)
                    .WithMany(p => p.PurInvcD)
                    .HasForeignKey(d => d.PurInvcHSi)
                    .HasConstraintName("FK_PurInvcD_PurInvcH");

                entity.HasOne(d => d.PurOrdrSiNavigation)
                    .WithMany(p => p.PurInvcD)
                    .HasForeignKey(d => d.PurOrdrSi)
                    .HasConstraintName("FK_PurInvcD_PurOrdr");
            });

            modelBuilder.Entity<PurInvcH>(entity =>
            {
                entity.HasKey(e => e.PurInvcHSi)
                    .HasName("PK_PurDocH");

                entity.HasIndex(e => e.PurInvcHScu)
                    .HasName("IX_PurInvcH_Cu");

                entity.HasIndex(e => e.PurInvcHSdt)
                    .HasName("IX_PurInvcH_Ds");

                entity.Property(e => e.PurInvcHSi)
                    .HasColumnName("PurInvcH_Si")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.InvDocHSi).HasColumnName("InvDocH_Si");

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.PurInvcHAccDoc)
                    .IsRequired()
                    .HasColumnName("PurInvcH_AccDoc")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PurInvcHDt)
                    .HasColumnName("PurInvcH_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PurInvcHPrcTotal)
                    .HasColumnName("PurInvcH_Prc_Total")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PurInvcHScu).HasColumnName("PurInvcH_SCu");

                entity.Property(e => e.PurInvcHSdt)
                    .HasColumnName("PurInvcH_SDT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PurInvcHStmpCdt)
                    .HasColumnName("PurInvcH_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurInvcHStmpCus)
                    .HasColumnName("PurInvcH_StmpCUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.PurInvcHStmpMdt)
                    .HasColumnName("PurInvcH_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurInvcHStmpMus)
                    .HasColumnName("PurInvcH_StmpMUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.PurInvcHTp)
                    .HasColumnName("PurInvcH_Tp")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.PurRespSi).HasColumnName("PurResp_Si");

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");

                entity.HasOne(d => d.PurVndrSiNavigation)
                    .WithMany(p => p.PurInvcH)
                    .HasForeignKey(d => d.PurVndrSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PurInvcH_PurVndr");
            });

            modelBuilder.Entity<PurKind>(entity =>
            {
                entity.HasKey(e => e.PurKindSi)
                    .HasName("PK_KPurKind");

                entity.Property(e => e.PurKindSi).HasColumnName("PurKind_Si");

                entity.Property(e => e.PurKindCu)
                    .HasColumnName("PurKind_Cu")
                    .HasMaxLength(50);

                entity.Property(e => e.PurKindSiParent).HasColumnName("PurKind_SiParent");

                entity.Property(e => e.PurKindTp)
                    .HasColumnName("PurKind_TP")
                    .HasMaxLength(10)
                    .IsFixedLength();
            });

            modelBuilder.Entity<PurOrdBuyD>(entity =>
            {
                entity.HasKey(e => e.PurOrdBuyDSi);

                entity.Property(e => e.PurOrdBuyDSi).HasColumnName("PurOrdBuyD_Si");

                entity.Property(e => e.PurBuyDSi).HasColumnName("PurBuyD_Si");

                entity.Property(e => e.PurOrdBuyHSi).HasColumnName("PurOrdBuyH_Si");

                entity.Property(e => e.PurOrderDSi).HasColumnName("PurOrderD_Si");

                entity.Property(e => e.PurOrderHSi).HasColumnName("PurOrderH_Si");

                entity.Property(e => e.PurPreInvcDSi).HasColumnName("PurPreInvcD_Si");

                entity.HasOne(d => d.PurOrdBuyHSiNavigation)
                    .WithMany(p => p.PurOrdBuyD)
                    .HasForeignKey(d => d.PurOrdBuyHSi)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_PurOrdBuyD_PurOrdBuyH");
            });

            modelBuilder.Entity<PurOrdBuyH>(entity =>
            {
                entity.HasKey(e => e.PurOrdBuyHSi)
                    .HasName("PK_PurOrdBuy");

                entity.Property(e => e.PurOrdBuyHSi).HasColumnName("PurOrdBuyH_Si");

                entity.Property(e => e.PurOrdBuyHCu)
                    .HasColumnName("PurOrdBuyH_Cu")
                    .HasMaxLength(50);

                entity.Property(e => e.PurOrdBuyHDs)
                    .HasColumnName("PurOrdBuyH_Ds")
                    .HasMaxLength(150);

                entity.Property(e => e.PurOrdBuyHDt)
                    .HasColumnName("PurOrdBuyH_DT")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<PurOrdPayKind>(entity =>
            {
                entity.HasKey(e => e.PurOrdPayKindSi);

                entity.Property(e => e.PurOrdPayKindSi).HasColumnName("PurOrdPayKind_Si");

                entity.Property(e => e.PurOrdPayKindTp)
                    .HasColumnName("PurOrdPayKind_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PurOrdPayer>(entity =>
            {
                entity.HasKey(e => e.PurOrdPayerSi);

                entity.Property(e => e.PurOrdPayerSi).HasColumnName("PurOrdPayer_Si");

                entity.Property(e => e.PurOrdPayerTp)
                    .HasColumnName("PurOrdPayer_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PurOrderD>(entity =>
            {
                entity.HasKey(e => e.PurOrderDSi);

                entity.Property(e => e.PurOrderDSi).HasColumnName("PurOrderD_Si");

                entity.Property(e => e.PurBuyDSi).HasColumnName("PurBuyD_Si");

                entity.Property(e => e.PurOrdBuyDSi).HasColumnName("PurOrdBuyD_Si");

                entity.Property(e => e.PurOrdBuyHSi).HasColumnName("PurOrdBuyH_Si");

                entity.Property(e => e.PurOrderHSi).HasColumnName("PurOrderH_Si");

                entity.Property(e => e.PurReqstDSi).HasColumnName("PurReqstD_Si");

                entity.HasOne(d => d.PurOrderHSiNavigation)
                    .WithMany(p => p.PurOrderD)
                    .HasForeignKey(d => d.PurOrderHSi)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_PurOrderD_PurOrderH");
            });

            modelBuilder.Entity<PurOrderH>(entity =>
            {
                entity.HasKey(e => e.PurOrderHSi);

                entity.Property(e => e.PurOrderHSi).HasColumnName("PurOrderH_Si");

                entity.Property(e => e.PurOrderHBuyKind).HasColumnName("PurOrderH_BuyKind");

                entity.Property(e => e.PurOrderHCu).HasColumnName("PurOrderH_Cu");

                entity.Property(e => e.PurOrderHDt)
                    .HasColumnName("PurOrderH_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PurOrderHKindOrd).HasColumnName("PurOrderH_KindOrd");

                entity.Property(e => e.PurOrderHOk).HasColumnName("PurOrderH_OK");

                entity.Property(e => e.PurOrderHPayKind).HasColumnName("PurOrderH_PayKind");

                entity.Property(e => e.PurOrderHPayer).HasColumnName("PurOrderH_Payer");

                entity.Property(e => e.PurOrderHProcess).HasColumnName("PurOrderH_process");

                entity.Property(e => e.PurOrderHTp)
                    .HasColumnName("PurOrderH_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PurReqstHSi).HasColumnName("PurReqstH_Si");

                entity.Property(e => e.PurRespSi).HasColumnName("PurResp_Si");

                entity.HasOne(d => d.PurOrderHPayKindNavigation)
                    .WithMany(p => p.PurOrderH)
                    .HasForeignKey(d => d.PurOrderHPayKind)
                    .HasConstraintName("FK_PurOrderH_PurOrdPayKind");

                entity.HasOne(d => d.PurOrderHPayerNavigation)
                    .WithMany(p => p.PurOrderH)
                    .HasForeignKey(d => d.PurOrderHPayer)
                    .HasConstraintName("FK_PurOrderH_PurOrdPayer");
            });

            modelBuilder.Entity<PurOrdr>(entity =>
            {
                entity.HasKey(e => e.PurOrdrSi);

                entity.Property(e => e.PurOrdrSi)
                    .HasColumnName("PurOrdr_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.PurEnqrySi).HasColumnName("PurEnqry_Si");

                entity.Property(e => e.PurInvcHSi).HasColumnName("PurInvcH_Si");

                entity.Property(e => e.PurOrdHcnfrmDesc)
                    .HasColumnName("PurOrdHCnfrm_Desc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurOrdHcnfrmSi).HasColumnName("PurOrdHCnfrm_Si");

                entity.Property(e => e.PurOrdrDt)
                    .HasColumnName("PurOrdr_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PurOrdrQty).HasColumnName("PurOrdr_Qty");

                entity.Property(e => e.PurOrdrTotal)
                    .HasColumnName("PurOrdr_Total")
                    .HasColumnType("money");

                entity.Property(e => e.PurOrdrTp)
                    .HasColumnName("PurOrdr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurOrdrUntPrc)
                    .HasColumnName("PurOrdr_UntPrc")
                    .HasColumnType("money");

                entity.Property(e => e.PurResPSi).HasColumnName("PurResP_Si");

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");

                entity.HasOne(d => d.InvGdsSiNavigation)
                    .WithMany(p => p.PurOrdr)
                    .HasForeignKey(d => d.InvGdsSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PurOrdr_InvGds");

                entity.HasOne(d => d.PurInvcHSiNavigation)
                    .WithMany(p => p.PurOrdr)
                    .HasForeignKey(d => d.PurInvcHSi)
                    .HasConstraintName("FK_PurOrdr_PurInvcH");

                entity.HasOne(d => d.PurVndrSiNavigation)
                    .WithMany(p => p.PurOrdr)
                    .HasForeignKey(d => d.PurVndrSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PurOrdr_PurVndr");
            });

            modelBuilder.Entity<PurOrdvndr>(entity =>
            {
                entity.HasKey(e => e.PurOrdVndrSi);

                entity.Property(e => e.PurOrdVndrSi).HasColumnName("PurOrdVndr_Si");

                entity.Property(e => e.PurOrderHSi).HasColumnName("PurOrderH_Si");

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");

                entity.HasOne(d => d.PurOrderHSiNavigation)
                    .WithMany(p => p.PurOrdvndr)
                    .HasForeignKey(d => d.PurOrderHSi)
                    .HasConstraintName("FK_PurOrdvndr_PurOrderH");
            });

            modelBuilder.Entity<PurPayPaperD>(entity =>
            {
                entity.HasKey(e => e.PurPayPaperDSi);

                entity.Property(e => e.PurPayPaperDSi).HasColumnName("PurPayPaperD_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.PurPayPaperDPrice).HasColumnName("PurPayPaperD_Price");

                entity.Property(e => e.PurPayPaperDQty).HasColumnName("PurPayPaperD_Qty");

                entity.Property(e => e.PurPayPaperDTotal).HasColumnName("PurPayPaperD_Total");

                entity.Property(e => e.PurPayPaperHSi).HasColumnName("PurPayPaperH_Si");

                entity.Property(e => e.PurReqstHSi).HasColumnName("PurReqstH_Si");
            });

            modelBuilder.Entity<PurPayPaperH>(entity =>
            {
                entity.HasKey(e => e.PurPayPaperHSi);

                entity.Property(e => e.PurPayPaperHSi).HasColumnName("PurPayPaperH_Si");

                entity.Property(e => e.PurPayPaperHCu)
                    .HasColumnName("PurPayPaperH_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurPayPaperHCu2)
                    .HasColumnName("PurPayPaperH_Cu2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurPayPaperHDs)
                    .HasColumnName("PurPayPaperH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PurPayPaperHDsc)
                    .HasColumnName("PurPayPaperH_Dsc")
                    .HasMaxLength(50);

                entity.Property(e => e.PurPayPaperHStmp)
                    .HasColumnName("PurPayPaperH_Stmp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurPayPaperHStmpCdt)
                    .HasColumnName("PurPayPaperH_StmpCDT")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<PurPreInvcD>(entity =>
            {
                entity.HasKey(e => e.PurPreInvcDSi);

                entity.Property(e => e.PurPreInvcDSi).HasColumnName("PurPreInvcD_Si");

                entity.Property(e => e.PurOrderDSi).HasColumnName("PurOrderD_Si");

                entity.Property(e => e.PurPreInvcDDesc)
                    .HasColumnName("PurPreInvcD_Desc")
                    .HasMaxLength(4000);

                entity.Property(e => e.PurPreInvcDPrice)
                    .HasColumnName("PurPreInvcD_Price")
                    .HasColumnType("money");

                entity.Property(e => e.PurPreInvcDQty).HasColumnName("PurPreInvcD_Qty");

                entity.Property(e => e.PurPreInvcHSi).HasColumnName("PurPreInvcH_Si");

                entity.HasOne(d => d.PurPreInvcHSiNavigation)
                    .WithMany(p => p.PurPreInvcD)
                    .HasForeignKey(d => d.PurPreInvcHSi)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_PurPreInvcD_PurPreInvcH");
            });

            modelBuilder.Entity<PurPreInvcH>(entity =>
            {
                entity.HasKey(e => e.PurPreInvcHSi);

                entity.Property(e => e.PurPreInvcHSi).HasColumnName("PurPreInvcH_Si");

                entity.Property(e => e.PurOrdVndrSi).HasColumnName("PurOrdVndr_Si");

                entity.Property(e => e.PurOrderHSi).HasColumnName("PurOrderH_Si");

                entity.Property(e => e.PurPreInvcHAccept)
                    .HasColumnName("PurPreInvcH_Accept")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PurPreInvcHAttach).HasColumnName("PurPreInvcH_Attach");

                entity.Property(e => e.PurPreInvcHCancelled)
                    .HasColumnName("PurPreInvcH_Cancelled")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PurPreInvcHComment)
                    .HasColumnName("PurPreInvcH_Comment")
                    .HasMaxLength(150);

                entity.Property(e => e.PurPreInvcHCu)
                    .HasColumnName("PurPreInvcH_Cu")
                    .HasMaxLength(50);

                entity.Property(e => e.PurPreInvcHDtactive)
                    .HasColumnName("PurPreInvcH_DTActive")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurPreInvcHFile)
                    .HasColumnName("PurPreInvcH_File")
                    .HasColumnType("image");

                entity.Property(e => e.PurPreInvcHFileName)
                    .HasColumnName("PurPreInvcH_FileName")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.PurPreInvcHHaveFile).HasColumnName("PurPreInvcH_HaveFile");

                entity.Property(e => e.PurPreVinvcHDt)
                    .HasColumnName("PurPreVInvcH_Dt")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurReqstHSi).HasColumnName("PurReqstH_Si");

                entity.HasOne(d => d.PurOrderHSiNavigation)
                    .WithMany(p => p.PurPreInvcH)
                    .HasForeignKey(d => d.PurOrderHSi)
                    .HasConstraintName("FK_PurPreInvcH_PurOrderH");
            });

            modelBuilder.Entity<PurReqProc>(entity =>
            {
                entity.HasKey(e => e.PurReqProcSi);

                entity.Property(e => e.PurReqProcSi).HasColumnName("PurReqProc_Si");

                entity.Property(e => e.PurReqProcTp)
                    .HasColumnName("PurReqProc_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PurReqTyp>(entity =>
            {
                entity.HasKey(e => e.PurReqTypSi);

                entity.Property(e => e.PurReqTypSi).HasColumnName("PurReqTyp_Si");

                entity.Property(e => e.PurReqTypTp)
                    .HasColumnName("PurReqTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PurReqstD>(entity =>
            {
                entity.HasKey(e => e.PurReqstDSi)
                    .HasName("PK_InvReqstD");

                entity.Property(e => e.PurReqstDSi).HasColumnName("PurReqstD_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.PurOrderDSi).HasColumnName("PurOrderD_Si");

                entity.Property(e => e.PurOrderHSi).HasColumnName("PurOrderH_Si");

                entity.Property(e => e.PurReqstDDt)
                    .HasColumnName("PurReqstD_DT")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PurReqstDFirstQty).HasColumnName("PurReqstD_FirstQty");

                entity.Property(e => e.PurReqstDQty).HasColumnName("PurReqstD_Qty");

                entity.Property(e => e.PurReqstDTp)
                    .HasColumnName("PurReqstD_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurReqstDUsage).HasColumnName("PurReqstD_Usage");

                entity.Property(e => e.PurReqstHSi).HasColumnName("PurReqstH_Si");

                entity.Property(e => e.PurchaseOrderDetailId).HasColumnName("PurchaseOrderDetailID");

                entity.HasOne(d => d.PurReqstHSiNavigation)
                    .WithMany(p => p.PurReqstD)
                    .HasForeignKey(d => d.PurReqstHSi)
                    .HasConstraintName("FK_PurReqstD_PurReqstH");
            });

            modelBuilder.Entity<PurReqstH>(entity =>
            {
                entity.HasKey(e => e.PurReqstHSi);

                entity.Property(e => e.PurReqstHSi).HasColumnName("PurReqstH_Si");

                entity.Property(e => e.PurBuyStSi).HasColumnName("PurBuySt_Si");

                entity.Property(e => e.PurReqstHApplyer).HasColumnName("PurReqstH_Applyer");

                entity.Property(e => e.PurReqstHBuyKind).HasColumnName("PurReqstH_BuyKind");

                entity.Property(e => e.PurReqstHCu).HasColumnName("PurReqstH_Cu");

                entity.Property(e => e.PurReqstHDeliverst).HasColumnName("PurReqstH_Deliverst");

                entity.Property(e => e.PurReqstHDocno)
                    .HasColumnName("PurReqstH_Docno")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PurReqstHDt)
                    .HasColumnName("PurReqstH_DT")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurReqstHKindOrd).HasColumnName("PurReqstH_KindOrd");

                entity.Property(e => e.PurReqstHOk).HasColumnName("PurReqstH_OK");

                entity.Property(e => e.PurReqstHProcess).HasColumnName("PurReqstH_process");

                entity.Property(e => e.PurReqstHSts).HasColumnName("PurReqstH_Sts");

                entity.Property(e => e.PurReqstHTp)
                    .HasColumnName("PurReqstH_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PurRespSi).HasColumnName("PurResp_Si");

                entity.Property(e => e.PurRqstCuseSi).HasColumnName("PurRqstCuse_Si");

                entity.Property(e => e.PurchaseOrderId).HasColumnName("PurchaseOrderID");
            });

            modelBuilder.Entity<PurResp>(entity =>
            {
                entity.HasKey(e => e.PurRespSi);

                entity.Property(e => e.PurRespSi).HasColumnName("PurResp_Si");

                entity.Property(e => e.FaraUserCu)
                    .HasColumnName("FaraUser_Cu")
                    .HasMaxLength(15)
                    .IsFixedLength();

                entity.Property(e => e.PurRespCu)
                    .HasColumnName("PurResp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurRespTp)
                    .HasColumnName("PurResp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PurRespUser>(entity =>
            {
                entity.HasKey(e => e.PurRespUserSi);

                entity.Property(e => e.PurRespUserSi).HasColumnName("PurRespUser_Si");

                entity.Property(e => e.PurRespSi).HasColumnName("PurResp_Si");

                entity.Property(e => e.UserRec)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PurRqstCuse>(entity =>
            {
                entity.HasKey(e => e.PurRqstCuseSi);

                entity.Property(e => e.PurRqstCuseSi)
                    .HasColumnName("PurRqstCuse_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.PurRqstCuseTp)
                    .HasColumnName("PurRqstCuse_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PurRqstD>(entity =>
            {
                entity.HasKey(e => new { e.PurRqstHSi, e.InvGdsSi });

                entity.Property(e => e.PurRqstHSi).HasColumnName("PurRqstH_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvDocHCu)
                    .HasColumnName("InvDocH_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurEnqrySi).HasColumnName("PurEnqry_Si");

                entity.Property(e => e.PurOrdrSi).HasColumnName("PurOrdr_Si");

                entity.Property(e => e.PurRqstDRqty).HasColumnName("PurRqstD_RQty");

                entity.HasOne(d => d.InvGdsSiNavigation)
                    .WithMany(p => p.PurRqstD)
                    .HasForeignKey(d => d.InvGdsSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PurRqstD_InvGds");

                entity.HasOne(d => d.PurOrdrSiNavigation)
                    .WithMany(p => p.PurRqstD)
                    .HasForeignKey(d => d.PurOrdrSi)
                    .HasConstraintName("FK_PurRqstD_PurOrdr");

                entity.HasOne(d => d.PurRqstHSiNavigation)
                    .WithMany(p => p.PurRqstD)
                    .HasForeignKey(d => d.PurRqstHSi)
                    .HasConstraintName("FK_PurRqstD_PurRqstH");
            });

            modelBuilder.Entity<PurRqstH>(entity =>
            {
                entity.HasKey(e => e.PurRqstHSi);

                entity.Property(e => e.PurRqstHSi)
                    .HasColumnName("PurRqstH_Si")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CtbCostSi).HasColumnName("CtbCost_Si");

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.PurRqstCuseSi).HasColumnName("PurRqstCuse_Si");

                entity.Property(e => e.PurRqstHCnfrmDesc)
                    .HasColumnName("PurRqstH_CnfrmDesc")
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.PurRqstHDt)
                    .HasColumnName("PurRqstH_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PurRqstHRdt)
                    .HasColumnName("PurRqstH_RDT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PurRqstHTp)
                    .HasColumnName("PurRqstH_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PurRqstHcnfrmSi).HasColumnName("PurRqstHCnfrm_Si");

                entity.HasOne(d => d.CtbCostSiNavigation)
                    .WithMany(p => p.PurRqstH)
                    .HasForeignKey(d => d.CtbCostSi)
                    .HasConstraintName("FK_PurRqstH_CtbCost");

                entity.HasOne(d => d.InvInvtSiNavigation)
                    .WithMany(p => p.PurRqstH)
                    .HasForeignKey(d => d.InvInvtSi)
                    .HasConstraintName("FK_PurRqstH_InvInvt");

                entity.HasOne(d => d.PurRqstCuseSiNavigation)
                    .WithMany(p => p.PurRqstH)
                    .HasForeignKey(d => d.PurRqstCuseSi)
                    .HasConstraintName("FK_PurRqstH_PurRqstCuse");

                entity.HasOne(d => d.PurRqstHcnfrmSiNavigation)
                    .WithMany(p => p.PurRqstH)
                    .HasForeignKey(d => d.PurRqstHcnfrmSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PurRqstH_PurRqstHCnfrm");
            });

            modelBuilder.Entity<PurRqstHcnfrm>(entity =>
            {
                entity.HasKey(e => e.PurRqstHcnfrmSi);

                entity.ToTable("PurRqstHCnfrm");

                entity.Property(e => e.PurRqstHcnfrmSi).HasColumnName("PurRqstHCnfrm_Si");

                entity.Property(e => e.PurRqstHcnfrmTp)
                    .HasColumnName("PurRqstHCnfrm_Tp")
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PurVndr>(entity =>
            {
                entity.HasKey(e => e.PurVndrSi)
                    .HasName("PK_InvVndr");

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccMSi1).HasColumnName("AccM_Si_1");

                entity.Property(e => e.AccTSi).HasColumnName("AccT_Si");

                entity.Property(e => e.CtbCustVndrTypSi).HasColumnName("CtbCustVndrTyp_Si");

                entity.Property(e => e.PurVndrComment)
                    .HasColumnName("PurVndr_Comment")
                    .HasMaxLength(250);

                entity.Property(e => e.PurVndrCorporateTyp).HasColumnName("PurVndr_CorporateTyp");

                entity.Property(e => e.PurVndrCu)
                    .HasColumnName("PurVndr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrDocno)
                    .HasColumnName("PurVndr_Docno")
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.PurVndrGrpSi).HasColumnName("PurVndrGrp_Si");

                entity.Property(e => e.PurVndrKind).HasColumnName("PurVndr_Kind");

                entity.Property(e => e.PurVndrScore).HasColumnName("PurVndr_Score");

                entity.Property(e => e.PurVndrSts).HasColumnName("PurVndr_Sts");

                entity.Property(e => e.PurVndrTp)
                    .HasColumnName("PurVndr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.HasOne(d => d.AccMSi1Navigation)
                    .WithMany(p => p.PurVndr)
                    .HasForeignKey(d => d.AccMSi1)
                    .HasConstraintName("FK_PurVndr_CtbAccM");

                entity.HasOne(d => d.AccTSiNavigation)
                    .WithMany(p => p.PurVndr)
                    .HasForeignKey(d => d.AccTSi)
                    .HasConstraintName("FK_PurVndr_CtbAccT");

                entity.HasOne(d => d.PurVndrGrpSiNavigation)
                    .WithMany(p => p.PurVndr)
                    .HasForeignKey(d => d.PurVndrGrpSi)
                    .HasConstraintName("FK_PurVndr_PurVndrGrp1");
            });

            modelBuilder.Entity<PurVndrGrp>(entity =>
            {
                entity.HasKey(e => e.PurVndrGrpSi)
                    .HasName("PK_InvVndrGrp");

                entity.Property(e => e.PurVndrGrpSi).HasColumnName("PurVndrGrp_Si");

                entity.Property(e => e.PurVndrGrpCu)
                    .HasColumnName("PurVndrGrp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrGrpSiParent).HasColumnName("PurVndrGrp_SiParent");

                entity.Property(e => e.PurVndrGrpTp)
                    .HasColumnName("PurVndrGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalAdjustment>(entity =>
            {
                entity.HasKey(e => e.SalAdjustmentSi);

                entity.Property(e => e.SalAdjustmentSi).HasColumnName("SalAdjustment_Si");

                entity.Property(e => e.SalAdjustmentCu).HasColumnName("SalAdjustment_Cu");

                entity.Property(e => e.SalAdjustmentTp)
                    .HasColumnName("SalAdjustment_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalAdmitCust>(entity =>
            {
                entity.HasKey(e => e.SalAdmitCustSi);

                entity.Property(e => e.SalAdmitCustSi).HasColumnName("SalAdmitCust_Si");

                entity.Property(e => e.SalAdmitCustDateEdit)
                    .HasColumnName("SalAdmitCust_DateEdit")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalAdmitCustDateEnter)
                    .HasColumnName("SalAdmitCust_DateEnter")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalAdmitCustDateSearch)
                    .HasColumnName("SalAdmitCust_DateSearch")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalAdmitCustDesc)
                    .HasColumnName("SalAdmitCust_Desc")
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.SalAdmitCustEarnInfo)
                    .HasColumnName("SalAdmitCust_EarnInfo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalAdmitCustGoodsNeed)
                    .HasColumnName("SalAdmitCust_GoodsNeed")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalAdmitCustGoodsarzyabi)
                    .HasColumnName("SalAdmitCust_Goodsarzyabi")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalAdmitCustInterView)
                    .HasColumnName("SalAdmitCust_InterView")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalAdmitCustNeedSearch).HasColumnName("SalAdmitCust_NeedSearch");

                entity.Property(e => e.SalAdmitCustNeedsGift).HasColumnName("SalAdmitCust_NeedsGift");

                entity.Property(e => e.SalAdmitCustNotNeedSearch).HasColumnName("SalAdmitCust_NotNeedSearch");

                entity.Property(e => e.SalAdmitCustNotSearchReason)
                    .HasColumnName("SalAdmitCust_NotSearchReason")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalAdmitCustProducts)
                    .HasColumnName("SalAdmitCust_Products")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalAdmitCustSummery)
                    .HasColumnName("SalAdmitCust_Summery")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalAdmitCustTp)
                    .HasColumnName("SalAdmitCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalAdmitCustUserEdit)
                    .HasColumnName("SalAdmitCust_UserEdit")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalAdmitCustUserEnter)
                    .HasColumnName("SalAdmitCust_UserEnter")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalAdmitCustUtiliseDate)
                    .HasColumnName("SalAdmitCust_UtiliseDate")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalAdmitStatusSi).HasColumnName("SalAdmitStatus_Si");

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.HasOne(d => d.SalCustSiNavigation)
                    .WithMany(p => p.SalAdmitCust)
                    .HasForeignKey(d => d.SalCustSi)
                    .HasConstraintName("FK_SalAdmitCust_SalCust");
            });

            modelBuilder.Entity<SalAdmitStatus>(entity =>
            {
                entity.HasKey(e => e.SalAdmitStatusSi);

                entity.Property(e => e.SalAdmitStatusSi).HasColumnName("SalAdmitStatus_Si");

                entity.Property(e => e.SalAdmitStatusTp)
                    .HasColumnName("SalAdmitStatus_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalBrnch>(entity =>
            {
                entity.HasKey(e => e.SalBrnchSi);

                entity.Property(e => e.SalBrnchSi).HasColumnName("SalBrnch_Si");

                entity.Property(e => e.SalBrnchCu)
                    .IsRequired()
                    .HasColumnName("SalBrnch_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchSiParent)
                    .HasColumnName("SalBrnch_SiParent")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SalBrnchTp)
                    .HasColumnName("SalBrnch_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalBrnchUser>(entity =>
            {
                entity.HasKey(e => e.SalBrnchUserSi);

                entity.Property(e => e.SalBrnchUserSi).HasColumnName("SalBrnchUser_Si");

                entity.Property(e => e.SalBrnchSi).HasColumnName("SalBrnch_Si");

                entity.Property(e => e.UserRec)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.HasOne(d => d.SalBrnchSiNavigation)
                    .WithMany(p => p.SalBrnchUser)
                    .HasForeignKey(d => d.SalBrnchSi)
                    .HasConstraintName("FK_SalBrnchUser_SalBrnch");
            });

            modelBuilder.Entity<SalCancle>(entity =>
            {
                entity.HasKey(e => e.SalCancleSi);

                entity.Property(e => e.SalCancleSi).HasColumnName("SalCancle_Si");

                entity.Property(e => e.SalCancleCu)
                    .HasColumnName("SalCancle_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCancleTp)
                    .HasColumnName("SalCancle_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalCashior>(entity =>
            {
                entity.HasKey(e => e.SalCashiorSi);

                entity.Property(e => e.SalCashiorSi).HasColumnName("SalCashior_Si");

                entity.Property(e => e.SalCashiorCu)
                    .HasColumnName("SalCashior_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCashiorTp)
                    .HasColumnName("SalCashior_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalCity>(entity =>
            {
                entity.HasKey(e => e.SalCitySi);

                entity.Property(e => e.SalCitySi).HasColumnName("SalCity_Si");

                entity.Property(e => e.SalCityCu).HasColumnName("SalCity_Cu");

                entity.Property(e => e.SalCityTp)
                    .IsRequired()
                    .HasColumnName("SalCity_Tp")
                    .HasMaxLength(100);

                entity.Property(e => e.SalProvinceSi).HasColumnName("SalProvince_Si");

                entity.HasOne(d => d.SalProvinceSiNavigation)
                    .WithMany(p => p.SalCity)
                    .HasForeignKey(d => d.SalProvinceSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalCity_SalProvince");
            });

            modelBuilder.Entity<SalCntrct>(entity =>
            {
                entity.HasKey(e => e.SalCntrctSi);

                entity.Property(e => e.SalCntrctSi)
                    .HasColumnName("SalCntrct_Si")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalCntrctAnnx)
                    .HasColumnName("SalCntrct_Annx")
                    .HasColumnType("money");

                entity.Property(e => e.SalCntrctCdt)
                    .HasColumnName("SalCntrct_CDT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.SalCntrctEdt)
                    .HasColumnName("SalCntrct_EDT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.SalCntrctFileName)
                    .HasColumnName("SalCntrct_FileName")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalCntrctGrpSi)
                    .IsRequired()
                    .HasColumnName("SalCntrctGrp_Si")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalCntrctPrc)
                    .HasColumnName("SalCntrct_Prc")
                    .HasColumnType("money");

                entity.Property(e => e.SalCntrctPreRec)
                    .HasColumnName("SalCntrct_PreRec")
                    .HasColumnType("money");

                entity.Property(e => e.SalCntrctSatis)
                    .HasColumnName("SalCntrct_Satis")
                    .HasColumnType("money");

                entity.Property(e => e.SalCntrctSdt)
                    .HasColumnName("SalCntrct_SDT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.SalCntrctStsSi).HasColumnName("SalCntrctSts_Si");

                entity.Property(e => e.SalCntrctTechMan)
                    .HasColumnName("SalCntrct_TechMan")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCntrctTp)
                    .HasColumnName("SalCntrct_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.HasOne(d => d.SalCntrctGrpSiNavigation)
                    .WithMany(p => p.SalCntrct)
                    .HasForeignKey(d => d.SalCntrctGrpSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalCntrct_SalCntrctGrp");

                entity.HasOne(d => d.SalCntrctStsSiNavigation)
                    .WithMany(p => p.SalCntrct)
                    .HasForeignKey(d => d.SalCntrctStsSi)
                    .HasConstraintName("FK_SalCntrct_SalCntrctSts");
            });

            modelBuilder.Entity<SalCntrctGds>(entity =>
            {
                entity.HasKey(e => new { e.SalCntrctSi, e.InvGdsSi });

                entity.Property(e => e.SalCntrctSi)
                    .HasColumnName("SalCntrct_Si")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi)
                    .HasColumnName("InvGds_Si")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalCntrctGdsD1)
                    .IsRequired()
                    .HasColumnName("SalCntrctGds_D1")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCntrctGdsD2)
                    .IsRequired()
                    .HasColumnName("SalCntrctGds_D2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCntrctGdsD3)
                    .IsRequired()
                    .HasColumnName("SalCntrctGds_D3")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCntrctGdsI1)
                    .IsRequired()
                    .HasColumnName("SalCntrctGds_I1")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCntrctGdsI2)
                    .IsRequired()
                    .HasColumnName("SalCntrctGds_I2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCntrctGdsI3)
                    .IsRequired()
                    .HasColumnName("SalCntrctGds_I3")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCntrctGdsPrc)
                    .HasColumnName("SalCntrctGds_Prc")
                    .HasColumnType("money");

                entity.Property(e => e.SalCntrctGdsQty).HasColumnName("SalCntrctGds_Qty");

                entity.Property(e => e.SalCntrctGdsUntPrc)
                    .HasColumnName("SalCntrctGds_UntPrc")
                    .HasColumnType("money");

                entity.HasOne(d => d.SalCntrctSiNavigation)
                    .WithMany(p => p.SalCntrctGds)
                    .HasForeignKey(d => d.SalCntrctSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalCntrctGds_SalCntrct");
            });

            modelBuilder.Entity<SalCntrctGrp>(entity =>
            {
                entity.HasKey(e => e.SalCntrctGrpSi);

                entity.Property(e => e.SalCntrctGrpSi)
                    .HasColumnName("SalCntrctGrp_Si")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalCntrctGrpTp)
                    .HasColumnName("SalCntrctGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalCntrctSts>(entity =>
            {
                entity.HasKey(e => e.SalCntrctStsSi);

                entity.Property(e => e.SalCntrctStsSi).HasColumnName("SalCntrctSts_Si");

                entity.Property(e => e.SalCntrctStsTp)
                    .HasColumnName("SalCntrctSts_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalContractD>(entity =>
            {
                entity.HasKey(e => e.SalContractDSi)
                    .HasName("PK_SalContractDetail");

                entity.Property(e => e.SalContractDSi).HasColumnName("SalContractD_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.LineTotal).HasColumnType("money");

                entity.Property(e => e.SalContractHSi).HasColumnName("SalContractH_Si");

                entity.Property(e => e.UnitPrice).HasColumnType("money");

                entity.HasOne(d => d.InvGdsSiNavigation)
                    .WithMany(p => p.SalContractD)
                    .HasForeignKey(d => d.InvGdsSi)
                    .HasConstraintName("FK_SalContractDetail_InvGds");

                entity.HasOne(d => d.SalContractHSiNavigation)
                    .WithMany(p => p.SalContractD)
                    .HasForeignKey(d => d.SalContractHSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalContractDetail_SalContract");
            });

            modelBuilder.Entity<SalContractH>(entity =>
            {
                entity.HasKey(e => e.SalContractHSi)
                    .HasName("PK_SalContract");

                entity.Property(e => e.SalContractHSi).HasColumnName("SalContractH_Si");

                entity.Property(e => e.EndDate)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalCntrctHDs)
                    .HasColumnName("SalCntrctH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalContractHCu).HasColumnName("SalContractH_Cu");

                entity.Property(e => e.SalContractNumber).HasMaxLength(25);

                entity.Property(e => e.SalContractPrcSumTotal)
                    .HasColumnName("SalContract_Prc_SumTotal")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SalContractPrcTotal)
                    .HasColumnName("SalContract_Prc_Total")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SalContractStmpCdt)
                    .HasColumnName("SalContract_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalContractStmpCus)
                    .HasColumnName("SalContract_StmpCUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SalContractStmpMdt)
                    .HasColumnName("SalContract_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalContractStmpMus)
                    .HasColumnName("SalContract_StmpMUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SalContractTp)
                    .HasColumnName("SalContract_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.SalContractTypeId).HasColumnName("SalContractTypeID");

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.StartDate)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.State)
                    .HasMaxLength(1)
                    .IsFixedLength();

                entity.HasOne(d => d.SalContractType)
                    .WithMany(p => p.SalContractH)
                    .HasForeignKey(d => d.SalContractTypeId)
                    .HasConstraintName("FK_SalContractH_SalContractTyp");

                entity.HasOne(d => d.SalCustSiNavigation)
                    .WithMany(p => p.SalContractH)
                    .HasForeignKey(d => d.SalCustSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalContractH_SalCust");
            });

            modelBuilder.Entity<SalContractTyp>(entity =>
            {
                entity.HasKey(e => e.SalCntrctTypeSi);

                entity.Property(e => e.SalCntrctTypeSi).HasColumnName("SalCntrctType_Si");

                entity.Property(e => e.SalCntrctTypeCu).HasColumnName("SalCntrctType_Cu");

                entity.Property(e => e.SalCntrctTypeSiParent).HasColumnName("SalCntrctType_SiParent");

                entity.Property(e => e.SalCntrctTypeTp)
                    .HasColumnName("SalCntrctType_Tp")
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<SalCountry>(entity =>
            {
                entity.HasKey(e => e.SalCountrySi);

                entity.Property(e => e.SalCountrySi).HasColumnName("SalCountry_Si");

                entity.Property(e => e.SalCountryCu)
                    .HasColumnName("SalCountry_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCountryTp)
                    .IsRequired()
                    .HasColumnName("SalCountry_Tp")
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<SalCust>(entity =>
            {
                entity.HasKey(e => e.SalCustSi);

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccMSi).HasColumnName("AccM_Si");

                entity.Property(e => e.AccTSi).HasColumnName("AccT_Si");

                entity.Property(e => e.CtbCustVndrTypSi).HasColumnName("CtbCustVndrTyp_Si");

                entity.Property(e => e.SalAdmitCustDateEnter)
                    .HasColumnName("SalAdmitCust_DateEnter")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalAdmitCustDateSearch)
                    .HasColumnName("SalAdmitCust_DateSearch")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalAdmitCustDesc)
                    .HasColumnName("SalAdmitCust_Desc")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalAdmitCustGoodsNeed)
                    .HasColumnName("SalAdmitCust_GoodsNeed")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.SalAdmitCustNeedsGift).HasColumnName("SalAdmitCust_NeedsGift");

                entity.Property(e => e.SalAdmitCustNotNeedSearch).HasColumnName("SalAdmitCust_NotNeedSearch");

                entity.Property(e => e.SalAdmitCustUtiliseDate)
                    .HasColumnName("SalAdmitCust_UtiliseDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalAdmitStatusSi).HasColumnName("SalAdmitStatus_Si");

                entity.Property(e => e.SalBrnchSi).HasColumnName("SalBrnch_Si");

                entity.Property(e => e.SalCustActive)
                    .HasColumnName("SalCust_Active")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SalCustActiveTypSi).HasColumnName("SalCustActiveTyp_Si");

                entity.Property(e => e.SalCustBlackList).HasColumnName("SalCust_BlackList");

                entity.Property(e => e.SalCustCorporateTyp).HasColumnName("SalCust_CorporateTyp");

                entity.Property(e => e.SalCustCu)
                    .HasColumnName("SalCust_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustDateEnter)
                    .HasColumnName("SalCust_DateEnter")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustDateSave)
                    .HasColumnName("SalCust_DateSave")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustDesc)
                    .HasColumnName("SalCust_Desc")
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustDivision).HasColumnName("SalCust_division");

                entity.Property(e => e.SalCustDomain)
                    .HasColumnName("SalCust_Domain")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpSi).HasColumnName("SalCustGrp_Si");

                entity.Property(e => e.SalCustNeesSearch).HasColumnName("SalCust_NeesSearch");

                entity.Property(e => e.SalCustProduceNow)
                    .HasColumnName("SalCust_ProduceNow")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustPursuit).HasColumnName("SalCust_pursuit");

                entity.Property(e => e.SalCustPursuitTp)
                    .HasColumnName("SalCust_pursuitTP")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustReasongust)
                    .HasColumnName("SalCust_Reasongust")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustStLook).HasColumnName("SalCustSt_Look");

                entity.Property(e => e.SalCustStatusSi).HasColumnName("SalCustStatus_Si");

                entity.Property(e => e.SalCustTitle)
                    .HasColumnName("SalCust_Title")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustUser)
                    .HasColumnName("SalCust_User")
                    .HasMaxLength(50);

                entity.Property(e => e.SalCustUserPursueInsert)
                    .HasColumnName("SalCust_UserPursueInsert")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustUserPursueUpdate)
                    .HasColumnName("SalCust_UserPursueUpdate")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SalEnterducedSi).HasColumnName("SalEnterduced_Si");

                entity.Property(e => e.SalIntrmdSi).HasColumnName("SalIntrmd_Si");

                entity.Property(e => e.SalRegionPathSi).HasColumnName("SalRegionPath_Si");

                entity.Property(e => e.SalRegionSi).HasColumnName("SalRegion_Si");

                entity.Property(e => e.SalcustActiveType)
                    .HasColumnName("Salcust_ActiveType")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalcustAdvetise).HasColumnName("Salcust_advetise");

                entity.Property(e => e.SalcustAdvetiseDesc)
                    .HasColumnName("Salcust_advetiseDesc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalcustContact)
                    .HasColumnName("Salcust_Contact")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalcustDsFirst)
                    .HasColumnName("Salcust_DsFirst")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalcustEnterduced)
                    .HasColumnName("Salcust_Enterduced")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalcustJob)
                    .HasColumnName("Salcust_Job")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalcustLicenseCode)
                    .HasColumnName("Salcust_LicenseCode")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SalcustMajor).HasColumnName("Salcust_major");

                entity.Property(e => e.SalcustMtr).HasColumnName("Salcust_Mtr");

                entity.Property(e => e.SalcustOwn)
                    .HasColumnName("Salcust_Own")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalcustPersonSkill)
                    .HasColumnName("Salcust_PersonSkill")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalcustRelated)
                    .HasColumnName("Salcust_related")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalvarietySi).HasColumnName("Salvariety_Si");

                entity.HasOne(d => d.AccMSiNavigation)
                    .WithMany(p => p.SalCust)
                    .HasForeignKey(d => d.AccMSi)
                    .HasConstraintName("FK_SalCust_CtbAccM");

                entity.HasOne(d => d.AccTSiNavigation)
                    .WithMany(p => p.SalCust)
                    .HasForeignKey(d => d.AccTSi)
                    .HasConstraintName("FK_SalCust_CtbAccT");

                entity.HasOne(d => d.CtbCustVndrTypSiNavigation)
                    .WithMany(p => p.SalCust)
                    .HasForeignKey(d => d.CtbCustVndrTypSi)
                    .HasConstraintName("FK_SalCust_CtbCustVndrTyp");

                entity.HasOne(d => d.SalBrnchSiNavigation)
                    .WithMany(p => p.SalCust)
                    .HasForeignKey(d => d.SalBrnchSi)
                    .HasConstraintName("FK_SalCust_SalBrnch");

                entity.HasOne(d => d.SalCustActiveTypSiNavigation)
                    .WithMany(p => p.SalCust)
                    .HasForeignKey(d => d.SalCustActiveTypSi)
                    .HasConstraintName("FK_SalCust_SalCustActiveTyp");

                entity.HasOne(d => d.SalCustDivisionNavigation)
                    .WithMany(p => p.SalCust)
                    .HasForeignKey(d => d.SalCustDivision)
                    .HasConstraintName("FK_SalCust_SalDivision");

                entity.HasOne(d => d.SalCustGrpSiNavigation)
                    .WithMany(p => p.SalCust)
                    .HasForeignKey(d => d.SalCustGrpSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalCust_SalCustGrp");

                entity.HasOne(d => d.SalCustStatusSiNavigation)
                    .WithMany(p => p.SalCust)
                    .HasForeignKey(d => d.SalCustStatusSi)
                    .HasConstraintName("FK_SalCust_SalCustStatus");

                entity.HasOne(d => d.SalEnterducedSiNavigation)
                    .WithMany(p => p.SalCust)
                    .HasForeignKey(d => d.SalEnterducedSi)
                    .HasConstraintName("FK_SalCust_SalEnterduced");

                entity.HasOne(d => d.SalIntrmdSiNavigation)
                    .WithMany(p => p.SalCust)
                    .HasForeignKey(d => d.SalIntrmdSi)
                    .HasConstraintName("FK_SalCust_SalIntrmd");
            });

            modelBuilder.Entity<SalCustActiveTyp>(entity =>
            {
                entity.HasKey(e => e.SalCustActiveTypSi);

                entity.Property(e => e.SalCustActiveTypSi).HasColumnName("SalCustActiveTyp_Si");

                entity.Property(e => e.SalCustActiveTypTp)
                    .HasColumnName("SalCustActiveTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalCustAtntc>(entity =>
            {
                entity.HasKey(e => e.SalCustAtntcSi);

                entity.Property(e => e.SalCustAtntcSi).HasColumnName("SalCustAtntc_Si");

                entity.Property(e => e.SalCustAtntcActv)
                    .IsRequired()
                    .HasColumnName("SalCustAtntc_Actv")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.SalCustAtntcDs)
                    .IsRequired()
                    .HasColumnName("SalCustAtntc_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustAtntcPrice)
                    .HasColumnName("SalCustAtntc_Price")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SalCustAtntcSaleType).HasColumnName("SalCustAtntc_SaleType");

                entity.Property(e => e.SalCustAtntcTyp).HasColumnName("SalCustAtntc_Typ");

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.HasOne(d => d.SalCustSiNavigation)
                    .WithMany(p => p.SalCustAtntc)
                    .HasForeignKey(d => d.SalCustSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalCustAtntc_SalCust");
            });

            modelBuilder.Entity<SalCustAttach>(entity =>
            {
                entity.HasKey(e => e.SalCustAttachSi);

                entity.Property(e => e.SalCustAttachSi).HasColumnName("SalCustAttach_Si");

                entity.Property(e => e.SalCustAttachDs)
                    .HasColumnName("SalCustAttach_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustAttachFile)
                    .HasColumnName("SalCustAttach_File")
                    .HasColumnType("image");

                entity.Property(e => e.SalCustAttachFileName)
                    .HasColumnName("SalCustAttach_FileName")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustAttachTp)
                    .HasColumnName("SalCustAttach_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");
            });

            modelBuilder.Entity<SalCustBnk>(entity =>
            {
                entity.HasKey(e => e.SalCustBnkSi);

                entity.Property(e => e.SalCustBnkSi).HasColumnName("SalCustBnk_Si");

                entity.Property(e => e.SalCustBnkAccountNo)
                    .HasColumnName("SalCustBnk_AccountNo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustBnkBankName)
                    .HasColumnName("SalCustBnk_BankName")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustBnkBranch)
                    .HasColumnName("SalCustBnk_branch")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");
            });

            modelBuilder.Entity<SalCustFrmul>(entity =>
            {
                entity.HasKey(e => e.SalCustFrmulSi);

                entity.Property(e => e.SalCustFrmulSi).HasColumnName("SalCustFrmul_Si");

                entity.Property(e => e.AccMSi).HasColumnName("AccM_Si");

                entity.Property(e => e.SalCustFrmulOpr).HasColumnName("SalCustFrmul_Opr");

                entity.HasOne(d => d.AccMSiNavigation)
                    .WithMany(p => p.SalCustFrmul)
                    .HasForeignKey(d => d.AccMSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalCustFrmul_CtbAccM");
            });

            modelBuilder.Entity<SalCustGrp>(entity =>
            {
                entity.HasKey(e => e.SalCustGrpSi);

                entity.Property(e => e.SalCustGrpSi).HasColumnName("SalCustGrp_Si");

                entity.Property(e => e.AccMSi).HasColumnName("AccM_Si");

                entity.Property(e => e.AccTSi).HasColumnName("AccT_Si");

                entity.Property(e => e.SalCustGrpCu)
                    .IsRequired()
                    .HasColumnName("SalCustGrp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpSiParent)
                    .HasColumnName("SalCustGrp_SiParent")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SalCustGrpTp)
                    .HasColumnName("SalCustGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalCustGrpUser>(entity =>
            {
                entity.HasKey(e => e.SalCustGrpUserSi);

                entity.Property(e => e.SalCustGrpUserSi).HasColumnName("SalCustGrpUser_Si");

                entity.Property(e => e.SalCustGrpSi).HasColumnName("SalCustGrp_Si");

                entity.Property(e => e.UserRec)
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalCustStatus>(entity =>
            {
                entity.HasKey(e => e.SalCustStatusSi);

                entity.Property(e => e.SalCustStatusSi)
                    .HasColumnName("SalCustStatus_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.SalCustStatusTp)
                    .HasColumnName("SalCustStatus_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalDclrPrcD>(entity =>
            {
                entity.HasKey(e => e.SalDclrPrcDSi);

                entity.HasIndex(e => e.InvGdsSi)
                    .HasName("IX_InvGds_Si");

                entity.Property(e => e.SalDclrPrcDSi).HasColumnName("SalDclrPrcD_Si");

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTypSi).HasColumnName("InvGdsTyp_Si");

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.SalCustGrpSi).HasColumnName("SalCustGrp_Si");

                entity.Property(e => e.SalDclrPrcDLckPrc).HasColumnName("SalDclrPrcD_LckPrc");

                entity.Property(e => e.SalDclrPrcDLckPrcUnt).HasColumnName("SalDclrPrcD_LckPrcUnt");

                entity.Property(e => e.SalDclrPrcDQty).HasColumnName("SalDclrPrcD_Qty");

                entity.Property(e => e.SalDclrPrcDUntPrc)
                    .HasColumnName("SalDclrPrcD_UntPrc")
                    .HasColumnType("money");

                entity.Property(e => e.SalDclrPrcDUntPrcC).HasColumnName("SalDclrPrcD_UntPrcC");

                entity.Property(e => e.SalDclrPrcDUntPrcMax)
                    .HasColumnName("SalDclrPrcD_UntPrc_Max")
                    .HasColumnType("money");

                entity.Property(e => e.SalDclrPrcDUntPrcMin)
                    .HasColumnName("SalDclrPrcD_UntPrc_Min")
                    .HasColumnType("money");

                entity.Property(e => e.SalDclrPrcHSi).HasColumnName("SalDclrPrcH_Si");

                entity.Property(e => e.SalOprDefaultValue).HasColumnName("SalOpr_DefaultValue");

                entity.Property(e => e.SalOprDefaultValue2).HasColumnName("SalOpr_DefaultValue_2");

                entity.Property(e => e.SalOprDefaultValue3).HasColumnName("SalOpr_DefaultValue_3");

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");

                entity.Property(e => e.SalOprSi2).HasColumnName("SalOpr_Si_2");

                entity.Property(e => e.SalOprSi3).HasColumnName("SalOpr_Si_3");

                entity.Property(e => e.SalTypSi).HasColumnName("SalTyp_Si");

                entity.HasOne(d => d.InvGdsSiNavigation)
                    .WithMany(p => p.SalDclrPrcD)
                    .HasForeignKey(d => d.InvGdsSi)
                    .HasConstraintName("FK_SalDclrPrcD_InvGds");

                entity.HasOne(d => d.InvUntSiNavigation)
                    .WithMany(p => p.SalDclrPrcD)
                    .HasForeignKey(d => d.InvUntSi)
                    .HasConstraintName("FK_SalDclrPrcD_InvUnt");

                entity.HasOne(d => d.SalCustGrpSiNavigation)
                    .WithMany(p => p.SalDclrPrcD)
                    .HasForeignKey(d => d.SalCustGrpSi)
                    .HasConstraintName("FK_SalDclrPrcD_SalCustGrp");

                entity.HasOne(d => d.SalDclrPrcHSiNavigation)
                    .WithMany(p => p.SalDclrPrcD)
                    .HasForeignKey(d => d.SalDclrPrcHSi)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_SalDclrPrcD_SalDclrPrcH");

                entity.HasOne(d => d.InvGds)
                    .WithMany(p => p.SalDclrPrcD)
                    .HasForeignKey(d => new { d.InvGdsSi, d.InvGdsTypSi })
                    .HasConstraintName("FK_SalDclrPrcD_InvGdsTyp");
            });

            modelBuilder.Entity<SalDclrPrcH>(entity =>
            {
                entity.HasKey(e => e.SalDclrPrcHSi);

                entity.Property(e => e.SalDclrPrcHSi).HasColumnName("SalDclrPrcH_Si");

                entity.Property(e => e.SalBrnchSi).HasColumnName("SalBrnch_Si");

                entity.Property(e => e.SalDclrPrcHCu).HasColumnName("SalDclrPrcH_Cu");

                entity.Property(e => e.SalDclrPrcHDs)
                    .IsRequired()
                    .HasColumnName("SalDclrPrcH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalDclrPrcHStatus).HasColumnName("SalDclrPrcH_Status");

                entity.Property(e => e.SalDclrPrcHTp)
                    .HasColumnName("SalDclrPrcH_Tp")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.HasOne(d => d.SalBrnchSiNavigation)
                    .WithMany(p => p.SalDclrPrcH)
                    .HasForeignKey(d => d.SalBrnchSi)
                    .HasConstraintName("FK_SalDclrPrcH_SalBrnch");
            });

            modelBuilder.Entity<SalDepend>(entity =>
            {
                entity.HasKey(e => e.SalDependSi);

                entity.Property(e => e.SalDependSi).HasColumnName("SalDepend_Si");

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalDependActive).HasColumnName("SalDepend_Active");

                entity.Property(e => e.SalDependBirthdate)
                    .HasColumnName("SalDepend_Birthdate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalDependDesc)
                    .HasColumnName("SalDepend_Desc")
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.SalDependEmail)
                    .HasColumnName("SalDepend_Email")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalDependEmail2)
                    .HasColumnName("SalDepend_Email2")
                    .HasMaxLength(2048)
                    .IsUnicode(false);

                entity.Property(e => e.SalDependIsMain).HasColumnName("SalDepend_IsMain");

                entity.Property(e => e.SalDependIsVip).HasColumnName("SalDepend_IsVip");

                entity.Property(e => e.SalDependJob)
                    .HasColumnName("SalDepend_Job")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalDependMobile)
                    .HasColumnName("SalDepend_Mobile")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalDependSpecialDayDate)
                    .HasColumnName("SalDepend_SpecialDayDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalDependSpecialDayDesc)
                    .HasColumnName("SalDepend_SpecialDayDesc")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalDependTel)
                    .HasColumnName("SalDepend_Tel")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalDependTp)
                    .HasColumnName("SalDepend_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.HasOne(d => d.SalCustSiNavigation)
                    .WithMany(p => p.SalDepend)
                    .HasForeignKey(d => d.SalCustSi)
                    .HasConstraintName("FK_SalDepend_SalCust");
            });

            modelBuilder.Entity<SalDisCount>(entity =>
            {
                entity.Property(e => e.SalDisCountId)
                    .HasColumnName("SalDisCount_Id")
                    .ValueGeneratedNever();

                entity.Property(e => e.SalDisCountTx)
                    .HasColumnName("SalDisCount_Tx")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalDivision>(entity =>
            {
                entity.HasKey(e => e.SalDivisionSi);

                entity.Property(e => e.SalDivisionSi)
                    .HasColumnName("SalDivision_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.SalDivisionTp)
                    .HasColumnName("SalDivision_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalDlvLoc>(entity =>
            {
                entity.HasKey(e => e.SalDlvLocTp);

                entity.Property(e => e.SalDlvLocTp)
                    .HasColumnName("SalDlvLoc_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalDlvrr>(entity =>
            {
                entity.HasKey(e => e.SalDlvrrSi);

                entity.Property(e => e.SalDlvrrSi)
                    .HasColumnName("SalDlvrr_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.SalDlvrrAdrs)
                    .HasColumnName("SalDlvrr_Adrs")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalDlvrrPercent).HasColumnName("SalDlvrr_Percent");

                entity.Property(e => e.SalDlvrrPhoto)
                    .HasColumnName("SalDlvrr_Photo")
                    .HasColumnType("image");

                entity.Property(e => e.SalDlvrrTel)
                    .HasColumnName("SalDlvrr_Tel")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalDlvrrTp)
                    .HasColumnName("SalDlvrr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalDlvrrTpEn)
                    .HasColumnName("SalDlvrr_Tp_En")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalDocLock>(entity =>
            {
                entity.HasKey(e => e.SalDocLockSi);

                entity.Property(e => e.SalDocLockSi).HasColumnName("SalDocLock_Si");

                entity.Property(e => e.SalDocLockActive).HasColumnName("SalDocLock_Active");

                entity.Property(e => e.SalDocLockFr)
                    .HasColumnName("SalDocLock_Fr")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.SalDocLockTo)
                    .HasColumnName("SalDocLock_To")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.SalDocLockTx)
                    .HasColumnName("SalDocLock_Tx")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalDocPur>(entity =>
            {
                entity.HasKey(e => e.SalDocPurSi);

                entity.Property(e => e.SalDocPurSi).HasColumnName("SalDocPur_Si");

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.SalDocPurCredit)
                    .HasColumnName("SalDocPur_Credit")
                    .HasColumnType("money");

                entity.Property(e => e.SalDocPurDebit)
                    .HasColumnName("SalDocPur_Debit")
                    .HasColumnType("money");

                entity.Property(e => e.SalDocPurTp)
                    .HasColumnName("SalDocPur_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHSi).HasColumnName("SalInvcH_Si");
            });

            modelBuilder.Entity<SalDocVchr>(entity =>
            {
                entity.HasKey(e => e.SalDocVchrSi);

                entity.Property(e => e.SalDocVchrSi).HasColumnName("SalDocVchr_Si");

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.SalDocVchrCredit)
                    .HasColumnName("SalDocVchr_Credit")
                    .HasColumnType("money");

                entity.Property(e => e.SalDocVchrCreditC)
                    .HasColumnName("SalDocVchr_CreditC")
                    .HasColumnType("money");

                entity.Property(e => e.SalDocVchrDebit)
                    .HasColumnName("SalDocVchr_Debit")
                    .HasColumnType("money");

                entity.Property(e => e.SalDocVchrDebitC)
                    .HasColumnName("SalDocVchr_DebitC")
                    .HasColumnType("money");

                entity.Property(e => e.SalDocVchrTp)
                    .HasColumnName("SalDocVchr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHSi).HasColumnName("SalInvcH_Si");

                entity.Property(e => e.SalRetInvcHSi).HasColumnName("SalRetInvcH_Si");

                entity.HasOne(d => d.SalInvcHSiNavigation)
                    .WithMany(p => p.SalDocVchr)
                    .HasForeignKey(d => d.SalInvcHSi)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_SalDocVchr_SalInvcH");
            });

            modelBuilder.Entity<SalDriver>(entity =>
            {
                entity.HasKey(e => e.SalDriverSi);

                entity.Property(e => e.SalDriverSi).HasColumnName("SalDriver_Si");

                entity.Property(e => e.SalDriverTp)
                    .HasColumnName("SalDriver_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalDrvr>(entity =>
            {
                entity.HasKey(e => e.SalDrvrSi);

                entity.Property(e => e.SalDrvrSi).HasColumnName("SalDrvr_Si");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.SalDrvrAdrs)
                    .HasColumnName("SalDrvr_Adrs")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalDrvrCarNo)
                    .HasColumnName("SalDrvr_CarNo")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalDrvrCarType)
                    .HasColumnName("SalDrvr_CarType")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalDrvrCu)
                    .HasColumnName("SalDrvr_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalDrvrPhoto)
                    .HasColumnName("SalDrvr_Photo")
                    .HasColumnType("image");

                entity.Property(e => e.SalDrvrTel)
                    .HasColumnName("SalDrvr_Tel")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalDrvrTp)
                    .HasColumnName("SalDrvr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalDscr>(entity =>
            {
                entity.HasKey(e => e.SalDscrSi);

                entity.Property(e => e.SalDscrSi).HasColumnName("SalDscr_Si");

                entity.Property(e => e.SalDscrTp)
                    .HasColumnName("SalDscr_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.SalDscrTp2)
                    .HasColumnName("SalDscr_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalDscrSms>(entity =>
            {
                entity.HasKey(e => e.SalDscrSmsSi);

                entity.Property(e => e.SalDscrSmsSi).HasColumnName("SalDscrSms_Si");

                entity.Property(e => e.SalDscrSmsTp)
                    .HasColumnName("SalDscrSms_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.SalDscrSmsTp2)
                    .HasColumnName("SalDscrSms_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalEnterduced>(entity =>
            {
                entity.HasKey(e => e.SalEnterducedSi);

                entity.Property(e => e.SalEnterducedSi)
                    .HasColumnName("SalEnterduced_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.SalEnterducedTp)
                    .HasColumnName("SalEnterduced_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalExpMetrajCalc>(entity =>
            {
                entity.HasKey(e => e.SiId);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.Tp)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalExportPrmD>(entity =>
            {
                entity.HasKey(e => e.SalExportPrmDSi);

                entity.Property(e => e.SalExportPrmDSi).HasColumnName("SalExportPrmD_Si");

                entity.Property(e => e.BatchNumberD)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTypSi).HasColumnName("InvGdsTyp_Si");

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.SalExportPrmDExpiredate)
                    .HasColumnName("SalExportPrmD_Expiredate")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalExportPrmDGiftOk).HasColumnName("SalExportPrmD_GiftOk");

                entity.Property(e => e.SalExportPrmDPrcDec).HasColumnName("SalExportPrmD_Prc_Dec");

                entity.Property(e => e.SalExportPrmDPrcDec2).HasColumnName("SalExportPrmD_Prc_Dec_2");

                entity.Property(e => e.SalExportPrmDPrcDec3).HasColumnName("SalExportPrmD_Prc_Dec_3");

                entity.Property(e => e.SalExportPrmDPrcInc).HasColumnName("SalExportPrmD_Prc_Inc");

                entity.Property(e => e.SalExportPrmDPrcInc2).HasColumnName("SalExportPrmD_Prc_Inc_2");

                entity.Property(e => e.SalExportPrmDPrcInc3).HasColumnName("SalExportPrmD_Prc_Inc_3");

                entity.Property(e => e.SalExportPrmDQty).HasColumnName("SalExportPrmD_Qty");

                entity.Property(e => e.SalExportPrmDQty2).HasColumnName("SalExportPrmD_Qty2");

                entity.Property(e => e.SalExportPrmDSumPrcDec)
                    .HasColumnName("SalExportPrmD_SumPrc_Dec")
                    .HasColumnType("money");

                entity.Property(e => e.SalExportPrmDSumPrcInc)
                    .HasColumnName("SalExportPrmD_SumPrc_Inc")
                    .HasColumnType("money");

                entity.Property(e => e.SalExportPrmDSumTotal)
                    .HasColumnName("SalExportPrmD_SumTotal")
                    .HasColumnType("money");

                entity.Property(e => e.SalExportPrmDTotal)
                    .HasColumnName("SalExportPrmD_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalExportPrmDTotalC).HasColumnName("SalExportPrmD_TotalC");

                entity.Property(e => e.SalExportPrmDTp)
                    .HasColumnName("SalExportPrmD_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalExportPrmDUntPrc)
                    .HasColumnName("SalExportPrmD_UntPrc")
                    .HasColumnType("money");

                entity.Property(e => e.SalExportPrmDUntPrcC).HasColumnName("SalExportPrmD_UntPrcC");

                entity.Property(e => e.SalExportPrmHSi).HasColumnName("SalExportPrmH_Si");

                entity.Property(e => e.SalGiftDSi).HasColumnName("SalGiftD_Si");

                entity.Property(e => e.SalGiftInvGdsQty).HasColumnName("SalGiftInvGds_Qty");

                entity.Property(e => e.SalGiftInvGdsSi).HasColumnName("SalGiftInvGds_Si");

                entity.Property(e => e.SalGiftInvGdsTotal).HasColumnName("SalGiftInvGds_Total");

                entity.Property(e => e.SalGiftInvGdsTp)
                    .HasColumnName("SalGiftInvGds_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprDefaultValue).HasColumnName("SalOpr_DefaultValue");

                entity.Property(e => e.SalOprDefaultValue2).HasColumnName("SalOpr_DefaultValue_2");

                entity.Property(e => e.SalOprDefaultValue3).HasColumnName("SalOpr_DefaultValue_3");

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");

                entity.Property(e => e.SalOprSi2).HasColumnName("SalOpr_Si_2");

                entity.Property(e => e.SalOprSi3).HasColumnName("SalOpr_Si_3");

                entity.Property(e => e.SalOprTp)
                    .HasColumnName("SalOpr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTp2)
                    .HasColumnName("SalOpr_TP_2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTp3)
                    .HasColumnName("SalOpr_TP_3")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.SalExportPrmHSiNavigation)
                    .WithMany(p => p.SalExportPrmD)
                    .HasForeignKey(d => d.SalExportPrmHSi)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_SalExportPrmD_SalExportPrmH");
            });

            modelBuilder.Entity<SalExportPrmH>(entity =>
            {
                entity.HasKey(e => e.SalExportPrmHSi);

                entity.Property(e => e.SalExportPrmHSi).HasColumnName("SalExportPrmH_Si");

                entity.Property(e => e.BatchNumberH)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsSi).HasColumnName("CtbAddrs_Si");

                entity.Property(e => e.DescDriver)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHAccMSi).HasColumnName("InvDocH_AccM_Si");

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.SaExpInvcHRcvMthd)
                    .HasColumnName("SaExpInvcH_RcvMthd")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchSi).HasColumnName("SalBrnch_Si");

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalDlvrrSi).HasColumnName("SalDlvrr_Si");

                entity.Property(e => e.SalDriverSi).HasColumnName("SalDriver_Si");

                entity.Property(e => e.SalDrvrSi).HasColumnName("SalDrvr_Si");

                entity.Property(e => e.SalExpInvcHDlvLoc)
                    .HasColumnName("SalExpInvcH_DlvLoc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalExpInvcHGood).HasColumnName("SalExpInvcH_Good");

                entity.Property(e => e.SalExportPrmHBarNo)
                    .HasColumnName("SalExportPrmH_BarNo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalExportPrmHCu).HasColumnName("SalExportPrmH_Cu");

                entity.Property(e => e.SalExportPrmHCu2)
                    .HasColumnName("SalExportPrmH_Cu2")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SalExportPrmHDm)
                    .HasColumnName("SalExportPrmH_Dm")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalExportPrmHDrivername)
                    .HasColumnName("SalExportPrmH_Drivername")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalExportPrmHDs)
                    .HasColumnName("SalExportPrmH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SalExportPrmHLock).HasColumnName("SalExportPrmH_Lock");

                entity.Property(e => e.SalExportPrmHPrcDec)
                    .HasColumnName("SalExportPrmH_Prc_Dec")
                    .HasColumnType("money");

                entity.Property(e => e.SalExportPrmHPrcInc)
                    .HasColumnName("SalExportPrmH_Prc_Inc")
                    .HasColumnType("money");

                entity.Property(e => e.SalExportPrmHPrcSumQty).HasColumnName("SalExportPrmH_Prc_SumQty");

                entity.Property(e => e.SalExportPrmHPrcSumTotal)
                    .HasColumnName("SalExportPrmH_Prc_SumTotal")
                    .HasColumnType("money");

                entity.Property(e => e.SalExportPrmHPrcSumTotalC)
                    .HasColumnName("SalExportPrmH_Prc_SumTotalC")
                    .HasColumnType("money");

                entity.Property(e => e.SalExportPrmHPrcTotal)
                    .HasColumnName("SalExportPrmH_Prc_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalExportPrmHRfrncTyp).HasColumnName("SalExportPrmH_RfrncTyp");

                entity.Property(e => e.SalExportPrmHSi2).HasColumnName("SalExportPrmH_Si_2");

                entity.Property(e => e.SalExportPrmHStS).HasColumnName("SalExportPrmH_StS");

                entity.Property(e => e.SalExportPrmHStmpCdt)
                    .HasColumnName("SalExportPrmH_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalExportPrmHStmpCus)
                    .HasColumnName("SalExportPrmH_StmpCUs")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalExportPrmHStmpMdt)
                    .HasColumnName("SalExportPrmH_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalExportPrmHStmpMus)
                    .HasColumnName("SalExportPrmH_StmpMUs")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalExportPrmHTp)
                    .HasColumnName("SalExportPrmH_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.SalIntrmdSi).HasColumnName("SalIntrmd_Si");

                entity.Property(e => e.SalPreInvcHSi).HasColumnName("SalPreInvcH_Si");

                entity.Property(e => e.SalTypSi).HasColumnName("SalTyp_Si");

                entity.HasOne(d => d.SalPreInvcHSiNavigation)
                    .WithMany(p => p.SalExportPrmH)
                    .HasForeignKey(d => d.SalPreInvcHSi)
                    .HasConstraintName("FK_SalExportPrmH_SalPreInvcH");
            });

            modelBuilder.Entity<SalExportPrmHopr>(entity =>
            {
                entity.HasKey(e => e.SalExportPrmHoprSi);

                entity.ToTable("SalExportPrmHOpr");

                entity.Property(e => e.SalExportPrmHoprSi).HasColumnName("SalExportPrmHOpr_Si");

                entity.Property(e => e.SalExportPrmHSi).HasColumnName("SalExportPrmH_Si");

                entity.Property(e => e.SalExportPrmHoprCalcValue)
                    .HasColumnName("SalExportPrmHOpr_CalcValue")
                    .HasColumnType("money");

                entity.Property(e => e.SalExportPrmHoprValue)
                    .HasColumnName("SalExportPrmHOpr_Value")
                    .HasColumnType("money");

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");
            });

            modelBuilder.Entity<SalFixAccount>(entity =>
            {
                entity.HasKey(e => e.SalFixAccountSi);

                entity.Property(e => e.SalFixAccountSi).HasColumnName("SalFixAccount_Si");

                entity.Property(e => e.SalFixAccountCu).HasColumnName("SalFixAccount_Cu");

                entity.Property(e => e.SalFixAccountTp)
                    .HasColumnName("SalFixAccount_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalGdsAcc>(entity =>
            {
                entity.HasKey(e => e.SalGdsAccSi);

                entity.HasIndex(e => e.InvGdsSi)
                    .HasName("IX_InvGds_Si")
                    .IsUnique();

                entity.Property(e => e.SalGdsAccSi).HasColumnName("SalGdsAcc_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.SalGdsAccAccCSi).HasColumnName("SalGdsAcc_AccC_Si");

                entity.Property(e => e.SalGdsAccAccMSi).HasColumnName("SalGdsAcc_AccM_Si");

                entity.Property(e => e.SalGdsAccAccPSi).HasColumnName("SalGdsAcc_AccP_Si");

                entity.Property(e => e.SalGdsAccAccTSi).HasColumnName("SalGdsAcc_AccT_Si");

                entity.HasOne(d => d.InvGdsSiNavigation)
                    .WithOne(p => p.SalGdsAcc)
                    .HasForeignKey<SalGdsAcc>(d => d.InvGdsSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalGdsAcc_InvGds");

                entity.HasOne(d => d.SalGdsAccAccMSiNavigation)
                    .WithMany(p => p.SalGdsAcc)
                    .HasForeignKey(d => d.SalGdsAccAccMSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalGdsAcc_CtbAccM");

                entity.HasOne(d => d.SalGdsAccAccTSiNavigation)
                    .WithMany(p => p.SalGdsAcc)
                    .HasForeignKey(d => d.SalGdsAccAccTSi)
                    .HasConstraintName("FK_SalGdsAcc_CtbAccT");
            });

            modelBuilder.Entity<SalGdsRetAcc>(entity =>
            {
                entity.HasKey(e => e.SalGdsRetAccSi);

                entity.HasIndex(e => e.InvGdsSi)
                    .HasName("IX_SalGdsRetAcc")
                    .IsUnique();

                entity.Property(e => e.SalGdsRetAccSi).HasColumnName("SalGdsRetAcc_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.SalGdsRetAccAccCSi).HasColumnName("SalGdsRetAcc_AccC_Si");

                entity.Property(e => e.SalGdsRetAccAccMSi).HasColumnName("SalGdsRetAcc_AccM_Si");

                entity.Property(e => e.SalGdsRetAccAccPSi).HasColumnName("SalGdsRetAcc_AccP_Si");

                entity.Property(e => e.SalGdsRetAccAccTSi).HasColumnName("SalGdsRetAcc_AccT_Si");

                entity.HasOne(d => d.InvGdsSiNavigation)
                    .WithOne(p => p.SalGdsRetAcc)
                    .HasForeignKey<SalGdsRetAcc>(d => d.InvGdsSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalGdsRetAcc_InvGds");

                entity.HasOne(d => d.SalGdsRetAccAccMSiNavigation)
                    .WithMany(p => p.SalGdsRetAcc)
                    .HasForeignKey(d => d.SalGdsRetAccAccMSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalGdsRetAcc_CtbAccM");

                entity.HasOne(d => d.SalGdsRetAccAccTSiNavigation)
                    .WithMany(p => p.SalGdsRetAcc)
                    .HasForeignKey(d => d.SalGdsRetAccAccTSi)
                    .HasConstraintName("FK_SalGdsRetAcc_CtbAccT");
            });

            modelBuilder.Entity<SalGftCnd>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.SalGftCndDsFrm)
                    .HasColumnName("SalGftCnd_DsFrm")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SalGftCndDsTo)
                    .HasColumnName("SalGftCnd_DsTo")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SalGftCndPrice)
                    .HasColumnName("SalGftCnd_Price")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalGftCndQty)
                    .HasColumnName("SalGftCnd_Qty")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalGftCndSi)
                    .HasColumnName("SalGftCnd_Si")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SalGiftD>(entity =>
            {
                entity.HasKey(e => e.SalGiftDSi);

                entity.Property(e => e.SalGiftDSi).HasColumnName("SalGiftD_Si");

                entity.Property(e => e.InvGdsQty)
                    .HasColumnName("InvGds_Qty")
                    .HasColumnType("money");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTotal)
                    .HasColumnName("InvGds_Total")
                    .HasColumnType("money");

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.SalGiftHSi).HasColumnName("SalGiftH_Si");

                entity.HasOne(d => d.SalGiftHSiNavigation)
                    .WithMany(p => p.SalGiftD)
                    .HasForeignKey(d => d.SalGiftHSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalGiftD_SalGiftH");
            });

            modelBuilder.Entity<SalGiftH>(entity =>
            {
                entity.HasKey(e => e.SalGiftHSi);

                entity.Property(e => e.SalGiftHSi).HasColumnName("SalGiftH_Si");

                entity.Property(e => e.InvGdsQty)
                    .HasColumnName("InvGds_Qty")
                    .HasColumnType("money");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTotal)
                    .HasColumnName("InvGds_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalGiftAcsMny).HasColumnName("SalGift_AcsMny");

                entity.Property(e => e.SalGiftActive).HasColumnName("SalGift_Active");
            });

            modelBuilder.Entity<SalGiftInvGds>(entity =>
            {
                entity.HasKey(e => e.SalGiftInvGdsSi);

                entity.Property(e => e.SalGiftInvGdsSi).HasColumnName("SalGiftInvGds_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.SalGiftInvGdsCu)
                    .HasColumnName("SalGiftInvGds_Cu")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SalGiftInvGdsQty)
                    .HasColumnName("SalGiftInvGds_Qty")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalGiftInvGdsTotal)
                    .HasColumnName("SalGiftInvGds_Total")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalGiftInvGdsTp)
                    .HasColumnName("SalGiftInvGds_Tp")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<SalGrpUser>(entity =>
            {
                entity.HasKey(e => e.SalGrpUserSi);

                entity.Property(e => e.SalGrpUserSi).HasColumnName("SalGrpUser_Si");

                entity.Property(e => e.SalGrpUserCu)
                    .HasColumnName("SalGrpUser_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalGrpUserManger).HasColumnName("SalGrpUser_Manger");

                entity.Property(e => e.SalGrpUserTp)
                    .HasColumnName("SalGrpUser_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalGrpUserToUser>(entity =>
            {
                entity.HasKey(e => e.SalGrpUserToUserSi);

                entity.Property(e => e.SalGrpUserToUserSi).HasColumnName("SalGrpUserToUser_Si");

                entity.Property(e => e.SalGrpUserSi).HasColumnName("SalGrpUser_Si");

                entity.Property(e => e.SalGrpUserToUserIsManager).HasColumnName("SalGrpUserToUser_IsManager");

                entity.Property(e => e.UserRec)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.HasOne(d => d.SalGrpUserSiNavigation)
                    .WithMany(p => p.SalGrpUserToUser)
                    .HasForeignKey(d => d.SalGrpUserSi)
                    .HasConstraintName("FK_SalGrpUserToUser_SalGrpUser");
            });

            modelBuilder.Entity<SalGuranty>(entity =>
            {
                entity.HasKey(e => e.SalGurantySi);

                entity.Property(e => e.SalGurantySi).HasColumnName("SalGuranty_Si");

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalGurantyBdate)
                    .HasColumnName("SalGuranty_BDate")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.SalGurantyEdate)
                    .HasColumnName("SalGuranty_EDate")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.SalGurantyHcu)
                    .HasColumnName("SalGuranty_HCu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalGurantyHtyp)
                    .HasColumnName("SalGuranty_HTyp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalGurantyPcu)
                    .HasColumnName("SalGuranty_PCu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalGurantySerial)
                    .HasColumnName("SalGuranty_Serial")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHSi).HasColumnName("SalInvcH_Si");
            });

            modelBuilder.Entity<SalGurantyD>(entity =>
            {
                entity.HasKey(e => e.SalGurantyDSi);

                entity.Property(e => e.SalGurantyDSi).HasColumnName("SalGurantyD_Si");

                entity.Property(e => e.SalGurantyDDate)
                    .HasColumnName("SalGurantyD_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.SalGurantySi).HasColumnName("SalGuranty_Si");

                entity.Property(e => e.Service)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalIntrmd>(entity =>
            {
                entity.HasKey(e => e.SalIntrmdSi);

                entity.Property(e => e.SalIntrmdSi).HasColumnName("SalIntrmd_Si");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLmSi2).HasColumnName("AccLM_Si_2");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.SalIntrmdCu)
                    .IsRequired()
                    .HasColumnName("SalIntrmd_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalIntrmdDefaultValue)
                    .HasColumnName("SalIntrmd_DefaultValue")
                    .HasColumnType("money");

                entity.Property(e => e.SalIntrmdTp)
                    .HasColumnName("SalIntrmd_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalIntrmdValueTyp).HasColumnName("SalIntrmd_ValueTyp");
            });

            modelBuilder.Entity<SalIntrmdUser>(entity =>
            {
                entity.HasKey(e => e.SalIntrmdUserSi);

                entity.Property(e => e.SalIntrmdUserSi).HasColumnName("SalIntrmdUser_Si");

                entity.Property(e => e.SalIntrmdSi).HasColumnName("SalIntrmd_Si");

                entity.Property(e => e.UserRec)
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalInvcAttach>(entity =>
            {
                entity.HasKey(e => e.SalInvcAttachSi);

                entity.Property(e => e.SalInvcAttachSi).HasColumnName("SalInvcAttach_Si");

                entity.Property(e => e.SalInvcAttachDs)
                    .HasColumnName("SalInvcAttach_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcAttachFile)
                    .HasColumnName("SalInvcAttach_File")
                    .HasColumnType("image");

                entity.Property(e => e.SalInvcAttachFileName)
                    .HasColumnName("SalInvcAttach_FileName")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcAttachTp)
                    .HasColumnName("SalInvcAttach_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvchSi).HasColumnName("SalInvch_Si");

                entity.HasOne(d => d.SalInvchSiNavigation)
                    .WithMany(p => p.SalInvcAttach)
                    .HasForeignKey(d => d.SalInvchSi)
                    .HasConstraintName("FK_SalInvcAttach_SalInvcH");
            });

            modelBuilder.Entity<SalInvcD>(entity =>
            {
                entity.HasKey(e => e.SalInvcDSi)
                    .HasName("PK_SalDocD");

                entity.HasIndex(e => e.InvGdsSi)
                    .HasName("IX_InvGds_Si");

                entity.HasIndex(e => e.SalInvcHSi)
                    .HasName("IX_SalInvcH_Si");

                entity.Property(e => e.SalInvcDSi)
                    .HasColumnName("SalInvcD_Si")
                    .HasComment("کد پنهان");

                entity.Property(e => e.BatchNumberD)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasComment("کد رهگیری");

                entity.Property(e => e.CtbCurncySi)
                    .HasColumnName("CtbCurncy_Si")
                    .HasComment("کد پنهان ارز");

                entity.Property(e => e.ExchangeRate).HasComment("نرخ ارز");

                entity.Property(e => e.InvGdsSi)
                    .HasColumnName("InvGds_Si")
                    .HasComment("کد پنهان کالا");

                entity.Property(e => e.InvGdsTypSi)
                    .HasColumnName("InvGdsTyp_Si")
                    .HasComment("کد پنهان نوع کالا");

                entity.Property(e => e.InvUntSi)
                    .HasColumnName("InvUnt_Si")
                    .HasComment("کد پنهان واحد سنجش");

                entity.Property(e => e.Remain).HasComment("مانده -کد رهگیری");

                entity.Property(e => e.SalDisCount)
                    .HasColumnType("money")
                    .HasComment("قیمت تخفیف");

                entity.Property(e => e.SalDisCountId)
                    .HasColumnName("SalDisCount_Id")
                    .HasComment("کد پنهان تخفیف");

                entity.Property(e => e.SalGiftDSi)
                    .HasColumnName("SalGiftD_Si")
                    .HasComment("کد پنهان تخفیف");

                entity.Property(e => e.SalGiftInvGdsQty)
                    .HasColumnName("SalGiftInvGds_Qty")
                    .HasComment("تعدادی جایزه");

                entity.Property(e => e.SalGiftInvGdsSi)
                    .HasColumnName("SalGiftInvGds_Si")
                    .HasComment("کد پنهان جایزه");

                entity.Property(e => e.SalGiftInvGdsTotal)
                    .HasColumnName("SalGiftInvGds_Total")
                    .HasComment("قیمت جایزه");

                entity.Property(e => e.SalGiftInvGdsTp)
                    .HasColumnName("SalGiftInvGds_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("شرح جایزه");

                entity.Property(e => e.SalInvCdSumTotal)
                    .HasColumnName("SalInvCd_SumTotal")
                    .HasColumnType("money")
                    .HasComment("جمع قیمت با احتساب عامل");

                entity.Property(e => e.SalInvcDCoefficientCust)
                    .HasColumnName("SalInvcD_coefficientCust")
                    .HasComment("ضریب مشتری");

                entity.Property(e => e.SalInvcDCoefficientintrmd)
                    .HasColumnName("SalInvcD_coefficientintrmd")
                    .HasComment("ضریب ویزیتور");

                entity.Property(e => e.SalInvcDExpiredate)
                    .HasColumnName("SalInvcD_Expiredate")
                    .HasColumnType("datetime")
                    .HasComment("تاریخ انقضا میلادی");

                entity.Property(e => e.SalInvcDExpiredateSh)
                    .HasColumnName("SalInvcD_ExpiredateSH")
                    .HasColumnType("smalldatetime")
                    .HasComment("---");

                entity.Property(e => e.SalInvcDGiftOk)
                    .HasColumnName("SalInvcD_GiftOk")
                    .HasComment("اشانتیون؟");

                entity.Property(e => e.SalInvcDGrntCust)
                    .HasColumnName("SalInvcD_GrntCust")
                    .HasComment("امتیاز مشتری");

                entity.Property(e => e.SalInvcDGrntIntrmd)
                    .HasColumnName("SalInvcD_GrntIntrmd")
                    .HasComment("امتیاز ویزیتور");

                entity.Property(e => e.SalInvcDPrcDec)
                    .HasColumnName("SalInvcD_Prc_Dec")
                    .HasComment("کسورات");

                entity.Property(e => e.SalInvcDPrcDec2)
                    .HasColumnName("SalInvcD_Prc_Dec_2")
                    .HasComment("کسورات 2");

                entity.Property(e => e.SalInvcDPrcDec3)
                    .HasColumnName("SalInvcD_Prc_Dec_3")
                    .HasComment("کسورات 3");

                entity.Property(e => e.SalInvcDPrcInc)
                    .HasColumnName("SalInvcD_Prc_Inc")
                    .HasComment("اضافات");

                entity.Property(e => e.SalInvcDPrcInc2)
                    .HasColumnName("SalInvcD_Prc_Inc_2")
                    .HasComment("اضافات 2");

                entity.Property(e => e.SalInvcDPrcInc3)
                    .HasColumnName("SalInvcD_Prc_Inc_3")
                    .HasComment("اضافات 3");

                entity.Property(e => e.SalInvcDPurCredit)
                    .HasColumnName("SalInvcD_PurCredit")
                    .HasComment("مبلغ بستانکار رسید انبار");

                entity.Property(e => e.SalInvcDPurDebit)
                    .HasColumnName("SalInvcD_PurDebit")
                    .HasComment("مبلغ  بدهکار رسید انبار");

                entity.Property(e => e.SalInvcDPurDesc)
                    .HasColumnName("SalInvcD_PurDesc")
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasComment("شرح سند رسید انبار در فاکتور");

                entity.Property(e => e.SalInvcDQty)
                    .HasColumnName("SalInvcD_Qty")
                    .HasColumnType("money")
                    .HasComment("تعدادردیفی");

                entity.Property(e => e.SalInvcDQty2)
                    .HasColumnName("SalInvcD_Qty2")
                    .HasComment("مقدار 2");

                entity.Property(e => e.SalInvcDRds)
                    .HasColumnName("SalInvcD_RDs")
                    .HasColumnType("smalldatetime")
                    .HasComment("دارای تاریخ رسید");

                entity.Property(e => e.SalInvcDRno)
                    .HasColumnName("SalInvcD_RNo")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasComment("شماره رسید");

                entity.Property(e => e.SalInvcDRow)
                    .HasColumnName("SalInvcD_Row")
                    .HasComment("ردیف");

                entity.Property(e => e.SalInvcDSumPrcDec)
                    .HasColumnName("SalInvcD_SumPrc_Dec")
                    .HasComment("جمع کسورات");

                entity.Property(e => e.SalInvcDSumPrcInc)
                    .HasColumnName("SalInvcD_SumPrc_Inc")
                    .HasComment("جمع اضافات");

                entity.Property(e => e.SalInvcDTotal)
                    .HasColumnName("SalInvcD_Total")
                    .HasColumnType("money")
                    .HasComment("قیمت کل ردیف");

                entity.Property(e => e.SalInvcDTotalC)
                    .HasColumnName("SalInvcD_TotalC")
                    .HasComment("جمع کل ارزی");

                entity.Property(e => e.SalInvcDTotalGrantCust)
                    .HasColumnName("SalInvcD_TotalGrantCust")
                    .HasComment("جمع کل مشتری");

                entity.Property(e => e.SalInvcDTotalGrantIntrmd)
                    .HasColumnName("SalInvcD_TotalGrantIntrmd")
                    .HasComment("جمع کل ویزیتور");

                entity.Property(e => e.SalInvcDTp)
                    .HasColumnName("SalInvcD_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasComment("شرح ردیف");

                entity.Property(e => e.SalInvcDUntPrc)
                    .HasColumnName("SalInvcD_UntPrc")
                    .HasColumnType("money")
                    .HasComment("قیمت واحد ردیف");

                entity.Property(e => e.SalInvcDUntPrcC)
                    .HasColumnName("SalInvcD_UntPrcC")
                    .HasComment("قیمت ارز");

                entity.Property(e => e.SalInvcHSi)
                    .HasColumnName("SalInvcH_Si")
                    .HasComment("کد پنهان شماره فاکتور");

                entity.Property(e => e.SalOprDec)
                    .HasColumnName("SalOprDEc")
                    .HasColumnType("money");

                entity.Property(e => e.SalOprDefaultValue)
                    .HasColumnName("SalOpr_DefaultValue")
                    .HasComment("مقدار عامل 1");

                entity.Property(e => e.SalOprDefaultValue2)
                    .HasColumnName("SalOpr_DefaultValue_2")
                    .HasComment("مقدار عامل 2");

                entity.Property(e => e.SalOprDefaultValue3)
                    .HasColumnName("SalOpr_DefaultValue_3")
                    .HasComment("مقدار 3");

                entity.Property(e => e.SalOprInc).HasColumnType("money");

                entity.Property(e => e.SalOprSi)
                    .HasColumnName("SalOpr_Si")
                    .HasComment("کد پنهان عامل 1");

                entity.Property(e => e.SalOprSi2)
                    .HasColumnName("SalOpr_Si_2")
                    .HasComment("کد پنهان 2");

                entity.Property(e => e.SalOprSi3)
                    .HasColumnName("SalOpr_Si_3")
                    .HasComment("کد پنهان عامل 3");

                entity.Property(e => e.SalOprTp)
                    .HasColumnName("SalOpr_TP")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("شرح عامل 1");

                entity.Property(e => e.SalOprTp2)
                    .HasColumnName("SalOpr_TP_2")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("شرح عامل 2");

                entity.Property(e => e.SalOprTp3)
                    .HasColumnName("SalOpr_TP_3")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("شرح عامل 3");

                entity.HasOne(d => d.InvGdsSiNavigation)
                    .WithMany(p => p.SalInvcD)
                    .HasForeignKey(d => d.InvGdsSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalInvcD_InvGds");

                entity.HasOne(d => d.InvUntSiNavigation)
                    .WithMany(p => p.SalInvcD)
                    .HasForeignKey(d => d.InvUntSi)
                    .HasConstraintName("FK_SalInvcD_InvUnt");

                entity.HasOne(d => d.SalDisCountNavigation)
                    .WithMany(p => p.SalInvcD)
                    .HasForeignKey(d => d.SalDisCountId)
                    .HasConstraintName("FK_SalInvcD_SalDisCount");

                entity.HasOne(d => d.SalInvcHSiNavigation)
                    .WithMany(p => p.SalInvcD)
                    .HasForeignKey(d => d.SalInvcHSi)
                    .HasConstraintName("FK_SalInvcD_SalInvcH");

                entity.HasOne(d => d.SalOprSiNavigation)
                    .WithMany(p => p.SalInvcD)
                    .HasForeignKey(d => d.SalOprSi)
                    .HasConstraintName("FK_SalInvcD_SalOpr");
            });

            modelBuilder.Entity<SalInvcDshape>(entity =>
            {
                entity.ToTable("SalInvcDShape");

                entity.Property(e => e.SalInvcDshapeId)
                    .HasColumnName("SalInvcDShape_Id")
                    .ValueGeneratedNever();

                entity.Property(e => e.SalInvcDshapeTx)
                    .HasColumnName("SalInvcDShape_Tx")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<SalInvcDsrl>(entity =>
            {
                entity.HasKey(e => new { e.SalInvcHSi, e.InvGdsSi, e.SalInvcDsrlSrl })
                    .HasName("PK_SalInvcDSrl_1");

                entity.ToTable("SalInvcDSrl");

                entity.Property(e => e.SalInvcHSi).HasColumnName("SalInvcH_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.SalInvcDsrlSrl)
                    .HasColumnName("SalInvcDSrl_Srl")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.InvGdsSiNavigation)
                    .WithMany(p => p.SalInvcDsrl)
                    .HasForeignKey(d => d.InvGdsSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalInvcDSrl_InvGds");

                entity.HasOne(d => d.SalInvcHSiNavigation)
                    .WithMany(p => p.SalInvcDsrl)
                    .HasForeignKey(d => d.SalInvcHSi)
                    .HasConstraintName("FK_SalInvcDSrl_SalInvcH");
            });

            modelBuilder.Entity<SalInvcH>(entity =>
            {
                entity.HasKey(e => e.SalInvcHSi)
                    .HasName("PK_SalDocH");

                entity.HasIndex(e => e.SalCustSi)
                    .HasName("IX_SalCust_Si");

                entity.HasIndex(e => e.SalInvcHCu)
                    .HasName("IX_SalInvcH_Cu");

                entity.HasIndex(e => e.SalInvcHDs)
                    .HasName("IX_SalInvcH_Ds");

                entity.Property(e => e.SalInvcHSi)
                    .HasColumnName("SalInvcH_Si")
                    .HasComment("کد پنهان شماره فاکتور");

                entity.Property(e => e.BarNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("کد رهگیری");

                entity.Property(e => e.DescDriver)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasComment("اطلاعات تکمیلی راننده");

                entity.Property(e => e.ErpreferenceIdentityId)
                    .HasColumnName("ERPReferenceIdentityID")
                    .HasComment("کد پنهان سیستم خدمات پس از فروش");

                entity.Property(e => e.ErpsystemId)
                    .HasColumnName("ERPSystemID")
                    .HasComment("کد پنهان سیستم خدمات پس از فروش");

                entity.Property(e => e.InvDocHAccMSi)
                    .HasColumnName("InvDocH_AccM_Si")
                    .HasComment("کد پنهان معین عامل مصرف تحویل فروش");

                entity.Property(e => e.InvInvtSi)
                    .HasColumnName("InvInvt_Si")
                    .HasComment("کد پنهان    انبار");

                entity.Property(e => e.Remain).HasComment("مانده کد رهگیری");

                entity.Property(e => e.SalBrnchSi)
                    .HasColumnName("SalBrnch_Si")
                    .HasComment("کد پنهان   مرکز فروش");

                entity.Property(e => e.SalCancleSi)
                    .HasColumnName("SalCancle_Si")
                    .HasComment("کد پنهان  علت ابطال");

                entity.Property(e => e.SalCashiorSi)
                    .HasColumnName("SalCashior_Si")
                    .HasComment("کد پنهان   صندوق");

                entity.Property(e => e.SalCntrctSi)
                    .HasColumnName("SalCntrct_Si")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasComment("کد پنهان   قرارداد");

                entity.Property(e => e.SalContractHSi)
                    .HasColumnName("SalContractH_Si")
                    .HasComment("کد پنهان شماره قرارداد");

                entity.Property(e => e.SalCustSi)
                    .HasColumnName("SalCust_Si")
                    .HasComment("کد پنهان   مشتری");

                entity.Property(e => e.SalDlvrrSi)
                    .HasColumnName("SalDlvrr_Si")
                    .HasComment("کد پنهان   تحویل دهنده");

                entity.Property(e => e.SalDriverSi)
                    .HasColumnName("SalDriver_Si")
                    .HasComment("کد پنهان   نام راننده");

                entity.Property(e => e.SalDrvrSi)
                    .HasColumnName("SalDrvr_Si")
                    .HasComment("کد پنهان   راننده");

                entity.Property(e => e.SalExportPrmHSi)
                    .HasColumnName("SalExportPrmH_Si")
                    .HasComment("کد پنهان شماره مجوز خروج سیستم فروش");

                entity.Property(e => e.SalGiftInvGdsSi)
                    .HasColumnName("SalGiftInvGds_Si")
                    .HasComment("کد پنهان جایزه جنسی");

                entity.Property(e => e.SalIntrmdSi)
                    .HasColumnName("SalIntrmd_Si")
                    .HasComment("کد پنهان   واسط فروش");

                entity.Property(e => e.SalInvcHAccDoc)
                    .IsRequired()
                    .HasColumnName("SalInvcH_AccDoc")
                    .HasDefaultValueSql("(0)")
                    .HasComment("شماره سند حسابداری");

                entity.Property(e => e.SalInvcHAddrsPur)
                    .HasColumnName("SalInvcH_AddrsPur")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHBarNo)
                    .HasColumnName("SalInvcH_BarNo")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("شماره بارنامه");

                entity.Property(e => e.SalInvcHCancelled)
                    .IsRequired()
                    .HasColumnName("SalInvcH_Cancelled")
                    .HasDefaultValueSql("(0)")
                    .HasComment("فاکتور باطل شد");

                entity.Property(e => e.SalInvcHCodeSharestan)
                    .HasColumnName("SalInvcH_CodeSharestan")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("دیسکت فروش فصلی");

                entity.Property(e => e.SalInvcHCu)
                    .HasColumnName("SalInvcH_Cu")
                    .HasComment("شماره فاکتور");

                entity.Property(e => e.SalInvcHCu2)
                    .HasColumnName("SalInvcH_Cu2")
                    .HasComment("شماره فرعی");

                entity.Property(e => e.SalInvcHDlvLoc)
                    .HasColumnName("SalInvcH_DlvLoc")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("محل تحویل");

                entity.Property(e => e.SalInvcHDm)
                    .HasColumnName("SalInvcH_Dm")
                    .HasColumnType("datetime")
                    .HasComment("تاریخ میلادی");

                entity.Property(e => e.SalInvcHDriverName)
                    .HasColumnName("SalInvcH_DriverName")
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasComment("نام راننده");

                entity.Property(e => e.SalInvcHDs)
                    .IsRequired()
                    .HasColumnName("SalInvcH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasComment("تاریخ فاکتور");

                entity.Property(e => e.SalInvcHFamilyPur)
                    .HasColumnName("SalInvcH_FamilyPur")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHGiftTotal)
                    .HasColumnName("SalInvcH_Gift_Total")
                    .HasColumnType("money")
                    .HasComment("جمع ریالی اشانتیون");

                entity.Property(e => e.SalInvcHGood)
                    .HasColumnName("SalInvcH_Good")
                    .HasComment("کد پنهان پروژه");

                entity.Property(e => e.SalInvcHIno)
                    .HasColumnName("SalInvcH_INO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHIntrmdPrc)
                    .HasColumnName("SalInvcH_IntrmdPrc")
                    .HasComment("مبلغ پورسانت");

                entity.Property(e => e.SalInvcHLock)
                    .HasColumnName("SalInvcH_Lock")
                    .HasDefaultValueSql("(0)")
                    .HasComment("قطعی");

                entity.Property(e => e.SalInvcHNamePur)
                    .HasColumnName("SalInvcH_NamePur")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHNationalCode)
                    .HasColumnName("SalInvcH_NationalCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHPostCode)
                    .HasColumnName("SalInvcH_PostCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHPrcDec)
                    .HasColumnName("SalInvcH_Prc_Dec")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)")
                    .HasComment("کسورات");

                entity.Property(e => e.SalInvcHPrcDec2)
                    .HasColumnName("SalInvcH_Prc_Dec_2")
                    .HasColumnType("money")
                    .HasComment("کسورات 2");

                entity.Property(e => e.SalInvcHPrcGift)
                    .HasColumnName("SalInvcH_Prc_Gift")
                    .HasColumnType("money")
                    .HasComment("مبلغ ریالی");

                entity.Property(e => e.SalInvcHPrcInc)
                    .HasColumnName("SalInvcH_Prc_Inc")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)")
                    .HasComment("اضافات");

                entity.Property(e => e.SalInvcHPrcInc2)
                    .HasColumnName("SalInvcH_Prc_Inc_2")
                    .HasColumnType("money")
                    .HasComment("اضافات 2");

                entity.Property(e => e.SalInvcHPrcRcvd)
                    .IsRequired()
                    .HasColumnName("SalInvcH_PrcRcvd")
                    .HasDefaultValueSql("(0)")
                    .HasComment("تسویه");

                entity.Property(e => e.SalInvcHPrcRcvdDt)
                    .HasColumnName("SalInvcH_PrcRcvdDt")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasComment("تاریخ تسویه");

                entity.Property(e => e.SalInvcHPrcSumQty)
                    .HasColumnName("SalInvcH_Prc_SumQty")
                    .HasComment("جمع تعدادی");

                entity.Property(e => e.SalInvcHPrcSumTotal)
                    .HasColumnName("SalInvcH_Prc_SumTotal")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)")
                    .HasComment("جمع مبلغ ریالی");

                entity.Property(e => e.SalInvcHPrcSumTotalC)
                    .HasColumnName("SalInvcH_Prc_SumTotalC")
                    .HasColumnType("money")
                    .HasComment("جمع مبلغ ارزی");

                entity.Property(e => e.SalInvcHPrcTotal)
                    .HasColumnName("SalInvcH_Prc_Total")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)")
                    .HasComment("جمع کل");

                entity.Property(e => e.SalInvcHRcvMthd)
                    .HasColumnName("SalInvcH_RcvMthd")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("نحوه دریافت");

                entity.Property(e => e.SalInvcHReference)
                    .HasColumnName("SalInvcH_Reference")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("شماره عطف");

                entity.Property(e => e.SalInvcHRfrncTyp)
                    .HasColumnName("SalInvcH_RfrncTyp")
                    .HasComment("نوع عطف");

                entity.Property(e => e.SalInvcHStmpCdt)
                    .HasColumnName("SalInvcH_StmpCDT")
                    .HasColumnType("datetime")
                    .HasComment("تاریخ ایجاد فاکتور");

                entity.Property(e => e.SalInvcHStmpCus)
                    .HasColumnName("SalInvcH_StmpCUs")
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasComment("ایجاد کننده");

                entity.Property(e => e.SalInvcHStmpMdt)
                    .HasColumnName("SalInvcH_StmpMDT")
                    .HasColumnType("datetime")
                    .HasComment("آخرین ویرایشگر");

                entity.Property(e => e.SalInvcHStmpMus)
                    .HasColumnName("SalInvcH_StmpMUs")
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasComment("تاریخ ویرایش");

                entity.Property(e => e.SalInvcHStmpTime)
                    .HasColumnName("SalInvcH_StmpTime")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("ساعت ایجاد");

                entity.Property(e => e.SalInvcHStmpTimeEdit)
                    .HasColumnName("SalInvcH_StmpTimeEdit")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("ساعت ویرایش");

                entity.Property(e => e.SalInvcHSumGrantCust)
                    .HasColumnName("SalInvcH_SumGrantCust")
                    .HasComment("امتیاز مشتری");

                entity.Property(e => e.SalInvcHSumGrantIntrmd)
                    .HasColumnName("SalInvcH_SumGrantIntrmd")
                    .HasComment("امتیاز ویزیتور");

                entity.Property(e => e.SalInvcHSumIntrmdPrc).HasColumnName("SalInvcH_SumIntrmdPrc");

                entity.Property(e => e.SalInvcHTel)
                    .HasColumnName("SalInvcH_Tel")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHTp)
                    .HasColumnName("SalInvcH_Tp")
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasComment("شرح فاکتور");

                entity.Property(e => e.SalInvcHTrnsferDb)
                    .HasColumnName("SalInvcH_TrnsferDB")
                    .HasComment("آیا از سایر پایگاه داده آمده است؟");

                entity.Property(e => e.SalPreinvcHSi)
                    .HasColumnName("SalPreinvcH_Si")
                    .HasComment("کد پنهان   پیش فاکتور");

                entity.Property(e => e.SalRespSi)
                    .HasColumnName("SalResp_Si")
                    .HasComment("کد پنهان   مسول فروش");

                entity.Property(e => e.SalTypSi)
                    .HasColumnName("SalTyp_Si")
                    .HasComment("کد پنهان   نحوه فروش");

                entity.Property(e => e.SalinvcHCarNo)
                    .HasColumnName("SalinvcH_CarNo")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("شماره کامیون");

                entity.Property(e => e.Salprint).HasComment("تعداد چاپ");

                entity.Property(e => e.SalvarietySi)
                    .HasColumnName("Salvariety_Si")
                    .HasComment("کد پنهان نوع فاکتور");

                entity.Property(e => e.SiAccM).HasComment("کد پنهان حساب معین");

                entity.Property(e => e.SiCost).HasComment("کد پنهان مرکز هزینه");

                entity.HasOne(d => d.InvInvtSiNavigation)
                    .WithMany(p => p.SalInvcH)
                    .HasForeignKey(d => d.InvInvtSi)
                    .HasConstraintName("FK_SalInvcH_InvInvt");

                entity.HasOne(d => d.SalBrnchSiNavigation)
                    .WithMany(p => p.SalInvcH)
                    .HasForeignKey(d => d.SalBrnchSi)
                    .HasConstraintName("FK_SalInvcH_SalBrnch");

                entity.HasOne(d => d.SalCntrctSiNavigation)
                    .WithMany(p => p.SalInvcH)
                    .HasForeignKey(d => d.SalCntrctSi)
                    .HasConstraintName("FK_SalInvcH_SalCntrct");

                entity.HasOne(d => d.SalCustSiNavigation)
                    .WithMany(p => p.SalInvcH)
                    .HasForeignKey(d => d.SalCustSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalInvcH_SalCust");

                entity.HasOne(d => d.SalDlvrrSiNavigation)
                    .WithMany(p => p.SalInvcH)
                    .HasForeignKey(d => d.SalDlvrrSi)
                    .HasConstraintName("FK_SalInvcH_SalDlvrr");

                entity.HasOne(d => d.SalDrvrSiNavigation)
                    .WithMany(p => p.SalInvcH)
                    .HasForeignKey(d => d.SalDrvrSi)
                    .HasConstraintName("FK_SalInvcH_SalDrvr");

                entity.HasOne(d => d.SalIntrmdSiNavigation)
                    .WithMany(p => p.SalInvcH)
                    .HasForeignKey(d => d.SalIntrmdSi)
                    .HasConstraintName("FK_SalInvcH_SalIntrmd");

                entity.HasOne(d => d.SalRespSiNavigation)
                    .WithMany(p => p.SalInvcH)
                    .HasForeignKey(d => d.SalRespSi)
                    .HasConstraintName("FK_SalInvcH_SalResp");
            });

            modelBuilder.Entity<SalInvcOpr>(entity =>
            {
                entity.HasKey(e => e.SalInvcOprSi)
                    .HasName("PK_SalDocOpr");

                entity.Property(e => e.SalInvcOprSi).HasColumnName("SalInvcOpr_Si");

                entity.Property(e => e.AccMSi).HasColumnName("AccM_Si");

                entity.Property(e => e.AccTSi).HasColumnName("AccT_Si");

                entity.Property(e => e.SalInvcHSi).HasColumnName("SalInvcH_Si");

                entity.Property(e => e.SalInvcOprCalcValue)
                    .HasColumnName("SalInvcOpr_CalcValue")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SalInvcOprValue)
                    .HasColumnName("SalInvcOpr_Value")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");

                entity.HasOne(d => d.AccMSiNavigation)
                    .WithMany(p => p.SalInvcOpr)
                    .HasForeignKey(d => d.AccMSi)
                    .HasConstraintName("FK_SalInvcOpr_CtbAccM");

                entity.HasOne(d => d.AccTSiNavigation)
                    .WithMany(p => p.SalInvcOpr)
                    .HasForeignKey(d => d.AccTSi)
                    .HasConstraintName("FK_SalInvcOpr_CtbAccT");

                entity.HasOne(d => d.SalInvcHSiNavigation)
                    .WithMany(p => p.SalInvcOpr)
                    .HasForeignKey(d => d.SalInvcHSi)
                    .HasConstraintName("FK_SalInvcOpr_SalInvcH");

                entity.HasOne(d => d.SalOprSiNavigation)
                    .WithMany(p => p.SalInvcOpr)
                    .HasForeignKey(d => d.SalOprSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalInvcOpr_SalOpr");
            });

            modelBuilder.Entity<SalInvcSrvD>(entity =>
            {
                entity.HasKey(e => e.SalInvcSrvDSi);

                entity.HasIndex(e => e.SalInvcSrvHSi)
                    .HasName("IX_SalInvcSrvH_Si");

                entity.Property(e => e.SalInvcSrvDSi).HasColumnName("SalInvcSrvD_Si");

                entity.Property(e => e.BatchNumberD)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcSrvDGiftOk).HasColumnName("SalInvcSrvD_GiftOk");

                entity.Property(e => e.SalInvcSrvDPrcDec)
                    .HasColumnName("SalInvcSrvD_Prc_Dec")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcSrvDPrcDec2).HasColumnName("SalInvcSrvD_Prc_Dec_2");

                entity.Property(e => e.SalInvcSrvDPrcDec3).HasColumnName("SalInvcSrvD_Prc_Dec_3");

                entity.Property(e => e.SalInvcSrvDPrcInc)
                    .HasColumnName("SalInvcSrvD_Prc_Inc")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcSrvDPrcInc2).HasColumnName("SalInvcSrvD_Prc_Inc_2");

                entity.Property(e => e.SalInvcSrvDPrcInc3).HasColumnName("SalInvcSrvD_Prc_Inc_3");

                entity.Property(e => e.SalInvcSrvDQty)
                    .HasColumnName("SalInvcSrvD_Qty")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SalInvcSrvDRow).HasColumnName("SalInvcSrvD_Row");

                entity.Property(e => e.SalInvcSrvDSumPrcDec).HasColumnName("SalInvcSrvD_SumPrc_Dec");

                entity.Property(e => e.SalInvcSrvDSumPrcInc).HasColumnName("SalInvcSrvD_SumPrc_Inc");

                entity.Property(e => e.SalInvcSrvDSumTotal)
                    .HasColumnName("SalInvcSrvD_SumTotal")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcSrvDTotal)
                    .HasColumnName("SalInvcSrvD_Total")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SalInvcSrvDTotalC)
                    .HasColumnName("SalInvcSrvD_TotalC")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcSrvDTp)
                    .HasColumnName("SalInvcSrvD_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcSrvDUntPrc)
                    .HasColumnName("SalInvcSrvD_UntPrc")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SalInvcSrvHSi).HasColumnName("SalInvcSrvH_Si");

                entity.Property(e => e.SalOprDefaultValue).HasColumnName("SalOpr_DefaultValue");

                entity.Property(e => e.SalOprDefaultValue2).HasColumnName("SalOpr_DefaultValue_2");

                entity.Property(e => e.SalOprDefaultValue3).HasColumnName("SalOpr_DefaultValue_3");

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");

                entity.Property(e => e.SalOprSi2).HasColumnName("SalOpr_Si_2");

                entity.Property(e => e.SalOprSi3).HasColumnName("SalOpr_Si_3");

                entity.Property(e => e.SalOprTp)
                    .HasColumnName("SalOpr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTp2)
                    .HasColumnName("SalOpr_Tp_2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTp3)
                    .HasColumnName("SalOpr_Tp_3")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalSrvSi).HasColumnName("SalSrv_Si");

                entity.HasOne(d => d.SalInvcSrvHSiNavigation)
                    .WithMany(p => p.SalInvcSrvD)
                    .HasForeignKey(d => d.SalInvcSrvHSi)
                    .HasConstraintName("FK_SalInvcSrvD_SalInvcSrvH");

                entity.HasOne(d => d.SalOprSiNavigation)
                    .WithMany(p => p.SalInvcSrvD)
                    .HasForeignKey(d => d.SalOprSi)
                    .HasConstraintName("FK_SalInvcSrvD_SalOpr");

                entity.HasOne(d => d.SalSrvSiNavigation)
                    .WithMany(p => p.SalInvcSrvD)
                    .HasForeignKey(d => d.SalSrvSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalInvcSrvD_SalSrv");
            });

            modelBuilder.Entity<SalInvcSrvH>(entity =>
            {
                entity.HasKey(e => e.SalInvcSrvHSi);

                entity.HasIndex(e => e.SalCustSi)
                    .HasName("IX_SalCust_Si");

                entity.HasIndex(e => e.SalInvcSrvHCu)
                    .HasName("IX_SalInvcSrvH_Cu");

                entity.HasIndex(e => e.SalInvcSrvHDs)
                    .HasName("IX_SalInvcSrvH_Ds");

                entity.Property(e => e.SalInvcSrvHSi).HasColumnName("SalInvcSrvH_Si");

                entity.Property(e => e.BatchNumberH)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ErpreferenceIdentityId).HasColumnName("ERPReferenceIdentityID");

                entity.Property(e => e.ErpsystemId).HasColumnName("ERPSystemID");

                entity.Property(e => e.SalBrnchSi).HasColumnName("SalBrnch_Si");

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalDlvrrSi).HasColumnName("SalDlvrr_Si");

                entity.Property(e => e.SalDrvrSi).HasColumnName("SalDrvr_Si");

                entity.Property(e => e.SalIntrmdSi).HasColumnName("SalIntrmd_Si");

                entity.Property(e => e.SalInvcSrvHAccDoc).HasColumnName("SalInvcSrvH_AccDoc");

                entity.Property(e => e.SalInvcSrvHCancelled).HasColumnName("SalInvcSrvH_Cancelled");

                entity.Property(e => e.SalInvcSrvHCu).HasColumnName("SalInvcSrvH_Cu");

                entity.Property(e => e.SalInvcSrvHCu2).HasColumnName("SalInvcSrvH_Cu2");

                entity.Property(e => e.SalInvcSrvHDm)
                    .HasColumnName("SalInvcSrvH_Dm")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalInvcSrvHDs)
                    .IsRequired()
                    .HasColumnName("SalInvcSrvH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcSrvHLock)
                    .HasColumnName("SalInvcSrvH_Lock")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SalInvcSrvHPrcDec)
                    .HasColumnName("SalInvcSrvH_Prc_Dec")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcSrvHPrcInc)
                    .HasColumnName("SalInvcSrvH_Prc_Inc")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcSrvHPrcRcvd).HasColumnName("SalInvcSrvH_PrcRcvd");

                entity.Property(e => e.SalInvcSrvHPrcSumQty).HasColumnName("SalInvcSrvH_Prc_SumQty");

                entity.Property(e => e.SalInvcSrvHPrcSumTotal)
                    .HasColumnName("SalInvcSrvH_Prc_SumTotal")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcSrvHPrcSumTotalC)
                    .HasColumnName("SalInvcSrvH_Prc_SumTotalC")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcSrvHPrcTotal)
                    .HasColumnName("SalInvcSrvH_Prc_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcSrvHReference)
                    .HasColumnName("SalInvcSrvH_Reference")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcSrvHRfrncTyp).HasColumnName("SalInvcSrvH_RfrncTyp");

                entity.Property(e => e.SalInvcSrvHStmpCdt)
                    .HasColumnName("SalInvcSrvH_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalInvcSrvHStmpCus)
                    .HasColumnName("SalInvcSrvH_StmpCUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcSrvHStmpMdt)
                    .HasColumnName("SalInvcSrvH_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalInvcSrvHStmpMus)
                    .HasColumnName("SalInvcSrvH_StmpMUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcSrvHTp)
                    .HasColumnName("SalInvcSrvH_Tp")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcSrvHSi).HasColumnName("SalPreInvcSrvH_Si");

                entity.Property(e => e.SalRespSi).HasColumnName("SalResp_Si");

                entity.Property(e => e.SalTypSi).HasColumnName("SalTyp_Si");

                entity.HasOne(d => d.SalBrnchSiNavigation)
                    .WithMany(p => p.SalInvcSrvH)
                    .HasForeignKey(d => d.SalBrnchSi)
                    .HasConstraintName("FK_SalInvcSrvH_SalBrnch");

                entity.HasOne(d => d.SalCustSiNavigation)
                    .WithMany(p => p.SalInvcSrvH)
                    .HasForeignKey(d => d.SalCustSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalInvcSrvH_SalCust");

                entity.HasOne(d => d.SalDlvrrSiNavigation)
                    .WithMany(p => p.SalInvcSrvH)
                    .HasForeignKey(d => d.SalDlvrrSi)
                    .HasConstraintName("FK_SalInvcSrvH_SalDlvrr");

                entity.HasOne(d => d.SalDrvrSiNavigation)
                    .WithMany(p => p.SalInvcSrvH)
                    .HasForeignKey(d => d.SalDrvrSi)
                    .HasConstraintName("FK_SalInvcSrvH_SalDrvr");

                entity.HasOne(d => d.SalIntrmdSiNavigation)
                    .WithMany(p => p.SalInvcSrvH)
                    .HasForeignKey(d => d.SalIntrmdSi)
                    .HasConstraintName("FK_SalInvcSrvH_SalIntrmd");

                entity.HasOne(d => d.SalRespSiNavigation)
                    .WithMany(p => p.SalInvcSrvH)
                    .HasForeignKey(d => d.SalRespSi)
                    .HasConstraintName("FK_SalInvcSrvH_SalResp");
            });

            modelBuilder.Entity<SalInvcSrvOpr>(entity =>
            {
                entity.HasKey(e => e.SalInvcSrvOprSi);

                entity.Property(e => e.SalInvcSrvOprSi).HasColumnName("SalInvcSrvOpr_Si");

                entity.Property(e => e.AccMSi).HasColumnName("AccM_Si");

                entity.Property(e => e.AccTSi).HasColumnName("AccT_Si");

                entity.Property(e => e.SalInvcSrvHSi).HasColumnName("SalInvcSrvH_Si");

                entity.Property(e => e.SalInvcSrvOprCalcValue)
                    .HasColumnName("SalInvcSrvOpr_CalcValue")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SalInvcSrvOprValue)
                    .HasColumnName("SalInvcSrvOpr_Value")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");

                entity.HasOne(d => d.AccMSiNavigation)
                    .WithMany(p => p.SalInvcSrvOpr)
                    .HasForeignKey(d => d.AccMSi)
                    .HasConstraintName("FK_SalInvcSrvOpr_CtbAccM");

                entity.HasOne(d => d.AccTSiNavigation)
                    .WithMany(p => p.SalInvcSrvOpr)
                    .HasForeignKey(d => d.AccTSi)
                    .HasConstraintName("FK_SalInvcSrvOpr_CtbAccT");

                entity.HasOne(d => d.SalInvcSrvHSiNavigation)
                    .WithMany(p => p.SalInvcSrvOpr)
                    .HasForeignKey(d => d.SalInvcSrvHSi)
                    .HasConstraintName("FK_SalInvcSrvOpr_SalInvcSrvH");

                entity.HasOne(d => d.SalOprSiNavigation)
                    .WithMany(p => p.SalInvcSrvOpr)
                    .HasForeignKey(d => d.SalOprSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalInvcSrvOpr_SalOpr");
            });

            modelBuilder.Entity<SalMetrajCalc>(entity =>
            {
                entity.HasKey(e => e.SiId);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.Tp)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalOpr>(entity =>
            {
                entity.HasKey(e => e.SalOprSi);

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");

                entity.Property(e => e.AccMSi).HasColumnName("AccM_Si");

                entity.Property(e => e.AccTSi).HasColumnName("AccT_Si");

                entity.Property(e => e.SalOprActive)
                    .IsRequired()
                    .HasColumnName("SalOpr_Active")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.SalOprAutoInsert)
                    .IsRequired()
                    .HasColumnName("SalOpr_AutoInsert")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SalOprCu)
                    .IsRequired()
                    .HasColumnName("SalOpr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprDefaultValue).HasColumnName("SalOpr_DefaultValue");

                entity.Property(e => e.SalOprLckPrc)
                    .HasColumnName("SalOpr_LckPrc")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SalOprNature)
                    .IsRequired()
                    .HasColumnName("SalOpr_Nature")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('C')");

                entity.Property(e => e.SalOprProject).HasColumnName("SalOpr_Project");

                entity.Property(e => e.SalOprSqnc).HasColumnName("SalOpr_Sqnc");

                entity.Property(e => e.SalOprSqncPrn).HasColumnName("SalOpr_SqncPrn");

                entity.Property(e => e.SalOprTp)
                    .HasColumnName("SalOpr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTyp)
                    .HasColumnName("SalOpr_Typ")
                    .HasDefaultValueSql("(0)")
                    .HasComment("نوع عامل");

                entity.Property(e => e.SalOprUse)
                    .HasColumnName("SalOpr_Use")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SalOprValueTyp)
                    .HasColumnName("SalOpr_ValueTyp")
                    .HasDefaultValueSql("(0)")
                    .HasComment("عملكرد");

                entity.HasOne(d => d.AccMSiNavigation)
                    .WithMany(p => p.SalOpr)
                    .HasForeignKey(d => d.AccMSi)
                    .HasConstraintName("FK_SalOpr_CtbAccM");

                entity.HasOne(d => d.AccTSiNavigation)
                    .WithMany(p => p.SalOpr)
                    .HasForeignKey(d => d.AccTSi)
                    .HasConstraintName("FK_SalOpr_CtbAccT");
            });

            modelBuilder.Entity<SalOprUser>(entity =>
            {
                entity.HasKey(e => e.SalOprUserSi);

                entity.Property(e => e.SalOprUserSi).HasColumnName("SalOprUser_Si");

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");

                entity.Property(e => e.UserRec)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.HasOne(d => d.SalOprSiNavigation)
                    .WithMany(p => p.SalOprUser)
                    .HasForeignKey(d => d.SalOprSi)
                    .HasConstraintName("FK_SalOprUser_SalOpr");
            });

            modelBuilder.Entity<SalPreInvcAttach>(entity =>
            {
                entity.HasKey(e => e.SalPreInvcAttachSi);

                entity.Property(e => e.SalPreInvcAttachSi).HasColumnName("SalPreInvcAttach_Si");

                entity.Property(e => e.SalPreInvcAttachDs)
                    .HasColumnName("SalPreInvcAttach_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcAttachFile)
                    .HasColumnName("SalPreInvcAttach_File")
                    .HasColumnType("image");

                entity.Property(e => e.SalPreInvcAttachFileName)
                    .HasColumnName("SalPreInvcAttach_FileName")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcAttachTp)
                    .HasColumnName("SalPreInvcAttach_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvchSi).HasColumnName("SalPreInvch_Si");

                entity.HasOne(d => d.SalPreInvchSiNavigation)
                    .WithMany(p => p.SalPreInvcAttach)
                    .HasForeignKey(d => d.SalPreInvchSi)
                    .HasConstraintName("FK_SalPreInvcAttach_SalPreInvcH");
            });

            modelBuilder.Entity<SalPreInvcD>(entity =>
            {
                entity.HasKey(e => e.SalPreInvcDSi)
                    .HasName("PK_PreInvcD");

                entity.HasIndex(e => e.InvGdsSi)
                    .HasName("IX_InvGds_Si");

                entity.HasIndex(e => e.SalPreInvcHSi)
                    .HasName("IX_SalPreInvcH_Si");

                entity.Property(e => e.SalPreInvcDSi)
                    .HasColumnName("SalPreInvcD_Si")
                    .HasComment("کد پنهان پیش فاکتور اقلام");

                entity.Property(e => e.BatchNumberD)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("کد رهگیری");

                entity.Property(e => e.CtbCurncySi)
                    .HasColumnName("CtbCurncy_Si")
                    .HasComment("کد پنهان ارز");

                entity.Property(e => e.ExchangeRate).HasComment("نرخ ارز");

                entity.Property(e => e.InvBatchNumberCode)
                    .HasColumnName("InvBatchNumber_Code")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("کد رهگیری در انبار");

                entity.Property(e => e.InvGdsSi)
                    .HasColumnName("InvGds_Si")
                    .HasComment("کد پنهان کالا");

                entity.Property(e => e.InvGdsTypSi)
                    .HasColumnName("InvGdsTyp_Si")
                    .HasComment("کد پنهان نوع کالا");

                entity.Property(e => e.InvUntSi)
                    .HasColumnName("InvUnt_Si")
                    .HasComment("کد پنهان واحد سنجش");

                entity.Property(e => e.Remain).HasComment("مانده براساس کد رهگیری");

                entity.Property(e => e.SalGiftDSi)
                    .HasColumnName("SalGiftD_Si")
                    .HasComment("کد پنهان تخفیف");

                entity.Property(e => e.SalGiftInvGdsQty)
                    .HasColumnName("SalGiftInvGds_Qty")
                    .HasComment("تعدادی جایزه");

                entity.Property(e => e.SalGiftInvGdsSi)
                    .HasColumnName("SalGiftInvGds_Si")
                    .HasComment("کد پنهان جایزه");

                entity.Property(e => e.SalGiftInvGdsTotal)
                    .HasColumnName("SalGiftInvGds_Total")
                    .HasComment("جمع ریالی جایزه");

                entity.Property(e => e.SalGiftInvGdsTp)
                    .HasColumnName("SalGiftInvGds_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("شرح جایزه");

                entity.Property(e => e.SalOprDec)
                    .HasColumnName("SalOprDEc")
                    .HasColumnType("money");

                entity.Property(e => e.SalOprDefaultValue)
                    .HasColumnName("SalOpr_DefaultValue")
                    .HasComment("مقدار عامل 1");

                entity.Property(e => e.SalOprDefaultValue2)
                    .HasColumnName("SalOpr_DefaultValue_2")
                    .HasComment("مقدار عامل 2");

                entity.Property(e => e.SalOprDefaultValue3)
                    .HasColumnName("SalOpr_DefaultValue_3")
                    .HasComment("مقدار 3");

                entity.Property(e => e.SalOprInc).HasColumnType("money");

                entity.Property(e => e.SalOprSi)
                    .HasColumnName("SalOpr_Si")
                    .HasComment("کد پنهان عامل 1");

                entity.Property(e => e.SalOprSi2)
                    .HasColumnName("SalOpr_Si_2")
                    .HasComment("کد پنهان عامل ردیفی 2");

                entity.Property(e => e.SalOprSi3)
                    .HasColumnName("SalOpr_Si_3")
                    .HasComment("کد پنهان عامل 3");

                entity.Property(e => e.SalOprTp)
                    .HasColumnName("SalOpr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("شرح عامل 1");

                entity.Property(e => e.SalOprTp2)
                    .HasColumnName("SalOpr_Tp_2")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("شرح ردیفی عامل 2");

                entity.Property(e => e.SalOprTp3)
                    .HasColumnName("SalOpr_Tp_3")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("شرح عامل 3");

                entity.Property(e => e.SalPreInvCdSumTotal)
                    .HasColumnName("SalPreInvCd_SumTotal")
                    .HasColumnType("money")
                    .HasComment("جمع کل با احساب عامل ردیفی");

                entity.Property(e => e.SalPreInvcDCoefficientCust)
                    .HasColumnName("SalPreInvcD_coefficientCust")
                    .HasComment("ضریب مشتری");

                entity.Property(e => e.SalPreInvcDCoefficientintrmd)
                    .HasColumnName("SalPreInvcD_coefficientintrmd")
                    .HasComment("ضریب ویزیتور");

                entity.Property(e => e.SalPreInvcDExpiredate)
                    .HasColumnName("SalPreInvcD_Expiredate")
                    .HasColumnType("datetime")
                    .HasComment("تاریخ انقضا میلادی");

                entity.Property(e => e.SalPreInvcDGiftOk)
                    .HasColumnName("SalPreInvcD_GiftOk")
                    .HasComment("دارای اشانتیون");

                entity.Property(e => e.SalPreInvcDGrntCust)
                    .HasColumnName("SalPreInvcD_GrntCust")
                    .HasComment("امتیاز مشتری");

                entity.Property(e => e.SalPreInvcDGrntIntrmd)
                    .HasColumnName("SalPreInvcD_GrntIntrmd")
                    .HasComment("امتیاز واسط فروش");

                entity.Property(e => e.SalPreInvcDPrcDec2)
                    .HasColumnName("SalPreInvcD_Prc_Dec_2")
                    .HasColumnType("money")
                    .HasComment("کسورات ردیفی 2");

                entity.Property(e => e.SalPreInvcDPrcDec3)
                    .HasColumnName("SalPreInvcD_Prc_Dec_3")
                    .HasComment("کسورات 3");

                entity.Property(e => e.SalPreInvcDQty)
                    .HasColumnName("SalPreInvcD_Qty")
                    .HasComment("تعداد");

                entity.Property(e => e.SalPreInvcDQty2)
                    .HasColumnName("SalPreInvcD_Qty2")
                    .HasComment("مقدار 2");

                entity.Property(e => e.SalPreInvcDRow)
                    .HasColumnName("SalPreInvcD_Row")
                    .HasComment("ردیف");

                entity.Property(e => e.SalPreInvcDSumPrcDec)
                    .HasColumnName("SalPreInvcD_SumPrc_Dec")
                    .HasComment("مجموع کسورات خطی");

                entity.Property(e => e.SalPreInvcDSumPrcInc)
                    .HasColumnName("SalPreInvcD_SumPrc_Inc")
                    .HasComment("مجموع اضافات خطی");

                entity.Property(e => e.SalPreInvcDTotal)
                    .HasColumnName("SalPreInvcD_Total")
                    .HasColumnType("money")
                    .HasComment("قیمت کل");

                entity.Property(e => e.SalPreInvcDTotalC)
                    .HasColumnName("SalPreInvcD_TotalC")
                    .HasComment("جمع ارزی");

                entity.Property(e => e.SalPreInvcDTotalGrantCust)
                    .HasColumnName("SalPreInvcD_TotalGrantCust")
                    .HasComment("امتیاز کل مشتری");

                entity.Property(e => e.SalPreInvcDTotalGrantIntrmd)
                    .HasColumnName("SalPreInvcD_TotalGrantIntrmd")
                    .HasComment("امتیاز کل ویزیتور");

                entity.Property(e => e.SalPreInvcDTp)
                    .HasColumnName("SalPreInvcD_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasComment("توضیحات");

                entity.Property(e => e.SalPreInvcDUntPrc)
                    .HasColumnName("SalPreInvcD_UntPrc")
                    .HasColumnType("money")
                    .HasComment("قیمت واحد");

                entity.Property(e => e.SalPreInvcDUntPrcC)
                    .HasColumnName("SalPreInvcD_UntPrcC")
                    .HasComment("قیمت ارزی");

                entity.Property(e => e.SalPreInvcHSi)
                    .HasColumnName("SalPreInvcH_Si")
                    .HasComment("کد پنهان پیش فاکتور");

                entity.Property(e => e.SalpreInvcDPrcDec)
                    .HasColumnName("SalpreInvcD_Prc_Dec")
                    .HasColumnType("money")
                    .HasComment("کسورات خطی");

                entity.Property(e => e.SalpreInvcDPrcInc)
                    .HasColumnName("SalpreInvcD_Prc_Inc")
                    .HasColumnType("money")
                    .HasComment("اضافات خطی");

                entity.Property(e => e.SalpreInvcDPrcInc2)
                    .HasColumnName("SalpreInvcD_Prc_Inc_2")
                    .HasColumnType("money")
                    .HasComment("اضافات ردیفی 2");

                entity.Property(e => e.SalpreInvcDPrcInc3)
                    .HasColumnName("SalpreInvcD_Prc_Inc_3")
                    .HasComment("اضافات 3");

                entity.HasOne(d => d.InvGdsSiNavigation)
                    .WithMany(p => p.SalPreInvcD)
                    .HasForeignKey(d => d.InvGdsSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalPreInvcD_InvGds");

                entity.HasOne(d => d.InvUntSiNavigation)
                    .WithMany(p => p.SalPreInvcD)
                    .HasForeignKey(d => d.InvUntSi)
                    .HasConstraintName("FK_SalPreInvcD_InvUnt");

                entity.HasOne(d => d.SalOprSiNavigation)
                    .WithMany(p => p.SalPreInvcD)
                    .HasForeignKey(d => d.SalOprSi)
                    .HasConstraintName("FK_SalPreInvcD_SalOpr");

                entity.HasOne(d => d.SalPreInvcHSiNavigation)
                    .WithMany(p => p.SalPreInvcD)
                    .HasForeignKey(d => d.SalPreInvcHSi)
                    .HasConstraintName("FK_SalPreInvcD_SalPreInvcH");
            });

            modelBuilder.Entity<SalPreInvcH>(entity =>
            {
                entity.HasKey(e => e.SalPreInvcHSi)
                    .HasName("PK_PreInvcH")
                    .IsClustered(false);

                entity.HasIndex(e => e.SalCustSi)
                    .HasName("IX_SalCust_Si");

                entity.HasIndex(e => e.SalPreInvcHCu)
                    .HasName("IX_SalPreInvcH_Cu");

                entity.HasIndex(e => e.SalPreInvcHDs)
                    .HasName("IX_SalPreInvcH_Ds");

                entity.Property(e => e.SalPreInvcHSi)
                    .HasColumnName("SalPreInvcH_Si")
                    .HasComment("کد پنهان شماره پیش فاکتور");

                entity.Property(e => e.BatchNumberH)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("کد رهگیری");

                entity.Property(e => e.DescDriver)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasComment("اطلاعات تکمیلی راننده");

                entity.Property(e => e.InvDocHAccMSi)
                    .HasColumnName("InvDocH_AccM_Si")
                    .HasComment("کد پنهان عامل مصرف در زمان صدور تحویل فروش");

                entity.Property(e => e.InvInvtSi)
                    .HasColumnName("InvInvt_Si")
                    .HasComment("کد پنهان انبار");

                entity.Property(e => e.Remain).HasComment("مانده-کد رهگیری تعدادی");

                entity.Property(e => e.SalBrnchSi)
                    .HasColumnName("SalBrnch_Si")
                    .HasComment("کد پنهان مرکز فروش");

                entity.Property(e => e.SalCustSi)
                    .HasColumnName("SalCust_Si")
                    .HasComment("کد پنهان مشتری");

                entity.Property(e => e.SalDlvrrSi)
                    .HasColumnName("SalDlvrr_Si")
                    .HasComment("کد پنهان تحویل دهنده");

                entity.Property(e => e.SalDriverSi)
                    .HasColumnName("SalDriver_Si")
                    .HasComment("کد پنهان راننده");

                entity.Property(e => e.SalDrvrSi)
                    .HasColumnName("SalDrvr_Si")
                    .HasComment("کد پنهان راننده");

                entity.Property(e => e.SalExportPrmHPrcSumtotalC)
                    .HasColumnName("SalExportPrmH_Prc_SumtotalC")
                    .HasColumnType("money")
                    .HasComment("جمع مبلغ مجوز-ارزی");

                entity.Property(e => e.SalGiftInvGdsSi)
                    .HasColumnName("SalGiftInvGds_Si")
                    .HasComment("کد پنهان جایزه جنسی");

                entity.Property(e => e.SalIntrmdSi)
                    .HasColumnName("SalIntrmd_Si")
                    .HasComment("کد پنهان ویزیتور");

                entity.Property(e => e.SalInvcHSi)
                    .HasColumnName("SalInvcH_Si")
                    .HasComment("کد پنهان شماره فاکتور فروش صادر شده");

                entity.Property(e => e.SalPreInvcHBarNo)
                    .HasColumnName("SalPreInvcH_BarNo")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("شماره بارنامه");

                entity.Property(e => e.SalPreInvcHCu)
                    .HasColumnName("SalPreInvcH_Cu")
                    .HasComment("شماره پیش فاکتور");

                entity.Property(e => e.SalPreInvcHCu2)
                    .HasColumnName("SalPreInvcH_Cu2")
                    .HasComment("شماره فرعی");

                entity.Property(e => e.SalPreInvcHDlvLoc)
                    .HasColumnName("SalPreInvcH_DlvLoc")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("محل تحویل");

                entity.Property(e => e.SalPreInvcHDm)
                    .HasColumnName("SalPreInvcH_Dm")
                    .HasColumnType("datetime")
                    .HasComment("تاریخ میلادی");

                entity.Property(e => e.SalPreInvcHDriverName)
                    .HasColumnName("SalPreInvcH_DriverName")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcHDs)
                    .IsRequired()
                    .HasColumnName("SalPreInvcH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasComment("تاریخ پیش فاکتور");

                entity.Property(e => e.SalPreInvcHExprDate)
                    .HasColumnName("SalPreInvcH_ExprDate")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasComment("تاریخ انقضا");

                entity.Property(e => e.SalPreInvcHExprTime)
                    .HasColumnName("SalPreInvcH_ExprTime")
                    .HasComment("مدت اعتبار");

                entity.Property(e => e.SalPreInvcHGiftTotal)
                    .HasColumnName("SalPreInvcH_Gift_Total")
                    .HasComment("---");

                entity.Property(e => e.SalPreInvcHGood)
                    .HasColumnName("SalPreInvcH_Good")
                    .HasComment("پروژه");

                entity.Property(e => e.SalPreInvcHLock)
                    .HasColumnName("SalPreInvcH_Lock")
                    .HasComment("قطعی شده");

                entity.Property(e => e.SalPreInvcHPrcDec)
                    .HasColumnName("SalPreInvcH_Prc_Dec")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)")
                    .HasComment("کسورات-کلی");

                entity.Property(e => e.SalPreInvcHPrcDec2)
                    .HasColumnName("SalPreInvcH_Prc_Dec_2")
                    .HasColumnType("money")
                    .HasComment("جمع کسورات عوامل ردیفی 2");

                entity.Property(e => e.SalPreInvcHPrcGift)
                    .HasColumnName("SalPreInvcH_Prc_Gift")
                    .HasComment("--");

                entity.Property(e => e.SalPreInvcHPrcInc)
                    .HasColumnName("SalPreInvcH_Prc_Inc")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)")
                    .HasComment("اضافات-کلی");

                entity.Property(e => e.SalPreInvcHPrcInc2)
                    .HasColumnName("SalPreInvcH_Prc_Inc_2")
                    .HasColumnType("money")
                    .HasComment("جمع اضافات عوامل ردیفی 2");

                entity.Property(e => e.SalPreInvcHPrcSumQty)
                    .HasColumnName("SalPreInvcH_Prc_SumQty")
                    .HasComment("جمع تعدادی اقلام پیش فاکتور");

                entity.Property(e => e.SalPreInvcHPrcSumTotal)
                    .HasColumnName("SalPreInvcH_Prc_SumTotal")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)")
                    .HasComment("جمع مبلغ");

                entity.Property(e => e.SalPreInvcHPrcSumTotalC)
                    .HasColumnName("SalPreInvcH_Prc_SumTotalC")
                    .HasColumnType("money")
                    .HasComment("جمع مبلغ ارزی");

                entity.Property(e => e.SalPreInvcHPrcTotal)
                    .HasColumnName("SalPreInvcH_Prc_Total")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)")
                    .HasComment("جمع کل");

                entity.Property(e => e.SalPreInvcHRcvMthd)
                    .HasColumnName("SalPreInvcH_RcvMthd")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("نحوه دریافت");

                entity.Property(e => e.SalPreInvcHReference)
                    .HasColumnName("SalPreInvcH_Reference")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("شماره عطف");

                entity.Property(e => e.SalPreInvcHRfrncTyp)
                    .HasColumnName("SalPreInvcH_RfrncTyp")
                    .HasComment("نوع عطف");

                entity.Property(e => e.SalPreInvcHStatus)
                    .HasColumnName("SalPreInvcH_Status")
                    .HasDefaultValueSql("(0)")
                    .HasComment("وضعیت");

                entity.Property(e => e.SalPreInvcHStmpCdt)
                    .HasColumnName("SalPreInvcH_StmpCDT")
                    .HasColumnType("datetime")
                    .HasComment("تاریخ ایجاد ");

                entity.Property(e => e.SalPreInvcHStmpCus)
                    .HasColumnName("SalPreInvcH_StmpCUs")
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasComment("نام کاربر ایجاد کننده");

                entity.Property(e => e.SalPreInvcHStmpMdt)
                    .HasColumnName("SalPreInvcH_StmpMDT")
                    .HasColumnType("datetime")
                    .HasComment("تاریخ ویرایش");

                entity.Property(e => e.SalPreInvcHStmpMus)
                    .HasColumnName("SalPreInvcH_StmpMUs")
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasComment("نام کاربر ویرایش گر");

                entity.Property(e => e.SalPreInvcHStmpTime)
                    .HasColumnName("SalPreInvcH_StmpTime")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("ساعت ایجاد");

                entity.Property(e => e.SalPreInvcHStmpTimeEdit)
                    .HasColumnName("SalPreInvcH_StmpTimeEdit")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("ساعت ویرایش");

                entity.Property(e => e.SalPreInvcHSumGrantCust)
                    .HasColumnName("SalPreInvcH_SumGrantCust")
                    .HasComment("امتیاز تخصیص داده شده به مشتری");

                entity.Property(e => e.SalPreInvcHSumGrantIntrmd)
                    .HasColumnName("SalPreInvcH_SumGrantIntrmd")
                    .HasComment("امتیاز تخصیص داده شده به ویزیتور");

                entity.Property(e => e.SalPreInvcHTp)
                    .HasColumnName("SalPreInvcH_Tp")
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasComment("توضیحات");

                entity.Property(e => e.SalPreprint).HasComment("تعداد چاپ");

                entity.Property(e => e.SalRequestHSi).HasColumnName("SalRequestH_Si");

                entity.Property(e => e.SalRespSi)
                    .HasColumnName("SalResp_Si")
                    .HasComment("کد پنهان مسئول فروش");

                entity.Property(e => e.SalTypSi)
                    .HasColumnName("SalTyp_Si")
                    .HasComment("کد پنهان نحوه فروش");

                entity.Property(e => e.SalePreInvoiceId)
                    .HasColumnName("SalePreInvoiceID")
                    .HasComment("کد پنهان ثبت سفارش آنلاین");

                entity.Property(e => e.SalpreInvcHIno).HasColumnName("SalpreInvcH_INO");

                entity.Property(e => e.SalpreInvcHRunNum)
                    .HasColumnName("SalpreInvcH_RunNum")
                    .HasComment("مدیریت توزیع");

                entity.Property(e => e.SalpreInvcHRunNumAccept).HasColumnName("SalpreInvcH_RunNumAccept");

                entity.Property(e => e.SalpreinvchSndInv)
                    .HasColumnName("Salpreinvch_SndInv")
                    .HasComment("آیا برای این پیش فاکتور  تحویل فروش صادر شده است؟");

                entity.Property(e => e.Salprint).HasComment("---");

                entity.Property(e => e.SalvarietySi)
                    .HasColumnName("Salvariety_Si")
                    .HasComment("کد پنهان نوع فاکتور");

                entity.Property(e => e.SiAccM).HasComment("کد پنهان حساب معین");

                entity.Property(e => e.SignImage).HasComment("---");

                entity.HasOne(d => d.SalBrnchSiNavigation)
                    .WithMany(p => p.SalPreInvcH)
                    .HasForeignKey(d => d.SalBrnchSi)
                    .HasConstraintName("FK_SalPreInvcH_SalBrnch");

                entity.HasOne(d => d.SalCustSiNavigation)
                    .WithMany(p => p.SalPreInvcH)
                    .HasForeignKey(d => d.SalCustSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalPreInvcH_SalCust");

                entity.HasOne(d => d.SalDlvrrSiNavigation)
                    .WithMany(p => p.SalPreInvcH)
                    .HasForeignKey(d => d.SalDlvrrSi)
                    .HasConstraintName("FK_SalPreInvcH_SalDlvrr");

                entity.HasOne(d => d.SalDrvrSiNavigation)
                    .WithMany(p => p.SalPreInvcH)
                    .HasForeignKey(d => d.SalDrvrSi)
                    .HasConstraintName("FK_SalPreInvcH_SalDrvr");

                entity.HasOne(d => d.SalIntrmdSiNavigation)
                    .WithMany(p => p.SalPreInvcH)
                    .HasForeignKey(d => d.SalIntrmdSi)
                    .HasConstraintName("FK_SalPreInvcH_SalIntrmd");

                entity.HasOne(d => d.SalRespSiNavigation)
                    .WithMany(p => p.SalPreInvcH)
                    .HasForeignKey(d => d.SalRespSi)
                    .HasConstraintName("FK_SalPreInvcH_SalResp");
            });

            modelBuilder.Entity<SalPreInvcOpr>(entity =>
            {
                entity.HasKey(e => e.SalPreInvcOprSi)
                    .HasName("PK_PreInvcOpr");

                entity.Property(e => e.SalPreInvcOprSi).HasColumnName("SalPreInvcOpr_Si");

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");

                entity.Property(e => e.SalPreInvcHSi).HasColumnName("SalPreInvcH_Si");

                entity.Property(e => e.SalPreInvcOprCalcValue)
                    .HasColumnName("SalPreInvcOpr_CalcValue")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SalPreInvcOprValue)
                    .HasColumnName("SalPreInvcOpr_Value")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.HasOne(d => d.SalOprSiNavigation)
                    .WithMany(p => p.SalPreInvcOpr)
                    .HasForeignKey(d => d.SalOprSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalPreInvcOpr_SalOpr");

                entity.HasOne(d => d.SalPreInvcHSiNavigation)
                    .WithMany(p => p.SalPreInvcOpr)
                    .HasForeignKey(d => d.SalPreInvcHSi)
                    .HasConstraintName("FK_SalPreInvcOpr_SalPreInvcH");
            });

            modelBuilder.Entity<SalPreInvcSrvD>(entity =>
            {
                entity.HasKey(e => e.SalPreInvcSrvDSi)
                    .HasName("PK_PreInvcSrvD");

                entity.HasIndex(e => e.SalPreInvcSrvHSi)
                    .HasName("IX_SalPreInvcSrvH_Si");

                entity.HasIndex(e => e.SalSrvSi)
                    .HasName("IX_SalSrv_Si");

                entity.Property(e => e.SalPreInvcSrvDSi).HasColumnName("SalPreInvcSrvD_Si");

                entity.Property(e => e.BatchNumberD)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.SalOprDec).HasColumnType("money");

                entity.Property(e => e.SalOprDefaultValue).HasColumnName("SalOpr_DefaultValue");

                entity.Property(e => e.SalOprDefaultValue2).HasColumnName("SalOpr_DefaultValue_2");

                entity.Property(e => e.SalOprDefaultValue3).HasColumnName("SalOpr_DefaultValue_3");

                entity.Property(e => e.SalOprInc).HasColumnType("money");

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");

                entity.Property(e => e.SalOprSi2).HasColumnName("SalOpr_Si_2");

                entity.Property(e => e.SalOprSi3).HasColumnName("SalOpr_Si_3");

                entity.Property(e => e.SalOprTp)
                    .HasColumnName("SalOpr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTp2)
                    .HasColumnName("SalOpr_Tp_2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTp3)
                    .HasColumnName("SalOpr_Tp_3")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcSrvDPrcDec)
                    .HasColumnName("SalPreInvcSrvD_Prc_Dec")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcSrvDPrcDec2)
                    .HasColumnName("SalPreInvcSrvD_Prc_Dec_2")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcSrvDPrcDec3)
                    .HasColumnName("SalPreInvcSrvD_Prc_Dec_3")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcSrvDPrcInc)
                    .HasColumnName("SalPreInvcSrvD_Prc_Inc")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcSrvDPrcInc2)
                    .HasColumnName("SalPreInvcSrvD_Prc_Inc_2")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcSrvDPrcInc3)
                    .HasColumnName("SalPreInvcSrvD_Prc_Inc_3")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcSrvDQty)
                    .HasColumnName("SalPreInvcSrvD_Qty")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SalPreInvcSrvDRow).HasColumnName("SalPreInvcSrvD_Row");

                entity.Property(e => e.SalPreInvcSrvDSumPrcDec)
                    .HasColumnName("SalPreInvcSrvD_SumPrc_Dec")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcSrvDSumPrcInc)
                    .HasColumnName("SalPreInvcSrvD_SumPrc_Inc")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcSrvDSumTotal)
                    .HasColumnName("SalPreInvcSrvD_SumTotal")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcSrvDTotal)
                    .HasColumnName("SalPreInvcSrvD_Total")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SalPreInvcSrvDTp)
                    .HasColumnName("SalPreInvcSrvD_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcSrvDUntPrc)
                    .HasColumnName("SalPreInvcSrvD_UntPrc")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SalPreInvcSrvHSi).HasColumnName("SalPreInvcSrvH_Si");

                entity.Property(e => e.SalSrvSi).HasColumnName("SalSrv_Si");

                entity.HasOne(d => d.InvUntSiNavigation)
                    .WithMany(p => p.SalPreInvcSrvD)
                    .HasForeignKey(d => d.InvUntSi)
                    .HasConstraintName("FK_SalPreInvcSrvD_InvUnt");

                entity.HasOne(d => d.SalOprSiNavigation)
                    .WithMany(p => p.SalPreInvcSrvD)
                    .HasForeignKey(d => d.SalOprSi)
                    .HasConstraintName("FK_SalPreInvcSrvD_SalOpr");

                entity.HasOne(d => d.SalPreInvcSrvHSiNavigation)
                    .WithMany(p => p.SalPreInvcSrvD)
                    .HasForeignKey(d => d.SalPreInvcSrvHSi)
                    .HasConstraintName("FK_SalPreInvcSrvD_SalPreInvcSrvH");

                entity.HasOne(d => d.SalSrvSiNavigation)
                    .WithMany(p => p.SalPreInvcSrvD)
                    .HasForeignKey(d => d.SalSrvSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalPreInvcSrvD_SalSrv");
            });

            modelBuilder.Entity<SalPreInvcSrvH>(entity =>
            {
                entity.HasKey(e => e.SalPreInvcSrvHSi)
                    .HasName("PK_PreInvcSrvH")
                    .IsClustered(false);

                entity.HasIndex(e => e.SalCustSi)
                    .HasName("IX_SalCust_Si");

                entity.HasIndex(e => e.SalPreInvcSrvHCu)
                    .HasName("IX_SalPreInvcSrvH_Cu");

                entity.HasIndex(e => e.SalPreInvcSrvHDs)
                    .HasName("IX_SalPreInvcSrvH_Ds");

                entity.Property(e => e.SalPreInvcSrvHSi).HasColumnName("SalPreInvcSrvH_Si");

                entity.Property(e => e.BatchNumberH)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchSi).HasColumnName("SalBrnch_Si");

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalDlvrrSi).HasColumnName("SalDlvrr_Si");

                entity.Property(e => e.SalDrvrSi).HasColumnName("SalDrvr_Si");

                entity.Property(e => e.SalIntrmdSi).HasColumnName("SalIntrmd_Si");

                entity.Property(e => e.SalInvcSrvHSi).HasColumnName("SalInvcSrvH_Si");

                entity.Property(e => e.SalPreInvcSrvHCu).HasColumnName("SalPreInvcSrvH_Cu");

                entity.Property(e => e.SalPreInvcSrvHDlvLoc)
                    .HasColumnName("SalPreInvcSrvH_DlvLoc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcSrvHDm)
                    .HasColumnName("SalPreInvcSrvH_Dm")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalPreInvcSrvHDs)
                    .IsRequired()
                    .HasColumnName("SalPreInvcSrvH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcSrvHExprDate)
                    .HasColumnName("SalPreInvcSrvH_ExprDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcSrvHExprTime).HasColumnName("SalPreInvcSrvH_ExprTime");

                entity.Property(e => e.SalPreInvcSrvHLock)
                    .HasColumnName("SalPreInvcSrvH_Lock")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SalPreInvcSrvHPrcDec)
                    .HasColumnName("SalPreInvcSrvH_Prc_Dec")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SalPreInvcSrvHPrcInc)
                    .HasColumnName("SalPreInvcSrvH_Prc_Inc")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SalPreInvcSrvHPrcSumQty).HasColumnName("SalPreInvcSrvH_Prc_SumQty");

                entity.Property(e => e.SalPreInvcSrvHPrcSumTotal)
                    .HasColumnName("SalPreInvcSrvH_Prc_SumTotal")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SalPreInvcSrvHPrcTotal)
                    .HasColumnName("SalPreInvcSrvH_Prc_Total")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SalPreInvcSrvHRcvMthd)
                    .HasColumnName("SalPreInvcSrvH_RcvMthd")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcSrvHReference)
                    .HasColumnName("SalPreInvcSrvH_Reference")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcSrvHRfrncTyp).HasColumnName("SalPreInvcSrvH_RfrncTyp");

                entity.Property(e => e.SalPreInvcSrvHStatus)
                    .HasColumnName("SalPreInvcSrvH_Status")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SalPreInvcSrvHStmpCdt)
                    .HasColumnName("SalPreInvcSrvH_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalPreInvcSrvHStmpCus)
                    .HasColumnName("SalPreInvcSrvH_StmpCUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcSrvHStmpMdt)
                    .HasColumnName("SalPreInvcSrvH_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalPreInvcSrvHStmpMus)
                    .HasColumnName("SalPreInvcSrvH_StmpMUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcSrvHTp)
                    .HasColumnName("SalPreInvcSrvH_Tp")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SalPrint1).HasColumnName("SalPRINT_1");

                entity.Property(e => e.SalRespSi).HasColumnName("SalResp_Si");

                entity.Property(e => e.SalTypSi).HasColumnName("SalTyp_Si");

                entity.HasOne(d => d.SalBrnchSiNavigation)
                    .WithMany(p => p.SalPreInvcSrvH)
                    .HasForeignKey(d => d.SalBrnchSi)
                    .HasConstraintName("FK_SalPreInvcSrvH_SalBrnch");

                entity.HasOne(d => d.SalCustSiNavigation)
                    .WithMany(p => p.SalPreInvcSrvH)
                    .HasForeignKey(d => d.SalCustSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalPreInvcSrvH_SalCust");

                entity.HasOne(d => d.SalDlvrrSiNavigation)
                    .WithMany(p => p.SalPreInvcSrvH)
                    .HasForeignKey(d => d.SalDlvrrSi)
                    .HasConstraintName("FK_SalPreInvcSrvH_SalDlvrr");

                entity.HasOne(d => d.SalDrvrSiNavigation)
                    .WithMany(p => p.SalPreInvcSrvH)
                    .HasForeignKey(d => d.SalDrvrSi)
                    .HasConstraintName("FK_SalPreInvcSrvH_SalDrvr");

                entity.HasOne(d => d.SalIntrmdSiNavigation)
                    .WithMany(p => p.SalPreInvcSrvH)
                    .HasForeignKey(d => d.SalIntrmdSi)
                    .HasConstraintName("FK_SalPreInvcSrvH_SalIntrmd");

                entity.HasOne(d => d.SalRespSiNavigation)
                    .WithMany(p => p.SalPreInvcSrvH)
                    .HasForeignKey(d => d.SalRespSi)
                    .HasConstraintName("FK_SalPreInvcSrvH_SalResp");
            });

            modelBuilder.Entity<SalPreInvcSrvOpr>(entity =>
            {
                entity.HasKey(e => e.SalPreInvcSrvOprSi);

                entity.Property(e => e.SalPreInvcSrvOprSi).HasColumnName("SalPreInvcSrvOpr_Si");

                entity.Property(e => e.AccMSi).HasColumnName("AccM_Si");

                entity.Property(e => e.AccTSi).HasColumnName("AccT_Si");

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");

                entity.Property(e => e.SalPreInvcSrvHSi).HasColumnName("SalPreInvcSrvH_Si");

                entity.Property(e => e.SalPreInvcSrvOprCalcValue)
                    .HasColumnName("SalPreInvcSrvOpr_CalcValue")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SalPreInvcSrvOprValue)
                    .HasColumnName("SalPreInvcSrvOpr_Value")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.HasOne(d => d.AccMSiNavigation)
                    .WithMany(p => p.SalPreInvcSrvOpr)
                    .HasForeignKey(d => d.AccMSi)
                    .HasConstraintName("FK_SalPreInvcSrvOpr_CtbAccM");

                entity.HasOne(d => d.AccTSiNavigation)
                    .WithMany(p => p.SalPreInvcSrvOpr)
                    .HasForeignKey(d => d.AccTSi)
                    .HasConstraintName("FK_SalPreInvcSrvOpr_CtbAccT");

                entity.HasOne(d => d.SalOprSiNavigation)
                    .WithMany(p => p.SalPreInvcSrvOpr)
                    .HasForeignKey(d => d.SalOprSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalPreInvcSrvOpr_SalOpr");

                entity.HasOne(d => d.SalPreInvcSrvHSiNavigation)
                    .WithMany(p => p.SalPreInvcSrvOpr)
                    .HasForeignKey(d => d.SalPreInvcSrvHSi)
                    .HasConstraintName("FK_SalPreInvcSrvOpr_SalPreInvcSrvH");
            });

            modelBuilder.Entity<SalPreMetrajCalc>(entity =>
            {
                entity.HasKey(e => e.SiId);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.Tp)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalProvince>(entity =>
            {
                entity.HasKey(e => e.SalProvinceSi);

                entity.Property(e => e.SalProvinceSi).HasColumnName("SalProvince_Si");

                entity.Property(e => e.SalCountrySi).HasColumnName("SalCountry_Si");

                entity.Property(e => e.SalProvinceCu)
                    .HasColumnName("SalProvince_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalProvinceTp)
                    .IsRequired()
                    .HasColumnName("SalProvince_Tp")
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<SalPursue>(entity =>
            {
                entity.HasKey(e => e.SalPursueSi);

                entity.Property(e => e.SalPursueSi).HasColumnName("SalPursue_Si");

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalPursueChanceSale)
                    .HasColumnName("SalPursue_ChanceSale")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalPursueDateEdit)
                    .HasColumnName("SalPursue_DateEdit")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalPursueDateEnter)
                    .IsRequired()
                    .HasColumnName("SalPursue_DateEnter")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalPursueDatePursue)
                    .HasColumnName("SalPursue_DatePursue")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalPursueDesc)
                    .HasColumnName("SalPursue_Desc")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.SalPursueFile)
                    .HasColumnName("SalPursue_File")
                    .HasColumnType("image");

                entity.Property(e => e.SalPursueFileName)
                    .HasColumnName("SalPursue_FileName")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalPursueHaveFile).HasColumnName("SalPursue_HaveFile");

                entity.Property(e => e.SalPursueIsFinall).HasColumnName("SalPursue_IsFinall");

                entity.Property(e => e.SalPursueNeedSerach).HasColumnName("SalPursue_NeedSerach");

                entity.Property(e => e.SalPursueNeesSearch).HasColumnName("SalPursue_NeesSearch");

                entity.Property(e => e.SalPursueNeesSerach).HasColumnName("SalPursue_NeesSerach");

                entity.Property(e => e.SalPursuePredict)
                    .HasColumnName("SalPursue_Predict")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalPursuePursuit).HasColumnName("SalPursue_pursuit");

                entity.Property(e => e.SalPursuePursuitTp)
                    .HasColumnName("SalPursue_pursuitTP")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalPursueTp)
                    .HasColumnName("SalPursue_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.SalPursueUserEdit)
                    .HasColumnName("SalPursue_UserEdit")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalPursueUserSave)
                    .HasColumnName("SalPursue_UserSave")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.SalCustSiNavigation)
                    .WithMany(p => p.SalPursue)
                    .HasForeignKey(d => d.SalCustSi)
                    .HasConstraintName("FK_SalPursue_SalCust");
            });

            modelBuilder.Entity<SalRcvMthd>(entity =>
            {
                entity.HasKey(e => e.SalRcvMthdTp);

                entity.Property(e => e.SalRcvMthdTp)
                    .HasColumnName("SalRcvMthd_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalRegion>(entity =>
            {
                entity.HasKey(e => e.SalRegionSi);

                entity.Property(e => e.SalRegionSi).HasColumnName("SalRegion_Si");

                entity.Property(e => e.SalCitySi).HasColumnName("SalCity_Si");

                entity.Property(e => e.SalRegionCu)
                    .HasColumnName("SalRegion_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRegionTp)
                    .HasColumnName("SalRegion_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalRegionPath>(entity =>
            {
                entity.HasKey(e => e.SalRegionPathSi)
                    .HasName("PK_SalRegionPath_1");

                entity.Property(e => e.SalRegionPathSi).HasColumnName("SalRegionPath_Si");

                entity.Property(e => e.SalRegionPathCu)
                    .HasColumnName("SalRegionPath_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRegionPathTp)
                    .HasColumnName("SalRegionPath_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRegionSi).HasColumnName("SalRegion_Si");
            });

            modelBuilder.Entity<SalRegionToSalIntrmd>(entity =>
            {
                entity.HasKey(e => e.SalRegionToSalIntrmdSi);

                entity.Property(e => e.SalRegionToSalIntrmdSi).HasColumnName("SalRegionToSalIntrmd_Si");

                entity.Property(e => e.SalIntrmdSi).HasColumnName("SalIntrmd_Si");

                entity.Property(e => e.SalRegionPathSi).HasColumnName("SalRegionPath_Si");

                entity.Property(e => e.SalRegionSi).HasColumnName("SalRegion_Si");

                entity.Property(e => e.SalRegionToSalIntrmdAct).HasColumnName("SalRegionToSalIntrmd_Act");

                entity.Property(e => e.SalRegionToSalIntrmdFrmDs)
                    .HasColumnName("SalRegionToSalIntrmd_FrmDs")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.SalRegionToSalIntrmdToDs)
                    .HasColumnName("SalRegionToSalIntrmd_ToDs")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<SalRegionToSalResp>(entity =>
            {
                entity.HasKey(e => e.SalRegionToSalRespSi);

                entity.Property(e => e.SalRegionToSalRespSi).HasColumnName("SalRegionToSalResp_Si");

                entity.Property(e => e.SalRegionSi).HasColumnName("SalRegion_Si");

                entity.Property(e => e.SalRegionToSalRespAct).HasColumnName("SalRegionToSalResp_Act");

                entity.Property(e => e.SalRegionToSalRespDs)
                    .HasColumnName("SalRegionToSalResp_Ds")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.SalRespSi).HasColumnName("SalResp_Si");
            });

            modelBuilder.Entity<SalRelieve>(entity =>
            {
                entity.HasKey(e => e.SalRelieveSi);

                entity.Property(e => e.SalRelieveSi).HasColumnName("SalRelieve_Si");

                entity.Property(e => e.SalRelieveCu).HasColumnName("SalRelieve_Cu");

                entity.Property(e => e.SalRelieveTp)
                    .HasColumnName("SalRelieve_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalRequestD>(entity =>
            {
                entity.HasKey(e => e.SalRequestDSi);

                entity.Property(e => e.SalRequestDSi).HasColumnName("SalRequestD_Si");

                entity.Property(e => e.BatchNumberD)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.InvBatchNumberCode)
                    .HasColumnName("InvBatchNumber_Code")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTypSi).HasColumnName("InvGdsTyp_Si");

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.SalOprDec)
                    .HasColumnName("SalOprDEc")
                    .HasColumnType("money");

                entity.Property(e => e.SalOprDefaultValue).HasColumnName("SalOpr_DefaultValue");

                entity.Property(e => e.SalOprDefaultValue2).HasColumnName("SalOpr_DefaultValue_2");

                entity.Property(e => e.SalOprDefaultValue3).HasColumnName("SalOpr_DefaultValue_3");

                entity.Property(e => e.SalOprInc).HasColumnType("money");

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");

                entity.Property(e => e.SalOprSi2).HasColumnName("SalOpr_Si_2");

                entity.Property(e => e.SalOprSi3).HasColumnName("SalOpr_Si_3");

                entity.Property(e => e.SalOprTp)
                    .HasColumnName("SalOpr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTp2)
                    .HasColumnName("SalOpr_Tp_2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTp3)
                    .HasColumnName("SalOpr_Tp_3")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRequestDExpiredate)
                    .HasColumnName("SalRequestD_Expiredate")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalRequestDGiftOk).HasColumnName("SalRequestD_GiftOk");

                entity.Property(e => e.SalRequestDPrcDec)
                    .HasColumnName("SalRequestD_Prc_Dec")
                    .HasColumnType("money");

                entity.Property(e => e.SalRequestDPrcDec2)
                    .HasColumnName("SalRequestD_Prc_Dec_2")
                    .HasColumnType("money");

                entity.Property(e => e.SalRequestDPrcDec3).HasColumnName("SalRequestD_Prc_Dec_3");

                entity.Property(e => e.SalRequestDPrcInc)
                    .HasColumnName("SalRequestD_Prc_Inc")
                    .HasColumnType("money");

                entity.Property(e => e.SalRequestDPrcInc2)
                    .HasColumnName("SalRequestD_Prc_Inc_2")
                    .HasColumnType("money");

                entity.Property(e => e.SalRequestDPrcInc3).HasColumnName("SalRequestD_Prc_Inc_3");

                entity.Property(e => e.SalRequestDQty).HasColumnName("SalRequestD_Qty");

                entity.Property(e => e.SalRequestDQty2).HasColumnName("SalRequestD_Qty2");

                entity.Property(e => e.SalRequestDRow).HasColumnName("SalRequestD_Row");

                entity.Property(e => e.SalRequestDSumPrcDec).HasColumnName("SalRequestD_SumPrc_Dec");

                entity.Property(e => e.SalRequestDSumPrcInc).HasColumnName("SalRequestD_SumPrc_Inc");

                entity.Property(e => e.SalRequestDSumTotal)
                    .HasColumnName("SalRequestD_SumTotal")
                    .HasColumnType("money");

                entity.Property(e => e.SalRequestDTotal)
                    .HasColumnName("SalRequestD_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalRequestDTotalC).HasColumnName("SalRequestD_TotalC");

                entity.Property(e => e.SalRequestDTp)
                    .HasColumnName("SalRequestD_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalRequestDUntPrc)
                    .HasColumnName("SalRequestD_UntPrc")
                    .HasColumnType("money");

                entity.Property(e => e.SalRequestDUntPrcC).HasColumnName("SalRequestD_UntPrcC");

                entity.Property(e => e.SalRequestHSi).HasColumnName("SalRequestH_Si");

                entity.HasOne(d => d.InvGdsSiNavigation)
                    .WithMany(p => p.SalRequestD)
                    .HasForeignKey(d => d.InvGdsSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalRequestD_InvGds");

                entity.HasOne(d => d.InvUntSiNavigation)
                    .WithMany(p => p.SalRequestD)
                    .HasForeignKey(d => d.InvUntSi)
                    .HasConstraintName("FK_SalRequestD_InvUnt");

                entity.HasOne(d => d.SalOprSiNavigation)
                    .WithMany(p => p.SalRequestD)
                    .HasForeignKey(d => d.SalOprSi)
                    .HasConstraintName("FK_SalRequestD_SalOpr");

                entity.HasOne(d => d.SalRequestHSiNavigation)
                    .WithMany(p => p.SalRequestD)
                    .HasForeignKey(d => d.SalRequestHSi)
                    .HasConstraintName("FK_SalRequestD_SalRequestH1");
            });

            modelBuilder.Entity<SalRequestH>(entity =>
            {
                entity.HasKey(e => e.SalRequestHSi)
                    .IsClustered(false);

                entity.Property(e => e.SalRequestHSi)
                    .HasColumnName("SalRequestH_Si")
                    .HasComment("کد پنهان شماره پیش فاکتور");

                entity.Property(e => e.BatchNumberH)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("کد رهگیری");

                entity.Property(e => e.DescDriver)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasComment("اطلاعات تکمیلی راننده");

                entity.Property(e => e.InvInvtSi)
                    .HasColumnName("InvInvt_Si")
                    .HasComment("کد پنهان انبار");

                entity.Property(e => e.SalBrnchSi)
                    .HasColumnName("SalBrnch_Si")
                    .HasComment("کد پنهان مرکز فروش");

                entity.Property(e => e.SalCustSi)
                    .HasColumnName("SalCust_Si")
                    .HasComment("کد پنهان مشتری");

                entity.Property(e => e.SalDlvrrSi)
                    .HasColumnName("SalDlvrr_Si")
                    .HasComment("کد پنهان تحویل دهنده");

                entity.Property(e => e.SalDriverSi)
                    .HasColumnName("SalDriver_Si")
                    .HasComment("کد پنهان راننده");

                entity.Property(e => e.SalDrvrSi)
                    .HasColumnName("SalDrvr_Si")
                    .HasComment("کد پنهان راننده");

                entity.Property(e => e.SalIntrmdSi)
                    .HasColumnName("SalIntrmd_Si")
                    .HasComment("کد پنهان ویزیتور");

                entity.Property(e => e.SalInvcHSi)
                    .HasColumnName("SalInvcH_Si")
                    .HasComment("کد پنهان شماره فاکتور فروش صادر شده");

                entity.Property(e => e.SalPreInvcHSi).HasColumnName("SalPreInvcH_Si");

                entity.Property(e => e.SalPreprint).HasComment("تعداد چاپ");

                entity.Property(e => e.SalRequestHBarNo)
                    .HasColumnName("SalRequestH_BarNo")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("شماره بارنامه");

                entity.Property(e => e.SalRequestHCu)
                    .HasColumnName("SalRequestH_Cu")
                    .HasComment("شماره پیش فاکتور");

                entity.Property(e => e.SalRequestHCu2)
                    .HasColumnName("SalRequestH_Cu2")
                    .HasComment("شماره فرعی");

                entity.Property(e => e.SalRequestHDlvLoc)
                    .HasColumnName("SalRequestH_DlvLoc")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("محل تحویل");

                entity.Property(e => e.SalRequestHDm)
                    .HasColumnName("SalRequestH_Dm")
                    .HasColumnType("datetime")
                    .HasComment("تاریخ میلادی");

                entity.Property(e => e.SalRequestHDriverName)
                    .HasColumnName("SalRequestH_DriverName")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalRequestHDs)
                    .IsRequired()
                    .HasColumnName("SalRequestH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasComment("تاریخ پیش فاکتور");

                entity.Property(e => e.SalRequestHExprDate)
                    .HasColumnName("SalRequestH_ExprDate")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasComment("تاریخ انقضا");

                entity.Property(e => e.SalRequestHExprTime)
                    .HasColumnName("SalRequestH_ExprTime")
                    .HasComment("مدت اعتبار");

                entity.Property(e => e.SalRequestHGood).HasColumnName("SalRequestH_Good");

                entity.Property(e => e.SalRequestHLock)
                    .HasColumnName("SalRequestH_Lock")
                    .HasComment("قطعی شده");

                entity.Property(e => e.SalRequestHPrcDec)
                    .HasColumnName("SalRequestH_Prc_Dec")
                    .HasColumnType("money")
                    .HasComment("کسورات-کلی");

                entity.Property(e => e.SalRequestHPrcGift).HasColumnName("SalRequestH_Prc_Gift");

                entity.Property(e => e.SalRequestHPrcInc)
                    .HasColumnName("SalRequestH_Prc_Inc")
                    .HasColumnType("money")
                    .HasComment("اضافات-کلی");

                entity.Property(e => e.SalRequestHPrcSumQty)
                    .HasColumnName("SalRequestH_Prc_SumQty")
                    .HasComment("جمع تعدادی اقلام پیش فاکتور");

                entity.Property(e => e.SalRequestHPrcSumTotal)
                    .HasColumnName("SalRequestH_Prc_SumTotal")
                    .HasColumnType("money")
                    .HasComment("جمع مبلغ");

                entity.Property(e => e.SalRequestHPrcSumTotalC)
                    .HasColumnName("SalRequestH_Prc_SumTotalC")
                    .HasColumnType("money")
                    .HasComment("جمع مبلغ ارزی");

                entity.Property(e => e.SalRequestHPrcTotal)
                    .HasColumnName("SalRequestH_Prc_Total")
                    .HasColumnType("money")
                    .HasComment("جمع کل");

                entity.Property(e => e.SalRequestHRcvMthd)
                    .HasColumnName("SalRequestH_RcvMthd")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("نحوه دریافت");

                entity.Property(e => e.SalRequestHReference)
                    .HasColumnName("SalRequestH_Reference")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("شماره عطف");

                entity.Property(e => e.SalRequestHRfrncTyp)
                    .HasColumnName("SalRequestH_RfrncTyp")
                    .HasComment("نوع عطف");

                entity.Property(e => e.SalRequestHStatus)
                    .HasColumnName("SalRequestH_Status")
                    .HasComment("وضعیت");

                entity.Property(e => e.SalRequestHStmpCdt)
                    .HasColumnName("SalRequestH_StmpCDT")
                    .HasColumnType("datetime")
                    .HasComment("تاریخ ایجاد ");

                entity.Property(e => e.SalRequestHStmpCus)
                    .HasColumnName("SalRequestH_StmpCUs")
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasComment("نام کاربر ایجاد کننده");

                entity.Property(e => e.SalRequestHStmpMdt)
                    .HasColumnName("SalRequestH_StmpMDT")
                    .HasColumnType("datetime")
                    .HasComment("تاریخ ویرایش");

                entity.Property(e => e.SalRequestHStmpMus)
                    .HasColumnName("SalRequestH_StmpMUs")
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasComment("نام کاربر ویرایش گر");

                entity.Property(e => e.SalRequestHStmpTime)
                    .HasColumnName("SalRequestH_StmpTime")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("ساعت ایجاد");

                entity.Property(e => e.SalRequestHStmpTimeEdit)
                    .HasColumnName("SalRequestH_StmpTimeEdit")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("ساعت ویرایش");

                entity.Property(e => e.SalRequestHTp)
                    .HasColumnName("SalRequestH_Tp")
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasComment("توضیحات");

                entity.Property(e => e.SalRespSi)
                    .HasColumnName("SalResp_Si")
                    .HasComment("کد پنهان مسئول فروش");

                entity.Property(e => e.SalTypSi)
                    .HasColumnName("SalTyp_Si")
                    .HasComment("کد پنهان نحوه فروش");

                entity.Property(e => e.SalvarietySi)
                    .HasColumnName("Salvariety_Si")
                    .HasComment("کد پنهان نوع فاکتور");

                entity.HasOne(d => d.SalBrnchSiNavigation)
                    .WithMany(p => p.SalRequestH)
                    .HasForeignKey(d => d.SalBrnchSi)
                    .HasConstraintName("FK_SalRequestH_SalBrnch");

                entity.HasOne(d => d.SalCustSiNavigation)
                    .WithMany(p => p.SalRequestH)
                    .HasForeignKey(d => d.SalCustSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalRequestH_SalCust");

                entity.HasOne(d => d.SalDlvrrSiNavigation)
                    .WithMany(p => p.SalRequestH)
                    .HasForeignKey(d => d.SalDlvrrSi)
                    .HasConstraintName("FK_SalRequestH_SalDlvrr");

                entity.HasOne(d => d.SalDrvrSiNavigation)
                    .WithMany(p => p.SalRequestH)
                    .HasForeignKey(d => d.SalDrvrSi)
                    .HasConstraintName("FK_SalRequestH_SalDrvr");

                entity.HasOne(d => d.SalIntrmdSiNavigation)
                    .WithMany(p => p.SalRequestH)
                    .HasForeignKey(d => d.SalIntrmdSi)
                    .HasConstraintName("FK_SalRequestH_SalIntrmd");

                entity.HasOne(d => d.SalRespSiNavigation)
                    .WithMany(p => p.SalRequestH)
                    .HasForeignKey(d => d.SalRespSi)
                    .HasConstraintName("FK_SalRequestH_SalResp");
            });

            modelBuilder.Entity<SalRequestOpr>(entity =>
            {
                entity.HasKey(e => e.SalRequestOprSi);

                entity.Property(e => e.SalRequestOprSi).HasColumnName("SalRequestOpr_Si");

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");

                entity.Property(e => e.SalRequestHSi).HasColumnName("SalRequestH_Si");

                entity.Property(e => e.SalRequestOprCalcValue)
                    .HasColumnName("SalRequestOpr_CalcValue")
                    .HasColumnType("money");

                entity.Property(e => e.SalRequestOprValue)
                    .HasColumnName("SalRequestOpr_Value")
                    .HasColumnType("money");

                entity.HasOne(d => d.SalOprSiNavigation)
                    .WithMany(p => p.SalRequestOpr)
                    .HasForeignKey(d => d.SalOprSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalRequestOpr_SalOpr");

                entity.HasOne(d => d.SalRequestHSiNavigation)
                    .WithMany(p => p.SalRequestOpr)
                    .HasForeignKey(d => d.SalRequestHSi)
                    .HasConstraintName("FK_SalRequestOpr_SalRequestH");
            });

            modelBuilder.Entity<SalResp>(entity =>
            {
                entity.HasKey(e => e.SalRespSi);

                entity.Property(e => e.SalRespSi)
                    .HasColumnName("SalResp_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.SalRespAdrs)
                    .HasColumnName("SalResp_Adrs")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalRespPhoto)
                    .HasColumnName("SalResp_Photo")
                    .HasColumnType("image");

                entity.Property(e => e.SalRespTel)
                    .HasColumnName("SalResp_Tel")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRespTp)
                    .HasColumnName("SalResp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRespTpEn)
                    .HasColumnName("SalResp_Tp_En")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalRespUser>(entity =>
            {
                entity.HasKey(e => e.SalRespUserSi);

                entity.Property(e => e.SalRespUserSi).HasColumnName("SalRespUser_Si");

                entity.Property(e => e.SalRespSi).HasColumnName("SalResp_Si");

                entity.Property(e => e.UserRec)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.HasOne(d => d.SalRespSiNavigation)
                    .WithMany(p => p.SalRespUser)
                    .HasForeignKey(d => d.SalRespSi)
                    .HasConstraintName("FK_SalRespUser_SalResp");
            });

            modelBuilder.Entity<SalRetInvcD>(entity =>
            {
                entity.HasKey(e => e.SalRetInvcDSi);

                entity.HasIndex(e => e.InvGdsSi)
                    .HasName("IX_InvGds_Si");

                entity.HasIndex(e => e.SalRetInvcHSi)
                    .HasName("IX_SalRetInvcH_Si");

                entity.Property(e => e.SalRetInvcDSi).HasColumnName("SalRetInvcD_Si");

                entity.Property(e => e.BatchNumberD)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTypSi).HasColumnName("InvGdsTyp_Si");

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.SalOprDec)
                    .HasColumnName("SalOprDEc")
                    .HasColumnType("money");

                entity.Property(e => e.SalOprDefaultValue).HasColumnName("SalOpr_DefaultValue");

                entity.Property(e => e.SalOprDefaultValue2).HasColumnName("SalOpr_DefaultValue_2");

                entity.Property(e => e.SalOprDefaultValue3).HasColumnName("SalOpr_DefaultValue_3");

                entity.Property(e => e.SalOprInc).HasColumnType("money");

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");

                entity.Property(e => e.SalOprSi2).HasColumnName("SalOpr_Si_2");

                entity.Property(e => e.SalOprSi3).HasColumnName("SalOpr_Si_3");

                entity.Property(e => e.SalOprTp)
                    .HasColumnName("SalOpr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTp2)
                    .HasColumnName("SalOpr_Tp_2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTp3)
                    .HasColumnName("SalOpr_Tp_3")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRetInvCdSumTotal)
                    .HasColumnName("SalRetInvCd_SumTotal")
                    .HasColumnType("money");

                entity.Property(e => e.SalRetInvcDExpiredate)
                    .HasColumnName("SalRetInvcD_Expiredate")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalRetInvcDGiftOk).HasColumnName("SalRetInvcD_GiftOk");

                entity.Property(e => e.SalRetInvcDQty).HasColumnName("SalRetInvcD_Qty");

                entity.Property(e => e.SalRetInvcDQty2).HasColumnName("SalRetInvcD_Qty2");

                entity.Property(e => e.SalRetInvcDRow).HasColumnName("SalRetInvcD_Row");

                entity.Property(e => e.SalRetInvcDSumPrcDec).HasColumnName("SalRetInvcD_SumPrc_Dec");

                entity.Property(e => e.SalRetInvcDSumPrcInc).HasColumnName("SalRetInvcD_SumPrc_Inc");

                entity.Property(e => e.SalRetInvcDTotal)
                    .HasColumnName("SalRetInvcD_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalRetInvcDTotalC)
                    .HasColumnName("SalRetInvcD_TotalC")
                    .HasColumnType("money");

                entity.Property(e => e.SalRetInvcDTp)
                    .HasColumnName("SalRetInvcD_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRetInvcDUntPrc)
                    .HasColumnName("SalRetInvcD_UntPrc")
                    .HasColumnType("money");

                entity.Property(e => e.SalRetInvcDUntPrcC).HasColumnName("SalRetInvcD_UntPrcC");

                entity.Property(e => e.SalRetInvcHSi).HasColumnName("SalRetInvcH_Si");

                entity.Property(e => e.SalretInvcDPrcDec)
                    .HasColumnName("SalretInvcD_Prc_Dec")
                    .HasColumnType("money");

                entity.Property(e => e.SalretInvcDPrcDec2)
                    .HasColumnName("SalretInvcD_Prc_Dec_2")
                    .HasColumnType("money");

                entity.Property(e => e.SalretInvcDPrcDec3)
                    .HasColumnName("SalretInvcD_Prc_Dec_3")
                    .HasColumnType("money");

                entity.Property(e => e.SalretInvcDPrcInc)
                    .HasColumnName("SalretInvcD_Prc_Inc")
                    .HasColumnType("money");

                entity.Property(e => e.SalretInvcDPrcInc2)
                    .HasColumnName("SalretInvcD_Prc_Inc_2")
                    .HasColumnType("money");

                entity.Property(e => e.SalretInvcDPrcInc3)
                    .HasColumnName("SalretInvcD_Prc_Inc_3")
                    .HasColumnType("money");

                entity.HasOne(d => d.InvGdsSiNavigation)
                    .WithMany(p => p.SalRetInvcD)
                    .HasForeignKey(d => d.InvGdsSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalRetInvcD_InvGds");

                entity.HasOne(d => d.InvUntSiNavigation)
                    .WithMany(p => p.SalRetInvcD)
                    .HasForeignKey(d => d.InvUntSi)
                    .HasConstraintName("FK_SalRetInvcD_InvUnt");

                entity.HasOne(d => d.SalOprSiNavigation)
                    .WithMany(p => p.SalRetInvcD)
                    .HasForeignKey(d => d.SalOprSi)
                    .HasConstraintName("FK_SalRetInvcD_SalOpr");

                entity.HasOne(d => d.SalRetInvcHSiNavigation)
                    .WithMany(p => p.SalRetInvcD)
                    .HasForeignKey(d => d.SalRetInvcHSi)
                    .HasConstraintName("FK_SalRetInvcD_SalRetInvcH");
            });

            modelBuilder.Entity<SalRetInvcDsrl>(entity =>
            {
                entity.HasKey(e => new { e.SalRetInvcHSi, e.InvGdsSi, e.SalRetInvcDsrlSrl })
                    .HasName("PK_SalRetInvcDSrl_1");

                entity.ToTable("SalRetInvcDSrl");

                entity.Property(e => e.SalRetInvcHSi).HasColumnName("SalRetInvcH_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.SalRetInvcDsrlSrl)
                    .HasColumnName("SalRetInvcDSrl_Srl")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHSi).HasColumnName("SalInvcH_Si");

                entity.Property(e => e.SalRetInvcDsrlDestroy).HasColumnName("SalRetInvcDSrl_Destroy");

                entity.HasOne(d => d.InvGdsSiNavigation)
                    .WithMany(p => p.SalRetInvcDsrl)
                    .HasForeignKey(d => d.InvGdsSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalRetInvcDSrl_InvGds");

                entity.HasOne(d => d.SalRetInvcHSiNavigation)
                    .WithMany(p => p.SalRetInvcDsrl)
                    .HasForeignKey(d => d.SalRetInvcHSi)
                    .HasConstraintName("FK_SalRetInvcDSrl_SalRetInvcH");
            });

            modelBuilder.Entity<SalRetInvcH>(entity =>
            {
                entity.HasKey(e => e.SalRetInvcHSi);

                entity.HasIndex(e => e.SalCustSi)
                    .HasName("IX_SalCust_Si");

                entity.HasIndex(e => e.SalRetInvcHCu)
                    .HasName("IX_SalRetInvcH_Cu");

                entity.HasIndex(e => e.SalRetInvcHDs)
                    .HasName("IX_SalRetInvcH_Ds");

                entity.Property(e => e.SalRetInvcHSi).HasColumnName("SalRetInvcH_Si");

                entity.Property(e => e.BatchNumberH)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHAccMSi).HasColumnName("InvDocH_AccM_Si");

                entity.Property(e => e.InvDocHSi).HasColumnName("InvDocH_Si");

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.SalBrnchSi).HasColumnName("SalBrnch_Si");

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalIntrmdSi).HasColumnName("SalIntrmd_Si");

                entity.Property(e => e.SalInvcHAccDoc).HasColumnName("SalInvcH_AccDoc");

                entity.Property(e => e.SalInvcHSi).HasColumnName("SalInvcH_Si");

                entity.Property(e => e.SalRespSi).HasColumnName("SalResp_Si");

                entity.Property(e => e.SalRetInvcHAccDoc)
                    .IsRequired()
                    .HasColumnName("SalRetInvcH_AccDoc")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SalRetInvcHCancelled).HasColumnName("SalRetInvcH_Cancelled");

                entity.Property(e => e.SalRetInvcHCu).HasColumnName("SalRetInvcH_Cu");

                entity.Property(e => e.SalRetInvcHCu2).HasColumnName("SalRetInvcH_Cu2");

                entity.Property(e => e.SalRetInvcHDm)
                    .HasColumnName("SalRetInvcH_Dm")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalRetInvcHDs)
                    .IsRequired()
                    .HasColumnName("SalRetInvcH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalRetInvcHIntrmdPrc).HasColumnName("SalRetInvcH_IntrmdPrc");

                entity.Property(e => e.SalRetInvcHLock)
                    .HasColumnName("SalRetInvcH_Lock")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SalRetInvcHPrcDec)
                    .HasColumnName("SalRetInvcH_Prc_Dec")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SalRetInvcHPrcDec2)
                    .HasColumnName("SalRetInvcH_Prc_Dec_2")
                    .HasColumnType("money");

                entity.Property(e => e.SalRetInvcHPrcGift).HasColumnName("SalRetInvcH_Prc_Gift");

                entity.Property(e => e.SalRetInvcHPrcInc)
                    .HasColumnName("SalRetInvcH_Prc_Inc")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SalRetInvcHPrcInc2)
                    .HasColumnName("SalRetInvcH_Prc_Inc_2")
                    .HasColumnType("money");

                entity.Property(e => e.SalRetInvcHPrcSumQty).HasColumnName("SalRetInvcH_Prc_SumQty");

                entity.Property(e => e.SalRetInvcHPrcSumTotal)
                    .HasColumnName("SalRetInvcH_Prc_SumTotal")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SalRetInvcHPrcSumTotalC)
                    .HasColumnName("SalRetInvcH_Prc_SumTotalC")
                    .HasColumnType("money");

                entity.Property(e => e.SalRetInvcHPrcTotal)
                    .HasColumnName("SalRetInvcH_Prc_Total")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SalRetInvcHReference)
                    .HasColumnName("SalRetInvcH_Reference")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRetInvcHRfrncTyp).HasColumnName("SalRetInvcH_RfrncTyp");

                entity.Property(e => e.SalRetInvcHStmpCdt)
                    .HasColumnName("SalRetInvcH_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalRetInvcHStmpCus)
                    .HasColumnName("SalRetInvcH_StmpCUs")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRetInvcHStmpMdt)
                    .HasColumnName("SalRetInvcH_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalRetInvcHStmpMus)
                    .HasColumnName("SalRetInvcH_StmpMUs")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRetInvcHTp)
                    .HasColumnName("SalRetInvcH_Tp")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SalTypSi).HasColumnName("SalTyp_Si");

                entity.Property(e => e.SalvarietySi).HasColumnName("Salvariety_Si");

                entity.HasOne(d => d.InvInvtSiNavigation)
                    .WithMany(p => p.SalRetInvcH)
                    .HasForeignKey(d => d.InvInvtSi)
                    .HasConstraintName("FK_SalRetInvcH_InvInvt");

                entity.HasOne(d => d.SalBrnchSiNavigation)
                    .WithMany(p => p.SalRetInvcH)
                    .HasForeignKey(d => d.SalBrnchSi)
                    .HasConstraintName("FK_SalRetInvcH_SalBrnch");

                entity.HasOne(d => d.SalCustSiNavigation)
                    .WithMany(p => p.SalRetInvcH)
                    .HasForeignKey(d => d.SalCustSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalRetInvcH_SalCust");

                entity.HasOne(d => d.SalIntrmdSiNavigation)
                    .WithMany(p => p.SalRetInvcH)
                    .HasForeignKey(d => d.SalIntrmdSi)
                    .HasConstraintName("FK_SalRetInvcH_SalIntrmd");

                entity.HasOne(d => d.SalInvcHSiNavigation)
                    .WithMany(p => p.SalRetInvcH)
                    .HasForeignKey(d => d.SalInvcHSi)
                    .HasConstraintName("FK_SalRetInvcH_SalInvcH");
            });

            modelBuilder.Entity<SalRetInvcOpr>(entity =>
            {
                entity.HasKey(e => e.SalRetInvcOprSi);

                entity.Property(e => e.SalRetInvcOprSi).HasColumnName("SalRetInvcOpr_Si");

                entity.Property(e => e.AccMSi).HasColumnName("AccM_Si");

                entity.Property(e => e.AccTSi).HasColumnName("AccT_Si");

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");

                entity.Property(e => e.SalRetInvcHSi).HasColumnName("SalRetInvcH_Si");

                entity.Property(e => e.SalRetInvcOprCalcValue)
                    .HasColumnName("SalRetInvcOpr_CalcValue")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SalRetInvcOprValue)
                    .HasColumnName("SalRetInvcOpr_Value")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.HasOne(d => d.AccMSiNavigation)
                    .WithMany(p => p.SalRetInvcOpr)
                    .HasForeignKey(d => d.AccMSi)
                    .HasConstraintName("FK_SalRetInvcOpr_CtbAccM");

                entity.HasOne(d => d.AccTSiNavigation)
                    .WithMany(p => p.SalRetInvcOpr)
                    .HasForeignKey(d => d.AccTSi)
                    .HasConstraintName("FK_SalRetInvcOpr_CtbAccT");

                entity.HasOne(d => d.SalOprSiNavigation)
                    .WithMany(p => p.SalRetInvcOpr)
                    .HasForeignKey(d => d.SalOprSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalRetInvcOpr_SalOpr");

                entity.HasOne(d => d.SalRetInvcHSiNavigation)
                    .WithMany(p => p.SalRetInvcOpr)
                    .HasForeignKey(d => d.SalRetInvcHSi)
                    .HasConstraintName("FK_SalRetInvcOpr_SalRetInvcH");
            });

            modelBuilder.Entity<SalRetMetrajCalc>(entity =>
            {
                entity.HasKey(e => e.SiId);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.Tp)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalSeller>(entity =>
            {
                entity.HasKey(e => e.SalSellerSi);

                entity.Property(e => e.SalSellerSi).HasColumnName("SalSeller_Si");

                entity.Property(e => e.SalSellerAdress)
                    .HasColumnName("SalSeller_Adress")
                    .HasMaxLength(50);

                entity.Property(e => e.SalSellerEconomicalNo)
                    .HasColumnName("SalSeller_EconomicalNo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalSellerTel)
                    .HasColumnName("SalSeller_Tel")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalSellerTp)
                    .HasColumnName("SalSeller_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalSrv>(entity =>
            {
                entity.HasKey(e => e.SalSrvSi);

                entity.Property(e => e.SalSrvSi).HasColumnName("SalSrv_Si");

                entity.Property(e => e.SalSrvCu)
                    .IsRequired()
                    .HasColumnName("SalSrv_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalSrvGrpSi).HasColumnName("SalSrvGrp_Si");

                entity.Property(e => e.SalSrvSiParent).HasColumnName("SalSrv_SiParent");

                entity.Property(e => e.SalSrvStdPrc)
                    .HasColumnName("SalSrv_StdPrc")
                    .HasColumnType("money");

                entity.Property(e => e.SalSrvTp)
                    .HasColumnName("SalSrv_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalSrvUnt)
                    .HasColumnName("SalSrv_Unt")
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalSrvAcc>(entity =>
            {
                entity.HasKey(e => e.SalSrvAccSi);

                entity.Property(e => e.SalSrvAccSi).HasColumnName("SalSrvAcc_Si");

                entity.Property(e => e.SalSrvAccAccMSi).HasColumnName("SalSrvAcc_AccM_Si");

                entity.Property(e => e.SalSrvAccAccTSi).HasColumnName("SalSrvAcc_AccT_Si");

                entity.Property(e => e.SalSrvSi).HasColumnName("SalSrv_Si");

                entity.HasOne(d => d.SalSrvAccAccMSiNavigation)
                    .WithMany(p => p.SalSrvAcc)
                    .HasForeignKey(d => d.SalSrvAccAccMSi)
                    .HasConstraintName("FK_SalSrvAcc_CtbAccM");

                entity.HasOne(d => d.SalSrvAccAccTSiNavigation)
                    .WithMany(p => p.SalSrvAcc)
                    .HasForeignKey(d => d.SalSrvAccAccTSi)
                    .HasConstraintName("FK_SalSrvAcc_CtbAccT");

                entity.HasOne(d => d.SalSrvSiNavigation)
                    .WithMany(p => p.SalSrvAcc)
                    .HasForeignKey(d => d.SalSrvSi)
                    .HasConstraintName("FK_SalSrvAcc_SalSrv");
            });

            modelBuilder.Entity<SalSrvGrp>(entity =>
            {
                entity.HasKey(e => e.SalSrvGrpSi);

                entity.Property(e => e.SalSrvGrpSi).HasColumnName("SalSrvGrp_Si");

                entity.Property(e => e.SalSrvGrpCu)
                    .HasColumnName("SalSrvGrp_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalSrvGrpSiParent).HasColumnName("SalSrvGrp_SiParent");

                entity.Property(e => e.SalSrvGrpTp)
                    .HasColumnName("SalSrvGrp_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalTaxD>(entity =>
            {
                entity.HasKey(e => e.SalTaxDSi);

                entity.Property(e => e.SalTaxDSi).HasColumnName("SalTaxD_Si");

                entity.Property(e => e.SalTaxDFrom)
                    .HasColumnName("SalTaxD_From")
                    .HasColumnType("money");

                entity.Property(e => e.SalTaxDPersent).HasColumnName("SalTaxD_Persent");

                entity.Property(e => e.SalTaxDTo)
                    .HasColumnName("SalTaxD_To")
                    .HasColumnType("money");

                entity.Property(e => e.SalTaxHSi).HasColumnName("SalTaxH_Si");

                entity.HasOne(d => d.SalTaxHSiNavigation)
                    .WithMany(p => p.SalTaxD)
                    .HasForeignKey(d => d.SalTaxHSi)
                    .HasConstraintName("FK_SalTaxD_SalTaxH");
            });

            modelBuilder.Entity<SalTaxH>(entity =>
            {
                entity.HasKey(e => e.SalTaxHSi);

                entity.Property(e => e.SalTaxHSi).HasColumnName("SalTaxH_Si");

                entity.Property(e => e.SalTaxHAct)
                    .HasColumnName("SalTaxH_Act")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SalTaxHDs)
                    .HasColumnName("SalTaxH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalTaxHTp)
                    .HasColumnName("SalTaxH_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalTyp>(entity =>
            {
                entity.HasKey(e => e.SalTypSi);

                entity.Property(e => e.SalTypSi).HasColumnName("SalTyp_Si");

                entity.Property(e => e.SalTypCu)
                    .IsRequired()
                    .HasColumnName("SalTyp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalTypTp)
                    .HasColumnName("SalTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalTypPrn>(entity =>
            {
                entity.HasKey(e => e.SalTypPrnSi);

                entity.Property(e => e.SalTypPrnSi).HasColumnName("SalTypPrn_Si");

                entity.Property(e => e.SalTypPrnTp)
                    .HasColumnName("SalTypPrn_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalUserLevel>(entity =>
            {
                entity.HasKey(e => e.SalUserLevelSi)
                    .HasName("PK_SalUserAcs");

                entity.Property(e => e.SalUserLevelSi).HasColumnName("SalUserLevel_Si");

                entity.Property(e => e.SalUserLevelSiParent).HasColumnName("SalUserLevel_SiParent");

                entity.Property(e => e.SalUserLevelUserCode)
                    .HasColumnName("SalUserLevel_UserCode")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SalUserLevelUserName)
                    .HasColumnName("SalUserLevel_UserName")
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SalVchrD>(entity =>
            {
                entity.Property(e => e.SalVchrDId).HasColumnName("SalVchrD_Id");

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.SalVchrDCredit)
                    .HasColumnName("SalVchrD_Credit")
                    .HasColumnType("money");

                entity.Property(e => e.SalVchrDCreditC)
                    .HasColumnName("SalVchrD_CreditC")
                    .HasColumnType("money");

                entity.Property(e => e.SalVchrDDebit)
                    .HasColumnName("SalVchrD_Debit")
                    .HasColumnType("money");

                entity.Property(e => e.SalVchrDDebitC)
                    .HasColumnName("SalVchrD_DebitC")
                    .HasColumnType("money");

                entity.Property(e => e.SalVchrDReferenceId).HasColumnName("SalVchrD_ReferenceId");

                entity.Property(e => e.SalVchrDTx)
                    .IsRequired()
                    .HasColumnName("SalVchrD_Tx")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalVchrDType).HasColumnName("SalVchrD_Type");

                entity.Property(e => e.SalVchrHId).HasColumnName("SalVchrH_Id");

                entity.Property(e => e.SalVchrHRow).HasColumnName("SalVchrH_Row");

                entity.HasOne(d => d.AccLcSiNavigation)
                    .WithMany(p => p.SalVchrD)
                    .HasForeignKey(d => d.AccLcSi)
                    .HasConstraintName("FK_SalVchrD_CtbCost");

                entity.HasOne(d => d.AccLmSiNavigation)
                    .WithMany(p => p.SalVchrD)
                    .HasForeignKey(d => d.AccLmSi)
                    .HasConstraintName("FK_SalVchrD_CtbAccM");

                entity.HasOne(d => d.AccLpSiNavigation)
                    .WithMany(p => p.SalVchrD)
                    .HasForeignKey(d => d.AccLpSi)
                    .HasConstraintName("FK_SalVchrD_CtbProject");

                entity.HasOne(d => d.SalVchrH)
                    .WithMany(p => p.SalVchrD)
                    .HasForeignKey(d => d.SalVchrHId)
                    .HasConstraintName("FK_SalVchrD_SalVchrH");
            });

            modelBuilder.Entity<SalVchrH>(entity =>
            {
                entity.Property(e => e.SalVchrHId)
                    .HasColumnName("SalVchrH_Id")
                    .ValueGeneratedNever();

                entity.Property(e => e.AccDocHSi).HasColumnName("AccDocH_Si");

                entity.Property(e => e.SalVchrHDate)
                    .HasColumnName("SalVchrH_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.SalVchrHDateFrom)
                    .HasColumnName("SalVchrH_DateFrom")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.SalVchrHDateUntil)
                    .HasColumnName("SalVchrH_DateUntil")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.SalVchrHSent).HasColumnName("SalVchrH_Sent");

                entity.Property(e => e.SalVchrHTx)
                    .HasColumnName("SalVchrH_Tx")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.AccDocHSiNavigation)
                    .WithMany(p => p.SalVchrH)
                    .HasForeignKey(d => d.AccDocHSi)
                    .HasConstraintName("FK_SalVchrH_AccHDoc");
            });

            modelBuilder.Entity<SalePreInvoice>(entity =>
            {
                entity.ToTable("SalePreInvoice", "web");

                entity.Property(e => e.SalePreInvoiceId).HasColumnName("SalePreInvoiceID");

                entity.Property(e => e.CreateDate).HasColumnType("datetime");

                entity.Property(e => e.CustomerId).HasColumnName("CustomerID");

                entity.Property(e => e.MemberShipId).HasColumnName("MemberShipID");

                entity.Property(e => e.SaleTypeId).HasColumnName("SaleTypeID");

                entity.HasOne(d => d.Customer)
                    .WithMany(p => p.SalePreInvoice)
                    .HasForeignKey(d => d.CustomerId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalePreInvoice_SalCust");
            });

            modelBuilder.Entity<SalePreInvoiceDetail>(entity =>
            {
                entity.ToTable("SalePreInvoiceDetail", "web");

                entity.Property(e => e.SalePreInvoiceDetailId).HasColumnName("SalePreInvoiceDetailID");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.SalePreInvoiceId).HasColumnName("SalePreInvoiceID");

                entity.HasOne(d => d.InvGdsSiNavigation)
                    .WithMany(p => p.SalePreInvoiceDetail)
                    .HasForeignKey(d => d.InvGdsSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalePreInvoiceDetail_InvGds");

                entity.HasOne(d => d.InvUntSiNavigation)
                    .WithMany(p => p.SalePreInvoiceDetail)
                    .HasForeignKey(d => d.InvUntSi)
                    .HasConstraintName("FK_SalePreInvoiceDetail_InvUnt");

                entity.HasOne(d => d.SalePreInvoice)
                    .WithMany(p => p.SalePreInvoiceDetail)
                    .HasForeignKey(d => d.SalePreInvoiceId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalePreInvoiceDetail_SalePreInvoice");
            });

            modelBuilder.Entity<SalePreInvoiceOperation>(entity =>
            {
                entity.ToTable("SalePreInvoiceOperation", "web");

                entity.Property(e => e.SalePreInvoiceOperationId).HasColumnName("SalePreInvoiceOperationID");

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");

                entity.Property(e => e.SalePreInvoiceId).HasColumnName("SalePreInvoiceID");

                entity.HasOne(d => d.SalePreInvoice)
                    .WithMany(p => p.SalePreInvoiceOperation)
                    .HasForeignKey(d => d.SalePreInvoiceId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SalePreInvoiceOperation_SalePreInvoice");
            });

            modelBuilder.Entity<SalinvcGift>(entity =>
            {
                entity.HasKey(e => e.SalInvcGiftSi);

                entity.Property(e => e.SalInvcGiftSi).HasColumnName("SalInvcGift_Si");

                entity.Property(e => e.SalGiftInvGdsSi).HasColumnName("SalGiftInvGds_Si");

                entity.Property(e => e.SalInvcGiftValue)
                    .HasColumnName("SalInvcGift_Value")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcHSi).HasColumnName("SalInvcH_Si");
            });

            modelBuilder.Entity<SallimitGrant>(entity =>
            {
                entity.HasKey(e => e.SallimitGrantSi);

                entity.Property(e => e.SallimitGrantSi).HasColumnName("SallimitGrant_Si");

                entity.Property(e => e.GrantQtyFrom)
                    .HasColumnName("GrantQty_From")
                    .HasColumnType("money");

                entity.Property(e => e.GrantQtyTo)
                    .HasColumnName("GrantQty_To")
                    .HasColumnType("money");

                entity.Property(e => e.SalDivisionSi).HasColumnName("SalDivision_Si");

                entity.Property(e => e.SallimitGrantTp)
                    .HasColumnName("SallimitGrant_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Salvariety>(entity =>
            {
                entity.HasKey(e => e.SalvarietySi);

                entity.Property(e => e.SalvarietySi).HasColumnName("Salvariety_Si");

                entity.Property(e => e.SalvarietyCu)
                    .HasColumnName("Salvariety_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalvarietyTp)
                    .HasColumnName("Salvariety_Tp")
                    .HasMaxLength(4000);
            });

            modelBuilder.Entity<ShpCashier>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.ShpCashierId)
                    .IsRequired()
                    .HasColumnName("ShpCashier_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShpCashierPassword)
                    .HasColumnName("ShpCashier_Password")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<ShpInvoiceD>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.ShpInvoiceDBarCode)
                    .HasColumnName("ShpInvoiceD_BarCode")
                    .HasMaxLength(50);

                entity.Property(e => e.ShpInvoiceDId).HasColumnName("ShpInvoiceD_Id");

                entity.Property(e => e.ShpInvoiceDPrice)
                    .HasColumnName("ShpInvoiceD_Price")
                    .HasColumnType("money");

                entity.Property(e => e.ShpInvoiceDQty).HasColumnName("ShpInvoiceD_Qty");

                entity.Property(e => e.ShpInvoiceDSerial).HasColumnName("ShpInvoiceD_Serial");

                entity.Property(e => e.ShpInvoiceDUnitPrice).HasColumnName("ShpInvoiceD_UnitPrice");

                entity.Property(e => e.ShpInvoiceHId).HasColumnName("ShpInvoiceH_Id");
            });

            modelBuilder.Entity<ShpInvoiceH>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.ShpCashierId)
                    .HasColumnName("ShpCashier_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShpInvoiceHCancelled).HasColumnName("ShpInvoiceH_Cancelled");

                entity.Property(e => e.ShpInvoiceHCancelledDt)
                    .HasColumnName("ShpInvoiceH_CancelledDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.ShpInvoiceHCreateDt)
                    .HasColumnName("ShpInvoiceH_CreateDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.ShpInvoiceHDiscount)
                    .HasColumnName("ShpInvoiceH_Discount")
                    .HasColumnType("money");

                entity.Property(e => e.ShpInvoiceHDt)
                    .HasColumnName("ShpInvoiceH_DT")
                    .HasColumnType("datetime");

                entity.Property(e => e.ShpInvoiceHEditCounter).HasColumnName("ShpInvoiceH_EditCounter");

                entity.Property(e => e.ShpInvoiceHId).HasColumnName("ShpInvoiceH_Id");

                entity.Property(e => e.ShpInvoiceHLastModifiedDt)
                    .HasColumnName("ShpInvoiceH_LastModifiedDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.ShpInvoiceHPayment)
                    .HasColumnName("ShpInvoiceH_Payment")
                    .HasColumnType("money");

                entity.Property(e => e.ShpInvoiceHPrintCounter).HasColumnName("ShpInvoiceH_PrintCounter");

                entity.Property(e => e.ShpInvoiceHReturn).HasColumnName("ShpInvoiceH_Return");

                entity.Property(e => e.ShpInvoiceHTotal)
                    .HasColumnName("ShpInvoiceH_Total")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<StimulReportFile>(entity =>
            {
                entity.ToTable("StimulReportFile", "Framework");

                entity.Property(e => e.StimulReportFileId)
                    .HasColumnName("StimulReportFileID")
                    .ValueGeneratedNever();

                entity.Property(e => e.CreateDate).HasColumnType("smalldatetime");

                entity.Property(e => e.Description).HasMaxLength(1024);

                entity.Property(e => e.FileContent).IsRequired();

                entity.Property(e => e.FormName)
                    .IsRequired()
                    .HasMaxLength(1024);

                entity.Property(e => e.ModifiedDate).HasColumnType("smalldatetime");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(1024);
            });

            modelBuilder.Entity<Sysproperties>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("sysproperties");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.MinorId).HasColumnName("minor_id");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(128);

                entity.Property(e => e.Value).HasColumnType("sql_variant");
            });

            modelBuilder.Entity<Table1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Table_1");

                entity.Property(e => e.CtbCurncyTp).HasColumnName("CtbCurncy_Tp");

                entity.Property(e => e.InvGdsCu).HasColumnName("InvGds_Cu");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvUntCu).HasColumnName("InvUnt_Cu");

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.SalCustGrpSi).HasColumnName("SalCustGrp_Si");

                entity.Property(e => e.SalDclrPrcDUntPrc).HasColumnName("SalDclrPrcD_UntPrc");

                entity.Property(e => e.SalDclrPrcDUntPrcC).HasColumnName("SalDclrPrcD_UntPrcC");

                entity.Property(e => e.SalDclrPrcDUntPrcMax).HasColumnName("SalDclrPrcD_UntPrc_Max");

                entity.Property(e => e.SalDclrPrcDUntPrcMin).HasColumnName("SalDclrPrcD_UntPrc_Min");

                entity.Property(e => e.SalTypSi).HasColumnName("SalTyp_Si");
            });

            modelBuilder.Entity<Table11>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("table1");

                entity.Property(e => e.Date).HasColumnType("datetime");

                entity.Property(e => e.Input)
                    .HasColumnName("INPUT")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Itemid)
                    .HasColumnName("ITEMID")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Qty).HasColumnName("QTY");

                entity.Property(e => e.Rcid)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Tamirgah>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tamirgah$");

                entity.Property(e => e.CtbCurncyTp)
                    .HasColumnName("CtbCurncy_Tp")
                    .HasMaxLength(255);

                entity.Property(e => e.InvGdsCu).HasColumnName("InvGds_Cu");

                entity.Property(e => e.InvUntCu).HasColumnName("InvUnt_Cu");

                entity.Property(e => e.SalCustGrpSi).HasColumnName("SalCustGrp_Si");

                entity.Property(e => e.SalDclrPrcDUntPrc)
                    .HasColumnName("SalDclrPrcD_UntPrc")
                    .HasMaxLength(255);

                entity.Property(e => e.SalDclrPrcDUntPrcC).HasColumnName("SalDclrPrcD_UntPrcC");

                entity.Property(e => e.SalDclrPrcDUntPrcMax).HasColumnName("SalDclrPrcD_UntPrc_Max");

                entity.Property(e => e.SalDclrPrcDUntPrcMin).HasColumnName("SalDclrPrcD_UntPrc_Min");

                entity.Property(e => e.SalTypSi)
                    .HasColumnName("SalTyp_Si")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<TrsAcc>(entity =>
            {
                entity.HasKey(e => new { e.AccLmSi, e.AccLtSi, e.AccLcSi, e.AccLpSi });

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.TrsAccCreditMax)
                    .HasColumnName("TrsAcc_Credit_Max")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TrsAccCreditMin)
                    .HasColumnName("TrsAcc_Credit_Min")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TrsAccDebitMax)
                    .HasColumnName("TrsAcc_Debit_Max")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TrsAccDebitMin)
                    .HasColumnName("TrsAcc_Debit_Min")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.HasOne(d => d.AccLcSiNavigation)
                    .WithMany(p => p.TrsAcc)
                    .HasForeignKey(d => d.AccLcSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TrsAcc_CtbCost");

                entity.HasOne(d => d.AccLmSiNavigation)
                    .WithMany(p => p.TrsAcc)
                    .HasForeignKey(d => d.AccLmSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TrsAcc_CtbAccM");

                entity.HasOne(d => d.AccLpSiNavigation)
                    .WithMany(p => p.TrsAcc)
                    .HasForeignKey(d => d.AccLpSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TrsAcc_CtbProject");

                entity.HasOne(d => d.AccLtSiNavigation)
                    .WithMany(p => p.TrsAcc)
                    .HasForeignKey(d => d.AccLtSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TrsAcc_CtbAccT");
            });

            modelBuilder.Entity<TrsAccLtaccNo>(entity =>
            {
                entity.HasKey(e => e.TrsAccLtaccNoSi);

                entity.ToTable("TrsAccLTAccNo");

                entity.Property(e => e.TrsAccLtaccNoSi).HasColumnName("TrsAccLTAccNo_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.TrsAccLtaccNoAccountNo)
                    .HasColumnName("TrsAccLTAccNo_AccountNo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsAccLtaccNoBankName)
                    .HasColumnName("TrsAccLTAccNo_BankName")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrsAordr>(entity =>
            {
                entity.HasKey(e => e.TrsAordrSi);

                entity.ToTable("TrsAOrdr");

                entity.Property(e => e.TrsAordrSi).HasColumnName("TrsAOrdr_Si");

                entity.Property(e => e.StmpCdt)
                    .HasColumnName("StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.StmpCus)
                    .HasColumnName("StmpCUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.StmpMdt)
                    .HasColumnName("StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.StmpMus)
                    .HasColumnName("StmpMUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.TrsAordrDesc)
                    .HasColumnName("TrsAOrdr_Desc")
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.TrsAordrDt)
                    .HasColumnName("TrsAOrdr_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.TrsAordrPrc)
                    .HasColumnName("TrsAOrdr_Prc")
                    .HasColumnType("money");

                entity.Property(e => e.TrsAordrTypSi).HasColumnName("TrsAOrdrTyp_Si");

                entity.Property(e => e.TrsArqstSi).HasColumnName("TrsARqst_Si");

                entity.HasOne(d => d.TrsAordrTypSiNavigation)
                    .WithMany(p => p.TrsAordr)
                    .HasForeignKey(d => d.TrsAordrTypSi)
                    .HasConstraintName("FK_TrsAOrdr_TrsAOrdrTyp");
            });

            modelBuilder.Entity<TrsAordrPrc>(entity =>
            {
                entity.HasKey(e => new { e.TrsAordrSi, e.TrsCtypSi });

                entity.ToTable("TrsAOrdrPrc");

                entity.Property(e => e.TrsAordrSi).HasColumnName("TrsAOrdr_Si");

                entity.Property(e => e.TrsCtypSi).HasColumnName("TrsCTyp_Si");

                entity.Property(e => e.TrsAordrPrcPrc)
                    .HasColumnName("TrsAOrdrPrc_Prc")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<TrsAordrTyp>(entity =>
            {
                entity.HasKey(e => e.TrsAordrTypSi);

                entity.ToTable("TrsAOrdrTyp");

                entity.Property(e => e.TrsAordrTypSi)
                    .HasColumnName("TrsAOrdrTyp_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.TrsAordrTypTp)
                    .HasColumnName("TrsAOrdrTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrsArqst>(entity =>
            {
                entity.HasKey(e => e.TrsArqstSi);

                entity.ToTable("TrsARqst");

                entity.Property(e => e.TrsArqstSi).HasColumnName("TrsARqst_Si");

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.StmpCdt)
                    .HasColumnName("StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.StmpCus)
                    .HasColumnName("StmpCUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.StmpMdt)
                    .HasColumnName("StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.StmpMus)
                    .HasColumnName("StmpMUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.TrsArqstDesc)
                    .HasColumnName("TrsARqst_Desc")
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.TrsArqstDt)
                    .HasColumnName("TrsARqst_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.TrsArqstPrc)
                    .HasColumnName("TrsARqst_Prc")
                    .HasColumnType("money");

                entity.Property(e => e.TrsArqstSbj)
                    .HasColumnName("TrsARqst_Sbj")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsArqstStsSi).HasColumnName("TrsARqstSts_Si");

                entity.Property(e => e.TrsArqstTypSi).HasColumnName("TrsARqstTyp_Si");

                entity.Property(e => e.TrsAsgnSi).HasColumnName("TrsAsgn_Si");

                entity.HasOne(d => d.AccLcSiNavigation)
                    .WithMany(p => p.TrsArqst)
                    .HasForeignKey(d => d.AccLcSi)
                    .HasConstraintName("FK_TrsARqst_CtbCost");

                entity.HasOne(d => d.AccLmSiNavigation)
                    .WithMany(p => p.TrsArqst)
                    .HasForeignKey(d => d.AccLmSi)
                    .HasConstraintName("FK_TrsARqst_CtbAccM");

                entity.HasOne(d => d.AccLpSiNavigation)
                    .WithMany(p => p.TrsArqst)
                    .HasForeignKey(d => d.AccLpSi)
                    .HasConstraintName("FK_TrsARqst_CtbProject");

                entity.HasOne(d => d.AccLtSiNavigation)
                    .WithMany(p => p.TrsArqst)
                    .HasForeignKey(d => d.AccLtSi)
                    .HasConstraintName("FK_TrsARqst_CtbAccT");

                entity.HasOne(d => d.SiSystemNavigation)
                    .WithMany(p => p.TrsArqst)
                    .HasForeignKey(d => d.SiSystem)
                    .HasConstraintName("FK_TrsARqst_FaraSystems");

                entity.HasOne(d => d.TrsArqstStsSiNavigation)
                    .WithMany(p => p.TrsArqst)
                    .HasForeignKey(d => d.TrsArqstStsSi)
                    .HasConstraintName("FK_TrsARqst_TrsARqstSts");

                entity.HasOne(d => d.TrsArqstTypSiNavigation)
                    .WithMany(p => p.TrsArqst)
                    .HasForeignKey(d => d.TrsArqstTypSi)
                    .HasConstraintName("FK_TrsARqst_TrsARqstTyp");
            });

            modelBuilder.Entity<TrsArqstSts>(entity =>
            {
                entity.HasKey(e => e.TrsArqstStsSi);

                entity.ToTable("TrsARqstSts");

                entity.Property(e => e.TrsArqstStsSi)
                    .HasColumnName("TrsARqstSts_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.TrsArqstStsTp)
                    .HasColumnName("TrsARqstSts_Tp")
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrsArqstToAsgn>(entity =>
            {
                entity.HasKey(e => e.TrsArqstToAsgnSi);

                entity.ToTable("TrsARqstToAsgn");

                entity.Property(e => e.TrsArqstToAsgnSi).HasColumnName("TrsARqstToAsgn_Si");

                entity.Property(e => e.TrsArqstSi).HasColumnName("TrsARqst_Si");

                entity.Property(e => e.TrsArqstToAsgnPrc).HasColumnName("TrsARqstToAsgn_Prc");

                entity.Property(e => e.TrsArqstToAsgnTp)
                    .HasColumnName("TrsARqstToAsgn_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsAsgnSi).HasColumnName("TrsAsgn_Si");

                entity.HasOne(d => d.TrsArqstSiNavigation)
                    .WithMany(p => p.TrsArqstToAsgn)
                    .HasForeignKey(d => d.TrsArqstSi)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_TrsARqstToAsgn_TrsARqst");
            });

            modelBuilder.Entity<TrsArqstTyp>(entity =>
            {
                entity.HasKey(e => e.TrsArqstTypSi)
                    .HasName("PK_TrsRqstTyp");

                entity.ToTable("TrsARqstTyp");

                entity.Property(e => e.TrsArqstTypSi)
                    .HasColumnName("TrsARqstTyp_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.TrsArqstTypTp)
                    .IsRequired()
                    .HasColumnName("TrsARqstTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrsAsgn>(entity =>
            {
                entity.HasKey(e => e.TrsAsgnSi);

                entity.Property(e => e.TrsAsgnSi)
                    .HasColumnName("TrsAsgn_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.AccLcCnstr)
                    .HasColumnName("AccLC_Cnstr")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLpCnstr)
                    .HasColumnName("AccLP_Cnstr")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLtCnstr)
                    .HasColumnName("AccLT_Cnstr")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.TrsAsgnAct)
                    .IsRequired()
                    .HasColumnName("TrsAsgn_Act")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TrsAsgnGrpSi)
                    .HasColumnName("TrsAsgnGrp_Si")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.TrsAsgnTp)
                    .HasColumnName("TrsAsgn_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TrsAsgnUp).HasColumnName("TrsAsgn_UP");

                entity.Property(e => e.TrsAsgnUr).HasColumnName("TrsAsgn_UR");

                entity.HasOne(d => d.AccLcSiNavigation)
                    .WithMany(p => p.TrsAsgn)
                    .HasForeignKey(d => d.AccLcSi)
                    .HasConstraintName("FK_TrsAsgn_CtbCost");

                entity.HasOne(d => d.AccLmSiNavigation)
                    .WithMany(p => p.TrsAsgn)
                    .HasForeignKey(d => d.AccLmSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TrsAsgn_CtbAccM");

                entity.HasOne(d => d.AccLpSiNavigation)
                    .WithMany(p => p.TrsAsgn)
                    .HasForeignKey(d => d.AccLpSi)
                    .HasConstraintName("FK_TrsAsgn_CtbProject");

                entity.HasOne(d => d.AccLtSiNavigation)
                    .WithMany(p => p.TrsAsgn)
                    .HasForeignKey(d => d.AccLtSi)
                    .HasConstraintName("FK_TrsAsgn_CtbAccT");

                entity.HasOne(d => d.TrsAsgnGrpSiNavigation)
                    .WithMany(p => p.TrsAsgn)
                    .HasForeignKey(d => d.TrsAsgnGrpSi)
                    .HasConstraintName("FK_TrsAsgn_TrsAsgnGrp");
            });

            modelBuilder.Entity<TrsAsgnGrp>(entity =>
            {
                entity.HasKey(e => e.TrsAsgnGrpSi);

                entity.Property(e => e.TrsAsgnGrpSi)
                    .HasColumnName("TrsAsgnGrp_Si")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.TrsAsgnGrpTp)
                    .HasColumnName("TrsAsgnGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrsAsgnGrpUsr>(entity =>
            {
                entity.HasKey(e => new { e.TrsAsgnGrpSi, e.TrsUsrGrpSi });

                entity.Property(e => e.TrsAsgnGrpSi)
                    .HasColumnName("TrsAsgnGrp_Si")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.TrsUsrGrpSi).HasColumnName("TrsUsrGrp_Si");

                entity.HasOne(d => d.TrsAsgnGrpSiNavigation)
                    .WithMany(p => p.TrsAsgnGrpUsr)
                    .HasForeignKey(d => d.TrsAsgnGrpSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TrsAsgnGrpUsr_TrsAsgnGrp");

                entity.HasOne(d => d.TrsUsrGrpSiNavigation)
                    .WithMany(p => p.TrsAsgnGrpUsr)
                    .HasForeignKey(d => d.TrsUsrGrpSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TrsAsgnUsr_TrsUsrGrp");
            });

            modelBuilder.Entity<TrsAsgnuser>(entity =>
            {
                entity.HasKey(e => e.TrsAsgnuserSi);

                entity.Property(e => e.TrsAsgnuserSi).HasColumnName("TrsAsgnuser_Si");

                entity.Property(e => e.TrsAsgnSi).HasColumnName("TrsAsgn_Si");

                entity.Property(e => e.UserRec)
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrsBnkAcc>(entity =>
            {
                entity.HasKey(e => e.TrsBnkAccSi);

                entity.Property(e => e.TrsBnkAccSi).HasColumnName("TrsBnkAcc_Si");

                entity.Property(e => e.TrsBnkAccPrc).HasColumnName("TrsBnkAcc_Prc");

                entity.Property(e => e.TrsBnkAccPrcAcc).HasColumnName("TrsBnkAcc_PrcAcc");

                entity.Property(e => e.TrsRsrcSi).HasColumnName("TrsRsrc_Si");
            });

            modelBuilder.Entity<TrsBnkCnflt>(entity =>
            {
                entity.HasKey(e => e.TrsBnkCnfltSi);

                entity.HasIndex(e => new { e.TrsRsrcSi, e.TrsBnkCnfltDate, e.TrsBnkCnfltNo, e.TrsBnkCnfltDebit, e.TrsBnkCnfltCredit, e.TrsBnkCnfltRmndr })
                    .HasName("IX_TrsBnkCnflt")
                    .IsUnique();

                entity.Property(e => e.TrsBnkCnfltSi).HasColumnName("TrsBnkCnflt_Si");

                entity.Property(e => e.TrsBnkCnfltAccNo)
                    .HasColumnName("TrsBnkCnflt_AccNo")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TrsBnkCnfltCredit)
                    .HasColumnName("TrsBnkCnflt_Credit")
                    .HasColumnType("money");

                entity.Property(e => e.TrsBnkCnfltDate)
                    .HasColumnName("TrsBnkCnflt_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.TrsBnkCnfltDebit)
                    .HasColumnName("TrsBnkCnflt_Debit")
                    .HasColumnType("money");

                entity.Property(e => e.TrsBnkCnfltDesc)
                    .HasColumnName("TrsBnkCnflt_Desc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsBnkCnfltNo).HasColumnName("TrsBnkCnflt_No");

                entity.Property(e => e.TrsBnkCnfltRmndr)
                    .HasColumnName("TrsBnkCnflt_Rmndr")
                    .HasColumnType("money");

                entity.Property(e => e.TrsBnkCnfltTp)
                    .HasColumnName("TrsBnkCnflt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCSi).HasColumnName("TrsDcC_Si");

                entity.Property(e => e.TrsDcCSiImg).HasColumnName("TrsDcC_Si_Img");

                entity.Property(e => e.TrsRsrcSi).HasColumnName("TrsRsrc_Si");

                entity.HasOne(d => d.TrsRsrcSiNavigation)
                    .WithMany(p => p.TrsBnkCnflt)
                    .HasForeignKey(d => d.TrsRsrcSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TrsBnkCnflt_TrsRsrc");
            });

            modelBuilder.Entity<TrsCfg>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.AcAcurncy).HasColumnName("AC_ACurncy");

                entity.Property(e => e.AcAordr).HasColumnName("AC_AOrdr");

                entity.Property(e => e.AcAsgn)
                    .IsRequired()
                    .HasColumnName("AC_Asgn")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.AcRsrc)
                    .IsRequired()
                    .HasColumnName("AC_Rsrc")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.AcSts)
                    .IsRequired()
                    .HasColumnName("AC_Sts")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<TrsChqP>(entity =>
            {
                entity.HasKey(e => new { e.TrsChqPSi, e.AccLtSi });

                entity.Property(e => e.TrsChqPSi).HasColumnName("TrsChqP_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.EndCheck).HasDefaultValueSql("(0)");

                entity.Property(e => e.TrsChqPBgnNo).HasColumnName("TrsChqP_BgnNo");

                entity.Property(e => e.TrsChqPDt)
                    .HasColumnName("TrsChqP_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.TrsChqPEndNo).HasColumnName("TrsChqP_EndNo");

                entity.HasOne(d => d.AccLtSiNavigation)
                    .WithMany(p => p.TrsChqP)
                    .HasForeignKey(d => d.AccLtSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TrsChqP_CtbAccT");
            });

            modelBuilder.Entity<TrsChqPdesc>(entity =>
            {
                entity.HasKey(e => e.TrsChqPdescTp);

                entity.ToTable("TrsChqPDesc");

                entity.Property(e => e.TrsChqPdescTp)
                    .HasColumnName("TrsChqPDesc_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrsChqPuse>(entity =>
            {
                entity.HasKey(e => e.TrsChqPuseSi)
                    .HasName("PK_TrsChqPUse_1");

                entity.ToTable("TrsChqPUse");

                entity.Property(e => e.TrsChqPuseSi).HasColumnName("TrsChqPUse_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.TrsChqPSi).HasColumnName("TrsChqP_Si");

                entity.Property(e => e.TrsCtypSi).HasColumnName("TrsCTyp_Si");

                entity.Property(e => e.TrsDcCIno).HasColumnName("TrsDcC_INo");

                entity.Property(e => e.TrsDcCSi).HasColumnName("TrsDcC_Si");

                entity.Property(e => e.TrsDcTypSi).HasColumnName("TrsDcTyp_Si");
            });

            modelBuilder.Entity<TrsCtyp>(entity =>
            {
                entity.HasKey(e => e.TrsCtypSi);

                entity.ToTable("TrsCTyp");

                entity.Property(e => e.TrsCtypSi)
                    .HasColumnName("TrsCTyp_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.TrsCtypTp)
                    .HasColumnName("TrsCTyp_Tp")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TrsCtypTp2)
                    .HasColumnName("TrsCTyp_Tp2")
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrsDc>(entity =>
            {
                entity.HasKey(e => e.TrsDcSi);

                entity.HasIndex(e => e.TrsDcCu)
                    .HasName("IX_TrsDc_Cu");

                entity.HasIndex(e => e.TrsDcDt)
                    .HasName("IX_TrsDc_DT");

                entity.Property(e => e.TrsDcSi).HasColumnName("TrsDc_Si");

                entity.Property(e => e.CtbMnthSi).HasColumnName("CtbMnth_Si");

                entity.Property(e => e.StmpCdt)
                    .HasColumnName("StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.StmpCus)
                    .HasColumnName("StmpCUs")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.StmpMus)
                    .HasColumnName("StmpMUs")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCu).HasColumnName("TrsDc_Cu");

                entity.Property(e => e.TrsDcDt)
                    .HasColumnName("TrsDc_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.TrsDcGrpSi).HasColumnName("TrsDcGrp_Si");

                entity.Property(e => e.TrsDcShare).HasColumnName("TrsDc_Share");

                entity.Property(e => e.TrsDcStmpCdt)
                    .HasColumnName("TrsDc_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.TrsDcStmpMdt)
                    .HasColumnName("TrsDc_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.TrsDcStmpTime)
                    .HasColumnName("TrsDc_StmpTime")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcStmpTimeEdit)
                    .HasColumnName("TrsDc_StmpTimeEdit")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcTp)
                    .HasColumnName("TrsDc_Tp")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcTypSi).HasColumnName("TrsDcTyp_Si");

                entity.Property(e => e.TrsdcCu2).HasColumnName("trsdc_cu2");

                entity.HasOne(d => d.CtbMnthSiNavigation)
                    .WithMany(p => p.TrsDc)
                    .HasForeignKey(d => d.CtbMnthSi)
                    .HasConstraintName("FK_TrsDc_CtbMnth");

                entity.HasOne(d => d.TrsDcGrpSiNavigation)
                    .WithMany(p => p.TrsDc)
                    .HasForeignKey(d => d.TrsDcGrpSi)
                    .HasConstraintName("FK_TrsDc_TrsDcGrp");

                entity.HasOne(d => d.TrsDcTypSiNavigation)
                    .WithMany(p => p.TrsDc)
                    .HasForeignKey(d => d.TrsDcTypSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TrsDc_TrsDcTyp");
            });

            modelBuilder.Entity<TrsDcA>(entity =>
            {
                entity.HasKey(e => e.TrsDcASi);

                entity.HasIndex(e => e.AccLmSi)
                    .HasName("IX_AccLM_Si");

                entity.HasIndex(e => e.AccLtSi)
                    .HasName("IX_AccLT_Si");

                entity.HasIndex(e => e.TrsAsgnSi)
                    .HasName("IX_TrsAsgn_Si");

                entity.HasIndex(e => e.TrsDcCSi)
                    .HasName("IX_TrsDcC_Si");

                entity.HasIndex(e => e.TrsDcSSi)
                    .HasName("IX_TrsDcS_Si");

                entity.HasIndex(e => e.TrsRsrcSi)
                    .HasName("IX_TrsRsrc_Si");

                entity.Property(e => e.TrsDcASi).HasColumnName("TrsDcA_Si");

                entity.Property(e => e.AccDocHSi).HasColumnName("AccDocH_Si");

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.SalIntrmdSi).HasColumnName("SalIntrmd_Si");

                entity.Property(e => e.SalRespSi).HasColumnName("SalResp_Si");

                entity.Property(e => e.SalRespTp)
                    .HasColumnName("SalResp_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.TrsAsgnSi).HasColumnName("TrsAsgn_Si");

                entity.Property(e => e.TrsDcAAccDesc)
                    .HasColumnName("TrsDcA_AccDesc")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcACredit)
                    .HasColumnName("TrsDcA_Credit")
                    .HasColumnType("money");

                entity.Property(e => e.TrsDcACreditC).HasColumnName("TrsDcA_CreditC");

                entity.Property(e => e.TrsDcACuDoc)
                    .HasColumnName("TrsDcA_CuDoc")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcADebit)
                    .HasColumnName("TrsDcA_Debit")
                    .HasColumnType("money");

                entity.Property(e => e.TrsDcADebitC).HasColumnName("TrsDcA_DebitC");

                entity.Property(e => e.TrsDcAFirstCu).HasColumnName("TrsDcA_FirstCu");

                entity.Property(e => e.TrsDcAIntrmd)
                    .HasColumnName("TrsDcA_Intrmd")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcARfrnc)
                    .HasColumnName("TrsDcA_Rfrnc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcATp)
                    .HasColumnName("TrsDcA_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCSi).HasColumnName("TrsDcC_Si");

                entity.Property(e => e.TrsDcSSi).HasColumnName("TrsDcS_Si");

                entity.Property(e => e.TrsRsrcSi).HasColumnName("TrsRsrc_Si");

                entity.Property(e => e.TrsStsSi).HasColumnName("TrsSts_Si");

                entity.HasOne(d => d.AccLcSiNavigation)
                    .WithMany(p => p.TrsDcA)
                    .HasForeignKey(d => d.AccLcSi)
                    .HasConstraintName("FK_TrsDcA_CtbCost");

                entity.HasOne(d => d.AccLmSiNavigation)
                    .WithMany(p => p.TrsDcA)
                    .HasForeignKey(d => d.AccLmSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TrsDcA_CtbAccM");

                entity.HasOne(d => d.AccLpSiNavigation)
                    .WithMany(p => p.TrsDcA)
                    .HasForeignKey(d => d.AccLpSi)
                    .HasConstraintName("FK_TrsDcA_CtbProject");

                entity.HasOne(d => d.AccLtSiNavigation)
                    .WithMany(p => p.TrsDcA)
                    .HasForeignKey(d => d.AccLtSi)
                    .HasConstraintName("FK_TrsDcA_CtbAccT");

                entity.HasOne(d => d.TrsAsgnSiNavigation)
                    .WithMany(p => p.TrsDcA)
                    .HasForeignKey(d => d.TrsAsgnSi)
                    .HasConstraintName("FK_TrsDcA_TrsAsgn");

                entity.HasOne(d => d.TrsDcSSiNavigation)
                    .WithMany(p => p.TrsDcA)
                    .HasForeignKey(d => d.TrsDcSSi)
                    .HasConstraintName("FK_TrsDcA_TrsDcS");

                entity.HasOne(d => d.TrsRsrcSiNavigation)
                    .WithMany(p => p.TrsDcA)
                    .HasForeignKey(d => d.TrsRsrcSi)
                    .HasConstraintName("FK_TrsDcA_TrsRsrc");
            });

            modelBuilder.Entity<TrsDcAinvc>(entity =>
            {
                entity.HasKey(e => e.TrsDcAinvcSi);

                entity.ToTable("TrsDcAInvc");

                entity.Property(e => e.TrsDcAinvcSi).HasColumnName("TrsDcAInvc_Si");

                entity.Property(e => e.RemainPrc).HasColumnType("money");

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHCu).HasColumnName("SalInvcH_Cu");

                entity.Property(e => e.SalInvcHDs)
                    .HasColumnName("SalInvcH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHPrcTotal)
                    .HasColumnName("SalInvcH_Prc_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcHSi).HasColumnName("SalInvcH_Si");

                entity.Property(e => e.SalPrc).HasColumnName("Sal_Prc");

                entity.Property(e => e.SalTypTp)
                    .HasColumnName("SalTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcASi).HasColumnName("TrsDcA_Si");

                entity.Property(e => e.TrsPrice)
                    .HasColumnName("Trs_Price")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<TrsDcApreInvc>(entity =>
            {
                entity.HasKey(e => e.TrsDcApreInvcSi);

                entity.ToTable("TrsDcAPreInvc");

                entity.Property(e => e.TrsDcApreInvcSi).HasColumnName("TrsDcAPreInvc_Si");

                entity.Property(e => e.SalPreInvcHSi).HasColumnName("SalPreInvcH_Si");

                entity.Property(e => e.TrsDcASi).HasColumnName("TrsDcA_Si");
            });

            modelBuilder.Entity<TrsDcAttach>(entity =>
            {
                entity.HasKey(e => e.TrsDcAttachSi);

                entity.Property(e => e.TrsDcAttachSi).HasColumnName("TrsDcAttach_Si");

                entity.Property(e => e.TrsDcAttachDs)
                    .HasColumnName("TrsDcAttach_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcAttachFile)
                    .HasColumnName("TrsDcAttach_File")
                    .HasColumnType("image");

                entity.Property(e => e.TrsDcAttachFileName)
                    .HasColumnName("TrsDcAttach_FileName")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcAttachTp)
                    .HasColumnName("TrsDcAttach_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcSi).HasColumnName("TrsDc_Si");

                entity.HasOne(d => d.TrsDcSiNavigation)
                    .WithMany(p => p.TrsDcAttach)
                    .HasForeignKey(d => d.TrsDcSi)
                    .HasConstraintName("FK_TrsDcAttach_TrsDc");
            });

            modelBuilder.Entity<TrsDcC>(entity =>
            {
                entity.HasKey(e => e.TrsDcCSi);

                entity.HasIndex(e => e.TrsDcCDt)
                    .HasName("IX_TrsDcC_DT");

                entity.HasIndex(e => e.TrsDcSi)
                    .HasName("IX_TrsDc_Si");

                entity.HasIndex(e => e.TrsRsrcSi)
                    .HasName("IX_TrsRsrc_Si");

                entity.HasIndex(e => new { e.TrsCtypSi, e.TrsStsSi })
                    .HasName("IX_TrsCTypSts_Si");

                entity.Property(e => e.TrsDcCSi).HasColumnName("TrsDcC_Si");

                entity.Property(e => e.AccDocHSi).HasColumnName("AccDocH_Si");

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.CtbMnthSi).HasColumnName("CtbMnth_Si");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.TrsAordrSi).HasColumnName("TrsAOrdr_Si");

                entity.Property(e => e.TrsChqPSi).HasColumnName("TrsChqP_Si");

                entity.Property(e => e.TrsCtypSi).HasColumnName("TrsCTyp_Si");

                entity.Property(e => e.TrsDcCAccDesc)
                    .HasColumnName("TrsDcC_AccDesc")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCBrnchNo)
                    .HasColumnName("TrsDcC_BrnchNo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCCredit)
                    .HasColumnName("TrsDcC_Credit")
                    .HasColumnType("money");

                entity.Property(e => e.TrsDcCCreditC).HasColumnName("TrsDcC_CreditC");

                entity.Property(e => e.TrsDcCCuDoc)
                    .HasColumnName("TrsDcC_CuDoc")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCDebit)
                    .HasColumnName("TrsDcC_Debit")
                    .HasColumnType("money");

                entity.Property(e => e.TrsDcCDebitC).HasColumnName("TrsDcC_DebitC");

                entity.Property(e => e.TrsDcCDt)
                    .HasColumnName("TrsDcC_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.TrsDcCDt2)
                    .HasColumnName("TrsDcC_DT2")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.TrsDcCForMoney)
                    .HasColumnName("TrsDcC_ForMoney")
                    .HasMaxLength(4000);

                entity.Property(e => e.TrsDcCIaccNo)
                    .HasColumnName("TrsDcC_IAccNo")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCIbnk)
                    .HasColumnName("TrsDcC_IBnk")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCIbrnch)
                    .HasColumnName("TrsDcC_IBrnch")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCIno).HasColumnName("TrsDcC_INo");

                entity.Property(e => e.TrsDcCInoh)
                    .HasColumnName("TrsDcC_INOH")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCInon)
                    .HasColumnName("TrsDcC_INON")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCRfrnc)
                    .HasColumnName("TrsDcC_Rfrnc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCTp)
                    .HasColumnName("TrsDcC_Tp")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcSi).HasColumnName("TrsDc_Si");

                entity.Property(e => e.TrsDccFirstCu).HasColumnName("TrsDcc_FirstCu");

                entity.Property(e => e.TrsDccIntrmd)
                    .HasColumnName("TrsDcc_Intrmd")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsRsrcSi).HasColumnName("TrsRsrc_Si");

                entity.Property(e => e.TrsStsSi).HasColumnName("TrsSts_Si");

                entity.HasOne(d => d.TrsAordrSiNavigation)
                    .WithMany(p => p.TrsDcC)
                    .HasForeignKey(d => d.TrsAordrSi)
                    .HasConstraintName("FK_TrsDcC_TrsAOrdr");

                entity.HasOne(d => d.TrsCtypSiNavigation)
                    .WithMany(p => p.TrsDcC)
                    .HasForeignKey(d => d.TrsCtypSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TrsDcC_TrsCTyp");

                entity.HasOne(d => d.TrsDcSiNavigation)
                    .WithMany(p => p.TrsDcC)
                    .HasForeignKey(d => d.TrsDcSi)
                    .HasConstraintName("FK_TrsDcC_TrsDc");

                entity.HasOne(d => d.TrsRsrcSiNavigation)
                    .WithMany(p => p.TrsDcC)
                    .HasForeignKey(d => d.TrsRsrcSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TrsDcC_TrsRsrc");
            });

            modelBuilder.Entity<TrsDcCattach>(entity =>
            {
                entity.HasKey(e => e.TrsDcCattachSi);

                entity.ToTable("TrsDcCAttach");

                entity.Property(e => e.TrsDcCattachSi).HasColumnName("TrsDcCAttach_Si");

                entity.Property(e => e.TrsDcCSi).HasColumnName("TrsDcC_Si");

                entity.Property(e => e.TrsDcCattachDs)
                    .HasColumnName("TrsDcCAttach_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCattachFile)
                    .HasColumnName("TrsDcCAttach_File")
                    .HasColumnType("image");

                entity.Property(e => e.TrsDcCattachFileName)
                    .HasColumnName("TrsDcCAttach_FileName")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCattachTp)
                    .HasColumnName("TrsDcCAttach_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrsDcGrp>(entity =>
            {
                entity.HasKey(e => e.TrsDcGrpSi);

                entity.Property(e => e.TrsDcGrpSi)
                    .HasColumnName("TrsDcGrp_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.TrsDcGrpTp)
                    .HasColumnName("TrsDcGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrsDcS>(entity =>
            {
                entity.HasKey(e => e.TrsDcSSi);

                entity.Property(e => e.TrsDcSSi).HasColumnName("TrsDcS_Si");

                entity.Property(e => e.CtbMnthSi).HasColumnName("CtbMnth_Si");

                entity.Property(e => e.TrsDcCSi).HasColumnName("TrsDcC_Si");

                entity.Property(e => e.TrsDcSDt)
                    .HasColumnName("TrsDcS_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.TrsDcSFirstCu).HasColumnName("TrsDcS_FirstCu");

                entity.Property(e => e.TrsDcSTm)
                    .IsRequired()
                    .HasColumnName("TrsDcS_TM")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasDefaultValueSql("((CONVERT([varchar](2),datepart(hour,getdate()),(0))+':')+CONVERT([varchar](2),datepart(minute,getdate()),(0)))");

                entity.Property(e => e.TrsStsSi).HasColumnName("TrsSts_Si");

                entity.HasOne(d => d.CtbMnthSiNavigation)
                    .WithMany(p => p.TrsDcS)
                    .HasForeignKey(d => d.CtbMnthSi)
                    .HasConstraintName("FK_TrsDcS_CtbMnth");
            });

            modelBuilder.Entity<TrsDcTyp>(entity =>
            {
                entity.HasKey(e => e.TrsDcTypSi);

                entity.Property(e => e.TrsDcTypSi)
                    .HasColumnName("TrsDcTyp_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.TrsDcTypTp)
                    .HasColumnName("TrsDcTyp_Tp")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcTypTp2)
                    .HasColumnName("TrsDcTyp_Tp2")
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrsDocLock>(entity =>
            {
                entity.HasKey(e => e.TrsDocLockSi);

                entity.Property(e => e.TrsDocLockSi).HasColumnName("TrsDocLock_Si");

                entity.Property(e => e.TrsDocLockActive).HasColumnName("TrsDocLock_Active");

                entity.Property(e => e.TrsDocLockFr)
                    .HasColumnName("TrsDocLock_Fr")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.TrsDocLockTo)
                    .HasColumnName("TrsDocLock_To")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.TrsDocLockTx)
                    .HasColumnName("TrsDocLock_Tx")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrsDocVchr>(entity =>
            {
                entity.HasKey(e => e.TrsDocVchrSi);

                entity.Property(e => e.TrsDocVchrSi).HasColumnName("TrsDocVchr_Si");

                entity.Property(e => e.AccDocHSi).HasColumnName("AccDocH_Si");

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.TrsDcSi).HasColumnName("TrsDc_Si");

                entity.Property(e => e.TrsDccSi).HasColumnName("TrsDcc_Si");

                entity.Property(e => e.TrsDocVchrCredit)
                    .HasColumnName("TrsDocVchr_Credit")
                    .HasColumnType("money");

                entity.Property(e => e.TrsDocVchrCreditC)
                    .HasColumnName("TrsDocVchr_CreditC")
                    .HasColumnType("money");

                entity.Property(e => e.TrsDocVchrDebit)
                    .HasColumnName("TrsDocVchr_Debit")
                    .HasColumnType("money");

                entity.Property(e => e.TrsDocVchrDebitC)
                    .HasColumnName("TrsDocVchr_DebitC")
                    .HasColumnType("money");

                entity.Property(e => e.TrsDocVchrTp)
                    .HasColumnName("TrsDocVchr_Tp")
                    .HasMaxLength(4000);

                entity.HasOne(d => d.TrsDcSiNavigation)
                    .WithMany(p => p.TrsDocVchr)
                    .HasForeignKey(d => d.TrsDcSi)
                    .HasConstraintName("FK_TrsDocVchr_TrsDc");
            });

            modelBuilder.Entity<TrsDocVchrH>(entity =>
            {
                entity.HasKey(e => e.TrsDocVchrHSi);

                entity.Property(e => e.TrsDocVchrHSi).HasColumnName("TrsDocVchrH_Si");

                entity.Property(e => e.AccDocHSi).HasColumnName("AccDocH_Si");

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.TrsDcSi).HasColumnName("TrsDc_Si");

                entity.Property(e => e.TrsDocVchrHCredit)
                    .HasColumnName("TrsDocVchrH_Credit")
                    .HasColumnType("money");

                entity.Property(e => e.TrsDocVchrHCreditC)
                    .HasColumnName("TrsDocVchrH_CreditC")
                    .HasColumnType("money");

                entity.Property(e => e.TrsDocVchrHDebit)
                    .HasColumnName("TrsDocVchrH_Debit")
                    .HasColumnType("money");

                entity.Property(e => e.TrsDocVchrHDebitC)
                    .HasColumnName("TrsDocVchrH_DebitC")
                    .HasColumnType("money");

                entity.Property(e => e.TrsDocVchrHTp)
                    .HasColumnName("TrsDocVchrH_Tp")
                    .HasMaxLength(4000);

                entity.HasOne(d => d.TrsDcSiNavigation)
                    .WithMany(p => p.TrsDocVchrH)
                    .HasForeignKey(d => d.TrsDcSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TrsDocVchrH_TrsDc");
            });

            modelBuilder.Entity<TrsDscr>(entity =>
            {
                entity.HasKey(e => e.TrsDscrSi);

                entity.Property(e => e.TrsDscrSi).HasColumnName("TrsDscr_Si");

                entity.Property(e => e.TrsDscrTp)
                    .HasColumnName("TrsDscr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDscrTp2)
                    .HasColumnName("TrsDscr_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrsGrpUser>(entity =>
            {
                entity.HasKey(e => e.TrsGrpUserSi);

                entity.Property(e => e.TrsGrpUserSi).HasColumnName("TrsGrpUser_Si");

                entity.Property(e => e.TrsGrpUserCu)
                    .HasColumnName("TrsGrpUser_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsGrpUserManger).HasColumnName("TrsGrpUser_Manger");

                entity.Property(e => e.TrsGrpUserTp)
                    .HasColumnName("TrsGrpUser_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrsGrpUserToUser>(entity =>
            {
                entity.HasKey(e => e.TrsGrpUserToUserSi);

                entity.Property(e => e.TrsGrpUserToUserSi).HasColumnName("TrsGrpUserToUser_Si");

                entity.Property(e => e.TrsGrpUserSi).HasColumnName("TrsGrpUser_Si");

                entity.Property(e => e.UserRec)
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrsRsrc>(entity =>
            {
                entity.HasKey(e => e.TrsRsrcSi);

                entity.HasIndex(e => new { e.AccLmSi, e.AccLtSi, e.AccLpSi, e.AccLcSi })
                    .HasName("IX_TrsRsrc")
                    .IsUnique();

                entity.Property(e => e.TrsRsrcSi)
                    .HasColumnName("TrsRsrc_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLmSi2).HasColumnName("AccLM_Si_2");

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.TrsRsrcAct)
                    .IsRequired()
                    .HasColumnName("TrsRsrc_Act")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.TrsRsrcAddres)
                    .HasColumnName("TrsRsrc_Addres")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.TrsRsrcBaccNo)
                    .HasColumnName("TrsRsrc_BAccNo")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsRsrcBbrnch)
                    .HasColumnName("TrsRsrc_BBrnch")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsRsrcBowner)
                    .HasColumnName("TrsRsrc_BOwner")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsRsrcCredit)
                    .HasColumnName("TrsRsrc_Credit")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TrsRsrcDebit)
                    .HasColumnName("TrsRsrc_Debit")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TrsRsrcIno)
                    .HasColumnName("TrsRsrc_INO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsRsrcManger)
                    .HasColumnName("TrsRsrc_Manger")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsRsrcMax)
                    .HasColumnName("TrsRsrc_Max")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TrsRsrcMaxPay)
                    .HasColumnName("TrsRsrc_MaxPay")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TrsRsrcMin)
                    .HasColumnName("TrsRsrc_Min")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TrsRsrcPerson)
                    .HasColumnName("TrsRsrc_Person")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsRsrcPrc)
                    .HasColumnName("TrsRsrc_Prc")
                    .HasColumnType("money")
                    .HasComputedColumnSql("(isnull(([TrsRsrc_Debit] - [TrsRsrc_Credit]),0))");

                entity.Property(e => e.TrsRsrcTp)
                    .IsRequired()
                    .HasColumnName("TrsRsrc_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsRsrcTypSi).HasColumnName("TrsRsrcTyp_Si");

                entity.HasOne(d => d.AccLmSiNavigation)
                    .WithMany(p => p.TrsRsrcAccLmSiNavigation)
                    .HasForeignKey(d => d.AccLmSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TrsRsrc_CtbAccM");

                entity.HasOne(d => d.AccLmSi2Navigation)
                    .WithMany(p => p.TrsRsrcAccLmSi2Navigation)
                    .HasForeignKey(d => d.AccLmSi2)
                    .HasConstraintName("FK_TrsRsrc_CtbAccM1");

                entity.HasOne(d => d.AccLtSiNavigation)
                    .WithMany(p => p.TrsRsrc)
                    .HasForeignKey(d => d.AccLtSi)
                    .HasConstraintName("FK_TrsRsrc_CtbAccT");

                entity.HasOne(d => d.CtbCurncySiNavigation)
                    .WithMany(p => p.TrsRsrc)
                    .HasForeignKey(d => d.CtbCurncySi)
                    .HasConstraintName("FK_TrsRsrc_CtbCurncy");

                entity.HasOne(d => d.TrsRsrcTypSiNavigation)
                    .WithMany(p => p.TrsRsrc)
                    .HasForeignKey(d => d.TrsRsrcTypSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TrsRsrc_TrsRsrcTyp");
            });

            modelBuilder.Entity<TrsRsrcTyp>(entity =>
            {
                entity.HasKey(e => e.TrsRsrcTypSi);

                entity.Property(e => e.TrsRsrcTypSi)
                    .HasColumnName("TrsRsrcTyp_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.TrsRsrcTypTp)
                    .HasColumnName("TrsRsrcTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrsRsrcUsr>(entity =>
            {
                entity.HasKey(e => new { e.TrsRsrcSi, e.TrsUsrGrpSi });

                entity.Property(e => e.TrsRsrcSi).HasColumnName("TrsRsrc_Si");

                entity.Property(e => e.TrsUsrGrpSi).HasColumnName("TrsUsrGrp_Si");

                entity.HasOne(d => d.TrsRsrcSiNavigation)
                    .WithMany(p => p.TrsRsrcUsr)
                    .HasForeignKey(d => d.TrsRsrcSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TrsRsrcUsr_TrsRsrc");

                entity.HasOne(d => d.TrsUsrGrpSiNavigation)
                    .WithMany(p => p.TrsRsrcUsr)
                    .HasForeignKey(d => d.TrsUsrGrpSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TrsRsrcUsr_TrsUsrGrp");
            });

            modelBuilder.Entity<TrsRsrcuser>(entity =>
            {
                entity.HasKey(e => e.TrsRsrcuserSi)
                    .HasName("PK_TrsRsrcuserr");

                entity.Property(e => e.TrsRsrcuserSi).HasColumnName("TrsRsrcuser_Si");

                entity.Property(e => e.TrsRsrcSi).HasColumnName("TrsRsrc_Si");

                entity.Property(e => e.UserRec)
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrsSrvDcAinvc>(entity =>
            {
                entity.HasKey(e => e.TrsSrvDcAinvcSi);

                entity.ToTable("TrsSrvDcAInvc");

                entity.Property(e => e.TrsSrvDcAinvcSi).HasColumnName("TrsSrvDcAInvc_Si");

                entity.Property(e => e.RemainPrc).HasColumnType("money");

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcSrvHCu).HasColumnName("SalInvcSrvH_Cu");

                entity.Property(e => e.SalInvcSrvHDs)
                    .HasColumnName("SalInvcSrvH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcSrvHPrcTotal)
                    .HasColumnName("SalInvcSrvH_Prc_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcSrvHSi).HasColumnName("SalInvcSrvH_Si");

                entity.Property(e => e.SalPrc).HasColumnName("Sal_Prc");

                entity.Property(e => e.SalTypTp)
                    .HasColumnName("SalTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcASi).HasColumnName("TrsDcA_Si");

                entity.Property(e => e.TrsPrice)
                    .HasColumnName("Trs_Price")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<TrsSts>(entity =>
            {
                entity.HasKey(e => new { e.TrsDcTypSi, e.TrsCtypSi, e.TrsStsSi });

                entity.Property(e => e.TrsDcTypSi).HasColumnName("TrsDcTyp_Si");

                entity.Property(e => e.TrsCtypSi).HasColumnName("TrsCTyp_Si");

                entity.Property(e => e.TrsStsSi).HasColumnName("TrsSts_Si");

                entity.Property(e => e.TrsStsAccBalance).HasColumnName("TrsSts_AccBalance");

                entity.Property(e => e.TrsStsAccDocDesc1)
                    .HasColumnName("TrsSts_AccDocDesc1")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsAccDocDesc2)
                    .HasColumnName("TrsSts_AccDocDesc2")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsClr).HasColumnName("TrsSts_Clr");

                entity.Property(e => e.TrsStsFnSiCredit).HasColumnName("TrsStsFn_Si_Credit");

                entity.Property(e => e.TrsStsFnSiDebit).HasColumnName("TrsStsFn_Si_Debit");

                entity.Property(e => e.TrsStsIdtFld)
                    .HasColumnName("TrsSts_IDT_Fld")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsInoFld)
                    .HasColumnName("TrsSts_INo_Fld")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsIqtyFld)
                    .HasColumnName("TrsSts_IQty_Fld")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsIrfrncFld)
                    .HasColumnName("TrsSts_IRfrnc_Fld")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsNsts)
                    .HasColumnName("TrsSts_NSts")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsNstsTp)
                    .HasColumnName("TrsSts_NSts_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsTp)
                    .HasColumnName("TrsSts_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsTp2)
                    .HasColumnName("TrsSts_Tp2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsTypSi).HasColumnName("TrsStsTyp_Si");

                entity.HasOne(d => d.TrsCtypSiNavigation)
                    .WithMany(p => p.TrsSts)
                    .HasForeignKey(d => d.TrsCtypSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TrsSts_TrsCTyp");

                entity.HasOne(d => d.TrsDcTypSiNavigation)
                    .WithMany(p => p.TrsSts)
                    .HasForeignKey(d => d.TrsDcTypSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TrsSts_TrsDcTyp");

                entity.HasOne(d => d.TrsStsFnSiCreditNavigation)
                    .WithMany(p => p.TrsStsTrsStsFnSiCreditNavigation)
                    .HasForeignKey(d => d.TrsStsFnSiCredit)
                    .HasConstraintName("FK_TrsSts_TrsStsFn1");

                entity.HasOne(d => d.TrsStsFnSiDebitNavigation)
                    .WithMany(p => p.TrsStsTrsStsFnSiDebitNavigation)
                    .HasForeignKey(d => d.TrsStsFnSiDebit)
                    .HasConstraintName("FK_TrsSts_TrsStsFn");
            });

            modelBuilder.Entity<TrsStsAdesc>(entity =>
            {
                entity.HasKey(e => e.TrsStsAdescSi);

                entity.ToTable("TrsStsADesc");

                entity.Property(e => e.TrsStsAdescSi)
                    .HasColumnName("TrsStsADesc_Si")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsAdescDesc)
                    .HasColumnName("TrsStsADesc_Desc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsAdescFieldName)
                    .HasColumnName("TrsStsADesc_FieldName")
                    .HasMaxLength(150)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrsStsFn>(entity =>
            {
                entity.HasKey(e => e.TrsStsFnSi);

                entity.Property(e => e.TrsStsFnSi).HasColumnName("TrsStsFn_Si");

                entity.Property(e => e.TrsStsFnFn)
                    .HasColumnName("TrsStsFn_Fn")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsFnTp)
                    .HasColumnName("TrsStsFn_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrsStsNx>(entity =>
            {
                entity.HasKey(e => new { e.TrsDcTypSi, e.TrsCtypSi, e.TrsStsSi, e.TrsStsSiNx });

                entity.Property(e => e.TrsDcTypSi).HasColumnName("TrsDcTyp_Si");

                entity.Property(e => e.TrsCtypSi).HasColumnName("TrsCTyp_Si");

                entity.Property(e => e.TrsStsSi).HasColumnName("TrsSts_Si");

                entity.Property(e => e.TrsStsSiNx).HasColumnName("TrsSts_Si_Nx");

                entity.HasOne(d => d.Trs)
                    .WithMany(p => p.TrsStsNxTrs)
                    .HasForeignKey(d => new { d.TrsDcTypSi, d.TrsCtypSi, d.TrsStsSi })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TrsStsNx_TrsSts");

                entity.HasOne(d => d.TrsNavigation)
                    .WithMany(p => p.TrsStsNxTrsNavigation)
                    .HasForeignKey(d => new { d.TrsDcTypSi, d.TrsCtypSi, d.TrsStsSiNx })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TrsStsNx_TrsSts1");
            });

            modelBuilder.Entity<TrsStsTyp>(entity =>
            {
                entity.HasKey(e => e.TrsStsTypSi);

                entity.Property(e => e.TrsStsTypSi)
                    .HasColumnName("TrsStsTyp_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.TrsStsTypTp)
                    .HasColumnName("TrsStsTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrsStsTypUsr>(entity =>
            {
                entity.HasKey(e => new { e.TrsStsTypSi, e.TrsUsrGrpSi });

                entity.Property(e => e.TrsStsTypSi).HasColumnName("TrsStsTyp_Si");

                entity.Property(e => e.TrsUsrGrpSi).HasColumnName("TrsUsrGrp_Si");

                entity.HasOne(d => d.TrsStsTypSiNavigation)
                    .WithMany(p => p.TrsStsTypUsr)
                    .HasForeignKey(d => d.TrsStsTypSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TrsStsTypUsr_TrsStsTyp");

                entity.HasOne(d => d.TrsUsrGrpSiNavigation)
                    .WithMany(p => p.TrsStsTypUsr)
                    .HasForeignKey(d => d.TrsUsrGrpSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TrsStsTypUsr_TrsUsrGrp");
            });

            modelBuilder.Entity<TrsUsr>(entity =>
            {
                entity.HasKey(e => e.TrsUsrSi);

                entity.Property(e => e.TrsUsrSi)
                    .HasColumnName("TrsUsr_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.LoginName)
                    .IsRequired()
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.TrsUsrTp)
                    .HasColumnName("TrsUsr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrsUsrGrp>(entity =>
            {
                entity.HasKey(e => e.TrsUsrGrpSi);

                entity.Property(e => e.TrsUsrGrpSi)
                    .HasColumnName("TrsUsrGrp_Si")
                    .ValueGeneratedNever();

                entity.Property(e => e.TrsUsrGrpTp)
                    .HasColumnName("TrsUsrGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrsUsrToGrp>(entity =>
            {
                entity.HasKey(e => new { e.TrsUsrGrpSi, e.TrsUsrSi });

                entity.Property(e => e.TrsUsrGrpSi).HasColumnName("TrsUsrGrp_Si");

                entity.Property(e => e.TrsUsrSi).HasColumnName("TrsUsr_Si");

                entity.HasOne(d => d.TrsUsrGrpSiNavigation)
                    .WithMany(p => p.TrsUsrToGrp)
                    .HasForeignKey(d => d.TrsUsrGrpSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TrsUsrToGrp_TrsUsrGrp");

                entity.HasOne(d => d.TrsUsrSiNavigation)
                    .WithMany(p => p.TrsUsrToGrp)
                    .HasForeignKey(d => d.TrsUsrSi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TrsUsrToGrp_TrsUsr");
            });

            modelBuilder.Entity<TrsVchrD>(entity =>
            {
                entity.Property(e => e.TrsVchrDId).HasColumnName("TrsVchrD_Id");

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.TrsVchrDCredit)
                    .HasColumnName("TrsVchrD_Credit")
                    .HasColumnType("money");

                entity.Property(e => e.TrsVchrDDate)
                    .HasColumnName("TrsVchrD_Date")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.TrsVchrDDebit)
                    .HasColumnName("TrsVchrD_Debit")
                    .HasColumnType("money");

                entity.Property(e => e.TrsVchrDTx)
                    .HasColumnName("TrsVchrD_Tx")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.TrsVchrHId).HasColumnName("TrsVchrH_Id");

                entity.HasOne(d => d.AccLcSiNavigation)
                    .WithMany(p => p.TrsVchrD)
                    .HasForeignKey(d => d.AccLcSi)
                    .HasConstraintName("FK_TrsVchrD_CtbCost");

                entity.HasOne(d => d.AccLmSiNavigation)
                    .WithMany(p => p.TrsVchrD)
                    .HasForeignKey(d => d.AccLmSi)
                    .HasConstraintName("FK_TrsVchrD_CtbAccM");

                entity.HasOne(d => d.AccLpSiNavigation)
                    .WithMany(p => p.TrsVchrD)
                    .HasForeignKey(d => d.AccLpSi)
                    .HasConstraintName("FK_TrsVchrD_CtbProject");

                entity.HasOne(d => d.AccLtSiNavigation)
                    .WithMany(p => p.TrsVchrD)
                    .HasForeignKey(d => d.AccLtSi)
                    .HasConstraintName("FK_TrsVchrD_CtbAccT");

                entity.HasOne(d => d.TrsVchrH)
                    .WithMany(p => p.TrsVchrD)
                    .HasForeignKey(d => d.TrsVchrHId)
                    .HasConstraintName("FK_TrsVchrD_TrsVchrH");
            });

            modelBuilder.Entity<TrsVchrH>(entity =>
            {
                entity.Property(e => e.TrsVchrHId)
                    .HasColumnName("TrsVchrH_Id")
                    .ValueGeneratedNever();

                entity.Property(e => e.AccDocHSi).HasColumnName("AccDocH_Si");

                entity.Property(e => e.TrsVchrHDate)
                    .HasColumnName("TrsVchrH_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.TrsVchrHDateFrom)
                    .HasColumnName("TrsVchrH_DateFrom")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.TrsVchrHDateUntil)
                    .HasColumnName("TrsVchrH_DateUntil")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.TrsVchrHSent).HasColumnName("TrsVchrH_Sent");

                entity.Property(e => e.TrsVchrHTx)
                    .HasColumnName("TrsVchrH_Tx")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.HasOne(d => d.AccDocHSiNavigation)
                    .WithMany(p => p.TrsVchrH)
                    .HasForeignKey(d => d.AccDocHSi)
                    .HasConstraintName("FK_TrsVchrH_AccHDoc");
            });

            modelBuilder.Entity<VwAccBdgt>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAccBdgt");

                entity.Property(e => e.AccBudgetCu)
                    .HasColumnName("AccBudget_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccBudgetFromDs)
                    .HasColumnName("AccBudget_FromDs")
                    .HasColumnType("datetime");

                entity.Property(e => e.AccBudgetLevel).HasColumnName("AccBudget_Level");

                entity.Property(e => e.AccBudgetPrc).HasColumnName("AccBudget_Prc");

                entity.Property(e => e.AccBudgetSi).HasColumnName("AccBudget_Si");

                entity.Property(e => e.AccBudgetToDs)
                    .HasColumnName("AccBudget_ToDs")
                    .HasColumnType("datetime");

                entity.Property(e => e.AccBudgetTp)
                    .HasColumnName("AccBudget_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccBudgetTypAcc).HasColumnName("AccBudget_TypAcc");

                entity.Property(e => e.AccBudgetTypTp)
                    .HasColumnName("AccBudgetTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLkSi).HasColumnName("AccLK_Si");

                entity.Property(e => e.CuAcc)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuAccM)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuAccT)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CuCost)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuProject)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.TpAcc)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccM)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccT)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpCost)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpProject)
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwAccBgtMtrx>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAccBgtMtrx");

                entity.Property(e => e.عنوانردیفبودجه)
                    .HasColumnName("عنوان ردیف بودجه")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.عنوانماه)
                    .HasColumnName("عنوان ماه")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.ماه)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.مبلغبودجه).HasColumnName("مبلغ بودجه");

                entity.Property(e => e.مبلغدورهتقسیم).HasColumnName("مبلغ دوره تقسیم");

                entity.Property(e => e.کدردیفبودجه)
                    .HasColumnName("کد ردیف بودجه")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwAccBudget>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAccBudget");

                entity.Property(e => e.AccBudgetCu)
                    .HasColumnName("AccBudget_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccBudgetFromDs)
                    .HasColumnName("AccBudget_FromDs")
                    .HasColumnType("datetime");

                entity.Property(e => e.AccBudgetPrc).HasColumnName("AccBudget_Prc");

                entity.Property(e => e.AccBudgetSi).HasColumnName("AccBudget_Si");

                entity.Property(e => e.AccBudgetToDs)
                    .HasColumnName("AccBudget_ToDs")
                    .HasColumnType("datetime");

                entity.Property(e => e.AccBudgetTp)
                    .HasColumnName("AccBudget_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccBudgetTypAcc).HasColumnName("AccBudget_TypAcc");

                entity.Property(e => e.AccBudgetTypTp)
                    .HasColumnName("AccBudgetTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLkSi).HasColumnName("AccLK_Si");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.CuAcc)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuAccM)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuAccT)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CuCost)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuProject)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.TpAcc)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccM)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccT)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpCost)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpProject)
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwAccCtbMinfo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAccCtbMInfo");

                entity.Property(e => e.AccCtbMinfoSi).HasColumnName("AccCtbMInfo_Si");

                entity.Property(e => e.AccCtbMinfoTp)
                    .HasColumnName("AccCtbMInfo_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccCtbMinfoValue)
                    .HasColumnName("AccCtbMInfo_Value")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.AccCtbMinfoValueSi).HasColumnName("AccCtbMInfoValue_Si");

                entity.Property(e => e.Credit).HasColumnType("money");

                entity.Property(e => e.CuAcc)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Debit).HasColumnType("money");

                entity.Property(e => e.DsDoc).HasColumnType("smalldatetime");

                entity.Property(e => e.SiDdoc).HasColumnName("SiDDoc");

                entity.Property(e => e.SiHdoc).HasColumnName("SiHDoc");

                entity.Property(e => e.TpAcc)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwAccDdoc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAccDDoc");

                entity.Property(e => e.AccArqstSi).HasColumnName("AccARqst_Si");

                entity.Property(e => e.AccDdocRowBgt).HasColumnName("AccDDoc_RowBgt");

                entity.Property(e => e.AccHdocStmpCdt)
                    .HasColumnName("AccHDoc_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.AccHdocStmpMdt)
                    .HasColumnName("AccHDoc_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.AccHdocStmpTime)
                    .HasColumnName("AccHDoc_StmpTime")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.AccHdocStmpTimeEdit)
                    .HasColumnName("AccHDoc_StmpTimeEdit")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ConWithAccT).HasColumnName("Con_With_AccT");

                entity.Property(e => e.ConWithCost).HasColumnName("Con_With_Cost");

                entity.Property(e => e.ConWithProject).HasColumnName("Con_With_Project");

                entity.Property(e => e.CreateRec).HasColumnType("datetime");

                entity.Property(e => e.Credit).HasColumnType("money");

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.CtbCurncyTp)
                    .HasColumnName("CtbCurncy_Tp")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CuAccGrp)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuAccK)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuAccM)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuAccT)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CuCost)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuDocType)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuProject)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Debit).HasColumnType("money");

                entity.Property(e => e.DsDoc).HasColumnType("smalldatetime");

                entity.Property(e => e.Idt)
                    .HasColumnName("IDT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Ino).HasColumnName("INo");

                entity.Property(e => e.Iqty).HasColumnName("IQty");

                entity.Property(e => e.LoginName)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RqstCurrncy).HasColumnName("Rqst_Currncy");

                entity.Property(e => e.RqstRfrnc).HasColumnName("Rqst_Rfrnc");

                entity.Property(e => e.SiDdoc).HasColumnName("SiDDoc");

                entity.Property(e => e.SiHdoc).HasColumnName("SiHDoc");

                entity.Property(e => e.TpAcc2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccGrp)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccK)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccK2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccM)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccM2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccT)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccT2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpConfirmation)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TpCost)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpCost2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpCreator)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TpDefinite)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpDoc)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.TpDoc2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpDocType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpHdoc)
                    .HasColumnName("TpHDoc")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.TpHdoc2)
                    .HasColumnName("TpHDoc2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpProject)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.TpProject2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpSystem)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDccDt)
                    .HasColumnName("TrsDcc_DT")
                    .HasColumnType("datetime");

                entity.Property(e => e.TrsDccIno)
                    .HasColumnName("TrsDcc_INO")
                    .HasMaxLength(40)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwAccDdocIntgr>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAccDDocIntgr");

                entity.Property(e => e.ConWithAccT).HasColumnName("Con_With_AccT");

                entity.Property(e => e.ConWithCost).HasColumnName("Con_With_Cost");

                entity.Property(e => e.ConWithProject).HasColumnName("Con_With_Project");

                entity.Property(e => e.CreateRec).HasColumnType("datetime");

                entity.Property(e => e.Credit).HasColumnType("money");

                entity.Property(e => e.CuAccC)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuAccGrp)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuAccK)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuAccM)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuAccP)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuAccT)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CuDocType)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Debit).HasColumnType("money");

                entity.Property(e => e.DsDoc).HasColumnType("smalldatetime");

                entity.Property(e => e.Idt)
                    .HasColumnName("IDT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Ino).HasColumnName("INo");

                entity.Property(e => e.Iqty).HasColumnName("IQty");

                entity.Property(e => e.LoginName)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remain).HasColumnType("money");

                entity.Property(e => e.SiDdoc).HasColumnName("SiDDoc");

                entity.Property(e => e.SiHdoc).HasColumnName("SiHDoc");

                entity.Property(e => e.TpAcc2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccC)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccGrp)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccK)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccK2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccM)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccM2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccP)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccT)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccT2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpConfirmation)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TpCost2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpCreator)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TpDoc)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.TpDoc2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpDocType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpHdoc)
                    .HasColumnName("TpHDoc")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.TpHdoc2)
                    .HasColumnName("TpHDoc2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpProject2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDccDt)
                    .HasColumnName("TrsDcc_DT")
                    .HasColumnType("datetime");

                entity.Property(e => e.TrsDccIno)
                    .HasColumnName("TrsDcc_INO")
                    .HasMaxLength(40)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwAccDocAdrs>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAccDocAdrs");

                entity.Property(e => e.AccDocDRow).HasColumnName("AccDocD_Row");

                entity.Property(e => e.AccDocDSi).HasColumnName("AccDocD_Si");

                entity.Property(e => e.AccDocHCu).HasColumnName("AccDocH_Cu");

                entity.Property(e => e.AccDocHDs)
                    .HasColumnName("AccDocH_Ds")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AccDocHTempDoc).HasColumnName("AccDocH_TempDoc");
            });

            modelBuilder.Entity<VwAccExchange>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAccExchange");

                entity.Property(e => e.AccDocHSi).HasColumnName("AccDocH_Si");

                entity.Property(e => e.AccExchangeEndDate)
                    .HasColumnName("AccExchange_EndDate")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AccExchangeEndRate).HasColumnName("AccExchange_EndRate");

                entity.Property(e => e.AccExchangeSi).HasColumnName("AccExchange_Si");

                entity.Property(e => e.AccExchangeStartDate)
                    .HasColumnName("AccExchange_StartDate")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AccExchangeStartRate).HasColumnName("AccExchange_StartRate");

                entity.Property(e => e.CtbCurncyFmt)
                    .HasColumnName("CtbCurncy_Fmt")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.CtbCurncyTp)
                    .HasColumnName("CtbCurncy_Tp")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwAccHdoc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAccHDoc");

                entity.Property(e => e.AccHdocStmpCdt)
                    .HasColumnName("AccHDoc_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.AccHdocStmpMdt)
                    .HasColumnName("AccHDoc_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.AccHdocStmpTime)
                    .HasColumnName("AccHDoc_StmpTime")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.AccHdocStmpTimeEdit)
                    .HasColumnName("AccHDoc_StmpTimeEdit")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.AccLocSi).HasColumnName("AccLoc_Si");

                entity.Property(e => e.CmDoc).HasColumnType("text");

                entity.Property(e => e.CreateRec).HasColumnType("datetime");

                entity.Property(e => e.CuDocType)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.DsDoc).HasColumnType("smalldatetime");

                entity.Property(e => e.LoginName)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.SiHdoc).HasColumnName("SiHDoc");

                entity.Property(e => e.SiHdocSource).HasColumnName("SiHDoc_Source");

                entity.Property(e => e.TpConfirmation)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TpCreator)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TpDefinite)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpDocType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpHdoc)
                    .HasColumnName("TpHDoc")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.TpHdoc2)
                    .HasColumnName("TpHDoc2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpSystem)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UserLock)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwAccLc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAccLC");

                entity.Property(e => e.AccLcCu)
                    .HasColumnName("AccLC_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLcTp)
                    .HasColumnName("AccLC_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLcTp2)
                    .HasColumnName("AccLC_Tp2")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwAccLcost>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAccLCost");

                entity.Property(e => e.AccLcCu)
                    .HasColumnName("AccLC_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLcSi)
                    .HasColumnName("AccLC_Si")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AccLcTp)
                    .HasColumnName("AccLC_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLcTp2)
                    .HasColumnName("AccLC_Tp2")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwAccLk>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAccLK");

                entity.Property(e => e.AccLgSi).HasColumnName("AccLG_Si");

                entity.Property(e => e.AccLkCu)
                    .IsRequired()
                    .HasColumnName("AccLK_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLkSi)
                    .HasColumnName("AccLK_Si")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AccLkTp)
                    .HasColumnName("AccLK_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLkTp2)
                    .HasColumnName("AccLK_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwAccLm>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAccLM");

                entity.Property(e => e.AccLkCu)
                    .HasColumnName("AccLK_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLkSi).HasColumnName("AccLK_Si");

                entity.Property(e => e.AccLkTp)
                    .HasColumnName("AccLK_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLkTp2)
                    .HasColumnName("AccLK_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmCnctC).HasColumnName("AccLM_Cnct_C");

                entity.Property(e => e.AccLmCnctP).HasColumnName("AccLM_Cnct_P");

                entity.Property(e => e.AccLmCnctT).HasColumnName("AccLM_Cnct_T");

                entity.Property(e => e.AccLmCu)
                    .IsRequired()
                    .HasColumnName("AccLM_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLmTp)
                    .HasColumnName("AccLM_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmTp2)
                    .HasColumnName("AccLM_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwAccLmc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAccLMC");

                entity.Property(e => e.AccLcCu)
                    .HasColumnName("AccLC_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLcTp)
                    .HasColumnName("AccLC_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLcTp2)
                    .HasColumnName("AccLC_Tp2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");
            });

            modelBuilder.Entity<VwAccLmoien>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAccLMoien");

                entity.Property(e => e.AccLkCu)
                    .HasColumnName("AccLK_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLkSi).HasColumnName("AccLK_Si");

                entity.Property(e => e.AccLkTp)
                    .HasColumnName("AccLK_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLkTp2)
                    .HasColumnName("AccLK_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmCnctC).HasColumnName("AccLM_Cnct_C");

                entity.Property(e => e.AccLmCnctP).HasColumnName("AccLM_Cnct_P");

                entity.Property(e => e.AccLmCnctT).HasColumnName("AccLM_Cnct_T");

                entity.Property(e => e.AccLmCu)
                    .IsRequired()
                    .HasColumnName("AccLM_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLmTp)
                    .HasColumnName("AccLM_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmTp2)
                    .HasColumnName("AccLM_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwAccLmp>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAccLMP");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLpCu)
                    .HasColumnName("AccLP_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLpTp)
                    .HasColumnName("AccLP_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpTp2)
                    .HasColumnName("AccLP_Tp2")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwAccLmt>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAccLMT");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLtCu)
                    .HasColumnName("AccLT_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AccLtTp)
                    .HasColumnName("AccLT_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtTp2)
                    .HasColumnName("AccLT_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwAccLp>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAccLP");

                entity.Property(e => e.AccLpCu)
                    .HasColumnName("AccLP_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLpTp)
                    .HasColumnName("AccLP_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpTp2)
                    .HasColumnName("AccLP_Tp2")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwAccLproject>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAccLProject");

                entity.Property(e => e.AccLpCu)
                    .HasColumnName("AccLP_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpSi)
                    .HasColumnName("AccLP_Si")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AccLpTp)
                    .HasColumnName("AccLP_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpTp2)
                    .HasColumnName("AccLP_Tp2")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwAccLt>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAccLT");

                entity.Property(e => e.AccLtCu)
                    .HasColumnName("AccLT_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AccLtTp)
                    .HasColumnName("AccLT_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtTp2)
                    .HasColumnName("AccLT_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwAccLtafsili>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAccLTafsili");

                entity.Property(e => e.AccLtCu)
                    .HasColumnName("AccLT_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtSi)
                    .HasColumnName("AccLT_Si")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AccLtTp)
                    .HasColumnName("AccLT_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtTp2)
                    .HasColumnName("AccLT_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwAccMatrixReport>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAccMatrixReport");

                entity.Property(e => e.CtbCurncyTp)
                    .HasColumnName("CtbCurncy_Tp")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.اطلاعاتتاريخ)
                    .HasColumnName("اطلاعات تاريخ")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.اطلاعاتشماره).HasColumnName("اطلاعات شماره");

                entity.Property(e => e.اطلاعاتمقدار).HasColumnName("اطلاعات مقدار");

                entity.Property(e => e.ايجادكنندهسند)
                    .HasColumnName("ايجاد كننده سند")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.بدهکار).HasColumnType("money");

                entity.Property(e => e.بستانکار).HasColumnType("money");

                entity.Property(e => e.تاریخسند)
                    .HasColumnName("تاریخ سند")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.تفصیل)
                    .HasMaxLength(123)
                    .IsUnicode(false);

                entity.Property(e => e.شرح)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.شرحکلیسند)
                    .HasColumnName("شرح کلی سند")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.شمارهسند).HasColumnName("شماره سند");

                entity.Property(e => e.شمارهفرعیسند).HasColumnName("شماره فرعی سند");

                entity.Property(e => e.عطف)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.عنوانتفصیل)
                    .HasColumnName("عنوان تفصیل")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.عنوانماه)
                    .HasColumnName("عنوان ماه")
                    .HasMaxLength(4000);

                entity.Property(e => e.عنوانمرکز)
                    .HasColumnName("عنوان مرکز")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.عنوانمعین)
                    .HasColumnName("عنوان معین")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.عنوانپروژه)
                    .HasColumnName("عنوان پروژه")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.عنوانکل)
                    .HasColumnName("عنوان کل")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.فصل).HasMaxLength(4000);

                entity.Property(e => e.مانده).HasColumnType("money");

                entity.Property(e => e.مرحلهقطعی)
                    .HasColumnName("مرحله قطعی")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.مرکز)
                    .HasMaxLength(68)
                    .IsUnicode(false);

                entity.Property(e => e.معین)
                    .HasMaxLength(118)
                    .IsUnicode(false);

                entity.Property(e => e.نامسيستم)
                    .HasColumnName("نام سيستم")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نامماه)
                    .HasColumnName("نام ماه")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.نوعسند)
                    .HasColumnName("نوع سند")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.پروژه)
                    .HasMaxLength(4018)
                    .IsUnicode(false);

                entity.Property(e => e.پیشنویس).HasColumnName("پیش نویس");

                entity.Property(e => e.کدتفصیل)
                    .HasColumnName("کد تفصیل")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.کدمرکز)
                    .HasColumnName("کد مرکز")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کدمعین)
                    .HasColumnName("کد معین")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کدنوعسند)
                    .HasColumnName("کد نوع سند")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کدپروژه)
                    .HasColumnName("کد پروژه")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کدکل)
                    .HasColumnName("کد کل")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کل)
                    .HasMaxLength(118)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwAccRelations>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAccRelations");

                entity.Property(e => e.CuAccK)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuAccM)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuAccT)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CuCost)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuProject)
                    .HasMaxLength(15)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwAccRqst>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAccRqst");

                entity.Property(e => e.AccArqstCu)
                    .HasColumnName("AccARqst_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccArqstDesc)
                    .HasColumnName("AccARqst_Desc")
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.AccArqstDt)
                    .HasColumnName("AccARqst_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AccArqstPrc).HasColumnName("AccARqst_Prc");

                entity.Property(e => e.AccArqstSi).HasColumnName("AccARqst_Si");

                entity.Property(e => e.AccBudgetCu)
                    .HasColumnName("AccBudget_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccBudgetFromDs)
                    .HasColumnName("AccBudget_FromDs")
                    .HasColumnType("datetime");

                entity.Property(e => e.AccBudgetPrc).HasColumnName("AccBudget_Prc");

                entity.Property(e => e.AccBudgetPrcCost).HasColumnName("AccBudget_PrcCost");

                entity.Property(e => e.AccBudgetPrcCredit).HasColumnName("AccBudget_PrcCredit");

                entity.Property(e => e.AccBudgetSi).HasColumnName("AccBudget_Si");

                entity.Property(e => e.AccBudgetToDs)
                    .HasColumnName("AccBudget_ToDs")
                    .HasColumnType("datetime");

                entity.Property(e => e.AccBudgetTp)
                    .HasColumnName("AccBudget_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLkSi).HasColumnName("AccLK_Si");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AccRqstStsSi).HasColumnName("AccRqstSts_Si");

                entity.Property(e => e.AccRqstStsTp)
                    .HasColumnName("AccRqstSts_Tp")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccRqstTypSi).HasColumnName("AccRqstTyp_Si");

                entity.Property(e => e.AccRqstTypTp)
                    .HasColumnName("AccRqstTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CuAccM)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuAccT)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CuCost)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuProject)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SumAcc).HasColumnType("money");

                entity.Property(e => e.TpAccM)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccT)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpCost)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpProject)
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwAssAgency>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAssAgency");

                entity.Property(e => e.AssAgencyCu).HasColumnName("AssAgency_Cu");

                entity.Property(e => e.AssAgencyMng)
                    .HasColumnName("AssAgency_Mng")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssAgencySi).HasColumnName("AssAgency_Si");

                entity.Property(e => e.AssAgencyTp)
                    .HasColumnName("AssAgency_Tp")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsAddrs)
                    .HasColumnName("CtbAddrs_Addrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsDesc)
                    .HasColumnName("CtbAddrs_Desc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsEmail)
                    .HasColumnName("CtbAddrs_Email")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsFax)
                    .HasColumnName("CtbAddrs_Fax")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsMobile)
                    .HasColumnName("CtbAddrs_Mobile")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsModem)
                    .HasColumnName("CtbAddrs_Modem")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPobox)
                    .HasColumnName("CtbAddrs_POBox")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsTel)
                    .HasColumnName("CtbAddrs_Tel")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsZipcode)
                    .HasColumnName("CtbAddrs_ZIPCode")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwAssMachineTyp>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAssMachineTyp");

                entity.Property(e => e.AssMachineTypCu).HasColumnName("AssMachineTyp_Cu");

                entity.Property(e => e.AssMachineTypFirstGuranteDur).HasColumnName("AssMachineTyp_FirstGuranteDur");

                entity.Property(e => e.AssMachineTypGuranteDur).HasColumnName("AssMachineTyp_GuranteDur");

                entity.Property(e => e.AssMachineTypKm).HasColumnName("AssMachineTyp_Km");

                entity.Property(e => e.AssMachineTypSi)
                    .HasColumnName("AssMachineTyp_Si")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AssMachineTypTp)
                    .HasColumnName("AssMachineTyp_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwAssReceiptH>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAssReceiptH");

                entity.Property(e => e.AssAgencyCu).HasColumnName("AssAgency_Cu");

                entity.Property(e => e.AssAgencySi).HasColumnName("AssAgency_Si");

                entity.Property(e => e.AssAgencyTp)
                    .HasColumnName("AssAgency_Tp")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.AssMachineTypCu).HasColumnName("AssMachineTyp_Cu");

                entity.Property(e => e.AssMachineTypSi).HasColumnName("AssMachineTyp_Si");

                entity.Property(e => e.AssMachineTypTp)
                    .HasColumnName("AssMachineTyp_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AssReceiptHAccDoc).HasColumnName("AssReceiptH_AccDoc");

                entity.Property(e => e.AssReceiptHAdditionPart)
                    .HasColumnName("AssReceiptH_AdditionPart")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AssReceiptHChassisNo).HasColumnName("AssReceiptH_ChassisNo");

                entity.Property(e => e.AssReceiptHCreateDate)
                    .HasColumnName("AssReceiptH_CreateDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.AssReceiptHCreatorName)
                    .HasColumnName("AssReceiptH_CreatorName")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AssReceiptHCu).HasColumnName("AssReceiptH_Cu");

                entity.Property(e => e.AssReceiptHCurrentKm).HasColumnName("AssReceiptH_CurrentKm");

                entity.Property(e => e.AssReceiptHDate)
                    .IsRequired()
                    .HasColumnName("AssReceiptH_Date")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.AssReceiptHDescription)
                    .HasColumnName("AssReceiptH_Description")
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.AssReceiptHDisCountSum)
                    .HasColumnName("AssReceiptH_DisCountSum")
                    .HasColumnType("money");

                entity.Property(e => e.AssReceiptHDriverName)
                    .HasColumnName("AssReceiptH_DriverName")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssReceiptHEngineNo).HasColumnName("AssReceiptH_EngineNo");

                entity.Property(e => e.AssReceiptHFirstService).HasColumnName("AssReceiptH_FirstService");

                entity.Property(e => e.AssReceiptHGpriceSum)
                    .HasColumnName("AssReceiptH_GPriceSum")
                    .HasColumnType("money");

                entity.Property(e => e.AssReceiptHGuard).HasColumnName("AssReceiptH_Guard");

                entity.Property(e => e.AssReceiptHGuranteDate)
                    .IsRequired()
                    .HasColumnName("AssReceiptH_GuranteDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.AssReceiptHGuranteNo)
                    .IsRequired()
                    .HasColumnName("AssReceiptH_GuranteNo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssReceiptHGurantee).HasColumnName("AssReceiptH_Gurantee");

                entity.Property(e => e.AssReceiptHLock).HasColumnName("AssReceiptH_Lock");

                entity.Property(e => e.AssReceiptHMachineColor)
                    .HasColumnName("AssReceiptH_MachineColor")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AssReceiptHOpriceSum)
                    .HasColumnName("AssReceiptH_OPriceSum")
                    .HasColumnType("money");

                entity.Property(e => e.AssReceiptHPrcRcvd).HasColumnName("AssReceiptH_PrcRcvd");

                entity.Property(e => e.AssReceiptHPriceSum)
                    .HasColumnName("AssReceiptH_PriceSum")
                    .HasColumnType("money");

                entity.Property(e => e.AssReceiptHProductYear).HasColumnName("AssReceiptH_ProductYear");

                entity.Property(e => e.AssReceiptHRefDate)
                    .HasColumnName("AssReceiptH_RefDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.AssReceiptHSi).HasColumnName("AssReceiptH_Si");

                entity.Property(e => e.AssReceiptHStatus).HasColumnName("AssReceiptH_Status");

                entity.Property(e => e.AssReceiptHTagNo)
                    .IsRequired()
                    .HasColumnName("AssReceiptH_TagNo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssReceiptHTpriceSum)
                    .HasColumnName("AssReceiptH_TPriceSum")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocHSi).HasColumnName("InvDocH_Si");

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustAccMSi).HasColumnName("SalCust_AccM_Si");

                entity.Property(e => e.SalCustAccTSi).HasColumnName("SalCust_AccT_Si");

                entity.Property(e => e.SalCustCu)
                    .HasColumnName("SalCust_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwAssReceiptOpr>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAssReceiptOpr");

                entity.Property(e => e.AssReceiptHCu).HasColumnName("AssReceiptH_Cu");

                entity.Property(e => e.AssReceiptHDescription)
                    .HasColumnName("AssReceiptH_Description")
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.AssReceiptHSi).HasColumnName("AssReceiptH_Si");

                entity.Property(e => e.AssReceiptOprAccMSi).HasColumnName("AssReceiptOpr_AccM_Si");

                entity.Property(e => e.AssReceiptOprAccTSi).HasColumnName("AssReceiptOpr_AccT_Si");

                entity.Property(e => e.AssReceiptOprCalcValue).HasColumnName("AssReceiptOpr_CalcValue");

                entity.Property(e => e.AssReceiptOprSi).HasColumnName("AssReceiptOpr_Si");

                entity.Property(e => e.AssReceiptOprValue).HasColumnName("AssReceiptOpr_Value");

                entity.Property(e => e.SalOprAccMSi).HasColumnName("SalOpr_AccM_Si");

                entity.Property(e => e.SalOprAccTSi).HasColumnName("SalOpr_AccT_Si");

                entity.Property(e => e.SalOprActive).HasColumnName("SalOpr_Active");

                entity.Property(e => e.SalOprAutoInsert).HasColumnName("SalOpr_AutoInsert");

                entity.Property(e => e.SalOprCu)
                    .HasColumnName("SalOpr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprDefaultValue).HasColumnName("SalOpr_DefaultValue");

                entity.Property(e => e.SalOprLckPrc).HasColumnName("SalOpr_LckPrc");

                entity.Property(e => e.SalOprNature)
                    .HasColumnName("SalOpr_Nature")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");

                entity.Property(e => e.SalOprSqnc).HasColumnName("SalOpr_Sqnc");

                entity.Property(e => e.SalOprSqncPrn).HasColumnName("SalOpr_SqncPrn");

                entity.Property(e => e.SalOprTp)
                    .HasColumnName("SalOpr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTyp).HasColumnName("SalOpr_Typ");

                entity.Property(e => e.SalOprUse).HasColumnName("SalOpr_Use");

                entity.Property(e => e.SalOprValueTyp).HasColumnName("SalOpr_ValueTyp");
            });

            modelBuilder.Entity<VwAssServiceH>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAssServiceH");

                entity.Property(e => e.AssPrsSi).HasColumnName("AssPrs_Si");

                entity.Property(e => e.AssReceptionSi).HasColumnName("AssReception_Si");

                entity.Property(e => e.AssSrvHAction)
                    .HasColumnName("AssSrvH_Action")
                    .HasColumnType("text");

                entity.Property(e => e.AssSrvHCu)
                    .HasColumnName("AssSrvH_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AssSrvHDate)
                    .HasColumnName("AssSrvH_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.AssSrvHDeliverer)
                    .HasColumnName("AssSrvH_deliverer")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.AssSrvHEduc).HasColumnName("AssSrvH_Educ");

                entity.Property(e => e.AssSrvHInstall).HasColumnName("AssSrvH_Install");

                entity.Property(e => e.AssSrvHLReq).HasColumnName("AssSrvH_lReq");

                entity.Property(e => e.AssSrvHNote)
                    .HasColumnName("AssSrvH_Note")
                    .HasColumnType("text");

                entity.Property(e => e.AssSrvHOview).HasColumnName("AssSrvH_OView");

                entity.Property(e => e.AssSrvHSi)
                    .HasColumnName("AssSrvH_Si")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AssSrvHWrong)
                    .HasColumnName("AssSrvH_wrong")
                    .HasColumnType("text");
            });

            modelBuilder.Entity<VwAssVchrD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAssVchrD");

                entity.Property(e => e.AccDocHSi).HasColumnName("AccDocH_Si");

                entity.Property(e => e.AccLcCu)
                    .HasColumnName("AccLC_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLcTp)
                    .HasColumnName("AccLC_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmCu)
                    .HasColumnName("AccLM_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLmTp)
                    .HasColumnName("AccLM_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLtCu)
                    .HasColumnName("AccLT_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AccLtTp)
                    .HasColumnName("AccLT_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AssVchrDCredit)
                    .HasColumnName("AssVchrD_Credit")
                    .HasColumnType("money");

                entity.Property(e => e.AssVchrDCreditC).HasColumnName("AssVchrD_CreditC");

                entity.Property(e => e.AssVchrDDebit)
                    .HasColumnName("AssVchrD_Debit")
                    .HasColumnType("money");

                entity.Property(e => e.AssVchrDDebitC).HasColumnName("AssVchrD_DebitC");

                entity.Property(e => e.AssVchrDId).HasColumnName("AssVchrD_Id");

                entity.Property(e => e.AssVchrDTx)
                    .IsRequired()
                    .HasColumnName("AssVchrD_Tx")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.AssVchrHDate)
                    .HasColumnName("AssVchrH_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AssVchrHDateFrom)
                    .HasColumnName("AssVchrH_DateFrom")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AssVchrHDateUntil)
                    .HasColumnName("AssVchrH_DateUntil")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AssVchrHId).HasColumnName("AssVchrH_Id");

                entity.Property(e => e.AssVchrHRow).HasColumnName("AssVchrH_Row");

                entity.Property(e => e.AssVchrHSent).HasColumnName("AssVchrH_Sent");

                entity.Property(e => e.AssVchrHTx)
                    .HasColumnName("AssVchrH_Tx")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.DsDoc).HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<VwAssVchrH>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAssVchrH");

                entity.Property(e => e.AccDocHSi).HasColumnName("AccDocH_Si");

                entity.Property(e => e.AssVchrHDate)
                    .HasColumnName("AssVchrH_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AssVchrHDateFrom)
                    .HasColumnName("AssVchrH_DateFrom")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AssVchrHDateUntil)
                    .HasColumnName("AssVchrH_DateUntil")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AssVchrHId).HasColumnName("AssVchrH_Id");

                entity.Property(e => e.AssVchrHSent).HasColumnName("AssVchrH_Sent");

                entity.Property(e => e.AssVchrHTx)
                    .HasColumnName("AssVchrH_Tx")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DsDoc).HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<VwAstAsset>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAstAsset");

                entity.Property(e => e.AccMSi).HasColumnName("AccM_Si");

                entity.Property(e => e.AccMSi1).HasColumnName("AccM_Si_1");

                entity.Property(e => e.AccMgrpSi1).HasColumnName("AccMGRP_Si_1");

                entity.Property(e => e.AccTSi).HasColumnName("AccT_Si");

                entity.Property(e => e.AccTSi1).HasColumnName("AccT_Si_1");

                entity.Property(e => e.AccTgrpSi1).HasColumnName("AccTGRP_Si_1");

                entity.Property(e => e.AstAssetAccDoc).HasColumnName("AstAsset_AccDoc");

                entity.Property(e => e.AstAssetAccDoc1).HasColumnName("AstAsset_AccDoc_1");

                entity.Property(e => e.AstAssetAjstPriceDec)
                    .HasColumnName("AstAssetAjst_PriceDec")
                    .HasColumnType("money");

                entity.Property(e => e.AstAssetAjstPriceInc)
                    .HasColumnName("AstAssetAjst_PriceInc")
                    .HasColumnType("money");

                entity.Property(e => e.AstAssetExploitationDate)
                    .HasColumnName("AstAsset_ExploitationDate")
                    .HasColumnType("datetime");

                entity.Property(e => e.AstAssetFirstAdepreciate)
                    .HasColumnName("AstAsset_First_ADepreciate")
                    .HasColumnType("money");

                entity.Property(e => e.AstAssetFirstBookValue)
                    .HasColumnName("AstAsset_First_BookValue")
                    .HasColumnType("money");

                entity.Property(e => e.AstAssetFirstBookv).HasColumnName("AstAsset_FirstBookv");

                entity.Property(e => e.AstAssetFirstDate)
                    .HasColumnName("AstAsset_First_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.AstAssetFirstEst).HasColumnName("AstAsset_FirstEst");

                entity.Property(e => e.AstAssetFirstPrc).HasColumnName("AstAsset_FirstPrc");

                entity.Property(e => e.AstAssetId)
                    .IsRequired()
                    .HasColumnName("AstAsset_Id")
                    .HasMaxLength(53);

                entity.Property(e => e.AstAssetPurchaseDate)
                    .HasColumnName("AstAsset_Purchase_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.AstAssetPurchasePrice)
                    .HasColumnName("AstAsset_Purchase_Price")
                    .HasColumnType("money");

                entity.Property(e => e.AstAssetPurchaseVchrId).HasColumnName("AstAsset_Purchase_VchrId");

                entity.Property(e => e.AstAssetSaleDate)
                    .HasColumnName("AstAsset_Sale_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.AstAssetSalePrice)
                    .HasColumnName("AstAsset_Sale_Price")
                    .HasColumnType("money");

                entity.Property(e => e.AstAssetSaleVchrId).HasColumnName("AstAsset_Sale_VchrId");

                entity.Property(e => e.AstAssetScrapDate)
                    .HasColumnName("AstAsset_Scrap_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.AstAssetScrapPrice)
                    .HasColumnName("AstAsset_Scrap_Price")
                    .HasColumnType("money");

                entity.Property(e => e.AstAssetScrapVchrId).HasColumnName("AstAsset_Scrap_VchrId");

                entity.Property(e => e.AstAssetTx)
                    .IsRequired()
                    .HasColumnName("AstAsset_Tx")
                    .HasMaxLength(100);

                entity.Property(e => e.AstCnsMthdId).HasColumnName("AstCnsMthd_Id");

                entity.Property(e => e.AstCnsMthdTx)
                    .HasColumnName("AstCnsMthd_Tx")
                    .HasMaxLength(50);

                entity.Property(e => e.AstGrupDepreciateRate).HasColumnName("AstGrup_DepreciateRate");

                entity.Property(e => e.AstGrupId)
                    .IsRequired()
                    .HasColumnName("AstGrup_Id")
                    .HasMaxLength(20);

                entity.Property(e => e.AstGrupTx)
                    .HasColumnName("AstGrup_Tx")
                    .HasMaxLength(50);

                entity.Property(e => e.AstInfo1Si).HasColumnName("AstInfo1_Si");

                entity.Property(e => e.AstInfo1Tx)
                    .HasColumnName("AstInfo1_Tx")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AstInfo2Si).HasColumnName("AstInfo2_Si");

                entity.Property(e => e.AstInfo2Tx)
                    .HasColumnName("AstInfo2_Tx")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AstInfo3Si).HasColumnName("AstInfo3_Si");

                entity.Property(e => e.AstInfo3Tx)
                    .HasColumnName("AstInfo3_Tx")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AstInfo4Si).HasColumnName("AstInfo4_Si");

                entity.Property(e => e.AstInfo4Tx)
                    .HasColumnName("AstInfo4_Tx")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AstLctnId).HasColumnName("AstLctn_Id");

                entity.Property(e => e.AstLctnTx)
                    .HasColumnName("AstLctn_Tx")
                    .HasMaxLength(50);

                entity.Property(e => e.AstSumId)
                    .HasColumnName("AstSum_Id")
                    .HasMaxLength(20);

                entity.Property(e => e.AstSumTx)
                    .HasColumnName("AstSum_Tx")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CuCost)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuProject)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlCu)
                    .HasColumnName("PerPrsnl_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.Property(e => e.PerPrsnlTp)
                    .HasColumnName("PerPrsnl_Tp")
                    .HasMaxLength(51)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrCu)
                    .HasColumnName("PurVndr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrCu1)
                    .HasColumnName("PurVndr_Cu1")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrSi1).HasColumnName("PurVndr_Si1");

                entity.Property(e => e.PurVndrTp)
                    .HasColumnName("PurVndr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrTp1)
                    .HasColumnName("PurVndr_Tp1")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PurvndrSi).HasColumnName("Purvndr_Si");

                entity.Property(e => e.TpCost)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpProject)
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwAstAssetDprc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAstAssetDprc");

                entity.Property(e => e.AstAssetDprcDate)
                    .HasColumnName("AstAssetDprc_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AstAssetDprcPrice)
                    .HasColumnName("AstAssetDprc_Price")
                    .HasColumnType("money");

                entity.Property(e => e.AstAssetId)
                    .IsRequired()
                    .HasColumnName("AstAsset_Id")
                    .HasMaxLength(53);

                entity.Property(e => e.AstAssetTx)
                    .IsRequired()
                    .HasColumnName("AstAsset_Tx")
                    .HasMaxLength(100);

                entity.Property(e => e.AstGrupId)
                    .IsRequired()
                    .HasColumnName("AstGrup_Id")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<VwAstAssetLctn>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAstAssetLctn");

                entity.Property(e => e.AstAssetId)
                    .IsRequired()
                    .HasColumnName("AstAsset_Id")
                    .HasMaxLength(53);

                entity.Property(e => e.AstAssetLctnDate)
                    .HasColumnName("AstAssetLctn_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AstAssetLctnTx)
                    .HasColumnName("AstAssetLctn_Tx")
                    .HasMaxLength(50);

                entity.Property(e => e.AstLctnId).HasColumnName("AstLctn_Id");

                entity.Property(e => e.AstLctnTx)
                    .HasColumnName("AstLctn_Tx")
                    .HasMaxLength(50);

                entity.Property(e => e.CuCost)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlAstCu)
                    .HasColumnName("PerPrsnlAst_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlAstSi).HasColumnName("PerPrsnlAst_Si");

                entity.Property(e => e.PerPrsnlAstTp)
                    .HasColumnName("PerPrsnlAst_Tp")
                    .HasMaxLength(51)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlCu)
                    .HasColumnName("PerPrsnl_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlFname)
                    .HasColumnName("PerPrsnl_FName")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlLname)
                    .HasColumnName("PerPrsnl_LName")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.Property(e => e.PerPrsnlTp)
                    .HasColumnName("PerPrsnl_Tp")
                    .HasMaxLength(51)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlfromSi).HasColumnName("PerPrsnlfrom_Si");

                entity.Property(e => e.TpCost)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwAstAssetSummary>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAstAssetSummary");

                entity.Property(e => e.AccMSi).HasColumnName("AccM_Si");

                entity.Property(e => e.AccMSi1).HasColumnName("AccM_Si_1");

                entity.Property(e => e.AccMSi2).HasColumnName("AccM_Si_2");

                entity.Property(e => e.AccTSi).HasColumnName("AccT_Si");

                entity.Property(e => e.AccTSi1).HasColumnName("AccT_Si_1");

                entity.Property(e => e.AccTSi2).HasColumnName("AccT_Si_2");

                entity.Property(e => e.Adepreciate)
                    .HasColumnName("ADepreciate")
                    .HasColumnType("money");

                entity.Property(e => e.AstAssetAccDoc).HasColumnName("AstAsset_AccDoc");

                entity.Property(e => e.AstAssetAccDoc1).HasColumnName("AstAsset_AccDoc_1");

                entity.Property(e => e.AstAssetDprcDate)
                    .HasColumnName("AstAssetDprc_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AstAssetDprcPrice)
                    .HasColumnName("AstAssetDprc_Price")
                    .HasColumnType("money");

                entity.Property(e => e.AstAssetFirstAdepreciate)
                    .HasColumnName("AstAsset_First_ADepreciate")
                    .HasColumnType("money");

                entity.Property(e => e.AstAssetId)
                    .IsRequired()
                    .HasColumnName("AstAsset_Id")
                    .HasMaxLength(53);

                entity.Property(e => e.AstAssetTx)
                    .IsRequired()
                    .HasColumnName("AstAsset_Tx")
                    .HasMaxLength(100);

                entity.Property(e => e.AstGrupId)
                    .HasColumnName("AstGrup_Id")
                    .HasMaxLength(20);

                entity.Property(e => e.AstGrupIdParent).HasColumnName("AstGrup_IdParent");

                entity.Property(e => e.AstGrupTx)
                    .HasColumnName("AstGrup_Tx")
                    .HasMaxLength(50);

                entity.Property(e => e.AstLctnTx)
                    .HasColumnName("AstLctn_Tx")
                    .HasMaxLength(50);

                entity.Property(e => e.BookValue).HasColumnType("money");

                entity.Property(e => e.FinalCost).HasColumnType("money");

                entity.Property(e => e.LastDepreciateDate).HasColumnType("smalldatetime");

                entity.Property(e => e.Location).HasMaxLength(4000);

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpCost)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwAstAssetSummaryNew>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAstAssetSummaryNew");

                entity.Property(e => e.AccMSi).HasColumnName("AccM_Si");

                entity.Property(e => e.AccMSi1).HasColumnName("AccM_Si_1");

                entity.Property(e => e.AccMSi2).HasColumnName("AccM_Si_2");

                entity.Property(e => e.AccTSi).HasColumnName("AccT_Si");

                entity.Property(e => e.AccTSi1).HasColumnName("AccT_Si_1");

                entity.Property(e => e.AccTSi2).HasColumnName("AccT_Si_2");

                entity.Property(e => e.Adepreciate)
                    .HasColumnName("ADepreciate")
                    .HasColumnType("money");

                entity.Property(e => e.AstAssetAccDoc).HasColumnName("AstAsset_AccDoc");

                entity.Property(e => e.AstAssetAccDoc1).HasColumnName("AstAsset_AccDoc_1");

                entity.Property(e => e.AstAssetDprcDate)
                    .HasColumnName("AstAssetDprc_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.AstAssetDprcPrice)
                    .HasColumnName("AstAssetDprc_Price")
                    .HasColumnType("money");

                entity.Property(e => e.AstAssetFirstAdepreciate)
                    .HasColumnName("AstAsset_First_ADepreciate")
                    .HasColumnType("money");

                entity.Property(e => e.AstAssetFirstDate)
                    .HasColumnName("AstAsset_First_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.AstAssetId)
                    .IsRequired()
                    .HasColumnName("AstAsset_Id")
                    .HasMaxLength(53);

                entity.Property(e => e.AstAssetSellingPrice)
                    .HasColumnName("AstAssetSelling_Price")
                    .HasColumnType("money");

                entity.Property(e => e.AstAssetTx)
                    .IsRequired()
                    .HasColumnName("AstAsset_Tx")
                    .HasMaxLength(100);

                entity.Property(e => e.AstCnsMthdId).HasColumnName("AstCnsMthd_Id");

                entity.Property(e => e.AstGrupId)
                    .HasColumnName("AstGrup_Id")
                    .HasMaxLength(20);

                entity.Property(e => e.AstGrupIdParent).HasColumnName("AstGrup_IdParent");

                entity.Property(e => e.AstGrupTx)
                    .HasColumnName("AstGrup_Tx")
                    .HasMaxLength(50);

                entity.Property(e => e.AstLctnTx)
                    .HasColumnName("AstLctn_Tx")
                    .HasMaxLength(50);

                entity.Property(e => e.BookValue).HasColumnType("money");

                entity.Property(e => e.CuCost)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.FinalCost).HasColumnType("money");

                entity.Property(e => e.LastDepreciateDate).HasColumnType("smalldatetime");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpCost)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwAstGrup>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAstGrup");

                entity.Property(e => e.AccAcntIdAdepreciate)
                    .HasColumnName("AccAcnt_Id_ADepreciate")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccAcntIdDepreciate)
                    .HasColumnName("AccAcnt_Id_Depreciate")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccMSi).HasColumnName("AccM_Si");

                entity.Property(e => e.AccMSi1).HasColumnName("AccM_Si_1");

                entity.Property(e => e.AccMSi2).HasColumnName("AccM_Si_2");

                entity.Property(e => e.AccTSi).HasColumnName("AccT_Si");

                entity.Property(e => e.AccTSi1).HasColumnName("AccT_Si_1");

                entity.Property(e => e.AccTSi2).HasColumnName("AccT_Si_2");

                entity.Property(e => e.AstCnsMthdId).HasColumnName("AstCnsMthd_Id");

                entity.Property(e => e.AstCnsMthdTx)
                    .HasColumnName("AstCnsMthd_Tx")
                    .HasMaxLength(50);

                entity.Property(e => e.AstGrupDepreciateRate).HasColumnName("AstGrup_DepreciateRate");

                entity.Property(e => e.AstGrupId)
                    .IsRequired()
                    .HasColumnName("AstGrup_Id")
                    .HasMaxLength(20);

                entity.Property(e => e.AstGrupTx)
                    .HasColumnName("AstGrup_Tx")
                    .HasMaxLength(50);

                entity.Property(e => e.CuAccM)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuAccM1)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuAccM2)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuAccT)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CuAccT1)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CuAccT2)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccM)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccM1)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccM2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccT)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccT1)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccT2)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwAstLocationNew>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAstLocationNew");

                entity.Property(e => e.AstAssetId)
                    .IsRequired()
                    .HasColumnName("AstAsset_Id")
                    .HasMaxLength(53);

                entity.Property(e => e.AstAssetTx)
                    .IsRequired()
                    .HasColumnName("AstAsset_Tx")
                    .HasMaxLength(100);

                entity.Property(e => e.AstLctnId).HasColumnName("AstLctn_Id");

                entity.Property(e => e.AstLctnTx)
                    .HasColumnName("AstLctn_Tx")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<VwAstPrepareVchr>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vwAstPrepareVchr");

                entity.Property(e => e.AccLcSi1).HasColumnName("AccLC_Si_1");

                entity.Property(e => e.AccLcSi2).HasColumnName("AccLC_Si_2");

                entity.Property(e => e.AccLpSi1).HasColumnName("AccLP_Si_1");

                entity.Property(e => e.AccLpSi2).HasColumnName("AccLP_Si_2");

                entity.Property(e => e.AccMSi1).HasColumnName("AccM_Si_1");

                entity.Property(e => e.AccMSi2).HasColumnName("AccM_Si_2");

                entity.Property(e => e.AccTSi1).HasColumnName("AccT_Si_1");

                entity.Property(e => e.AccTSi2).HasColumnName("AccT_Si_2");

                entity.Property(e => e.AstAssetDprcDate)
                    .HasColumnName("AstAssetDprc_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AstAssetDprcPrice)
                    .HasColumnName("AstAssetDprc_Price")
                    .HasColumnType("money");

                entity.Property(e => e.AstAssetId)
                    .IsRequired()
                    .HasColumnName("AstAsset_Id")
                    .HasMaxLength(53);

                entity.Property(e => e.AstGrupId)
                    .HasColumnName("AstGrup_Id")
                    .HasMaxLength(20);

                entity.Property(e => e.AstGrupTx)
                    .HasColumnName("AstGrup_Tx")
                    .HasMaxLength(50);

                entity.Property(e => e.BookValue).HasColumnType("money");
            });

            modelBuilder.Entity<VwAstPurchaseVoucher>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAstPurchaseVoucher");

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccMSi1).HasColumnName("AccM_Si_1");

                entity.Property(e => e.AccMSi2).HasColumnName("AccM_Si_2");

                entity.Property(e => e.AccTSi1).HasColumnName("AccT_Si_1");

                entity.Property(e => e.AccTSi2).HasColumnName("AccT_Si_2");

                entity.Property(e => e.AstAssetId)
                    .IsRequired()
                    .HasColumnName("AstAsset_Id")
                    .HasMaxLength(53);

                entity.Property(e => e.AstAssetPurchaseDate)
                    .HasColumnName("AstAsset_Purchase_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.AstAssetPurchasePrice)
                    .HasColumnName("AstAsset_Purchase_Price")
                    .HasColumnType("money");

                entity.Property(e => e.AstAssetPurchaseVchrId).HasColumnName("AstAsset_Purchase_VchrId");

                entity.Property(e => e.AstAssetTx)
                    .IsRequired()
                    .HasColumnName("AstAsset_Tx")
                    .HasMaxLength(100);

                entity.Property(e => e.AstGrupId)
                    .IsRequired()
                    .HasColumnName("AstGrup_Id")
                    .HasMaxLength(20);

                entity.Property(e => e.AstGrupTx)
                    .HasColumnName("AstGrup_Tx")
                    .HasMaxLength(50);

                entity.Property(e => e.CuCost)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuProject)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrCu)
                    .HasColumnName("PurVndr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrTp)
                    .HasColumnName("PurVndr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PurvndrSi).HasColumnName("Purvndr_Si");

                entity.Property(e => e.TpCost)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpProject)
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwAstVchrD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAstVchrD");

                entity.Property(e => e.AccDocHSi).HasColumnName("AccDocH_Si");

                entity.Property(e => e.AccLcCu)
                    .HasColumnName("AccLC_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLcTp)
                    .HasColumnName("AccLC_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmCu)
                    .HasColumnName("AccLM_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmSi).HasColumnName("AccLm_Si");

                entity.Property(e => e.AccLmTp)
                    .HasColumnName("AccLM_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpCu)
                    .HasColumnName("AccLP_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLpTp)
                    .HasColumnName("AccLP_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtCu)
                    .HasColumnName("AccLT_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AccLtTp)
                    .HasColumnName("AccLT_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AstVchrDId).HasColumnName("AstVchrD_Id");

                entity.Property(e => e.AstVchrDTx)
                    .HasColumnName("AstVchrD_Tx")
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.AstVchrHCredit)
                    .HasColumnName("AstVchrH_Credit")
                    .HasColumnType("money");

                entity.Property(e => e.AstVchrHDate)
                    .HasColumnName("AstVchrH_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AstVchrHDebit)
                    .HasColumnName("AstVchrH_Debit")
                    .HasColumnType("money");

                entity.Property(e => e.AstVchrHId).HasColumnName("AstVchrH_Id");

                entity.Property(e => e.Reference)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Reference1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SiHdoc).HasColumnName("SiHDoc");

                entity.Property(e => e.TpHdoc)
                    .HasColumnName("TpHDoc")
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwAstVchrH>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwAstVchrH");

                entity.Property(e => e.AccDocHSi).HasColumnName("AccDocH_Si");

                entity.Property(e => e.AstVchrHDate)
                    .HasColumnName("AstVchrH_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.AstVchrHId).HasColumnName("AstVchrH_Id");

                entity.Property(e => e.AstVchrHSent).HasColumnName("AstVchrH_Sent");

                entity.Property(e => e.AstVchrHTx)
                    .HasColumnName("AstVchrH_Tx")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SiHdoc).HasColumnName("SiHDoc");

                entity.Property(e => e.TpHdoc)
                    .HasColumnName("TpHDoc")
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwCntContract>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwCntContract");

                entity.Property(e => e.CntContractContractorNo)
                    .HasColumnName("CntContract_ContractorNo")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CntContractContractors)
                    .HasColumnName("CntContract_Contractors")
                    .HasMaxLength(4000);

                entity.Property(e => e.CntContractDate)
                    .HasColumnName("CntContract_Date")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CntContractDayBeforeAlert).HasColumnName("CntContract_DayBeforeAlert");

                entity.Property(e => e.CntContractDescription)
                    .HasColumnName("CntContract_Description")
                    .HasColumnType("text");

                entity.Property(e => e.CntContractEndDate)
                    .HasColumnName("CntContract_EndDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CntContractNote2)
                    .HasColumnName("CntContract_Note2")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.CntContractNumber)
                    .HasColumnName("CntContract_Number")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CntContractPrice)
                    .HasColumnName("CntContract_Price")
                    .HasColumnType("money");

                entity.Property(e => e.CntContractReceiptDate)
                    .HasColumnName("CntContract_ReceiptDate")
                    .HasMaxLength(8);

                entity.Property(e => e.CntContractSi).HasColumnName("CntContract_Si");

                entity.Property(e => e.CntContractSpecialNote)
                    .HasColumnName("CntContract_SpecialNote")
                    .HasColumnType("text");

                entity.Property(e => e.CntContractStartDate)
                    .HasColumnName("CntContract_StartDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CntContractSubject)
                    .HasColumnName("CntContract_Subject")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CntContractText)
                    .HasColumnName("CntContract_Text")
                    .HasColumnType("text");

                entity.Property(e => e.CntCustStatusCu)
                    .HasColumnName("CntCustStatus_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CntGrpSi).HasColumnName("CntGrp_Si");

                entity.Property(e => e.CntGrpSiParent).HasColumnName("CntGrp_SiParent");

                entity.Property(e => e.CntGrpTx)
                    .HasColumnName("CntGrp_Tx")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CntLockProcessEndLevel).HasColumnName("CntLockProcess_EndLevel");

                entity.Property(e => e.CntLockProcessLevelTx)
                    .HasColumnName("CntLockProcess_LevelTx")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CntLockUserName)
                    .HasColumnName("CntLock_UserName")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CntSaleAgentCu)
                    .HasColumnName("CntSaleAgent_Cu")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.CntSaleAgentTp)
                    .HasColumnName("CntSaleAgent_Tp")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CntStatusSi).HasColumnName("CntStatus_Si");

                entity.Property(e => e.CntStatusTx)
                    .HasColumnName("CntStatus_Tx")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CntTypSi).HasColumnName("CntTyp_Si");

                entity.Property(e => e.CntTypTx)
                    .HasColumnName("CntTyp_Tx")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.CtbCurncyTp)
                    .HasColumnName("CtbCurncy_Tp")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Customer)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PurVendor)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwCntCustomer>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwCntCustomer");

                entity.Property(e => e.CntCustomerSi).HasColumnName("CntCustomer_Si");

                entity.Property(e => e.CtbCustVndrTypSi).HasColumnName("CtbCustVndrTyp_Si");

                entity.Property(e => e.CtbCustVndrTypTp)
                    .HasColumnName("CtbCustVndrTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustCorporateTyp).HasColumnName("SalCust_CorporateTyp");

                entity.Property(e => e.SalCustCu)
                    .HasColumnName("SalCust_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwCntLock>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwCntLock");

                entity.Property(e => e.CntContractSi).HasColumnName("CntContract_Si");

                entity.Property(e => e.CntLockComment)
                    .HasColumnName("CntLock_Comment")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CntLockDate)
                    .HasColumnName("CntLock_Date")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CntLockProcessEndLevel).HasColumnName("CntLockProcess_EndLevel");

                entity.Property(e => e.CntLockProcessLevelTx)
                    .HasColumnName("CntLockProcess_LevelTx")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CntLockProcessSi).HasColumnName("CntLockProcess_Si");

                entity.Property(e => e.CntLockSi).HasColumnName("CntLock_Si");

                entity.Property(e => e.CntLockUserName)
                    .HasColumnName("CntLock_UserName")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwCntPaymentOpr>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwCntPaymentOpr");

                entity.Property(e => e.CntPaymentOprDefaultValue)
                    .HasColumnName("CntPaymentOpr_DefaultValue")
                    .HasColumnType("money");

                entity.Property(e => e.CntPaymentOprSi).HasColumnName("CntPaymentOpr_Si");

                entity.Property(e => e.CntPaymentOprTx)
                    .HasColumnName("CntPaymentOpr_Tx")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CntPaymentOprTyp).HasColumnName("CntPaymentOpr_Typ");

                entity.Property(e => e.CntPaymentOprValueTyp).HasColumnName("CntPaymentOpr_ValueTyp");
            });

            modelBuilder.Entity<VwCntTrackAlerts>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwCntTrack_Alerts");

                entity.Property(e => e.AlertIndex)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.AlertTx)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CntContractDate)
                    .HasColumnName("CntContract_Date")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CntContractSi).HasColumnName("CntContract_Si");

                entity.Property(e => e.CntNo)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CntSubject)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwCntVendor>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwCntVendor");

                entity.Property(e => e.CntVendorSi).HasColumnName("CntVendor_Si");

                entity.Property(e => e.CtbCustVndrTypSi).HasColumnName("CtbCustVndrTyp_Si");

                entity.Property(e => e.CtbCustVndrTypTp)
                    .HasColumnName("CtbCustVndrTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrCorporateTyp).HasColumnName("PurVndr_CorporateTyp");

                entity.Property(e => e.PurVndrCu)
                    .HasColumnName("PurVndr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");

                entity.Property(e => e.PurVndrTp)
                    .HasColumnName("PurVndr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwCrossCheck>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwCrossCheck");

                entity.Property(e => e.ChequeDate).HasColumnType("datetime");

                entity.Property(e => e.ChequeNumber)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Credit).HasColumnType("money");

                entity.Property(e => e.CuAccM)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuAccT)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CuCost)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuProject)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Debit).HasColumnType("money");

                entity.Property(e => e.DsDoc).HasColumnType("smalldatetime");

                entity.Property(e => e.SiDdoc).HasColumnName("SiDDoc");

                entity.Property(e => e.TpAccM)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccT)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpCost)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpDoc)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.TpProject)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.VoucherTypeId).HasColumnName("VoucherTypeID");
            });

            modelBuilder.Entity<VwCrossUnCheck>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwCrossUnCheck");

                entity.Property(e => e.ChequeDate).HasColumnType("datetime");

                entity.Property(e => e.ChequeNumber)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Credit).HasColumnType("money");

                entity.Property(e => e.CuAccM)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuAccT)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CuCost)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuProject)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Debit).HasColumnType("money");

                entity.Property(e => e.DsDoc).HasColumnType("smalldatetime");

                entity.Property(e => e.SiDdoc).HasColumnName("SiDDoc");

                entity.Property(e => e.TpAccM)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccT)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpCost)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpDoc)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.TpProject)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.VoucherTypeId).HasColumnName("VoucherTypeID");
            });

            modelBuilder.Entity<VwCtbAddrsSwch>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwCtbAddrsSwch");

                entity.Property(e => e.CtbAddrsAccountName)
                    .HasColumnName("CtbAddrs_AccountName")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsAccountNo)
                    .HasColumnName("CtbAddrs_AccountNo")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CtbAddrsActiveType)
                    .HasColumnName("CtbAddrs_ActiveType")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsAddrs)
                    .HasColumnName("CtbAddrs_Addrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsAdvetise).HasColumnName("CtbAddrs_advetise");

                entity.Property(e => e.CtbAddrsAdvetiseDesc)
                    .HasColumnName("CtbAddrs_advetiseDesc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsBankName)
                    .HasColumnName("CtbAddrs_BankName")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsBranch)
                    .HasColumnName("CtbAddrs_Branch")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsCity)
                    .HasColumnName("CtbAddrs_City")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsCode)
                    .HasColumnName("CtbAddrs_Code")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CtbAddrsContact)
                    .HasColumnName("CtbAddrs_Contact")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsDefault).HasColumnName("CtbAddrs_Default");

                entity.Property(e => e.CtbAddrsDefault2).HasColumnName("CtbAddrs_Default_2");

                entity.Property(e => e.CtbAddrsDesc)
                    .HasColumnName("CtbAddrs_Desc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsDsFirst)
                    .HasColumnName("CtbAddrs_DsFirst")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsEconamical)
                    .HasColumnName("CtbAddrs_Econamical")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsEmail)
                    .HasColumnName("CtbAddrs_Email")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsEnterduced)
                    .HasColumnName("CtbAddrs_Enterduced")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsFax)
                    .HasColumnName("CtbAddrs_Fax")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsInterduced)
                    .HasColumnName("CtbAddrs_interduced")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsLicenseCode)
                    .HasColumnName("CtbAddrs_LicenseCode")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CtbAddrsMajor).HasColumnName("CtbAddrs_major");

                entity.Property(e => e.CtbAddrsMobile)
                    .HasColumnName("CtbAddrs_Mobile")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsModem)
                    .HasColumnName("CtbAddrs_Modem")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsMtr).HasColumnName("CtbAddrs_Mtr");

                entity.Property(e => e.CtbAddrsNatCode)
                    .HasColumnName("CtbAddrs_NatCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsNumber).HasColumnName("CtbAddrs_Number");

                entity.Property(e => e.CtbAddrsOstan)
                    .HasColumnName("CtbAddrs_Ostan")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsOwn)
                    .HasColumnName("CtbAddrs_Own")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPersonSkill)
                    .HasColumnName("CtbAddrs_PersonSkill")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPersonality)
                    .HasColumnName("CtbAddrs_Personality")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPobox)
                    .HasColumnName("CtbAddrs_POBox")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsRelated)
                    .HasColumnName("CtbAddrs_related")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsShahrestan)
                    .HasColumnName("CtbAddrs_Shahrestan")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsShowPrint).HasColumnName("CtbAddrs_ShowPrint");

                entity.Property(e => e.CtbAddrsSi).HasColumnName("CtbAddrs_Si");

                entity.Property(e => e.CtbAddrsSwchTbl)
                    .IsRequired()
                    .HasColumnName("CtbAddrsSwch_Tbl")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsSwchTblSi).HasColumnName("CtbAddrsSwch_Tbl_Si");

                entity.Property(e => e.CtbAddrsTel)
                    .HasColumnName("CtbAddrs_Tel")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsZipcode)
                    .HasColumnName("CtbAddrs_ZIPCode")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.SalCitySi).HasColumnName("SalCity_Si");

                entity.Property(e => e.SalCountrySi).HasColumnName("SalCountry_Si");

                entity.Property(e => e.SalCustStLook).HasColumnName("SalCustSt_Look");

                entity.Property(e => e.SalProvinceSi).HasColumnName("SalProvince_Si");
            });

            modelBuilder.Entity<VwCtbOrgPst>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwCtbOrgPst");

                entity.Property(e => e.CtbOrgDepCu)
                    .HasColumnName("CtbOrgDep_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CtbOrgDepLvl).HasColumnName("CtbOrgDep_Lvl");

                entity.Property(e => e.CtbOrgDepSi).HasColumnName("CtbOrgDep_Si");

                entity.Property(e => e.CtbOrgDepTp)
                    .HasColumnName("CtbOrgDep_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbOrgJobCu)
                    .HasColumnName("CtbOrgJob_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CtbOrgJobSi).HasColumnName("CtbOrgJob_Si");

                entity.Property(e => e.CtbOrgJobTp)
                    .HasColumnName("CtbOrgJob_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbOrgPstAsgn).HasColumnName("CtbOrgPst_Asgn");

                entity.Property(e => e.CtbOrgPstCu)
                    .IsRequired()
                    .HasColumnName("CtbOrgPst_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CtbOrgPstPrmt).HasColumnName("CtbOrgPst_Prmt");

                entity.Property(e => e.CtbOrgPstSi).HasColumnName("CtbOrgPst_Si");

                entity.Property(e => e.CtbOrgPstTp)
                    .IsRequired()
                    .HasColumnName("CtbOrgPst_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwIntgDbPurchasePursuit>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Vw_IntgDB_PurchasePursuit");

                entity.Property(e => e.Expr1)
                    .IsRequired()
                    .HasMaxLength(15);

                entity.Property(e => e.InvDocTmpDQty).HasColumnName("InvDocTmpD_Qty");

                entity.Property(e => e.InvDocTmpHCu).HasColumnName("InvDocTmpH_Cu");

                entity.Property(e => e.InvDocTmpHDs)
                    .HasColumnName("InvDocTmpH_Ds")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OrderHProcessDesc)
                    .IsRequired()
                    .HasColumnName("OrderH_process_Desc")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.PurBuyHDt)
                    .HasColumnName("PurBuyH_Dt")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurOrdBuyHCu)
                    .HasColumnName("PurOrdBuyH_Cu")
                    .HasMaxLength(50);

                entity.Property(e => e.PurOrdBuyHDt)
                    .HasColumnName("PurOrdBuyH_DT")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurOrderHCu).HasColumnName("PurOrderH_Cu");

                entity.Property(e => e.PurOrderHDt)
                    .HasColumnName("PurOrderH_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PurOrderHSi).HasColumnName("PurOrderH_Si");

                entity.Property(e => e.PurReqProcSi).HasColumnName("PurReqProc_Si");

                entity.Property(e => e.PurReqProcTp)
                    .HasColumnName("PurReqProc_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurReqstDDt)
                    .HasColumnName("PurReqstD_DT")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PurReqstDFirstQty).HasColumnName("PurReqstD_FirstQty");

                entity.Property(e => e.PurReqstDQty).HasColumnName("PurReqstD_Qty");

                entity.Property(e => e.PurReqstHCu).HasColumnName("PurReqstH_Cu");

                entity.Property(e => e.PurReqstHDt)
                    .HasColumnName("PurReqstH_DT")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurReqstHProcess).HasColumnName("PurReqstH_process");

                entity.Property(e => e.PurReqstHSi).HasColumnName("PurReqstH_Si");

                entity.Property(e => e.PurVndrTp)
                    .HasColumnName("PurVndr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwIntgDbPurchaseRecipt>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Vw_IntgDB_PurchaseRecipt");

                entity.Property(e => e.InvDocTmpDQty).HasColumnName("InvDocTmpD_Qty");

                entity.Property(e => e.InvDocTmpDQtyAccept).HasColumnName("InvDocTmpD_QtyAccept");

                entity.Property(e => e.InvDocTmpHCu).HasColumnName("InvDocTmpH_Cu");

                entity.Property(e => e.InvDocTmpHDs)
                    .HasColumnName("InvDocTmpH_Ds")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OrderHProcessDesc)
                    .IsRequired()
                    .HasColumnName("OrderH_process_Desc")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.PurBuyHCu)
                    .IsRequired()
                    .HasColumnName("PurBuyH_Cu")
                    .HasMaxLength(15);

                entity.Property(e => e.PurBuyHDt)
                    .HasColumnName("PurBuyH_Dt")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurOrdBuyHCu)
                    .HasColumnName("PurOrdBuyH_Cu")
                    .HasMaxLength(50);

                entity.Property(e => e.PurOrdBuyHDt)
                    .HasColumnName("PurOrdBuyH_DT")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurOrderHCu).HasColumnName("PurOrderH_Cu");

                entity.Property(e => e.PurOrderHDt)
                    .HasColumnName("PurOrderH_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PurOrderHSi).HasColumnName("PurOrderH_Si");

                entity.Property(e => e.PurReqProcSi).HasColumnName("PurReqProc_Si");

                entity.Property(e => e.PurReqProcTp)
                    .HasColumnName("PurReqProc_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurReqstDDt)
                    .HasColumnName("PurReqstD_DT")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PurReqstDFirstQty).HasColumnName("PurReqstD_FirstQty");

                entity.Property(e => e.PurReqstDQty).HasColumnName("PurReqstD_Qty");

                entity.Property(e => e.PurReqstHCu).HasColumnName("PurReqstH_Cu");

                entity.Property(e => e.PurReqstHDt)
                    .HasColumnName("PurReqstH_DT")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurReqstHProcess).HasColumnName("PurReqstH_process");

                entity.Property(e => e.PurReqstHSi).HasColumnName("PurReqstH_Si");

                entity.Property(e => e.PurVndrTp)
                    .HasColumnName("PurVndr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwInvCntBatchD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvCntBatchD");

                entity.Property(e => e.InvCntBatchDN).HasColumnName("InvCntBatchD_N");

                entity.Property(e => e.InvCntBatchDN1).HasColumnName("InvCntBatchD_N1");

                entity.Property(e => e.InvCntBatchDN2).HasColumnName("InvCntBatchD_N2");

                entity.Property(e => e.InvCntBatchDN3).HasColumnName("InvCntBatchD_N3");

                entity.Property(e => e.InvCntBatchDSi).HasColumnName("InvCntBatchD_Si");

                entity.Property(e => e.InvCntBatchDTag).HasColumnName("InvCntBatchD_Tag");

                entity.Property(e => e.InvCntHSi).HasColumnName("InvCntH_Si");

                entity.Property(e => e.InvDocDExpNo)
                    .HasColumnName("InvDocD_ExpNo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocDExpirDateM)
                    .HasColumnName("InvDocD_ExpirDateM")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsIcratrCu)
                    .HasColumnName("InvGdsICratr_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsIcratrTp)
                    .HasColumnName("InvGdsICratr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsToInvQtyReal).HasColumnName("InvGdsToInv_QtyReal");

                entity.Property(e => e.InvGdsToInvShelf)
                    .HasColumnName("InvGdsToInv_Shelf")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");
            });

            modelBuilder.Entity<VwInvCntD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvCntD");

                entity.Property(e => e.InvCntDN).HasColumnName("InvCntD_N");

                entity.Property(e => e.InvCntDN1).HasColumnName("InvCntD_N1");

                entity.Property(e => e.InvCntDN2).HasColumnName("InvCntD_N2");

                entity.Property(e => e.InvCntDN3).HasColumnName("InvCntD_N3");

                entity.Property(e => e.InvCntDSi).HasColumnName("InvCntD_Si");

                entity.Property(e => e.InvCntDTag).HasColumnName("InvCntD_Tag");

                entity.Property(e => e.InvCntHSi).HasColumnName("InvCntH_Si");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsToInvQtyReal).HasColumnName("InvGdsToInv_QtyReal");

                entity.Property(e => e.InvGdsToInvShelf)
                    .HasColumnName("InvGdsToInv_Shelf")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");
            });

            modelBuilder.Entity<VwInvCntH>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvCntH");

                entity.Property(e => e.InvCntHDs)
                    .HasColumnName("InvCntH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.InvCntHSi).HasColumnName("InvCntH_Si");

                entity.Property(e => e.InvCntHTp)
                    .HasColumnName("InvCntH_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtCu)
                    .HasColumnName("InvInvt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwInvControlGds>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvControlGds");

                entity.Property(e => e.InvControlGdsAccept1).HasColumnName("InvControlGds_Accept1");

                entity.Property(e => e.InvControlGdsAccept2).HasColumnName("InvControlGds_Accept2");

                entity.Property(e => e.InvControlGdsAcptCdt)
                    .HasColumnName("InvControlGds_AcptCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvControlGdsAcptMus)
                    .HasColumnName("InvControlGds_AcptMUs")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvControlGdsAcptTim)
                    .HasColumnName("InvControlGds_AcptTim")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.InvControlGdsAcs1).HasColumnName("InvControlGds_Acs1");

                entity.Property(e => e.InvControlGdsAcs2).HasColumnName("InvControlGds_Acs2");

                entity.Property(e => e.InvControlGdsAql).HasColumnName("InvControlGds_AQL");

                entity.Property(e => e.InvControlGdsBulK).HasColumnName("InvControlGds_BulK");

                entity.Property(e => e.InvControlGdsCu)
                    .HasColumnName("InvControlGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvControlGdsIncorectQty).HasColumnName("InvControlGds_IncorectQty");

                entity.Property(e => e.InvControlGdsIsTention).HasColumnName("InvControlGds_IsTention");

                entity.Property(e => e.InvControlGdsLackQty).HasColumnName("InvControlGds_LackQty");

                entity.Property(e => e.InvControlGdsQtyAccept1).HasColumnName("InvControlGds_QtyAccept1");

                entity.Property(e => e.InvControlGdsQtyAccept2).HasColumnName("InvControlGds_QtyAccept2");

                entity.Property(e => e.InvControlGdsSi).HasColumnName("InvControlGds_Si");

                entity.Property(e => e.InvControlGdsSndInv).HasColumnName("InvControlGds_SndInv");

                entity.Property(e => e.InvControlGdsStmpCdt)
                    .HasColumnName("InvControlGds_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvControlGdsStmpMus)
                    .HasColumnName("InvControlGds_StmpMUs")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvControlGdsStmpTim)
                    .HasColumnName("InvControlGds_StmpTim")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.InvControlGdsSts).HasColumnName("InvControlGds_Sts");

                entity.Property(e => e.InvDocTmpDQty).HasColumnName("InvDocTmpD_Qty");

                entity.Property(e => e.InvDocTmpDQtyAccept).HasColumnName("InvDocTmpD_QtyAccept");

                entity.Property(e => e.InvDocTmpDSi).HasColumnName("InvDocTmpD_Si");

                entity.Property(e => e.InvDocTmpHCu).HasColumnName("InvDocTmpH_Cu");

                entity.Property(e => e.InvDocTmpHDs)
                    .HasColumnName("InvDocTmpH_Ds")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTmpHSi).HasColumnName("InvDocTmpH_Si");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsResultSi).HasColumnName("InvGdsResult_Si");

                entity.Property(e => e.InvGdsResultTp)
                    .HasColumnName("InvGdsResult_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");
            });

            modelBuilder.Entity<VwInvDocAuto>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvDocAuto");

                entity.Property(e => e.InvDocAutoExpandBom).HasColumnName("InvDocAuto_ExpandBOM");

                entity.Property(e => e.InvDocTypSiDest).HasColumnName("InvDocTyp_Si_Dest");

                entity.Property(e => e.InvDocTypSiSource).HasColumnName("InvDocTyp_Si_Source");

                entity.Property(e => e.InvDocTypTpDest)
                    .HasColumnName("InvDocTyp_Tp_Dest")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTypTpDest2)
                    .HasColumnName("InvDocTyp_Tp_Dest2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTypTpSource)
                    .HasColumnName("InvDocTyp_Tp_Source")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTypTpSource2)
                    .HasColumnName("InvDocTyp_Tp_Source2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtCuDest)
                    .HasColumnName("InvInvt_Cu_Dest")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtCuSource)
                    .HasColumnName("InvInvt_Cu_Source")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtSiDest).HasColumnName("InvInvt_Si_Dest");

                entity.Property(e => e.InvInvtSiSource).HasColumnName("InvInvt_Si_Source");

                entity.Property(e => e.InvInvtTpDest)
                    .HasColumnName("InvInvt_Tp_Dest")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtTpSource)
                    .HasColumnName("InvInvt_Tp_Source")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwInvDocD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvDocD");

                entity.Property(e => e.AccLcSiInvt).HasColumnName("AccLC_Si_Invt");

                entity.Property(e => e.AccLcSiSalCust).HasColumnName("AccLC_Si_SalCust");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLmSiHdr).HasColumnName("AccLM_Si_Hdr");

                entity.Property(e => e.AccLmSiInvt).HasColumnName("AccLM_Si_Invt");

                entity.Property(e => e.AccLmSiInvt2).HasColumnName("AccLM_Si_Invt_2");

                entity.Property(e => e.AccLpSiInvt).HasColumnName("AccLP_Si_Invt");

                entity.Property(e => e.AccLpSiSalCust).HasColumnName("AccLP_Si_SalCust");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AccLtSiInvt).HasColumnName("AccLT_Si_Invt");

                entity.Property(e => e.AccLtSiInvt2).HasColumnName("AccLT_Si_Invt_2");

                entity.Property(e => e.AccMSi).HasColumnName("AccM_Si");

                entity.Property(e => e.AccTSi).HasColumnName("AccT_Si");

                entity.Property(e => e.BarNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsAddrs)
                    .HasColumnName("CtbAddrs_Addrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsAddrsCust)
                    .HasColumnName("CtbAddrs_AddrsCust")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsCity)
                    .HasColumnName("CtbAddrs_City")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsContact)
                    .HasColumnName("CtbAddrs_Contact")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsDesc)
                    .HasColumnName("CtbAddrs_Desc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsEconamical)
                    .HasColumnName("CtbAddrs_Econamical")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsEmail)
                    .HasColumnName("CtbAddrs_Email")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsExportAddrs)
                    .HasColumnName("CtbAddrsExport_Addrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsExportCity)
                    .HasColumnName("CtbAddrsExport_City")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsExportEconamical)
                    .HasColumnName("CtbAddrsExport_Econamical")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsExportEmail)
                    .HasColumnName("CtbAddrsExport_Email")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsExportFax)
                    .HasColumnName("CtbAddrsExport_Fax")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsExportMobile)
                    .HasColumnName("CtbAddrsExport_Mobile")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsExportModem)
                    .HasColumnName("CtbAddrsExport_Modem")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsExportNatCode)
                    .HasColumnName("CtbAddrsExport_NatCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsExportNumber).HasColumnName("CtbAddrsExport_Number");

                entity.Property(e => e.CtbAddrsExportPobox)
                    .HasColumnName("CtbAddrsExport_POBox")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsExportTel)
                    .HasColumnName("CtbAddrsExport_Tel")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsExportZipcode)
                    .HasColumnName("CtbAddrsExport_ZIPCode")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsFax)
                    .HasColumnName("CtbAddrs_Fax")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsMajor).HasColumnName("CtbAddrs_major");

                entity.Property(e => e.CtbAddrsMobile)
                    .HasColumnName("CtbAddrs_Mobile")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsModem)
                    .HasColumnName("CtbAddrs_Modem")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsNatCode)
                    .HasColumnName("CtbAddrs_NatCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsNumber).HasColumnName("CtbAddrs_Number");

                entity.Property(e => e.CtbAddrsOstan)
                    .HasColumnName("CtbAddrs_Ostan")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPersonality)
                    .HasColumnName("CtbAddrs_Personality")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPobox)
                    .HasColumnName("CtbAddrs_POBox")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPurvndrEmail)
                    .HasColumnName("CtbAddrsPurvndr_Email")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPurvndrFax)
                    .HasColumnName("CtbAddrsPurvndr_Fax")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPurvndrModem)
                    .HasColumnName("CtbAddrsPurvndr_Modem")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPurvndrPobox)
                    .HasColumnName("CtbAddrsPurvndr_POBox")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsShahrestan)
                    .HasColumnName("CtbAddrs_Shahrestan")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsSi).HasColumnName("CtbAddrs_Si");

                entity.Property(e => e.CtbAddrsTel)
                    .HasColumnName("CtbAddrs_Tel")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsTelCust)
                    .HasColumnName("CtbAddrs_TelCust")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsZipcode)
                    .HasColumnName("CtbAddrs_ZIPCode")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCostCu)
                    .HasColumnName("CtbCost_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCostSi).HasColumnName("CtbCost_Si");

                entity.Property(e => e.CtbCostTp)
                    .HasColumnName("CtbCost_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.CtbCurncyTp)
                    .HasColumnName("CtbCurncy_Tp")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCustVndrTypTp)
                    .HasColumnName("CtbCustVndrTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbProjectCu)
                    .HasColumnName("CtbProject_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CtbProjectSi).HasColumnName("CtbProject_Si");

                entity.Property(e => e.CtbProjectTp)
                    .HasColumnName("CtbProject_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.CtbPrpVluValue)
                    .HasColumnName("CtbPrpVlu_Value")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CuAccM)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuAccT)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CuCost)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuProject)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.DescDriver)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvControlGdsSi).HasColumnName("InvControlGds_Si");

                entity.Property(e => e.InvDocDDesc)
                    .HasColumnName("InvDocD_Desc")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocDExpNo)
                    .HasColumnName("InvDocD_ExpNo")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocDExpirDateM)
                    .HasColumnName("InvDocD_ExpirDateM")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvDocDExpireDate)
                    .HasColumnName("InvDocD_ExpireDate")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.InvDocDFinalCostPrice).HasColumnName("InvDocD_FinalCostPrice");

                entity.Property(e => e.InvDocDPrice)
                    .HasColumnName("InvDocD_Price")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocDPriceBs)
                    .HasColumnName("InvDocD_PriceBs")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocDPriceC)
                    .HasColumnName("InvDocD_PriceC")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocDPriceCbs)
                    .HasColumnName("InvDocD_PriceCBs")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocDQty).HasColumnName("InvDocD_Qty");

                entity.Property(e => e.InvDocDQty2).HasColumnName("InvDocD_Qty2");

                entity.Property(e => e.InvDocDQtyOriginal).HasColumnName("InvDocD_Qty_Original");

                entity.Property(e => e.InvDocDSerialKey)
                    .HasColumnName("InvDocD_SerialKey")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocDSi).HasColumnName("InvDocD_Si");

                entity.Property(e => e.InvDocDTotal)
                    .HasColumnName("InvDocD_Total")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocDTotalBs)
                    .HasColumnName("InvDocD_TotalBs")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocDTotalC)
                    .HasColumnName("InvDocD_TotalC")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocDTotalCbs)
                    .HasColumnName("InvDocD_TotalCBs")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocDTp)
                    .HasColumnName("InvDocD_Tp")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocDstsSi).HasColumnName("InvDocDSts_Si");

                entity.Property(e => e.InvDocDstsTp)
                    .HasColumnName("InvDocDSts_Tp")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHCarNo)
                    .HasColumnName("InvDocH_CarNo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHCu).HasColumnName("InvDocH_Cu");

                entity.Property(e => e.InvDocHCu2).HasColumnName("InvDocH_Cu2");

                entity.Property(e => e.InvDocHCu21).HasColumnName("InvDocH_Cu_2");

                entity.Property(e => e.InvDocHDefinite).HasColumnName("InvDocH_Definite");

                entity.Property(e => e.InvDocHDlvBuy)
                    .HasColumnName("InvDocH_DlvBuy")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHDlvLoc)
                    .HasColumnName("InvDocH_DlvLoc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHDm)
                    .HasColumnName("InvDocH_Dm")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvDocHDrivername)
                    .HasColumnName("InvDocH_Drivername")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHDs)
                    .HasColumnName("InvDocH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHExpNo)
                    .HasColumnName("InvDocH_ExpNo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHGood).HasColumnName("InvDocH_Good");

                entity.Property(e => e.InvDocHReference)
                    .HasColumnName("InvDocH_Reference")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHRfrncTyp).HasColumnName("InvDocH_RfrncTyp");

                entity.Property(e => e.InvDocHSi).HasColumnName("InvDocH_Si");

                entity.Property(e => e.InvDocHSi2).HasColumnName("InvDocH_Si_2");

                entity.Property(e => e.InvDocHSiParent).HasColumnName("InvDocH_Si_Parent");

                entity.Property(e => e.InvDocHStmpTime)
                    .HasColumnName("InvDocH_StmpTime")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHStmpTimeEdit)
                    .HasColumnName("InvDocH_StmpTimeEdit")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHSts).HasColumnName("InvDocH_Sts");

                entity.Property(e => e.InvDocHTp)
                    .HasColumnName("InvDocH_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvDocTmpDSi).HasColumnName("InvDocTmpD_Si");

                entity.Property(e => e.InvDocTmpHSi).HasColumnName("InvDocTmpH_Si");

                entity.Property(e => e.InvDocTypSi).HasColumnName("InvDocTyp_Si");

                entity.Property(e => e.InvDocTypTp)
                    .HasColumnName("InvDocTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTypTp2)
                    .HasColumnName("InvDocTyp_Tp2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHSi).HasColumnName("InvExportPrmH_Si");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsGrpCu)
                    .HasColumnName("InvGdsGrp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsGrpSi).HasColumnName("InvGdsGrp_Si");

                entity.Property(e => e.InvGdsGrpSi2).HasColumnName("InvGdsGrp_Si_2");

                entity.Property(e => e.InvGdsGrpTp)
                    .HasColumnName("InvGdsGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsIcntryCu)
                    .HasColumnName("InvGdsICntry_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsIcntryTp)
                    .HasColumnName("InvGdsICntry_Tp")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsIcratrCu)
                    .HasColumnName("InvGdsICratr_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsIcratrSi).HasColumnName("InvGdsICratr_Si");

                entity.Property(e => e.InvGdsIcratrTp)
                    .HasColumnName("InvGdsICratr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsLname)
                    .HasColumnName("InvGds_LName")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsQtyReal).HasColumnName("InvGds_QtyReal");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTechNo)
                    .HasColumnName("InvGds_TechNo")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsToInvShelf)
                    .HasColumnName("InvGdsToInv_Shelf")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvGdsTypSi).HasColumnName("InvGdsTyp_Si");

                entity.Property(e => e.InvGdsTypTp)
                    .HasColumnName("InvGdsTyp_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtCu)
                    .HasColumnName("InvInvt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtCu2)
                    .HasColumnName("InvInvt_Cu_2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvInvtSi2).HasColumnName("InvInvt_Si_2");

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtTp2)
                    .HasColumnName("InvInvt_Tp_2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvRqstHSi).HasColumnName("InvRqstH_Si");

                entity.Property(e => e.InvTypCu)
                    .HasColumnName("InvTyp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvTypSi).HasColumnName("InvTyp_Si");

                entity.Property(e => e.InvTypTp)
                    .HasColumnName("InvTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntCu)
                    .HasColumnName("InvUnt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntCuOriginal)
                    .HasColumnName("InvUnt_Cu_Original")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntTpOriginal)
                    .HasColumnName("InvUnt_Tp_Original")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvdeliveryCu)
                    .HasColumnName("Invdelivery_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvdeliverySi).HasColumnName("Invdelivery_Si");

                entity.Property(e => e.InvdeliveryTp)
                    .HasColumnName("Invdelivery_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvgdsGrpCu2)
                    .HasColumnName("InvgdsGrp_Cu_2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvgdsGrpTp2)
                    .HasColumnName("InvgdsGrp_Tp_2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPersonnelCu)
                    .HasColumnName("PerPersonnel_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPersonnelSi).HasColumnName("PerPersonnel_Si");

                entity.Property(e => e.PerPersonnelTp)
                    .HasColumnName("PerPersonnel_Tp")
                    .HasMaxLength(51)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlCu)
                    .HasColumnName("PerPrsnl_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlCu1)
                    .HasColumnName("PerPrsnl_Cu_1")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlCu2)
                    .HasColumnName("PerPrsnl_Cu_2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.Property(e => e.PerPrsnlSi1).HasColumnName("PerPrsnl_Si_1");

                entity.Property(e => e.PerPrsnlSi2).HasColumnName("PerPrsnl_Si_2");

                entity.Property(e => e.PerPrsnlTp)
                    .HasColumnName("PerPrsnl_Tp")
                    .HasMaxLength(51)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlTp1)
                    .HasColumnName("PerPrsnl_Tp_1")
                    .HasMaxLength(51)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlTp2)
                    .HasColumnName("PerPrsnl_Tp_2")
                    .HasMaxLength(51)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrAccCSi).HasColumnName("PurVndr_AccC_Si");

                entity.Property(e => e.PurVndrAccMSi).HasColumnName("PurVndr_AccM_Si");

                entity.Property(e => e.PurVndrAccPSi).HasColumnName("PurVndr_AccP_Si");

                entity.Property(e => e.PurVndrAccTSi).HasColumnName("PurVndr_AccT_Si");

                entity.Property(e => e.PurVndrComment)
                    .HasColumnName("PurVndr_Comment")
                    .HasMaxLength(250);

                entity.Property(e => e.PurVndrCorporateTyp).HasColumnName("PurVndr_CorporateTyp");

                entity.Property(e => e.PurVndrCorporateTypTp)
                    .HasColumnName("PurVndr_CorporateTyp_Tp")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrCu)
                    .HasColumnName("PurVndr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrGrpCu)
                    .HasColumnName("PurVndrGrp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrGrpSi).HasColumnName("PurVndrGrp_Si");

                entity.Property(e => e.PurVndrGrpTp)
                    .HasColumnName("PurVndrGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");

                entity.Property(e => e.PurVndrTp)
                    .HasColumnName("PurVndr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchSi).HasColumnName("SalBrnch_Si");

                entity.Property(e => e.SalCustAccLmSi).HasColumnName("SalCust_AccLM_Si");

                entity.Property(e => e.SalCustAccTSi).HasColumnName("SalCust_AccT_Si");

                entity.Property(e => e.SalCustCu)
                    .HasColumnName("SalCust_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpCu)
                    .HasColumnName("SalCustGrp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpSi).HasColumnName("SalCustGrp_Si");

                entity.Property(e => e.SalCustGrpTp)
                    .HasColumnName("SalCustGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalDriverSi).HasColumnName("SalDriver_Si");

                entity.Property(e => e.SalDriverTp)
                    .HasColumnName("SalDriver_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalExportPrmDSi).HasColumnName("SalExportPrmD_Si");

                entity.Property(e => e.SalExportPrmHCu).HasColumnName("SalExportPrmH_Cu");

                entity.Property(e => e.SalExportPrmHSi).HasColumnName("SalExportPrmH_Si");

                entity.Property(e => e.SalIntrmdSi).HasColumnName("SalIntrmd_Si");

                entity.Property(e => e.SalInvcHCu).HasColumnName("SalInvcH_Cu");

                entity.Property(e => e.SalInvcHSi).HasColumnName("SalInvcH_Si");

                entity.Property(e => e.SalPreInvcHSi).HasColumnName("SalPreInvcH_Si");

                entity.Property(e => e.SalRetInvcHSi).HasColumnName("SalRetInvcH_Si");

                entity.Property(e => e.SalTypSi).HasColumnName("SalTyp_Si");

                entity.Property(e => e.TpAccM)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccT)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpCost)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpProject)
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwInvDocD2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvDocD2");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.CtbCostSi).HasColumnName("CtbCost_Si");

                entity.Property(e => e.CtbProjectSi).HasColumnName("CtbProject_Si");

                entity.Property(e => e.InvDocDPrice)
                    .HasColumnName("InvDocD_Price")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocDQty).HasColumnName("InvDocD_Qty");

                entity.Property(e => e.InvDocDSi).HasColumnName("InvDocD_Si");

                entity.Property(e => e.InvDocDTotal)
                    .HasColumnName("InvDocD_Total")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocHSi).HasColumnName("InvDocH_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");
            });

            modelBuilder.Entity<VwInvDocDsrl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvDocDSrl");

                entity.Property(e => e.InvDocDsrlDestroy).HasColumnName("InvDocDSrl_Destroy");

                entity.Property(e => e.InvDocDsrlDestroySts)
                    .HasColumnName("InvDocDSrl_DestroySts")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocDsrlSrl)
                    .IsRequired()
                    .HasColumnName("InvDocDSrl_Srl")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHCu).HasColumnName("InvDocH_Cu");

                entity.Property(e => e.InvDocHDs)
                    .IsRequired()
                    .HasColumnName("InvDocH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHSi).HasColumnName("InvDocH_Si");

                entity.Property(e => e.InvDocTypSi).HasColumnName("InvDocTyp_Si");

                entity.Property(e => e.InvDocTypTp)
                    .HasColumnName("InvDocTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");
            });

            modelBuilder.Entity<VwInvDocDtrn>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvDocDTrn");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.CtbCostSi).HasColumnName("CtbCost_Si");

                entity.Property(e => e.CtbProjectSi).HasColumnName("CtbProject_Si");

                entity.Property(e => e.InvDocDPrice)
                    .HasColumnName("InvDocD_Price")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocDQty).HasColumnName("InvDocD_Qty");

                entity.Property(e => e.InvDocDQtyOriginal).HasColumnName("InvDocD_Qty_Original");

                entity.Property(e => e.InvDocDSi).HasColumnName("InvDocD_Si");

                entity.Property(e => e.InvDocDTotal)
                    .HasColumnName("InvDocD_Total")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocDTp)
                    .HasColumnName("InvDocD_Tp")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHCu).HasColumnName("InvDocH_Cu");

                entity.Property(e => e.InvDocHDefinite).HasColumnName("InvDocH_Definite");

                entity.Property(e => e.InvDocHDs)
                    .HasColumnName("InvDocH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHReference)
                    .HasColumnName("InvDocH_Reference")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHSi).HasColumnName("InvDocH_Si");

                entity.Property(e => e.InvDocTypSi).HasColumnName("InvDocTyp_Si");

                entity.Property(e => e.InvDocTypTp)
                    .HasColumnName("InvDocTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTypTp2)
                    .HasColumnName("InvDocTyp_Tp2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsGrpSi).HasColumnName("InvGdsGrp_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTechNo)
                    .HasColumnName("InvGds_TechNo")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvGdsTypSi).HasColumnName("InvGdsTyp_Si");

                entity.Property(e => e.InvInvtCu)
                    .HasColumnName("InvInvt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntCu)
                    .HasColumnName("InvUnt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrCu)
                    .HasColumnName("PurVndr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");

                entity.Property(e => e.PurVndrTp)
                    .HasColumnName("PurVndr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");
            });

            modelBuilder.Entity<VwInvDocDwithoutUser>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvDocDWithoutUser");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLmSiHdr).HasColumnName("AccLM_Si_Hdr");

                entity.Property(e => e.AccLmSiInvt).HasColumnName("AccLM_Si_Invt");

                entity.Property(e => e.AccLmSiInvt2).HasColumnName("AccLM_Si_Invt_2");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AccLtSiInvt).HasColumnName("AccLT_Si_Invt");

                entity.Property(e => e.AccLtSiInvt2).HasColumnName("AccLT_Si_Invt_2");

                entity.Property(e => e.BarNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsAddrs)
                    .HasColumnName("CtbAddrs_Addrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsTel)
                    .HasColumnName("CtbAddrs_Tel")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCostCu)
                    .HasColumnName("CtbCost_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCostSi).HasColumnName("CtbCost_Si");

                entity.Property(e => e.CtbCostTp)
                    .HasColumnName("CtbCost_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.CtbCurncyTp)
                    .HasColumnName("CtbCurncy_Tp")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbProjectCu)
                    .HasColumnName("CtbProject_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CtbProjectSi).HasColumnName("CtbProject_Si");

                entity.Property(e => e.CtbProjectTp)
                    .HasColumnName("CtbProject_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.CtbPrpVluValue)
                    .HasColumnName("CtbPrpVlu_Value")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CuAccM)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuAccT)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DescDriver)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvControlGdsSi).HasColumnName("InvControlGds_Si");

                entity.Property(e => e.InvDocDDesc)
                    .HasColumnName("InvDocD_Desc")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocDExpNo)
                    .HasColumnName("InvDocD_ExpNo")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocDExpireDate)
                    .HasColumnName("InvDocD_ExpireDate")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.InvDocDFinalCostPrice).HasColumnName("InvDocD_FinalCostPrice");

                entity.Property(e => e.InvDocDPrice)
                    .HasColumnName("InvDocD_Price")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocDPriceC)
                    .HasColumnName("InvDocD_PriceC")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocDQty).HasColumnName("InvDocD_Qty");

                entity.Property(e => e.InvDocDQty2).HasColumnName("InvDocD_Qty2");

                entity.Property(e => e.InvDocDQtyOriginal).HasColumnName("InvDocD_Qty_Original");

                entity.Property(e => e.InvDocDSerialKey)
                    .HasColumnName("InvDocD_SerialKey")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocDSi).HasColumnName("InvDocD_Si");

                entity.Property(e => e.InvDocDTotal)
                    .HasColumnName("InvDocD_Total")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocDTotalBs)
                    .HasColumnName("InvDocD_TotalBs")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocDTotalC)
                    .HasColumnName("InvDocD_TotalC")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocDTp)
                    .HasColumnName("InvDocD_Tp")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocDstsSi).HasColumnName("InvDocDSts_Si");

                entity.Property(e => e.InvDocDstsTp)
                    .HasColumnName("InvDocDSts_Tp")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHCarNo)
                    .HasColumnName("InvDocH_CarNo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHCu).HasColumnName("InvDocH_Cu");

                entity.Property(e => e.InvDocHCu2).HasColumnName("InvDocH_Cu2");

                entity.Property(e => e.InvDocHDefinite).HasColumnName("InvDocH_Definite");

                entity.Property(e => e.InvDocHDlvBuy)
                    .HasColumnName("InvDocH_DlvBuy")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHDlvLoc)
                    .HasColumnName("InvDocH_DlvLoc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHDm)
                    .HasColumnName("InvDocH_Dm")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvDocHDrivername)
                    .HasColumnName("InvDocH_Drivername")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHDs)
                    .HasColumnName("InvDocH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHExpNo)
                    .HasColumnName("InvDocH_ExpNo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHGood).HasColumnName("InvDocH_Good");

                entity.Property(e => e.InvDocHReference)
                    .HasColumnName("InvDocH_Reference")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHRfrncTyp).HasColumnName("InvDocH_RfrncTyp");

                entity.Property(e => e.InvDocHSi).HasColumnName("InvDocH_Si");

                entity.Property(e => e.InvDocHSi2).HasColumnName("InvDocH_Si_2");

                entity.Property(e => e.InvDocHSiParent).HasColumnName("InvDocH_Si_Parent");

                entity.Property(e => e.InvDocHTp)
                    .HasColumnName("InvDocH_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvDocTmpDSi).HasColumnName("InvDocTmpD_Si");

                entity.Property(e => e.InvDocTmpHSi).HasColumnName("InvDocTmpH_Si");

                entity.Property(e => e.InvDocTypSi).HasColumnName("InvDocTyp_Si");

                entity.Property(e => e.InvDocTypTp)
                    .HasColumnName("InvDocTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTypTp2)
                    .HasColumnName("InvDocTyp_Tp2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHSi).HasColumnName("InvExportPrmH_Si");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsGrpSi).HasColumnName("InvGdsGrp_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTechNo)
                    .HasColumnName("InvGds_TechNo")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsToInvShelf)
                    .HasColumnName("InvGdsToInv_Shelf")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvGdsTypSi).HasColumnName("InvGdsTyp_Si");

                entity.Property(e => e.InvGdsTypTp)
                    .HasColumnName("InvGdsTyp_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtCu)
                    .HasColumnName("InvInvt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvInvtSi2).HasColumnName("InvInvt_Si_2");

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntCu)
                    .HasColumnName("InvUnt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntCuOriginal)
                    .HasColumnName("InvUnt_Cu_Original")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntTpOriginal)
                    .HasColumnName("InvUnt_Tp_Original")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.PerPersonnelCu)
                    .HasColumnName("PerPersonnel_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPersonnelSi).HasColumnName("PerPersonnel_Si");

                entity.Property(e => e.PerPersonnelTp)
                    .HasColumnName("PerPersonnel_Tp")
                    .HasMaxLength(51)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrAccMSi).HasColumnName("PurVndr_AccM_Si");

                entity.Property(e => e.PurVndrAccTSi).HasColumnName("PurVndr_AccT_Si");

                entity.Property(e => e.PurVndrCu)
                    .HasColumnName("PurVndr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrGrpSi).HasColumnName("PurVndrGrp_Si");

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");

                entity.Property(e => e.PurVndrTp)
                    .HasColumnName("PurVndr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustAccLmSi).HasColumnName("SalCust_AccLM_Si");

                entity.Property(e => e.SalCustAccTSi).HasColumnName("SalCust_AccT_Si");

                entity.Property(e => e.SalCustCu)
                    .HasColumnName("SalCust_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpCu)
                    .HasColumnName("SalCustGrp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpSi).HasColumnName("SalCustGrp_Si");

                entity.Property(e => e.SalCustGrpTp)
                    .HasColumnName("SalCustGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalDriverSi).HasColumnName("SalDriver_Si");

                entity.Property(e => e.SalDriverTp)
                    .HasColumnName("SalDriver_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalExportPrmHSi).HasColumnName("SalExportPrmH_Si");

                entity.Property(e => e.TpAccM)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccT)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwInvDocH>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvDocH");

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLcSiInvt).HasColumnName("AccLC_Si_Invt");

                entity.Property(e => e.AccLcSiSalCust).HasColumnName("AccLC_Si_SalCust");

                entity.Property(e => e.AccLmCu)
                    .HasColumnName("AccLM_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmSiInvt).HasColumnName("AccLM_Si_Invt");

                entity.Property(e => e.AccLmSiInvt2).HasColumnName("AccLM_Si_Invt_2");

                entity.Property(e => e.AccLmTp)
                    .HasColumnName("AccLM_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLpSiInvt).HasColumnName("AccLP_Si_Invt");

                entity.Property(e => e.AccLpSiSalCust).HasColumnName("AccLP_Si_SalCust");

                entity.Property(e => e.AccLtSiInvt).HasColumnName("AccLT_Si_Invt");

                entity.Property(e => e.AccLtSiInvt2).HasColumnName("AccLT_Si_Invt_2");

                entity.Property(e => e.AccMSi).HasColumnName("AccM_Si");

                entity.Property(e => e.AccTSi).HasColumnName("AccT_Si");

                entity.Property(e => e.BarNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsAddrs)
                    .HasColumnName("CtbAddrs_Addrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsAddrsCust)
                    .HasColumnName("CtbAddrs_AddrsCust")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsCity)
                    .HasColumnName("CtbAddrs_City")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsContact)
                    .HasColumnName("CtbAddrs_Contact")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsDesc)
                    .HasColumnName("CtbAddrs_Desc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsEconamical)
                    .HasColumnName("CtbAddrs_Econamical")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsEmail)
                    .HasColumnName("CtbAddrs_Email")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsExportAddrs)
                    .HasColumnName("CtbAddrsExport_Addrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsExportCity)
                    .HasColumnName("CtbAddrsExport_City")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsExportEconamical)
                    .HasColumnName("CtbAddrsExport_Econamical")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsExportEmail)
                    .HasColumnName("CtbAddrsExport_Email")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsExportFax)
                    .HasColumnName("CtbAddrsExport_Fax")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsExportMobile)
                    .HasColumnName("CtbAddrsExport_Mobile")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsExportModem)
                    .HasColumnName("CtbAddrsExport_Modem")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsExportNatCode)
                    .HasColumnName("CtbAddrsExport_NatCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsExportNumber).HasColumnName("CtbAddrsExport_Number");

                entity.Property(e => e.CtbAddrsExportPobox)
                    .HasColumnName("CtbAddrsExport_POBox")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsExportTel)
                    .HasColumnName("CtbAddrsExport_Tel")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsExportZipcode)
                    .HasColumnName("CtbAddrsExport_ZIPCode")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsFax)
                    .HasColumnName("CtbAddrs_Fax")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsMajor).HasColumnName("CtbAddrs_major");

                entity.Property(e => e.CtbAddrsMobile)
                    .HasColumnName("CtbAddrs_Mobile")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsModem)
                    .HasColumnName("CtbAddrs_Modem")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsNatCode)
                    .HasColumnName("CtbAddrs_NatCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsNumber).HasColumnName("CtbAddrs_Number");

                entity.Property(e => e.CtbAddrsOstan)
                    .HasColumnName("CtbAddrs_Ostan")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPersonality)
                    .HasColumnName("CtbAddrs_Personality")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPobox)
                    .HasColumnName("CtbAddrs_POBox")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPurvndrEmail)
                    .HasColumnName("CtbAddrsPurvndr_Email")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPurvndrFax)
                    .HasColumnName("CtbAddrsPurvndr_Fax")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPurvndrModem)
                    .HasColumnName("CtbAddrsPurvndr_Modem")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPurvndrPobox)
                    .HasColumnName("CtbAddrsPurvndr_POBox")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsShahrestan)
                    .HasColumnName("CtbAddrs_Shahrestan")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsSi).HasColumnName("CtbAddrs_Si");

                entity.Property(e => e.CtbAddrsTel)
                    .HasColumnName("CtbAddrs_Tel")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsTelCust)
                    .HasColumnName("CtbAddrs_TelCust")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsZipcode)
                    .HasColumnName("CtbAddrs_ZIPCode")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCustVndrTypTp)
                    .HasColumnName("CtbCustVndrTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CuCost)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuProject)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.DescDriver)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvControlGdsSi).HasColumnName("InvControlGds_Si");

                entity.Property(e => e.InvDocHCarNo)
                    .HasColumnName("InvDocH_CarNo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHCu).HasColumnName("InvDocH_Cu");

                entity.Property(e => e.InvDocHCu2).HasColumnName("InvDocH_Cu_2");

                entity.Property(e => e.InvDocHCu21).HasColumnName("InvDocH_Cu2");

                entity.Property(e => e.InvDocHDefinite).HasColumnName("InvDocH_Definite");

                entity.Property(e => e.InvDocHDlvBuy)
                    .HasColumnName("InvDocH_DlvBuy")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHDlvLoc)
                    .HasColumnName("InvDocH_DlvLoc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHDm)
                    .HasColumnName("InvDocH_Dm")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvDocHDrivername)
                    .HasColumnName("InvDocH_Drivername")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHDs)
                    .IsRequired()
                    .HasColumnName("InvDocH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHEstimatePrc).HasColumnName("InvDocH_EstimatePrc");

                entity.Property(e => e.InvDocHExpNo)
                    .HasColumnName("InvDocH_ExpNo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHGood).HasColumnName("InvDocH_Good");

                entity.Property(e => e.InvDocHLevel).HasColumnName("InvDocH_Level");

                entity.Property(e => e.InvDocHLevelTp)
                    .HasColumnName("InvDocH_Level_Tp")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHPrice)
                    .HasColumnName("InvDocH_Price")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocHPriceC)
                    .HasColumnName("InvDocH_PriceC")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocHQty).HasColumnName("InvDocH_Qty");

                entity.Property(e => e.InvDocHReference)
                    .HasColumnName("InvDocH_Reference")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHRfrncTyp).HasColumnName("InvDocH_RfrncTyp");

                entity.Property(e => e.InvDocHSentAcc).HasColumnName("InvDocH_SentAcc");

                entity.Property(e => e.InvDocHSi).HasColumnName("InvDocH_Si");

                entity.Property(e => e.InvDocHSi2).HasColumnName("InvDocH_Si_2");

                entity.Property(e => e.InvDocHSiParent).HasColumnName("InvDocH_Si_Parent");

                entity.Property(e => e.InvDocHStmpCdt)
                    .HasColumnName("InvDocH_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvDocHStmpCus)
                    .HasColumnName("InvDocH_StmpCUs")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHStmpMdt)
                    .HasColumnName("InvDocH_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvDocHStmpTime)
                    .HasColumnName("InvDocH_StmpTime")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHStmpTimeEdit)
                    .HasColumnName("InvDocH_StmpTimeEdit")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHSts).HasColumnName("InvDocH_Sts");

                entity.Property(e => e.InvDocHTp)
                    .HasColumnName("InvDocH_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvDocHTrnsferDb).HasColumnName("InvDocH_TrnsferDB");

                entity.Property(e => e.InvDocHTypeReceipte)
                    .HasColumnName("InvDocH_TypeReceipte")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTmpHSi).HasColumnName("InvDocTmpH_Si");

                entity.Property(e => e.InvDocTypSi).HasColumnName("InvDocTyp_Si");

                entity.Property(e => e.InvDocTypSiParent).HasColumnName("InvDocTyp_SiParent");

                entity.Property(e => e.InvDocTypTp)
                    .HasColumnName("InvDocTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTypTp2)
                    .HasColumnName("InvDocTyp_Tp2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTypTpParent)
                    .HasColumnName("InvDocTyp_TpParent")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHSi).HasColumnName("InvExportPrmH_Si");

                entity.Property(e => e.InvInvtCu)
                    .HasColumnName("InvInvt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtCu2)
                    .HasColumnName("InvInvt_Cu_2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvInvtSi2).HasColumnName("InvInvt_Si_2");

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtTp2)
                    .HasColumnName("InvInvt_Tp_2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvRqstHCu).HasColumnName("InvRqstH_Cu");

                entity.Property(e => e.InvRqstHSi).HasColumnName("InvRqstH_Si");

                entity.Property(e => e.InvTypCu)
                    .HasColumnName("InvTyp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvTypSi).HasColumnName("InvTyp_Si");

                entity.Property(e => e.InvTypTp)
                    .HasColumnName("InvTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvVchrHId).HasColumnName("InvVchrH_Id");

                entity.Property(e => e.InvdeliveryCu)
                    .HasColumnName("Invdelivery_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvdeliverySi).HasColumnName("Invdelivery_Si");

                entity.Property(e => e.InvdeliveryTp)
                    .HasColumnName("Invdelivery_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvprintUser)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.LoginName)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PerPersonnelCu)
                    .HasColumnName("PerPersonnel_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPersonnelSi).HasColumnName("PerPersonnel_Si");

                entity.Property(e => e.PerPersonnelTp)
                    .HasColumnName("PerPersonnel_Tp")
                    .HasMaxLength(51)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlCu)
                    .HasColumnName("PerPrsnl_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlCu2)
                    .HasColumnName("PerPrsnl_Cu2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.Property(e => e.PerPrsnlSi1).HasColumnName("PerPrsnl_Si_1");

                entity.Property(e => e.PerPrsnlSi2).HasColumnName("PerPrsnl_Si_2");

                entity.Property(e => e.PerPrsnlTp)
                    .HasColumnName("PerPrsnl_Tp")
                    .HasMaxLength(51)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlTp2)
                    .HasColumnName("PerPrsnl_Tp2")
                    .HasMaxLength(51)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrAccMSi).HasColumnName("PurVndr_AccM_Si");

                entity.Property(e => e.PurVndrAccTSi).HasColumnName("PurVndr_AccT_Si");

                entity.Property(e => e.PurVndrComment)
                    .HasColumnName("PurVndr_Comment")
                    .HasMaxLength(250);

                entity.Property(e => e.PurVndrCorporateTyp).HasColumnName("PurVndr_CorporateTyp");

                entity.Property(e => e.PurVndrCorporateTypTp)
                    .HasColumnName("PurVndr_CorporateTyp_Tp")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrCtbAddrsMobile)
                    .HasColumnName("PurVndrCtbAddrs_Mobile")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrCu)
                    .HasColumnName("PurVndr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrGrpCu)
                    .HasColumnName("PurVndrGrp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrGrpSi).HasColumnName("PurVndrGrp_Si");

                entity.Property(e => e.PurVndrGrpTp)
                    .HasColumnName("PurVndrGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");

                entity.Property(e => e.PurVndrTp)
                    .HasColumnName("PurVndr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchSi).HasColumnName("SalBrnch_Si");

                entity.Property(e => e.SalCustAccTSi).HasColumnName("SalCust_AccT_Si");

                entity.Property(e => e.SalCustCu)
                    .HasColumnName("SalCust_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpCu)
                    .HasColumnName("SalCustGrp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpSi).HasColumnName("SalCustGrp_Si");

                entity.Property(e => e.SalCustGrpTp)
                    .HasColumnName("SalCustGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalDriverSi).HasColumnName("SalDriver_Si");

                entity.Property(e => e.SalDriverTp)
                    .HasColumnName("SalDriver_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalDrvrSi).HasColumnName("SalDrvr_Si");

                entity.Property(e => e.SalDrvrTel)
                    .HasColumnName("SalDrvr_Tel")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalDrvrTp)
                    .HasColumnName("SalDrvr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalExportPrmHCu).HasColumnName("SalExportPrmH_Cu");

                entity.Property(e => e.SalExportPrmHSi).HasColumnName("SalExportPrmH_Si");

                entity.Property(e => e.SalIntrmdSi).HasColumnName("SalIntrmd_Si");

                entity.Property(e => e.SalInvcHCu).HasColumnName("SalInvcH_Cu");

                entity.Property(e => e.SalInvcHSi).HasColumnName("SalInvcH_Si");

                entity.Property(e => e.SalRetInvcHCu).HasColumnName("SalRetInvcH_Cu");

                entity.Property(e => e.SalRetInvcHSi).HasColumnName("SalRetInvcH_Si");

                entity.Property(e => e.SalTypSi).HasColumnName("SalTyp_Si");

                entity.Property(e => e.TpCost)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpCreator)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TpProject)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.VwSalCustAccLmSi).HasColumnName("VwSalCust_AccLM_Si");
            });

            modelBuilder.Entity<VwInvDocTmp>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Vw_InvDocTmp");

                entity.Property(e => e.InvDocTmpDPrice)
                    .HasColumnName("InvDocTmpD_Price")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocTmpDQty).HasColumnName("InvDocTmpD_Qty");

                entity.Property(e => e.InvDocTmpDQtyAccept).HasColumnName("InvDocTmpD_QtyAccept");

                entity.Property(e => e.InvDocTmpDQtyreturn).HasColumnName("InvDocTmpD_Qtyreturn");

                entity.Property(e => e.InvDocTmpDSi).HasColumnName("InvDocTmpD_Si");

                entity.Property(e => e.InvDocTmpDTotal)
                    .HasColumnName("InvDocTmpD_Total")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocTmpDTp)
                    .HasColumnName("InvDocTmpD_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTmpHCu).HasColumnName("InvDocTmpH_Cu");

                entity.Property(e => e.InvDocTmpHCu2)
                    .HasColumnName("InvDocTmpH_Cu2")
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.InvDocTmpHDm)
                    .HasColumnName("InvDocTmpH_Dm")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvDocTmpHDs)
                    .HasColumnName("InvDocTmpH_Ds")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTmpHSi).HasColumnName("InvDocTmpH_Si");

                entity.Property(e => e.InvDocTmpHTp)
                    .HasColumnName("InvDocTmpH_Tp")
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtCu)
                    .IsRequired()
                    .HasColumnName("InvInvt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntCu)
                    .HasColumnName("InvUnt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrCu)
                    .HasColumnName("PurVndr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");

                entity.Property(e => e.PurVndrTp)
                    .HasColumnName("PurVndr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwInvDocTmpD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvDocTmpD");

                entity.Property(e => e.InvCostQcCu)
                    .HasColumnName("InvCostQc_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvCostQcSi).HasColumnName("InvCostQc_Si");

                entity.Property(e => e.InvCostQcTp)
                    .HasColumnName("InvCostQc_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvDevoteQc).HasColumnName("InvDevote_Qc");

                entity.Property(e => e.InvDocTmpDExpNo)
                    .HasColumnName("InvDocTmpD_ExpNo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTmpDPrice)
                    .HasColumnName("InvDocTmpD_Price")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocTmpDPriceC)
                    .HasColumnName("InvDocTmpD_PriceC")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocTmpDQty).HasColumnName("InvDocTmpD_Qty");

                entity.Property(e => e.InvDocTmpDQtyAccept).HasColumnName("InvDocTmpD_QtyAccept");

                entity.Property(e => e.InvDocTmpDQtyreturn).HasColumnName("InvDocTmpD_Qtyreturn");

                entity.Property(e => e.InvDocTmpDSi).HasColumnName("InvDocTmpD_Si");

                entity.Property(e => e.InvDocTmpDTotal)
                    .HasColumnName("InvDocTmpD_Total")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocTmpDTotalC)
                    .HasColumnName("InvDocTmpD_TotalC")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocTmpDTp)
                    .HasColumnName("InvDocTmpD_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTmpHCu).HasColumnName("InvDocTmpH_Cu");

                entity.Property(e => e.InvDocTmpHDs)
                    .HasColumnName("InvDocTmpH_Ds")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTmpHExpNo)
                    .HasColumnName("InvDocTmpH_ExpNo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTmpHSentDoc).HasColumnName("InvDocTmpH_SentDoc");

                entity.Property(e => e.InvDocTmpHSi).HasColumnName("InvDocTmpH_Si");

                entity.Property(e => e.InvDocTmpHStmpTim)
                    .HasColumnName("InvDocTmpH_StmpTim")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.InvDocTmpHSts)
                    .IsRequired()
                    .HasColumnName("InvDocTmpH_Sts")
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTmpHTp)
                    .HasColumnName("InvDocTmpH_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtCu)
                    .HasColumnName("InvInvt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvRqstHSi).HasColumnName("InvRqstH_Si");

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrCu)
                    .HasColumnName("PurVndr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");

                entity.Property(e => e.PurVndrTp)
                    .HasColumnName("PurVndr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PurchaseRequestId).HasColumnName("PurchaseRequestID");
            });

            modelBuilder.Entity<VwInvDocTmpH>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvDocTmpH");

                entity.Property(e => e.InvDocTmpHCu).HasColumnName("InvDocTmpH_Cu");

                entity.Property(e => e.InvDocTmpHDs)
                    .HasColumnName("InvDocTmpH_Ds")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTmpHExpNo)
                    .HasColumnName("InvDocTmpH_ExpNo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTmpHSentDoc).HasColumnName("InvDocTmpH_SentDoc");

                entity.Property(e => e.InvDocTmpHSi).HasColumnName("InvDocTmpH_Si");

                entity.Property(e => e.InvDocTmpHStmpCus)
                    .HasColumnName("InvDocTmpH_StmpCUs")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTmpHStmpTim)
                    .HasColumnName("InvDocTmpH_StmpTim")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.InvDocTmpHSts)
                    .IsRequired()
                    .HasColumnName("InvDocTmpH_Sts")
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTmpHTp)
                    .HasColumnName("InvDocTmpH_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvInvtCu)
                    .HasColumnName("InvInvt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvRqstHSi).HasColumnName("InvRqstH_Si");

                entity.Property(e => e.PurVndrCu)
                    .HasColumnName("PurVndr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");

                entity.Property(e => e.PurVndrTp)
                    .HasColumnName("PurVndr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwInvDocVchr>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvDocVchr");

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.CuAccM)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuAccT)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CuCost)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuProject)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHCu).HasColumnName("InvDocH_Cu");

                entity.Property(e => e.InvDocHDs)
                    .IsRequired()
                    .HasColumnName("InvDocH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocVchrCredit)
                    .HasColumnName("InvDocVchr_Credit")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocVchrDebit)
                    .HasColumnName("InvDocVchr_Debit")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocVchrSi).HasColumnName("InvDocVchr_Si");

                entity.Property(e => e.InvDocVchrTp)
                    .HasColumnName("InvDocVchr_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvInvtCu)
                    .HasColumnName("InvInvt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");

                entity.Property(e => e.TpAccM)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccT)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpCost)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpProject)
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwInvDrctCnsuD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvDrctCnsuD");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.CtbCostCu)
                    .HasColumnName("CtbCost_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCostSi).HasColumnName("CtbCost_Si");

                entity.Property(e => e.CtbCostTp)
                    .HasColumnName("CtbCost_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDrctCnsuDQty).HasColumnName("InvDrctCnsuD_Qty");

                entity.Property(e => e.InvDrctCnsuDTotal)
                    .HasColumnName("InvDrctCnsuD_Total")
                    .HasColumnType("money");

                entity.Property(e => e.InvDrctCnsuDUntPrc)
                    .HasColumnName("InvDrctCnsuD_UntPrc")
                    .HasColumnType("money");

                entity.Property(e => e.InvDrctCnsuHDt)
                    .HasColumnName("InvDrctCnsuH_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.InvDrctCnsuHPc)
                    .HasColumnName("InvDrctCnsuH_PC")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.InvDrctCnsuHPd)
                    .HasColumnName("InvDrctCnsuH_PD")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.InvDrctCnsuHPg)
                    .HasColumnName("InvDrctCnsuH_PG")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.InvDrctCnsuHPi)
                    .HasColumnName("InvDrctCnsuH_PI")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.InvDrctCnsuHSi).HasColumnName("InvDrctCnsuH_Si");

                entity.Property(e => e.InvGdsCm)
                    .HasColumnName("InvGds_Cm")
                    .HasColumnType("text");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.PurRqstHSi).HasColumnName("PurRqstH_Si");
            });

            modelBuilder.Entity<VwInvDrctCnsuH>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvDrctCnsuH");

                entity.Property(e => e.BarNumber)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCostCu)
                    .HasColumnName("CtbCost_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCostSi).HasColumnName("CtbCost_Si");

                entity.Property(e => e.CtbCostTp)
                    .HasColumnName("CtbCost_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DescDriver)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvDrctCnsuHCarNo)
                    .HasColumnName("InvDrctCnsuH_CarNo")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvDrctCnsuHDlvBuy)
                    .HasColumnName("InvDrctCnsuH_DlvBuy")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvDrctCnsuHDlvLoc)
                    .HasColumnName("InvDrctCnsuH_DlvLoc")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvDrctCnsuHDt)
                    .HasColumnName("InvDrctCnsuH_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.InvDrctCnsuHPc)
                    .HasColumnName("InvDrctCnsuH_PC")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.InvDrctCnsuHPd)
                    .HasColumnName("InvDrctCnsuH_PD")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.InvDrctCnsuHPg)
                    .HasColumnName("InvDrctCnsuH_PG")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.InvDrctCnsuHPi)
                    .HasColumnName("InvDrctCnsuH_PI")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.InvDrctCnsuHSi).HasColumnName("InvDrctCnsuH_Si");

                entity.Property(e => e.PerPrsnlCu)
                    .HasColumnName("PerPrsnl_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlCu2)
                    .HasColumnName("PerPrsnl_Cu_2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlSi1).HasColumnName("PerPrsnl_Si_1");

                entity.Property(e => e.PerPrsnlSi2).HasColumnName("PerPrsnl_Si_2");

                entity.Property(e => e.PerPrsnlTp)
                    .HasColumnName("PerPrsnl_Tp")
                    .HasMaxLength(51)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlTp2)
                    .HasColumnName("PerPrsnl_Tp_2")
                    .HasMaxLength(51)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrCu)
                    .HasColumnName("PurVndr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");

                entity.Property(e => e.PurVndrTp)
                    .HasColumnName("PurVndr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwInvExpPrmD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvExpPrmD");

                entity.Property(e => e.BarNumber)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.CuProject)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.DescDriver)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmDQty).HasColumnName("InvExportPrmD_Qty");

                entity.Property(e => e.InvExportPrmDTp)
                    .HasColumnName("InvExportPrmD_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHCar)
                    .HasColumnName("InvExportPrmH_Car")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHCarNo)
                    .HasColumnName("InvExportPrmH_CarNo")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHCu).HasColumnName("InvExportPrmH_Cu");

                entity.Property(e => e.InvExportPrmHDest)
                    .HasColumnName("InvExportPrmH_Dest")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHDlvBuy)
                    .HasColumnName("InvExportPrmH_DlvBuy")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHDriver)
                    .HasColumnName("InvExportPrmH_Driver")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHDs)
                    .HasColumnName("InvExportPrmH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.InvExportPrmHExtCus)
                    .HasColumnName("InvExportPrmH_ExtCus")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHGood).HasColumnName("InvExportPrmH_Good");

                entity.Property(e => e.InvExportPrmHNo)
                    .HasColumnName("InvExportPrmH_No")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHRfrncTyp).HasColumnName("InvExportPrmH_RfrncTyp");

                entity.Property(e => e.InvExportPrmHSi).HasColumnName("InvExportPrmH_Si");

                entity.Property(e => e.InvExportPrmHStmpCdt)
                    .HasColumnName("InvExportPrmH_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvExportPrmHStmpCus)
                    .HasColumnName("InvExportPrmH_StmpCUs")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHStmpMdt)
                    .HasColumnName("InvExportPrmH_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvExportPrmHStmpMus)
                    .HasColumnName("InvExportPrmH_StmpMUs")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHSts).HasColumnName("InvExportPrmH_Sts");

                entity.Property(e => e.InvExportPrmHTahvil)
                    .HasColumnName("InvExportPrmH_Tahvil")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHTp)
                    .HasColumnName("InvExportPrmH_Tp")
                    .HasMaxLength(50);

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTechNo)
                    .HasColumnName("InvGds_TechNo")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsTypSi).HasColumnName("InvGdsTyp_Si");

                entity.Property(e => e.InvInvtCu)
                    .HasColumnName("InvInvt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvTypSi).HasColumnName("InvTyp_Si");

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.PerPrsnlCu)
                    .HasColumnName("PerPrsnl_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlCu2)
                    .HasColumnName("PerPrsnl_Cu_2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlSi1).HasColumnName("PerPrsnl_Si_1");

                entity.Property(e => e.PerPrsnlSi2).HasColumnName("PerPrsnl_Si_2");

                entity.Property(e => e.PerPrsnlTp)
                    .HasColumnName("PerPrsnl_Tp")
                    .HasMaxLength(51)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlTp2)
                    .HasColumnName("PerPrsnl_Tp_2")
                    .HasMaxLength(51)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrCu)
                    .HasColumnName("PurVndr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");

                entity.Property(e => e.PurVndrTp)
                    .HasColumnName("PurVndr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpProject)
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwInvExportPrmH>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvExportPrmH");

                entity.Property(e => e.BarNumber)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.DescDriver)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHCar)
                    .HasColumnName("InvExportPrmH_Car")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHCarNo)
                    .HasColumnName("InvExportPrmH_CarNo")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHCu).HasColumnName("InvExportPrmH_Cu");

                entity.Property(e => e.InvExportPrmHDest)
                    .HasColumnName("InvExportPrmH_Dest")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHDlvBuy)
                    .HasColumnName("InvExportPrmH_DlvBuy")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHDriver)
                    .HasColumnName("InvExportPrmH_Driver")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHDs)
                    .HasColumnName("InvExportPrmH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.InvExportPrmHExtCus)
                    .HasColumnName("InvExportPrmH_ExtCus")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHNo)
                    .HasColumnName("InvExportPrmH_No")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHRfrncTyp).HasColumnName("InvExportPrmH_RfrncTyp");

                entity.Property(e => e.InvExportPrmHSi).HasColumnName("InvExportPrmH_Si");

                entity.Property(e => e.InvExportPrmHStmpCdt)
                    .HasColumnName("InvExportPrmH_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvExportPrmHStmpCus)
                    .HasColumnName("InvExportPrmH_StmpCUs")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHStmpMdt)
                    .HasColumnName("InvExportPrmH_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvExportPrmHStmpMus)
                    .HasColumnName("InvExportPrmH_StmpMUs")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHSts).HasColumnName("InvExportPrmH_Sts");

                entity.Property(e => e.InvExportPrmHTahvil)
                    .HasColumnName("InvExportPrmH_Tahvil")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.InvExportPrmHTp)
                    .HasColumnName("InvExportPrmH_Tp")
                    .HasMaxLength(50);

                entity.Property(e => e.InvInvtCu)
                    .HasColumnName("InvInvt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvTypCu)
                    .HasColumnName("InvTyp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvTypSi).HasColumnName("InvTyp_Si");

                entity.Property(e => e.InvTypTp)
                    .HasColumnName("InvTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrCu)
                    .HasColumnName("PurVndr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");

                entity.Property(e => e.PurVndrTp)
                    .HasColumnName("PurVndr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwInvGds>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvGds");

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.CtbCurncyTp)
                    .HasColumnName("CtbCurncy_Tp")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CuAccM)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuAccT)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsActive).HasColumnName("InvGds_Active");

                entity.Property(e => e.InvGdsActiveSale).HasColumnName("InvGds_ActiveSale");

                entity.Property(e => e.InvGdsActiveSerial).HasColumnName("InvGds_ActiveSerial");

                entity.Property(e => e.InvGdsBurden).HasColumnName("InvGds_burden");

                entity.Property(e => e.InvGdsCm)
                    .HasColumnName("InvGds_Cm")
                    .HasColumnType("text");

                entity.Property(e => e.InvGdsCountdayInWay).HasColumnName("InvGds_CountdayInWay");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsDateBirth)
                    .HasColumnName("InvGds_DateBirth")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvGdsGrpCu)
                    .HasColumnName("InvGdsGrp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsGrpSi).HasColumnName("InvGdsGrp_Si");

                entity.Property(e => e.InvGdsGrpTp)
                    .HasColumnName("InvGdsGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsHeight).HasColumnName("InvGds_height");

                entity.Property(e => e.InvGdsIcntryCu)
                    .HasColumnName("InvGdsICntry_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsIcntryTp)
                    .HasColumnName("InvGdsICntry_Tp")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsIcratrCu)
                    .HasColumnName("InvGdsICratr_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsIcratrSi).HasColumnName("InvGdsICratr_Si");

                entity.Property(e => e.InvGdsIcratrTp)
                    .HasColumnName("InvGdsICratr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsLength).HasColumnName("InvGds_length");

                entity.Property(e => e.InvGdsLname)
                    .HasColumnName("InvGds_LName")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsPrdGds).HasColumnName("InvGds_PrdGds");

                entity.Property(e => e.InvGdsPurchasePrc)
                    .HasColumnName("InvGds_PurchasePrc")
                    .HasColumnType("money");

                entity.Property(e => e.InvGdsPurchasePrcC)
                    .HasColumnName("InvGds_PurchasePrcC")
                    .HasColumnType("money");

                entity.Property(e => e.InvGdsQtyBestInWay).HasColumnName("InvGds_QtyBestInWay");

                entity.Property(e => e.InvGdsQtyMax).HasColumnName("InvGds_QtyMax");

                entity.Property(e => e.InvGdsQtyMin).HasColumnName("InvGds_QtyMin");

                entity.Property(e => e.InvGdsQtyMinOrd).HasColumnName("InvGds_QtyMinOrd");

                entity.Property(e => e.InvGdsQtyReal).HasColumnName("InvGds_QtyReal");

                entity.Property(e => e.InvGdsQtySafe).HasColumnName("InvGds_QtySafe");

                entity.Property(e => e.InvGdsQtySale).HasColumnName("InvGds_QtySale");

                entity.Property(e => e.InvGdsQtyVirtual).HasColumnName("InvGds_QtyVirtual");

                entity.Property(e => e.InvGdsSalePrc)
                    .HasColumnName("InvGds_SalePrc")
                    .HasColumnType("money");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsStatusSi).HasColumnName("InvGdsStatus_Si");

                entity.Property(e => e.InvGdsStatusTp)
                    .HasColumnName("InvGdsStatus_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsStdPrc)
                    .HasColumnName("InvGds_StdPrc")
                    .HasColumnType("money");

                entity.Property(e => e.InvGdsTechNo)
                    .HasColumnName("InvGds_TechNo")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvGdsWidth).HasColumnName("InvGds_width");

                entity.Property(e => e.InvUntCount).HasColumnName("InvUnt_Count");

                entity.Property(e => e.InvUntCu)
                    .HasColumnName("InvUnt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntCuSale)
                    .HasColumnName("InvUnt_Cu_Sale")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.InvUntSiSale).HasColumnName("InvUnt_Si_Sale");

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntTpSale)
                    .HasColumnName("InvUnt_Tp_Sale")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.PurGdsGrpSi).HasColumnName("PurGdsGrp_Si");

                entity.Property(e => e.SalGdsAccAccMSi).HasColumnName("SalGdsAcc_AccM_Si");

                entity.Property(e => e.SalGdsAccAccMTp)
                    .HasColumnName("SalGdsAcc_AccM_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalGdsAccAccTSi).HasColumnName("SalGdsAcc_AccT_Si");

                entity.Property(e => e.SalGdsAccAccTTp)
                    .HasColumnName("SalGdsAcc_AccT_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccM)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccT)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwInvGdsAccC>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvGdsAccC");

                entity.Property(e => e.AccLcCu)
                    .HasColumnName("AccLC_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLcTp)
                    .HasColumnName("AccLC_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLcTp2)
                    .HasColumnName("AccLC_Tp2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmCu)
                    .HasColumnName("AccLM_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLmTp)
                    .HasColumnName("AccLM_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmTp2)
                    .HasColumnName("AccLM_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtCu)
                    .HasColumnName("AccLT_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AccLtTp)
                    .HasColumnName("AccLT_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtTp2)
                    .HasColumnName("AccLT_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");
            });

            modelBuilder.Entity<VwInvGdsAccP>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvGdsAccP");

                entity.Property(e => e.AccLmCu)
                    .HasColumnName("AccLM_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLmTp)
                    .HasColumnName("AccLM_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmTp2)
                    .HasColumnName("AccLM_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpCu)
                    .HasColumnName("AccLP_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLpTp)
                    .HasColumnName("AccLP_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpTp2)
                    .HasColumnName("AccLP_Tp2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtCu)
                    .HasColumnName("AccLT_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AccLtTp)
                    .HasColumnName("AccLT_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtTp2)
                    .HasColumnName("AccLT_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");
            });

            modelBuilder.Entity<VwInvGdsControlD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvGdsControlD");

                entity.Property(e => e.InvControlGdsAql).HasColumnName("InvControlGds_AQL");

                entity.Property(e => e.InvControlGdsBulK).HasColumnName("InvControlGds_BulK");

                entity.Property(e => e.InvControlGdsIncorectQty).HasColumnName("InvControlGds_IncorectQty");

                entity.Property(e => e.InvControlGdsLackQty).HasColumnName("InvControlGds_LackQty");

                entity.Property(e => e.InvControlGdsPrsStudy)
                    .HasColumnName("InvControlGds_PrsStudy")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvControlGdsSi).HasColumnName("InvControlGds_Si");

                entity.Property(e => e.InvControlGdsSndInv).HasColumnName("InvControlGds_SndInv");

                entity.Property(e => e.InvControlGdsStmpCdt)
                    .HasColumnName("InvControlGds_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvControlGdsSts).HasColumnName("InvControlGds_Sts");

                entity.Property(e => e.InvControlGdsTp)
                    .HasColumnName("InvControlGds_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTmpDSi).HasColumnName("InvDocTmpD_Si");

                entity.Property(e => e.InvDocTmpHCu).HasColumnName("InvDocTmpH_Cu");

                entity.Property(e => e.InvDocTmpHDs)
                    .HasColumnName("InvDocTmpH_Ds")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTmpHSi).HasColumnName("InvDocTmpH_Si");

                entity.Property(e => e.InvGdsResultSi).HasColumnName("InvGdsResult_Si");

                entity.Property(e => e.InvGdsResultTp)
                    .HasColumnName("InvGdsResult_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");
            });

            modelBuilder.Entity<VwInvGdsToGds>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvGdsToGds");

                entity.Property(e => e.InvGdsCuD)
                    .HasColumnName("InvGds_Cu_D")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsCuM)
                    .HasColumnName("InvGds_Cu_M")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsGrpCuD)
                    .HasColumnName("InvGdsGrp_Cu_D")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsGrpCuM)
                    .HasColumnName("InvGdsGrp_Cu_M")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsGrpSiD).HasColumnName("InvGdsGrp_Si_D");

                entity.Property(e => e.InvGdsGrpSiM).HasColumnName("InvGdsGrp_Si_M");

                entity.Property(e => e.InvGdsGrpTpD)
                    .HasColumnName("InvGdsGrp_Tp_D")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsGrpTpM)
                    .HasColumnName("InvGdsGrp_Tp_M")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSiD).HasColumnName("InvGds_Si_D");

                entity.Property(e => e.InvGdsSiM).HasColumnName("InvGds_Si_M");

                entity.Property(e => e.InvGdsTechNoD)
                    .HasColumnName("InvGds_TechNo_D")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsTechNoM)
                    .HasColumnName("InvGds_TechNo_M")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsToGdsQty).HasColumnName("InvGdsToGds_Qty");

                entity.Property(e => e.InvGdsTpD)
                    .HasColumnName("InvGds_Tp_D")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvGdsTpM)
                    .HasColumnName("InvGds_Tp_M")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvInvtCu)
                    .HasColumnName("InvInvt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwInvGdsToInv>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvGdsToInv");

                entity.Property(e => e.InvGdsActive).HasColumnName("InvGds_Active");

                entity.Property(e => e.InvGdsActiveSale).HasColumnName("InvGds_ActiveSale");

                entity.Property(e => e.InvGdsCm)
                    .HasColumnName("InvGds_Cm")
                    .HasColumnType("text");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsDateBirth)
                    .HasColumnName("InvGds_DateBirth")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvGdsGrpCu)
                    .HasColumnName("InvGdsGrp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsGrpSi).HasColumnName("InvGdsGrp_Si");

                entity.Property(e => e.InvGdsGrpTp)
                    .HasColumnName("InvGdsGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsIcntryTp)
                    .HasColumnName("InvGdsICntry_Tp")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsIcratrCu)
                    .HasColumnName("InvGdsICratr_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsIcratrSi).HasColumnName("InvGdsICratr_Si");

                entity.Property(e => e.InvGdsIcratrTp)
                    .HasColumnName("InvGdsICratr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsLname)
                    .HasColumnName("InvGds_LName")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsPrdGds).HasColumnName("InvGds_PrdGds");

                entity.Property(e => e.InvGdsQtyMax).HasColumnName("InvGds_QtyMax");

                entity.Property(e => e.InvGdsQtyMin).HasColumnName("InvGds_QtyMin");

                entity.Property(e => e.InvGdsQtyReal).HasColumnName("InvGds_QtyReal");

                entity.Property(e => e.InvGdsQtySafe).HasColumnName("InvGds_QtySafe");

                entity.Property(e => e.InvGdsQtySale).HasColumnName("InvGds_QtySale");

                entity.Property(e => e.InvGdsQtyVirtual).HasColumnName("InvGds_QtyVirtual");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTechNo)
                    .HasColumnName("InvGds_TechNo")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsToInvQtyMax).HasColumnName("InvGdsToInv_QtyMax");

                entity.Property(e => e.InvGdsToInvQtyMin).HasColumnName("InvGdsToInv_QtyMin");

                entity.Property(e => e.InvGdsToInvQtyReal).HasColumnName("InvGdsToInv_QtyReal");

                entity.Property(e => e.InvGdsToInvQtySafe).HasColumnName("InvGdsToInv_QtySafe");

                entity.Property(e => e.InvGdsToInvQtySale).HasColumnName("InvGdsToInv_QtySale");

                entity.Property(e => e.InvGdsToInvQtyVirtual).HasColumnName("InvGdsToInv_QtyVirtual");

                entity.Property(e => e.InvGdsToInvShelf)
                    .HasColumnName("InvGdsToInv_Shelf")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsToInvTag).HasColumnName("InvGdsToInv_Tag");

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvInvtCu)
                    .HasColumnName("InvInvt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtIsActive).HasColumnName("InvInvt_IsActive");

                entity.Property(e => e.InvInvtIsActiveSale).HasColumnName("InvInvt_IsActiveSale");

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntCu)
                    .HasColumnName("InvUnt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntCuSale)
                    .HasColumnName("InvUnt_Cu_Sale")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.InvUntSiSale).HasColumnName("InvUnt_Si_Sale");

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntTpSale)
                    .HasColumnName("InvUnt_Tp_Sale")
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwInvGdstyp>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvGdstyp");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTypTp)
                    .HasColumnName("InvGdsTyp_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntCu)
                    .HasColumnName("InvUnt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwInvInvt>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvInvt");

                entity.Property(e => e.AccLmCu)
                    .HasColumnName("AccLM_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLmTp)
                    .HasColumnName("AccLM_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtCu)
                    .HasColumnName("AccLT_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AccLtTp)
                    .HasColumnName("AccLT_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtAddress)
                    .HasColumnName("InvInvt_Address")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtCu)
                    .IsRequired()
                    .HasColumnName("InvInvt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtIsActive).HasColumnName("InvInvt_IsActive");

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvInvtSiParent).HasColumnName("InvInvt_SiParent");

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtTypeSi).HasColumnName("InvInvtType_Si");
            });

            modelBuilder.Entity<VwInvMatrixReport>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvMatrixReport");

                entity.Property(e => e.تاريخسند)
                    .HasColumnName("تاريخ سند")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.تاريخميلادی)
                    .HasColumnName("تاريخ ميلادی")
                    .HasColumnType("datetime");

                entity.Property(e => e.تاریخانقضایمیلادی)
                    .HasColumnName("تاریخ انقضای میلادی")
                    .HasColumnType("datetime");

                entity.Property(e => e.جمعکل)
                    .HasColumnName("جمع کل")
                    .HasColumnType("money");

                entity.Property(e => e.سال)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.شمارهسند).HasColumnName("شماره سند");

                entity.Property(e => e.شمارهعطف)
                    .HasColumnName("شماره عطف")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.قيمتواحد)
                    .HasColumnName("قيمت واحد")
                    .HasColumnType("money");

                entity.Property(e => e.ماه)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.مرکز)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نامانبار)
                    .HasColumnName("نام انبار")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نامتامينکننده)
                    .HasColumnName("نام تامين کننده")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.نامتحویلدهنده)
                    .HasColumnName("نام تحویل دهنده")
                    .HasMaxLength(51)
                    .IsUnicode(false);

                entity.Property(e => e.نامتحویلگیرنده)
                    .HasColumnName("نام تحویل گیرنده")
                    .HasMaxLength(51)
                    .IsUnicode(false);

                entity.Property(e => e.نامتفضيلي)
                    .HasColumnName("نام تفضيلي")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ناممشتری)
                    .HasColumnName("نام مشتری")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ناممعين)
                    .HasColumnName("نام معين")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.نامکالا)
                    .HasColumnName("نام کالا")
                    .HasMaxLength(4000);

                entity.Property(e => e.نوعسند)
                    .HasColumnName("نوع سند")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.پروژه)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.کدتحویلدهنده)
                    .HasColumnName("کد تحویل دهنده")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کدتحویلگیرنده)
                    .HasColumnName("کد تحویل گیرنده")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کدمشتری)
                    .HasColumnName("کد مشتری")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.کدکالا)
                    .HasColumnName("کد کالا")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwInvRemainQtyBorrow>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvRemainQtyBorrow");

                entity.Property(e => e.InvDocDPrice)
                    .HasColumnName("InvDocD_Price")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocHCu).HasColumnName("InvDocH_Cu");

                entity.Property(e => e.InvDocHDs)
                    .HasColumnName("InvDocH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.PurVndrCu)
                    .HasColumnName("PurVndr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");

                entity.Property(e => e.PurVndrTp)
                    .HasColumnName("PurVndr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustCu)
                    .HasColumnName("SalCust_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SumInvQty1).HasColumnName("SumInv_Qty");
            });

            modelBuilder.Entity<VwInvRqstD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvRqstD");

                entity.Property(e => e.AccLcCu)
                    .HasColumnName("AccLC_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLcTp)
                    .HasColumnName("AccLC_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpCu)
                    .HasColumnName("AccLP_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLpTp)
                    .HasColumnName("AccLP_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHSi).HasColumnName("InvDocH_Si");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsQtyReal).HasColumnName("InvGds_QtyReal");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTechNo)
                    .HasColumnName("InvGds_TechNo")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvGdsTypSi).HasColumnName("InvGdsTyp_Si");

                entity.Property(e => e.InvGdsTypTp)
                    .HasColumnName("InvGdsTyp_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvRqstDQty).HasColumnName("InvRqstD_Qty");

                entity.Property(e => e.InvRqstDSi).HasColumnName("InvRqstD_Si");

                entity.Property(e => e.InvRqstDTp)
                    .HasColumnName("InvRqstD_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvRqstHCu).HasColumnName("InvRqstH_Cu");

                entity.Property(e => e.InvRqstHDt)
                    .HasColumnName("InvRqstH_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.InvRqstHLock).HasColumnName("InvRqstH_Lock");

                entity.Property(e => e.InvRqstHSi).HasColumnName("InvRqstH_Si");

                entity.Property(e => e.InvRqstHStmpCdt)
                    .HasColumnName("InvRqstH_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvRqstHStmpCus)
                    .HasColumnName("InvRqstH_StmpCUs")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvRqstHStmpMdt)
                    .HasColumnName("InvRqstH_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvRqstHStmpMus)
                    .HasColumnName("InvRqstH_StmpMUs")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvRqstHTp)
                    .HasColumnName("InvRqstH_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.InvRqstStsSi).HasColumnName("InvRqstSts_Si");

                entity.Property(e => e.InvRqstStsTp)
                    .HasColumnName("InvRqstSts_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvRqstTypSi).HasColumnName("InvRqstTyp_Si");

                entity.Property(e => e.InvUntCu)
                    .HasColumnName("InvUnt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlCu)
                    .HasColumnName("PerPrsnl_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.Property(e => e.PerPrsnlTp)
                    .HasColumnName("PerPrsnl_Tp")
                    .HasMaxLength(51)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwInvRqstH>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvRqstH");

                entity.Property(e => e.InvDocHSi).HasColumnName("InvDocH_Si");

                entity.Property(e => e.InvRqstHCu).HasColumnName("InvRqstH_Cu");

                entity.Property(e => e.InvRqstHDt)
                    .HasColumnName("InvRqstH_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.InvRqstHLock).HasColumnName("InvRqstH_Lock");

                entity.Property(e => e.InvRqstHSi).HasColumnName("InvRqstH_Si");

                entity.Property(e => e.InvRqstHStmpCdt)
                    .HasColumnName("InvRqstH_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvRqstHStmpCus)
                    .HasColumnName("InvRqstH_StmpCUs")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvRqstHStmpMdt)
                    .HasColumnName("InvRqstH_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.InvRqstHStmpMus)
                    .HasColumnName("InvRqstH_StmpMUs")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvRqstHTp)
                    .HasColumnName("InvRqstH_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.InvRqstTypSi).HasColumnName("InvRqstTyp_Si");

                entity.Property(e => e.InvRqstTypTp)
                    .HasColumnName("InvRqstTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwInvSrl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvSrl");

                entity.Property(e => e.InvDocDsrlSrl)
                    .IsRequired()
                    .HasColumnName("InvDocDSrl_Srl")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocTypSi).HasColumnName("InvDocTyp_Si");

                entity.Property(e => e.InvDocTypTp)
                    .HasColumnName("InvDocTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvInvtCu)
                    .HasColumnName("InvInvt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwInvSumQtyGiveBorrow>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvSumQtyGiveBorrow");

                entity.Property(e => e.InvDocDPrice)
                    .HasColumnName("InvDocD_Price")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocHCu).HasColumnName("InvDocH_Cu");

                entity.Property(e => e.InvDocHDs)
                    .HasColumnName("InvDocH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.PurVndrCu)
                    .HasColumnName("PurVndr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");

                entity.Property(e => e.PurVndrTp)
                    .HasColumnName("PurVndr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustCu)
                    .HasColumnName("SalCust_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SumInvQty).HasColumnName("SumInv_Qty");
            });

            modelBuilder.Entity<VwInvSumQtySndBorrow>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvSumQtySndBorrow");

                entity.Property(e => e.InvDocDPrice)
                    .HasColumnName("InvDocD_Price")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocTypSi).HasColumnName("InvDocTyp_Si");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.PurVndrCu)
                    .HasColumnName("PurVndr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");

                entity.Property(e => e.PurVndrTp)
                    .HasColumnName("PurVndr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustCu)
                    .HasColumnName("SalCust_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwInvUntCnvrt>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvUntCnvrt");

                entity.Property(e => e.InvUntCnvrtCoefficient).HasColumnName("InvUntCnvrt_Coefficient");

                entity.Property(e => e.InvUntSiFr).HasColumnName("InvUnt_Si_Fr");

                entity.Property(e => e.InvUntSiTo).HasColumnName("InvUnt_Si_To");
            });

            modelBuilder.Entity<VwInvUser>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvUser");

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvUsrAcsMny).HasColumnName("InvUsr_AcsMny");

                entity.Property(e => e.InvUsrAcsQty).HasColumnName("InvUsr_AcsQty");

                entity.Property(e => e.InvUsrLgnName)
                    .IsRequired()
                    .HasColumnName("InvUsr_LgnName")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.InvUsrTp)
                    .HasColumnName("InvUsr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwInvVchrD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvVchrD");

                entity.Property(e => e.AccDocHSi).HasColumnName("AccDocH_Si");

                entity.Property(e => e.AccLcCu)
                    .HasColumnName("AccLC_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLcTp)
                    .HasColumnName("AccLC_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLcTp2)
                    .HasColumnName("AccLC_Tp2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLkTp2)
                    .HasColumnName("AccLK_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmCu)
                    .HasColumnName("AccLM_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLmTp)
                    .HasColumnName("AccLM_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmTp2)
                    .HasColumnName("AccLM_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpCu)
                    .HasColumnName("AccLP_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLpTp)
                    .HasColumnName("AccLP_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpTp2)
                    .HasColumnName("AccLP_Tp2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtCu)
                    .HasColumnName("AccLT_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AccLtTp)
                    .HasColumnName("AccLT_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtTp2)
                    .HasColumnName("AccLT_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.CtbCurncyTp)
                    .HasColumnName("CtbCurncy_Tp")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DsDoc).HasColumnType("smalldatetime");

                entity.Property(e => e.InvVchrDCredit)
                    .HasColumnName("InvVchrD_Credit")
                    .HasColumnType("money");

                entity.Property(e => e.InvVchrDCreditC)
                    .HasColumnName("InvVchrD_CreditC")
                    .HasColumnType("money");

                entity.Property(e => e.InvVchrDDate)
                    .HasColumnName("InvVchrD_Date")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.InvVchrDDebit)
                    .HasColumnName("InvVchrD_Debit")
                    .HasColumnType("money");

                entity.Property(e => e.InvVchrDDebitC)
                    .HasColumnName("InvVchrD_DebitC")
                    .HasColumnType("money");

                entity.Property(e => e.InvVchrDId).HasColumnName("InvVchrD_Id");

                entity.Property(e => e.InvVchrDTx)
                    .HasColumnName("InvVchrD_Tx")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvVchrHDate)
                    .HasColumnName("InvVchrH_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.InvVchrHDateFrom)
                    .HasColumnName("InvVchrH_DateFrom")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.InvVchrHDateUntil)
                    .HasColumnName("InvVchrH_DateUntil")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.InvVchrHId).HasColumnName("InvVchrH_Id");

                entity.Property(e => e.InvVchrHSent).HasColumnName("InvVchrH_Sent");

                entity.Property(e => e.InvVchrHTx)
                    .HasColumnName("InvVchrH_Tx")
                    .HasMaxLength(4000);
            });

            modelBuilder.Entity<VwInvVchrH>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwInvVchrH");

                entity.Property(e => e.AccDocHSi).HasColumnName("AccDocH_Si");

                entity.Property(e => e.DsDoc).HasColumnType("smalldatetime");

                entity.Property(e => e.InvVchrHDate)
                    .HasColumnName("InvVchrH_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.InvVchrHDateFrom)
                    .HasColumnName("InvVchrH_DateFrom")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.InvVchrHDateUntil)
                    .HasColumnName("InvVchrH_DateUntil")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.InvVchrHId).HasColumnName("InvVchrH_Id");

                entity.Property(e => e.InvVchrHSent).HasColumnName("InvVchrH_Sent");

                entity.Property(e => e.InvVchrHTx)
                    .HasColumnName("InvVchrH_Tx")
                    .HasMaxLength(4000);
            });

            modelBuilder.Entity<VwKpurQryWin>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwKpurQryWin");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.KpurqryDPrc)
                    .HasColumnName("KpurqryD_Prc")
                    .HasColumnType("money");

                entity.Property(e => e.PurQrySi).HasColumnName("PurQry_Si");

                entity.Property(e => e.PurRqstDQty).HasColumnName("PurRqstD_Qty");

                entity.Property(e => e.PurRqstDSi).HasColumnName("PurRqstD_Si");

                entity.Property(e => e.PurRqstHSi).HasColumnName("PurRqstH_Si");
            });

            modelBuilder.Entity<VwKpurRqstD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwKpurRqstD");

                entity.Property(e => e.CtbOrgDepTp)
                    .IsRequired()
                    .HasColumnName("CtbOrgDep_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CuCost)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuProject)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.PerName)
                    .HasMaxLength(51)
                    .IsUnicode(false);

                entity.Property(e => e.PurRqstDDrftDate)
                    .HasColumnName("PurRqstD_DrftDate")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurRqstDDrftNo)
                    .HasColumnName("PurRqstD_DrftNo")
                    .HasMaxLength(50);

                entity.Property(e => e.PurRqstDDt)
                    .HasColumnName("PurRqstD_DT")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurRqstDPurKind).HasColumnName("PurRqstD_PurKind");

                entity.Property(e => e.PurRqstDQty).HasColumnName("PurRqstD_Qty");

                entity.Property(e => e.PurRqstDQtyInv).HasColumnName("PurRqstD_QtyInv");

                entity.Property(e => e.PurRqstDSi).HasColumnName("PurRqstD_Si");

                entity.Property(e => e.PurRqstHCu)
                    .HasColumnName("PurRqstH_Cu")
                    .HasMaxLength(15);

                entity.Property(e => e.PurRqstHDt)
                    .HasColumnName("PurRqstH_Dt")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurRqstHOffNext).HasColumnName("PurRqstH_OffNext");

                entity.Property(e => e.PurRqstHOfficial)
                    .HasColumnName("PurRqstH_Official")
                    .HasMaxLength(50);

                entity.Property(e => e.PurRqstHSi).HasColumnName("PurRqstH_Si");

                entity.Property(e => e.PurRqstHTp)
                    .HasColumnName("PurRqstH_Tp")
                    .HasMaxLength(150);

                entity.Property(e => e.TpCost)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpProject)
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPerAdv>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPerAdv");

                entity.Property(e => e.PerAdvCu).HasColumnName("PerAdv_Cu");

                entity.Property(e => e.PerAdvDs)
                    .IsRequired()
                    .HasColumnName("PerAdv_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerAdvPrice)
                    .HasColumnName("PerAdv_Price")
                    .HasColumnType("money");

                entity.Property(e => e.PerAdvSi).HasColumnName("PerAdv_Si");

                entity.Property(e => e.PerAdvTp)
                    .HasColumnName("PerAdv_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PerLocSi).HasColumnName("PerLoc_Si");

                entity.Property(e => e.PerPrsnlCu)
                    .HasColumnName("PerPrsnl_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.Property(e => e.PerPrsnlTp)
                    .HasColumnName("PerPrsnl_Tp")
                    .HasMaxLength(51)
                    .IsUnicode(false);

                entity.Property(e => e.PerPyrlPeriodSi).HasColumnName("PerPyrlPeriod_Si");
            });

            modelBuilder.Entity<VwPerCmd>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPerCmd");

                entity.Property(e => e.BankAccountNo).HasColumnName("BankAccountNO");

                entity.Property(e => e.CtbCostCu)
                    .HasColumnName("CtbCost_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCostSi).HasColumnName("CtbCost_Si");

                entity.Property(e => e.CtbCostTp)
                    .HasColumnName("CtbCost_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbOrgDepCu)
                    .HasColumnName("CtbOrgDep_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CtbOrgDepSi).HasColumnName("CtbOrgDep_Si");

                entity.Property(e => e.CtbOrgDepTp)
                    .HasColumnName("CtbOrgDep_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbOrgJobCu)
                    .HasColumnName("CtbOrgJob_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CtbOrgJobSi).HasColumnName("CtbOrgJob_Si");

                entity.Property(e => e.CtbOrgJobTp)
                    .HasColumnName("CtbOrgJob_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbOrgPstCu)
                    .HasColumnName("CtbOrgPst_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CtbOrgPstSi).HasColumnName("CtbOrgPst_Si");

                entity.Property(e => e.CtbOrgPstTp)
                    .HasColumnName("CtbOrgPst_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbProjectSi).HasColumnName("CtbProject_Si");

                entity.Property(e => e.CuProject)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdAct).HasColumnName("PerCmd_Act");

                entity.Property(e => e.PerCmdBgnDs)
                    .IsRequired()
                    .HasColumnName("PerCmd_Bgn_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdCntrctNo)
                    .HasColumnName("PerCmd_CntrctNo")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdCu)
                    .IsRequired()
                    .HasColumnName("PerCmd_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdDelayed).HasColumnName("PerCmd_Delayed");

                entity.Property(e => e.PerCmdDs)
                    .HasColumnName("PerCmd_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdEndDs)
                    .IsRequired()
                    .HasColumnName("PerCmd_End_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdSi).HasColumnName("PerCmd_Si");

                entity.Property(e => e.PerCmdStmpCdt)
                    .HasColumnName("PerCmd_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.PerCmdStmpCus)
                    .HasColumnName("PerCmd_StmpCUs")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdStmpMdt)
                    .HasColumnName("PerCmd_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.PerCmdStmpMus)
                    .HasColumnName("PerCmd_StmpMUs")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdStmpTime)
                    .HasColumnName("PerCmd_StmpTime")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdStmpTimeEdit)
                    .HasColumnName("PerCmd_StmpTimeEdit")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdTp)
                    .HasColumnName("PerCmd_Tp")
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdTypCu)
                    .HasColumnName("PerCmdTyp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdTypSi).HasColumnName("PerCmdTyp_Si");

                entity.Property(e => e.PerCmdTypTp)
                    .HasColumnName("PerCmdTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerEmpTypCu)
                    .HasColumnName("PerEmpTyp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerEmpTypSi).HasColumnName("PerEmpTyp_Si");

                entity.Property(e => e.PerEmpTypTp)
                    .HasColumnName("PerEmpTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerInsrncGrpSi).HasColumnName("PerInsrncGrp_Si");

                entity.Property(e => e.PerLocSi).HasColumnName("PerLoc_Si");

                entity.Property(e => e.PerOprGrpSi).HasColumnName("PerOprGrp_Si");

                entity.Property(e => e.PerOprGrpTp)
                    .HasColumnName("PerOprGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlAct).HasColumnName("PerPrsnl_Act");

                entity.Property(e => e.PerPrsnlCu)
                    .HasColumnName("PerPrsnl_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDAdrs)
                    .HasColumnName("PerPrsnlD_Adrs")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDBnkBrnch)
                    .HasColumnName("PerPrsnlD_Bnk_Brnch")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDBnkName)
                    .HasColumnName("PerPrsnlD_Bnk_Name")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDBrtDte)
                    .HasColumnName("PerPrsnlD_BrtDte")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDEdu)
                    .HasColumnName("PerPrsnlD_Edu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDEmpDte)
                    .HasColumnName("PerPrsnlD_EmpDte")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDWrkBgnDte)
                    .HasColumnName("PerPrsnlD_WrkBgnDte")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDWrkEndDte)
                    .HasColumnName("PerPrsnlD_WrkEndDte")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDlocSi).HasColumnName("PerPrsnlDLoc_Si");

                entity.Property(e => e.PerPrsnlDlocTp)
                    .HasColumnName("PerPrsnlDLoc_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlIdNatCode)
                    .HasColumnName("PerPrsnlID_NatCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.Property(e => e.PerPrsnlTp)
                    .HasColumnName("PerPrsnl_Tp")
                    .HasMaxLength(51)
                    .IsUnicode(false);

                entity.Property(e => e.PerTaxGrpSi).HasColumnName("PerTaxGrp_Si");

                entity.Property(e => e.PerjobTypCu)
                    .HasColumnName("PerjobTyp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.TpProject)
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPerCmdMatrixReport>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPerCmdMatrixReport");

                entity.Property(e => e.تاريخاتمام)
                    .IsRequired()
                    .HasColumnName("تاريخ اتمام")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.تاريخحکم)
                    .HasColumnName("تاريخ حکم")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.تاريخشروع)
                    .IsRequired()
                    .HasColumnName("تاريخ شروع")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.تعدادنفراتدرمرکز).HasColumnName("تعداد نفرات در مرکز");

                entity.Property(e => e.سازمان)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.سمت)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.شرححکم)
                    .HasColumnName("شرح حکم")
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.شمارهحکم)
                    .IsRequired()
                    .HasColumnName("شماره حکم")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.فعال)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.مرکزهزينه)
                    .HasColumnName("مرکز هزينه")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ناحیه)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نامپرسنل)
                    .HasColumnName("نام پرسنل")
                    .HasMaxLength(51)
                    .IsUnicode(false);

                entity.Property(e => e.نحوهمحاسبهحقوق)
                    .HasColumnName("نحوه محاسبه حقوق")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نوعاستخدام)
                    .HasColumnName("نوع استخدام")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نوعحکم)
                    .HasColumnName("نوع حکم")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.کدمرکز)
                    .HasColumnName("کد مرکز")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کدپرسنلی)
                    .HasColumnName("کد پرسنلی")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کدپست)
                    .HasColumnName("کد پست")
                    .HasMaxLength(15)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPerCmdOpr>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPerCmdOpr");

                entity.Property(e => e.CtbCostCu)
                    .HasColumnName("CtbCost_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCostSi).HasColumnName("CtbCost_Si");

                entity.Property(e => e.CtbCostTp)
                    .HasColumnName("CtbCost_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbOrgDepCu)
                    .HasColumnName("CtbOrgDep_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CtbOrgDepSi).HasColumnName("CtbOrgDep_Si");

                entity.Property(e => e.CtbOrgDepTp)
                    .HasColumnName("CtbOrgDep_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbOrgJobCu)
                    .HasColumnName("CtbOrgJob_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CtbOrgJobSi).HasColumnName("CtbOrgJob_Si");

                entity.Property(e => e.CtbOrgJobTp)
                    .HasColumnName("CtbOrgJob_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbOrgPstCu)
                    .HasColumnName("CtbOrgPst_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CtbOrgPstSi).HasColumnName("CtbOrgPst_Si");

                entity.Property(e => e.CtbOrgPstTp)
                    .HasColumnName("CtbOrgPst_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdAct).HasColumnName("PerCmd_Act");

                entity.Property(e => e.PerCmdBgnDs)
                    .IsRequired()
                    .HasColumnName("PerCmd_Bgn_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdCntrctNo)
                    .HasColumnName("PerCmd_CntrctNo")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdCu)
                    .IsRequired()
                    .HasColumnName("PerCmd_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdDelayed).HasColumnName("PerCmd_Delayed");

                entity.Property(e => e.PerCmdDs)
                    .HasColumnName("PerCmd_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdEndDs)
                    .IsRequired()
                    .HasColumnName("PerCmd_End_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdOprCalc)
                    .HasColumnName("PerCmdOpr_Calc")
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdOprCu)
                    .HasColumnName("PerCmdOpr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdOprIf)
                    .HasColumnName("PerCmdOpr_If")
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdOprSeq).HasColumnName("PerCmdOpr_Seq");

                entity.Property(e => e.PerCmdOprSi).HasColumnName("PerCmdOpr_Si");

                entity.Property(e => e.PerCmdOprTp)
                    .HasColumnName("PerCmdOpr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdSi).HasColumnName("PerCmd_Si");

                entity.Property(e => e.PerCmdTp)
                    .HasColumnName("PerCmd_Tp")
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdTypCu)
                    .HasColumnName("PerCmdTyp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdTypSi).HasColumnName("PerCmdTyp_Si");

                entity.Property(e => e.PerCmdTypTp)
                    .HasColumnName("PerCmdTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerEmpTypCu)
                    .HasColumnName("PerEmpTyp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerEmpTypTp)
                    .HasColumnName("PerEmpTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerOprGrpSi).HasColumnName("PerOprGrp_Si");

                entity.Property(e => e.PerOprIsmovagh).HasColumnName("PerOpr_Ismovagh");

                entity.Property(e => e.PerOprShowInCmd).HasColumnName("PerOpr_ShowInCmd");

                entity.Property(e => e.PerPrsnlAct).HasColumnName("PerPrsnl_Act");

                entity.Property(e => e.PerPrsnlCu)
                    .HasColumnName("PerPrsnl_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDAdrs)
                    .HasColumnName("PerPrsnlD_Adrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.Property(e => e.PerPrsnlTp)
                    .HasColumnName("PerPrsnl_Tp")
                    .HasMaxLength(51)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPerCmdprsnlCmdOprMtrx>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPerCmdprsnlCmdOprMtrx");

                entity.Property(e => e.آدرس)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.تاريخاتمامحکم)
                    .HasColumnName("تاريخ اتمام حکم")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.تاريختولد)
                    .HasColumnName("تاريخ تولد")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.تاريخحکم)
                    .HasColumnName("تاريخ حکم")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.تاريخشروعحکم)
                    .HasColumnName("تاريخ شروع حکم")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.تحصيلات)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.تعدادفرزند).HasColumnName("تعداد  فرزند");

                entity.Property(e => e.توالیحکم).HasColumnName("توالی حکم");

                entity.Property(e => e.حکمفعال).HasColumnName("حکم فعال");

                entity.Property(e => e.سربازی)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.شرححکم)
                    .HasColumnName("شرح حکم")
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.شرحعامل)
                    .HasColumnName("شرح عامل")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.شعبه)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.شمارهحساب)
                    .HasColumnName("شماره حساب")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.شمارهحکم)
                    .HasColumnName("شماره حکم")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.شمارهشناسنامه)
                    .HasColumnName("شماره شناسنامه")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.محلصدور)
                    .HasColumnName("محل صدور")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.مقدارمحاسبه)
                    .HasColumnName("مقدار محاسبه")
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.نام)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.نامبانک)
                    .HasColumnName("نام بانک")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.نامخانوادگی)
                    .IsRequired()
                    .HasColumnName("نام خانوادگی")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.نامونامخانوادگی)
                    .HasColumnName("نام و نام خانوادگی")
                    .HasMaxLength(51)
                    .IsUnicode(false);

                entity.Property(e => e.نامپدر)
                    .HasColumnName("نام پدر")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.نوعحکم)
                    .HasColumnName("نوع حکم")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.وضعيتتاهل).HasColumnName("وضعيت تاهل");

                entity.Property(e => e.پرسنلفعال).HasColumnName("پرسنل فعال");

                entity.Property(e => e.کدعامل)
                    .HasColumnName("کد عامل")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کدپرسنلی)
                    .IsRequired()
                    .HasColumnName("کد پرسنلی")
                    .HasMaxLength(15)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPerIncDec>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPerIncDec");

                entity.Property(e => e.PerIncDecDs)
                    .IsRequired()
                    .HasColumnName("PerIncDec_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerIncDecPrc)
                    .HasColumnName("PerIncDec_Prc")
                    .HasColumnType("money");

                entity.Property(e => e.PerIncDecSi).HasColumnName("PerIncDec_Si");

                entity.Property(e => e.PerIncDecTp)
                    .HasColumnName("PerIncDec_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlCu)
                    .HasColumnName("PerPrsnl_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.Property(e => e.PerPrsnlTp)
                    .HasColumnName("PerPrsnl_Tp")
                    .HasMaxLength(51)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPerLoanGivBak>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPerLoanGivBak");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.PerLoanCu).HasColumnName("PerLoan_Cu");

                entity.Property(e => e.PerLoanDs)
                    .HasColumnName("PerLoan_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerLoanFinished).HasColumnName("PerLoan_Finished");

                entity.Property(e => e.PerLoanGivBakDs)
                    .IsRequired()
                    .HasColumnName("PerLoanGivBak_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerLoanGivBakPrice)
                    .HasColumnName("PerLoanGivBak_Price")
                    .HasColumnType("money");

                entity.Property(e => e.PerLoanGivBakSi).HasColumnName("PerLoanGivBak_Si");

                entity.Property(e => e.PerLoanGivBakTp)
                    .HasColumnName("PerLoanGivBak_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PerLoanPrice)
                    .HasColumnName("PerLoan_Price")
                    .HasColumnType("money");

                entity.Property(e => e.PerLoanRem)
                    .HasColumnName("PerLoan_Rem")
                    .HasColumnType("money");

                entity.Property(e => e.PerLoanSi).HasColumnName("PerLoan_Si");

                entity.Property(e => e.PerLoanStgFirstDate)
                    .HasColumnName("PerLoan_StgFirstDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerLoanStgPrice)
                    .HasColumnName("PerLoan_StgPrice")
                    .HasColumnType("money");

                entity.Property(e => e.PerLoanStgQty).HasColumnName("PerLoan_StgQty");

                entity.Property(e => e.PerLoanTp)
                    .HasColumnName("PerLoan_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerLoanTypCu)
                    .HasColumnName("PerLoanTyp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerLoanTypSi).HasColumnName("PerLoanTyp_Si");

                entity.Property(e => e.PerLoanTypTp)
                    .HasColumnName("PerLoanTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerLocSi).HasColumnName("PerLoc_Si");

                entity.Property(e => e.PerPrsnlCu)
                    .HasColumnName("PerPrsnl_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.Property(e => e.PerPrsnlTp)
                    .HasColumnName("PerPrsnl_Tp")
                    .HasMaxLength(51)
                    .IsUnicode(false);

                entity.Property(e => e.PerPyrlPeriodSi).HasColumnName("PerPyrlPeriod_Si");

                entity.Property(e => e.Remain).HasColumnType("money");
            });

            modelBuilder.Entity<VwPerLoanRqst>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPerLoanRqst");

                entity.Property(e => e.PerLoanCu).HasColumnName("PerLoan_Cu");

                entity.Property(e => e.PerLoanRqstAccept).HasColumnName("PerLoanRqst_Accept");

                entity.Property(e => e.PerLoanRqstCountpayment).HasColumnName("PerLoanRqst_Countpayment");

                entity.Property(e => e.PerLoanRqstCu).HasColumnName("PerLoanRqst_Cu");

                entity.Property(e => e.PerLoanRqstDateAccept)
                    .HasColumnName("PerLoanRqst_DateAccept")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerLoanRqstDateInsert)
                    .HasColumnName("PerLoanRqst_DateInsert")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerLoanRqstDescAccept)
                    .HasColumnName("PerLoanRqst_DescAccept")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.PerLoanRqstDs)
                    .IsRequired()
                    .HasColumnName("PerLoanRqst_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerLoanRqstPrice)
                    .HasColumnName("PerLoanRqst_Price")
                    .HasColumnType("money");

                entity.Property(e => e.PerLoanRqstRem)
                    .HasColumnName("PerLoanRqst_Rem")
                    .HasColumnType("money");

                entity.Property(e => e.PerLoanRqstSi).HasColumnName("PerLoanRqst_Si");

                entity.Property(e => e.PerLoanRqstTp)
                    .HasColumnName("PerLoanRqst_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerLoanRqstUserAccept)
                    .HasColumnName("PerLoanRqst_UserAccept")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerLoanRqstUserInsert)
                    .HasColumnName("PerLoanRqst_UserInsert")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerLoanSi).HasColumnName("PerLoan_Si");

                entity.Property(e => e.PerLoanTp)
                    .HasColumnName("PerLoan_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerLoanTypCu)
                    .HasColumnName("PerLoanTyp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerLoanTypSi).HasColumnName("PerLoanTyp_Si");

                entity.Property(e => e.PerLoanTypTp)
                    .HasColumnName("PerLoanTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerLocSi).HasColumnName("PerLoc_Si");

                entity.Property(e => e.PerPrsnlCu)
                    .HasColumnName("PerPrsnl_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDlocTp)
                    .HasColumnName("PerPrsnlDLoc_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.Property(e => e.PerPrsnlTp)
                    .HasColumnName("PerPrsnl_Tp")
                    .HasMaxLength(51)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPerLoans>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPerLoans");

                entity.Property(e => e.PerLoanCu).HasColumnName("PerLoan_Cu");

                entity.Property(e => e.PerLoanDs)
                    .IsRequired()
                    .HasColumnName("PerLoan_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerLoanFinished).HasColumnName("PerLoan_Finished");

                entity.Property(e => e.PerLoanPrice)
                    .HasColumnName("PerLoan_Price")
                    .HasColumnType("money");

                entity.Property(e => e.PerLoanRem)
                    .HasColumnName("PerLoan_Rem")
                    .HasColumnType("money");

                entity.Property(e => e.PerLoanSi).HasColumnName("PerLoan_Si");

                entity.Property(e => e.PerLoanStgFirstDate)
                    .IsRequired()
                    .HasColumnName("PerLoan_StgFirstDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerLoanStgPrice)
                    .HasColumnName("PerLoan_StgPrice")
                    .HasColumnType("money");

                entity.Property(e => e.PerLoanStgQty).HasColumnName("PerLoan_StgQty");

                entity.Property(e => e.PerLoanTp)
                    .HasColumnName("PerLoan_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerLoanTypCu)
                    .HasColumnName("PerLoanTyp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerLoanTypSi).HasColumnName("PerLoanTyp_Si");

                entity.Property(e => e.PerLoanTypTp)
                    .HasColumnName("PerLoanTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerLoanZamen)
                    .HasColumnName("PerLoan_Zamen")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerLocSi).HasColumnName("PerLoc_Si");

                entity.Property(e => e.PerPrsnlCu)
                    .HasColumnName("PerPrsnl_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.Property(e => e.PerPrsnlTp)
                    .HasColumnName("PerPrsnl_Tp")
                    .HasMaxLength(51)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPerMamor>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPerMamor");

                entity.Property(e => e.PerHamlSi).HasColumnName("PerHaml_Si");

                entity.Property(e => e.PerHamlTp)
                    .HasColumnName("PerHaml_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerMamorCity)
                    .HasColumnName("PerMamor_City")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerMamorDesc)
                    .HasColumnName("PerMamor_Desc")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.PerMamorDs)
                    .HasColumnName("PerMamor_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PerMamorKmGo).HasColumnName("PerMamor_KmGo");

                entity.Property(e => e.PerMamorKmReturn).HasColumnName("PerMamor_KmReturn");

                entity.Property(e => e.PerMamorKmSum).HasColumnName("PerMamor_KmSum");

                entity.Property(e => e.PerMamorMfds)
                    .HasColumnName("PerMamor_MFDs")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PerMamorMfweek)
                    .HasColumnName("PerMamor_MFWeek")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerMamorMlds)
                    .HasColumnName("PerMamor_MLDs")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PerMamorMlweek)
                    .HasColumnName("PerMamor_MLWeek")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerMamorOnewayTicket).HasColumnName("PerMamor_OnewayTicket");

                entity.Property(e => e.PerMamorSi).HasColumnName("PerMamor_Si");

                entity.Property(e => e.PerMamorTimeGo)
                    .HasColumnName("PerMamor_TimeGo")
                    .HasColumnType("datetime");

                entity.Property(e => e.PerMamorTimeReturn)
                    .HasColumnName("PerMamor_TimeReturn")
                    .HasColumnType("datetime");

                entity.Property(e => e.PerPrsnlCu)
                    .HasColumnName("PerPrsnl_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.Property(e => e.PerPrsnlTp)
                    .HasColumnName("PerPrsnl_Tp")
                    .HasMaxLength(51)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPerMatrixReport>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPerMatrixReport");

                entity.Property(e => e.آدرس)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.ايميل)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.تاريخاستخدام)
                    .HasColumnName("تاريخ استخدام")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.تاريخترککار)
                    .HasColumnName("تاريخ ترک کار")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.تاريختولد)
                    .HasColumnName("تاريخ تولد")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.تاريخشروعبهکار)
                    .HasColumnName("تاريخ شروع به کار")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.تاهل2)
                    .IsRequired()
                    .HasColumnName("تاهل 2")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.تحصیلات)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.تعدادفرزند).HasColumnName("تعداد فرزند");

                entity.Property(e => e.تلفن)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.شمارهحساب)
                    .HasColumnName("شماره حساب")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.شمارهشناسنامه)
                    .HasColumnName("شماره شناسنامه")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.محلصدور)
                    .HasColumnName("محل صدور")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ناحیه)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نامبانک)
                    .HasColumnName("نام بانک")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.نامدانشگاه)
                    .HasColumnName("نام دانشگاه")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.نامشعبه)
                    .HasColumnName("نام شعبه")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.نامونامخانوادگی)
                    .HasColumnName("نام و نام خانوادگی")
                    .HasMaxLength(51)
                    .IsUnicode(false);

                entity.Property(e => e.نامپدر)
                    .HasColumnName("نام پدر")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.وضعيت)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.وضعيتسربازی)
                    .HasColumnName("وضعيت سربازی")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.کدملی)
                    .HasColumnName("کد ملی")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.کدپرسنل)
                    .IsRequired()
                    .HasColumnName("کد پرسنل")
                    .HasMaxLength(15)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPerOpr>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPerOpr");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.CtbCostSi).HasColumnName("CtbCost_Si");

                entity.Property(e => e.CtbProjectSi).HasColumnName("CtbProject_Si");

                entity.Property(e => e.PerOprAccNature).HasColumnName("PerOpr_AccNature");

                entity.Property(e => e.PerOprCalc)
                    .IsRequired()
                    .HasColumnName("PerOpr_Calc")
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.PerOprCu)
                    .IsRequired()
                    .HasColumnName("PerOpr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerOprDisplayFormat)
                    .HasColumnName("PerOpr_DisplayFormat")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerOprDisplayType).HasColumnName("PerOpr_DisplayType");

                entity.Property(e => e.PerOprGrpSi).HasColumnName("PerOprGrp_Si");

                entity.Property(e => e.PerOprIf)
                    .HasColumnName("PerOpr_If")
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.PerOprIsReadFish).HasColumnName("PerOpr_IsReadFish");

                entity.Property(e => e.PerOprIsmovagh).HasColumnName("PerOpr_Ismovagh");

                entity.Property(e => e.PerOprLock).HasColumnName("PerOpr_Lock");

                entity.Property(e => e.PerOprNotShwSumFish).HasColumnName("PerOpr_NotShwSumFish");

                entity.Property(e => e.PerOprReadOnly).HasColumnName("PerOpr_ReadOnly");

                entity.Property(e => e.PerOprSeq).HasColumnName("PerOpr_Seq");

                entity.Property(e => e.PerOprShowInCmd).HasColumnName("PerOpr_ShowInCmd");

                entity.Property(e => e.PerOprShowInFish).HasColumnName("PerOpr_ShowInFish");

                entity.Property(e => e.PerOprShowInPyrl).HasColumnName("PerOpr_ShowInPyrl");

                entity.Property(e => e.PerOprShowInWlst).HasColumnName("PerOpr_ShowInWLst");

                entity.Property(e => e.PerOprShowprnCmd).HasColumnName("PerOpr_ShowprnCmd");

                entity.Property(e => e.PerOprSi)
                    .HasColumnName("PerOpr_Si")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.PerOprTp)
                    .HasColumnName("PerOpr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PerOprView).HasColumnName("PerOpr_View");

                entity.Property(e => e.PerOprWthAccT).HasColumnName("PerOpr_WthAccT");

                entity.Property(e => e.PerOprWthCmdAccT).HasColumnName("PerOpr_WthCmdAccT");

                entity.Property(e => e.PerOprWthCtbCost).HasColumnName("PerOpr_WthCtbCost");

                entity.Property(e => e.PerOprWthCtbProject).HasColumnName("PerOpr_WthCtbProject");

                entity.Property(e => e.PerOprWthCtbWrkLst).HasColumnName("PerOpr_WthCtbWrkLst");
            });

            modelBuilder.Entity<VwPerOprMatrix>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPerOprMatrix");

                entity.Property(e => e.جمعمبلغ)
                    .HasColumnName("جمع مبلغ")
                    .HasColumnType("money");

                entity.Property(e => e.شرحعامل)
                    .HasColumnName("شرح عامل")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.شمارهحساب)
                    .HasColumnName("شماره حساب")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.كدشغل)
                    .HasColumnName("كد شغل")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.مرکز)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ناحیه)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نامبانک)
                    .HasColumnName("نام بانک")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.نامشعبه)
                    .HasColumnName(" نام شعبه")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.نامشغل)
                    .HasColumnName("نام شغل")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نامپرسنل)
                    .HasColumnName("نام پرسنل")
                    .HasMaxLength(51)
                    .IsUnicode(false);

                entity.Property(e => e.واحد)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.پست)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.کدعامل)
                    .IsRequired()
                    .HasColumnName("کد عامل")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کدواحد)
                    .HasColumnName("کد واحد")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کدپرسنلی)
                    .HasColumnName("کد پرسنلی")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کدپست)
                    .HasColumnName("کد پست")
                    .HasMaxLength(15)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPerPayroll>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPerPayroll");

                entity.Property(e => e.BankAccountNo).HasColumnName("BankAccountNO");

                entity.Property(e => e.CtbCostCu)
                    .HasColumnName("CtbCost_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCostSi).HasColumnName("CtbCost_Si");

                entity.Property(e => e.CtbCostTp)
                    .HasColumnName("CtbCost_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.CtbOrgDepCu)
                    .HasColumnName("CtbOrgDep_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CtbOrgDepSi).HasColumnName("CtbOrgDep_Si");

                entity.Property(e => e.CtbOrgDepTp)
                    .HasColumnName("CtbOrgDep_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbOrgJobCu)
                    .HasColumnName("CtbOrgJob_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CtbOrgJobTp)
                    .HasColumnName("CtbOrgJob_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbOrgPstCu)
                    .HasColumnName("CtbOrgPst_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CtbOrgPstTp)
                    .HasColumnName("CtbOrgPst_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbProjectSi).HasColumnName("CtbProject_Si");

                entity.Property(e => e.InsrncDname)
                    .HasColumnName("Insrnc_DName")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InsrncFname)
                    .HasColumnName("Insrnc_FName")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InsrncIdno)
                    .HasColumnName("Insrnc_IDNO")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InsrncIdplc)
                    .HasColumnName("Insrnc_IDPLC")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InsrncLname)
                    .HasColumnName("Insrnc_LName")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InsrncNat)
                    .HasColumnName("Insrnc_NAT")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InsrncNo)
                    .HasColumnName("Insrnc_No")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InsrncOcp)
                    .HasColumnName("Insrnc_OCP")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InsrncOcpcode)
                    .HasColumnName("Insrnc_OCPCode")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InsrncOcptp)
                    .HasColumnName("Insrnc_OCPTp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdAct).HasColumnName("PerCmd_Act");

                entity.Property(e => e.PerCmdBgnDs)
                    .IsRequired()
                    .HasColumnName("PerCmd_Bgn_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdCntrctNo)
                    .HasColumnName("PerCmd_CntrctNo")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdCu)
                    .IsRequired()
                    .HasColumnName("PerCmd_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdEndDs)
                    .IsRequired()
                    .HasColumnName("PerCmd_End_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdSi).HasColumnName("PerCmd_Si");

                entity.Property(e => e.PerCmdTypCu)
                    .HasColumnName("PerCmdTyp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerCmdTypTp)
                    .HasColumnName("PerCmdTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerContractTypCu)
                    .HasColumnName("PerContractTyp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerContractTypSi).HasColumnName("PerContractTyp_Si");

                entity.Property(e => e.PerContractTypTp)
                    .HasColumnName("PerContractTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerCurencySi).HasColumnName("PerCurency_Si");

                entity.Property(e => e.PerEmpTypCu)
                    .HasColumnName("PerEmpTyp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerEmpTypSi).HasColumnName("PerEmpTyp_Si");

                entity.Property(e => e.PerEmpTypTp)
                    .HasColumnName("PerEmpTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerExemptSi).HasColumnName("PerExempt_Si");

                entity.Property(e => e.PerFurnitureFlagSi).HasColumnName("PerFurnitureFlag_Si");

                entity.Property(e => e.PerInsrnPromiseSi).HasColumnName("PerInsrnPromise_Si");

                entity.Property(e => e.PerInsrncGrpSi).HasColumnName("PerInsrncGrp_Si");

                entity.Property(e => e.PerInsrncGrpTp)
                    .HasColumnName("PerInsrncGrp_Tp")
                    .HasMaxLength(50);

                entity.Property(e => e.PerInsurTypeCu)
                    .HasColumnName("PerInsurType_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerInsurTypeTp)
                    .HasColumnName("PerInsurType_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerInsurnceName)
                    .HasColumnName("PerInsurnce_Name")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerInterNationalSi).HasColumnName("PerInterNational_Si");

                entity.Property(e => e.PerLocSi).HasColumnName("PerLoc_Si");

                entity.Property(e => e.PerMajorSi).HasColumnName("PerMajor_Si");

                entity.Property(e => e.PerOprGrpSi).HasColumnName("PerOprGrp_Si");

                entity.Property(e => e.PerPaidTypeSi).HasColumnName("PerPaidType_Si");

                entity.Property(e => e.PerPayrollCalc)
                    .IsRequired()
                    .HasColumnName("PerPayroll_Calc")
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayrollCu)
                    .IsRequired()
                    .HasColumnName("PerPayroll_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayrollDelayed).HasColumnName("PerPayroll_Delayed");

                entity.Property(e => e.PerPayrollIf)
                    .HasColumnName("PerPayroll_If")
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayrollIsmovagh).HasColumnName("PerPayroll_Ismovagh");

                entity.Property(e => e.PerPayrollSeq).HasColumnName("PerPayroll_Seq");

                entity.Property(e => e.PerPayrollTp)
                    .HasColumnName("PerPayroll_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PerPayrollValue)
                    .HasColumnName("PerPayroll_Value")
                    .HasColumnType("money");

                entity.Property(e => e.PerPlaceOfficeStatusCu)
                    .HasColumnName("PerPlaceOfficeStatus_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPlaceOfficeStatusSi).HasColumnName("PerPlaceOfficeStatus_Si");

                entity.Property(e => e.PerPlaceOfficeStatusTp)
                    .HasColumnName("PerPlaceOfficeStatus_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlAct).HasColumnName("PerPrsnl_Act");

                entity.Property(e => e.PerPrsnlCu)
                    .HasColumnName("PerPrsnl_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDAdrs)
                    .HasColumnName("PerPrsnlD_Adrs")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDBnkAccNo)
                    .HasColumnName("PerPrsnlD_Bnk_AccNo")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDBnkAccTyp)
                    .HasColumnName("PerPrsnlD_Bnk_AccTyp")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDBnkBrnch)
                    .HasColumnName("PerPrsnlD_Bnk_Brnch")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDBnkName)
                    .HasColumnName("PerPrsnlD_Bnk_Name")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDBrtDte)
                    .HasColumnName("PerPrsnlD_BrtDte")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDBuyBak)
                    .HasColumnName("PerPrsnlD_BuyBak")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PerPrsnlDChld).HasColumnName("PerPrsnlD_Chld");

                entity.Property(e => e.PerPrsnlDCountry)
                    .HasColumnName("PerPrsnlD_Country")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDEdu)
                    .HasColumnName("PerPrsnlD_Edu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDEmail)
                    .HasColumnName("PerPrsnlD_EMail")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDEmpDte)
                    .HasColumnName("PerPrsnlD_EmpDte")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDFax)
                    .HasColumnName("PerPrsnlD_Fax")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDFrgn).HasColumnName("PerPrsnlD_Frgn");

                entity.Property(e => e.PerPrsnlDHistoryJob).HasColumnName("PerPrsnlD_HistoryJob");

                entity.Property(e => e.PerPrsnlDIddte)
                    .HasColumnName("PerPrsnlD_IDDte")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDIdloc)
                    .HasColumnName("PerPrsnlD_IDLoc")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDIdno)
                    .HasColumnName("PerPrsnlD_IDNo")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDInsureType).HasColumnName("PerPrsnlD_InsureType");

                entity.Property(e => e.PerPrsnlDMajor)
                    .HasColumnName("PerPrsnlD_Major")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDMarid).HasColumnName("PerPrsnlD_Marid");

                entity.Property(e => e.PerPrsnlDPhoto).HasColumnName("PerPrsnlD_Photo");

                entity.Property(e => e.PerPrsnlDPlaceOffice)
                    .HasColumnName("PerPrsnlD_placeOffice")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDPname)
                    .HasColumnName("PerPrsnlD_PName")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDPost)
                    .HasColumnName("PerPrsnlD_Post")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDPostCode)
                    .HasColumnName("PerPrsnlD_PostCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDPostName)
                    .HasColumnName("PerPrsnlD_PostName")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDSex).HasColumnName("PerPrsnlD_Sex");

                entity.Property(e => e.PerPrsnlDSldr)
                    .HasColumnName("PerPrsnlD_Sldr")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDTel1)
                    .HasColumnName("PerPrsnlD_Tel1")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDTel2)
                    .HasColumnName("PerPrsnlD_Tel2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDUniverCity)
                    .HasColumnName("PerPrsnlD_UniverCity")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDUrl)
                    .HasColumnName("PerPrsnlD_URL")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDWrkBgnDte)
                    .HasColumnName("PerPrsnlD_WrkBgnDte")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDWrkEndDte)
                    .HasColumnName("PerPrsnlD_WrkEndDte")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDlocSi).HasColumnName("PerPrsnlDLoc_Si");

                entity.Property(e => e.PerPrsnlDmarid1)
                    .HasColumnName("PerPrsnlDMarid")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlFname)
                    .HasColumnName("PerPrsnl_FName")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlIdNatCode)
                    .HasColumnName("PerPrsnlID_NatCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlLname)
                    .HasColumnName("PerPrsnl_LName")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.Property(e => e.PerPrsnlTp)
                    .HasColumnName("PerPrsnl_Tp")
                    .HasMaxLength(51)
                    .IsUnicode(false);

                entity.Property(e => e.PerPyrlPeriodDsEnd)
                    .HasColumnName("PerPyrlPeriod_DsEnd")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerPyrlPeriodDsStart)
                    .HasColumnName("PerPyrlPeriod_DsStart")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerPyrlPeriodSi).HasColumnName("PerPyrlPeriod_Si");

                entity.Property(e => e.PerPyrlPeriodTp)
                    .HasColumnName("PerPyrlPeriod_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPyrlPeriodWrkDays).HasColumnName("PerPyrlPeriod_WrkDays");

                entity.Property(e => e.PerTaxGrpSi).HasColumnName("PerTaxGrp_Si");

                entity.Property(e => e.PerTaxGrpTp)
                    .HasColumnName("PerTaxGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerVehicleFlagSi).HasColumnName("PerVehicleFlag_Si");

                entity.Property(e => e.PereEducateCu)
                    .HasColumnName("PereEducate_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PereEducateSi).HasColumnName("PereEducate_Si");

                entity.Property(e => e.PereEducateTp)
                    .HasColumnName("PereEducate_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PeremployeeStatusCu)
                    .HasColumnName("PeremployeeStatus_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PeremployeeStatusSi).HasColumnName("PeremployeeStatus_Si");

                entity.Property(e => e.PeremployeeStatusTp)
                    .HasColumnName("PeremployeeStatus_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPerPrsnl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPerPrsnl");

                entity.Property(e => e.CtbOrgDepCu)
                    .HasColumnName("CtbOrgDep_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CtbOrgDepTp)
                    .HasColumnName("CtbOrgDep_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbOrgJobCu)
                    .HasColumnName("CtbOrgJob_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CtbOrgJobTp)
                    .HasColumnName("CtbOrgJob_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbOrgPstCu)
                    .HasColumnName("CtbOrgPst_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CtbOrgPstTp)
                    .HasColumnName("CtbOrgPst_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlAct).HasColumnName("PerPrsnl_Act");

                entity.Property(e => e.PerPrsnlCu)
                    .IsRequired()
                    .HasColumnName("PerPrsnl_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.Property(e => e.PerPrsnlTp)
                    .HasColumnName("PerPrsnl_Tp")
                    .HasMaxLength(51)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPerPrsnlD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPerPrsnlD");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.BankAccountNo).HasColumnName("BankAccountNO");

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.CuAcc)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InsrncDname)
                    .HasColumnName("Insrnc_DName")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InsrncFname)
                    .HasColumnName("Insrnc_FName")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InsrncIdno)
                    .HasColumnName("Insrnc_IDNO")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InsrncIdplc)
                    .HasColumnName("Insrnc_IDPLC")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InsrncLname)
                    .HasColumnName("Insrnc_LName")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InsrncNat)
                    .HasColumnName("Insrnc_NAT")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InsrncNo)
                    .HasColumnName("Insrnc_No")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InsrncOcp)
                    .HasColumnName("Insrnc_OCP")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InsrncOcpcode)
                    .HasColumnName("Insrnc_OCPCode")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InsrncOcptp)
                    .HasColumnName("Insrnc_OCPTp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerContractTypCu)
                    .HasColumnName("PerContractTyp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerContractTypSi).HasColumnName("PerContractTyp_Si");

                entity.Property(e => e.PerContractTypTp)
                    .HasColumnName("PerContractTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerCurencySi).HasColumnName("PerCurency_Si");

                entity.Property(e => e.PerExemptCu)
                    .HasColumnName("PerExempt_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerExemptSi).HasColumnName("PerExempt_Si");

                entity.Property(e => e.PerExemptTp)
                    .HasColumnName("PerExempt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerFurnitureFlagSi).HasColumnName("PerFurnitureFlag_Si");

                entity.Property(e => e.PerInsrnPromiseSi).HasColumnName("PerInsrnPromise_Si");

                entity.Property(e => e.PerInsrncGrpSi).HasColumnName("PerInsrncGrp_Si");

                entity.Property(e => e.PerInsrncGrpTp)
                    .HasColumnName("PerInsrncGrp_Tp")
                    .HasMaxLength(50);

                entity.Property(e => e.PerInsrnpromiseCu)
                    .HasColumnName("PerInsrnpromise_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerInsrnpromiseTp)
                    .HasColumnName("PerInsrnpromise_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerInsurTypeCu)
                    .HasColumnName("PerInsurType_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerInsurTypeTp)
                    .HasColumnName("PerInsurType_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerInsurnceName)
                    .HasColumnName("PerInsurnce_Name")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerInterNationalCu)
                    .HasColumnName("PerInterNational_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerInterNationalSi).HasColumnName("PerInterNational_Si");

                entity.Property(e => e.PerInterNationalTp)
                    .HasColumnName("PerInterNational_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerLocSi).HasColumnName("PerLoc_Si");

                entity.Property(e => e.PerMajorCu)
                    .HasColumnName("PerMajor_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerMajorSi).HasColumnName("PerMajor_Si");

                entity.Property(e => e.PerMajorTp)
                    .HasColumnName("PerMajor_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPaidTypeCu)
                    .HasColumnName("PerPaidType_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPaidTypeSi).HasColumnName("PerPaidType_Si");

                entity.Property(e => e.PerPaidTypeTp)
                    .HasColumnName("PerPaidType_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPlaceOfficeStatusCu)
                    .HasColumnName("PerPlaceOfficeStatus_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPlaceOfficeStatusSi).HasColumnName("PerPlaceOfficeStatus_Si");

                entity.Property(e => e.PerPlaceOfficeStatusTp)
                    .HasColumnName("PerPlaceOfficeStatus_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlAct).HasColumnName("PerPrsnl_Act");

                entity.Property(e => e.PerPrsnlAct1)
                    .HasColumnName("PerPrsnlAct")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlCu)
                    .IsRequired()
                    .HasColumnName("PerPrsnl_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDAdrs)
                    .HasColumnName("PerPrsnlD_Adrs")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDBnkAccNo)
                    .HasColumnName("PerPrsnlD_Bnk_AccNo")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDBnkAccTyp)
                    .HasColumnName("PerPrsnlD_Bnk_AccTyp")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDBnkBrnch)
                    .HasColumnName("PerPrsnlD_Bnk_Brnch")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDBnkName)
                    .HasColumnName("PerPrsnlD_Bnk_Name")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDBrtDte)
                    .HasColumnName("PerPrsnlD_BrtDte")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDBuyBak)
                    .HasColumnName("PerPrsnlD_BuyBak")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PerPrsnlDChld).HasColumnName("PerPrsnlD_Chld");

                entity.Property(e => e.PerPrsnlDCountry)
                    .HasColumnName("PerPrsnlD_Country")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDEdu)
                    .HasColumnName("PerPrsnlD_Edu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDEmail)
                    .HasColumnName("PerPrsnlD_EMail")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDEmpDte)
                    .HasColumnName("PerPrsnlD_EmpDte")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDEmpStatus)
                    .HasColumnName("PerPrsnlD_EmpStatus")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDExpert).HasColumnName("PerPrsnlD_Expert");

                entity.Property(e => e.PerPrsnlDFax)
                    .HasColumnName("PerPrsnlD_Fax")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDFrgn).HasColumnName("PerPrsnlD_Frgn");

                entity.Property(e => e.PerPrsnlDGroupCode).HasColumnName("PerPrsnlD_GroupCode");

                entity.Property(e => e.PerPrsnlDHardCode)
                    .HasColumnName("PerPrsnlD_HardCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDHistoryJob).HasColumnName("PerPrsnlD_HistoryJob");

                entity.Property(e => e.PerPrsnlDHome1).HasColumnName("PerPrsnlD_Home");

                entity.Property(e => e.PerPrsnlDIddte)
                    .HasColumnName("PerPrsnlD_IDDte")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDIdentityJob)
                    .HasColumnName("PerPrsnlD_IdentityJob")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDIdloc)
                    .HasColumnName("PerPrsnlD_IDLoc")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDIdno)
                    .HasColumnName("PerPrsnlD_IDNo")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDInsureType).HasColumnName("PerPrsnlD_InsureType");

                entity.Property(e => e.PerPrsnlDJobPlace)
                    .HasColumnName("PerPrsnlD_JobPlace")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDJobType)
                    .HasColumnName("PerPrsnlD_JobType")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDLiberal)
                    .HasColumnName("PerPrsnlD_liberal")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDMajor)
                    .HasColumnName("PerPrsnlD_Major")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDMarid).HasColumnName("PerPrsnlD_Marid");

                entity.Property(e => e.PerPrsnlDPhoto).HasColumnName("PerPrsnlD_Photo");

                entity.Property(e => e.PerPrsnlDPlaceOffice)
                    .HasColumnName("PerPrsnlD_placeOffice")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDPlcBrth)
                    .HasColumnName("PerPrsnlD_PlcBrth")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDPname)
                    .HasColumnName("PerPrsnlD_PName")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDPost)
                    .HasColumnName("PerPrsnlD_Post")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDPostCode)
                    .HasColumnName("PerPrsnlD_PostCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDPostName)
                    .HasColumnName("PerPrsnlD_PostName")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDReligion)
                    .HasColumnName("PerPrsnlD_Religion")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDSex).HasColumnName("PerPrsnlD_Sex");

                entity.Property(e => e.PerPrsnlDSldr)
                    .HasColumnName("PerPrsnlD_Sldr")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDSponsorShipNo).HasColumnName("PerPrsnlD_SponsorShipNo");

                entity.Property(e => e.PerPrsnlDTel1)
                    .HasColumnName("PerPrsnlD_Tel1")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDTel2)
                    .HasColumnName("PerPrsnlD_Tel2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDTimeInwar)
                    .HasColumnName("PerPrsnlD_TimeInwar")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDTimeWorkAcc)
                    .HasColumnName("PerPrsnlD_TimeWorkAcc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDTypJob)
                    .HasColumnName("PerPrsnlD_TypJob")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDTypeCmd).HasColumnName("PerPrsnlD_TypeCmd");

                entity.Property(e => e.PerPrsnlDUniverCity)
                    .HasColumnName("PerPrsnlD_UniverCity")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDUrl)
                    .HasColumnName("PerPrsnlD_URL")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDWrkBgnDte)
                    .HasColumnName("PerPrsnlD_WrkBgnDte")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDWrkEndDte)
                    .HasColumnName("PerPrsnlD_WrkEndDte")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDfrgn1)
                    .IsRequired()
                    .HasColumnName("PerPrsnlDFrgn")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDhome)
                    .HasColumnName("PerPrsnlDHome")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDlocTp)
                    .HasColumnName("PerPrsnlDLoc_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDmarid1)
                    .IsRequired()
                    .HasColumnName("PerPrsnlDMarid")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDsex1)
                    .HasColumnName("PerPrsnlDSex")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlFname)
                    .HasColumnName("PerPrsnl_FName")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlIdNatCode)
                    .HasColumnName("PerPrsnlID_NatCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlIdPassportCode)
                    .HasColumnName("PerPrsnlID_PassportCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlLname)
                    .IsRequired()
                    .HasColumnName("PerPrsnl_LName")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlNotBimeh).HasColumnName("PerPrsnl_NotBimeh");

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.Property(e => e.PerPrsnlTp)
                    .HasColumnName("PerPrsnl_Tp")
                    .HasMaxLength(51)
                    .IsUnicode(false);

                entity.Property(e => e.PerTaxGrpCu)
                    .HasColumnName("PerTaxGrp_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerTaxGrpSi).HasColumnName("PerTaxGrp_Si");

                entity.Property(e => e.PerTaxGrpTp)
                    .HasColumnName("PerTaxGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerVehicleFlagSi).HasColumnName("PerVehicleFlag_Si");

                entity.Property(e => e.PereEducateCu)
                    .HasColumnName("PereEducate_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PereEducateSi).HasColumnName("PereEducate_Si");

                entity.Property(e => e.PereEducateTp)
                    .HasColumnName("PereEducate_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PeremployeeStatusCu)
                    .HasColumnName("PeremployeeStatus_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PeremployeeStatusSi).HasColumnName("PeremployeeStatus_Si");

                entity.Property(e => e.PeremployeeStatusTp)
                    .HasColumnName("PeremployeeStatus_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpAcc)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPerSponserShip>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPerSponserShip");

                entity.Property(e => e.CtbCostSi).HasColumnName("CtbCost_Si");

                entity.Property(e => e.CuCost)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlCu)
                    .HasColumnName("PerPrsnl_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.Property(e => e.PerPrsnlTp)
                    .HasColumnName("PerPrsnl_Tp")
                    .HasMaxLength(51)
                    .IsUnicode(false);

                entity.Property(e => e.PerSponserShipBrtDte)
                    .HasColumnName("PerSponserShip_BrtDte")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerSponserShipDCu)
                    .IsRequired()
                    .HasColumnName("PerSponserShipD_Cu")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PerSponserShipDFname)
                    .HasColumnName("PerSponserShipD_FName")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.PerSponserShipDIdno)
                    .HasColumnName("PerSponserShipD_IDNo")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PerSponserShipDInsrncIdno)
                    .HasColumnName("PerSponserShipD_InsrncIDNO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerSponserShipDLname)
                    .HasColumnName("PerSponserShipD_LName")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.PerSponserShipDRelatedCode).HasColumnName("PerSponserShipD_RelatedCode");

                entity.Property(e => e.PerSponserShipDSi).HasColumnName("PerSponserShipD_Si");

                entity.Property(e => e.PerSponserShipKasrBimeSi).HasColumnName("PerSponserShipKasrBime_Si");

                entity.Property(e => e.PerSponserShipKasrBimeTp)
                    .HasColumnName("PerSponserShipKasrBime_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerSponserShipRelatedSi).HasColumnName("PerSponserShipRelated_Si");

                entity.Property(e => e.PerSponserShipRelatedTp)
                    .HasColumnName("PerSponserShipRelated_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpCost)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPerVchrD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPerVchrD");

                entity.Property(e => e.AccDocHSi).HasColumnName("AccDocH_Si");

                entity.Property(e => e.AccLcCu)
                    .HasColumnName("AccLC_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLcTp)
                    .HasColumnName("AccLC_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLcTp2)
                    .HasColumnName("AccLC_Tp2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLkTp2)
                    .HasColumnName("AccLK_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmCu)
                    .HasColumnName("AccLM_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLmTp)
                    .HasColumnName("AccLM_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmTp2)
                    .HasColumnName("AccLM_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpCu)
                    .HasColumnName("AccLP_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLpTp)
                    .HasColumnName("AccLP_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpTp2)
                    .HasColumnName("AccLP_Tp2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtCu)
                    .HasColumnName("AccLT_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtCu2).HasColumnName("AccLT_Cu2");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AccLtTp)
                    .HasColumnName("AccLT_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtTp2)
                    .HasColumnName("AccLT_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.CtbCurncyTp)
                    .HasColumnName("CtbCurncy_Tp")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DsDoc).HasColumnType("smalldatetime");

                entity.Property(e => e.PerVchrDCredit)
                    .HasColumnName("PerVchrD_Credit")
                    .HasColumnType("money");

                entity.Property(e => e.PerVchrDCreditC)
                    .HasColumnName("PerVchrD_CreditC")
                    .HasColumnType("money");

                entity.Property(e => e.PerVchrDDate)
                    .HasColumnName("PerVchrD_Date")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerVchrDDebit)
                    .HasColumnName("PerVchrD_Debit")
                    .HasColumnType("money");

                entity.Property(e => e.PerVchrDDebitC)
                    .HasColumnName("PerVchrD_DebitC")
                    .HasColumnType("money");

                entity.Property(e => e.PerVchrDId).HasColumnName("PerVchrD_Id");

                entity.Property(e => e.PerVchrDTx)
                    .HasColumnName("PerVchrD_Tx")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.PerVchrHDate)
                    .HasColumnName("PerVchrH_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PerVchrHDateFrom)
                    .HasColumnName("PerVchrH_DateFrom")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PerVchrHDateUntil)
                    .HasColumnName("PerVchrH_DateUntil")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PerVchrHId).HasColumnName("PerVchrH_Id");

                entity.Property(e => e.PerVchrHSent).HasColumnName("PerVchrH_Sent");

                entity.Property(e => e.PerVchrHTx)
                    .HasColumnName("PerVchrH_Tx")
                    .HasMaxLength(4000);
            });

            modelBuilder.Entity<VwPerVchrH>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPerVchrH");

                entity.Property(e => e.AccDocHSi).HasColumnName("AccDocH_Si");

                entity.Property(e => e.DsDoc).HasColumnType("smalldatetime");

                entity.Property(e => e.PerVchrHDate)
                    .HasColumnName("PerVchrH_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PerVchrHDateFrom)
                    .HasColumnName("PerVchrH_DateFrom")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PerVchrHDateUntil)
                    .HasColumnName("PerVchrH_DateUntil")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PerVchrHId).HasColumnName("PerVchrH_Id");

                entity.Property(e => e.PerVchrHSent).HasColumnName("PerVchrH_Sent");

                entity.Property(e => e.PerVchrHTx)
                    .HasColumnName("PerVchrH_Tx")
                    .HasMaxLength(4000);
            });

            modelBuilder.Entity<VwPerWrkLst>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPerWrkLst");

                entity.Property(e => e.CtbCostSi).HasColumnName("CtbCost_Si");

                entity.Property(e => e.CtbOrgDepSi).HasColumnName("CtbOrgDep_Si");

                entity.Property(e => e.CtbOrgPstTp)
                    .HasColumnName("CtbOrgPst_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CuCost)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerEmpTypSi).HasColumnName("PerEmpTyp_Si");

                entity.Property(e => e.PerEmpTypTp)
                    .HasColumnName("PerEmpTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerInsrncGrpSi).HasColumnName("PerInsrncGrp_Si");

                entity.Property(e => e.PerInsrncGrpTp)
                    .HasColumnName("PerInsrncGrp_Tp")
                    .HasMaxLength(50);

                entity.Property(e => e.PerLocSi).HasColumnName("PerLoc_Si");

                entity.Property(e => e.PerOprGrpSi).HasColumnName("PerOprGrp_Si");

                entity.Property(e => e.PerPrsnlCu)
                    .HasColumnName("PerPrsnl_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDTypeCmd)
                    .HasColumnName("PerPrsnlD_TypeCmd")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDWrkBgnDte)
                    .HasColumnName("PerPrsnlD_WrkBgnDte")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlDWrkEndDte)
                    .HasColumnName("PerPrsnlD_WrkEndDte")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlFname)
                    .HasColumnName("PerPrsnl_FName")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlLname)
                    .HasColumnName("PerPrsnl_LName")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.Property(e => e.PerPyrlPeriodSi).HasColumnName("PerPyrlPeriod_Si");

                entity.Property(e => e.PerTaxGrpCu)
                    .HasColumnName("PerTaxGrp_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerTaxGrpSi).HasColumnName("PerTaxGrp_Si");

                entity.Property(e => e.PerTaxGrpTp)
                    .HasColumnName("PerTaxGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerWrkLstCu)
                    .IsRequired()
                    .HasColumnName("PerWrkLst_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerWrkLstTp)
                    .HasColumnName("PerWrkLst_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerWrkLstValue).HasColumnName("PerWrkLst_Value");

                entity.Property(e => e.TpCost)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPersWorkList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPersWorkList");

                entity.Property(e => e.CtbCostSi).HasColumnName("CtbCost_Si");

                entity.Property(e => e.PerPrsnlCu)
                    .HasColumnName("PerPrsnl_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlFname)
                    .HasColumnName("PerPrsnl_FName")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlLname)
                    .HasColumnName("PerPrsnl_LName")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.PerPrsnlSi).HasColumnName("PerPrsnl_Si");

                entity.Property(e => e.PerPyrlPeriodSi).HasColumnName("PerPyrlPeriod_Si");

                entity.Property(e => e.PersWorkListAbsence).HasColumnName("PersWorkList_Absence");

                entity.Property(e => e.PersWorkListCalc).HasColumnName("PersWorkList_Calc");

                entity.Property(e => e.PersWorkListHolidays).HasColumnName("PersWorkList_Holidays");

                entity.Property(e => e.PersWorkListIncrgOverTime).HasColumnName("PersWorkList_IncrgOverTime");

                entity.Property(e => e.PersWorkListMeritLeave).HasColumnName("PersWorkList_MeritLeave");

                entity.Property(e => e.PersWorkListMission).HasColumnName("PersWorkList_Mission");

                entity.Property(e => e.PersWorkListNoSalaryLeave).HasColumnName("PersWorkList_NoSalaryLeave");

                entity.Property(e => e.PersWorkListNovice).HasColumnName("PersWorkList_Novice");

                entity.Property(e => e.PersWorkListRemedialLeave).HasColumnName("PersWorkList_RemedialLeave");

                entity.Property(e => e.PersWorkListShiftNum2).HasColumnName("PersWorkList_ShiftNum2");

                entity.Property(e => e.PersWorkListShiftNumber).HasColumnName("PersWorkList_ShiftNumber");

                entity.Property(e => e.PersWorkListShiftTyp2).HasColumnName("PersWorkList_ShiftTyp2");

                entity.Property(e => e.PersWorkListShiftType).HasColumnName("PersWorkList_ShiftType");

                entity.Property(e => e.PersWorkListTimax).HasColumnName("PersWorkList_Timax");

                entity.Property(e => e.PersWorkListTimeLeave).HasColumnName("PersWorkList_TimeLeave");

                entity.Property(e => e.PersWorkListWorkDays).HasColumnName("PersWorkList_WorkDays");

                entity.Property(e => e.PersWorkingSchdlSi).HasColumnName("PersWorkingSchdl_Si");

                entity.Property(e => e.PersWorkingSchdlTp)
                    .HasColumnName("PersWorkingSchdl_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPrdcBom>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPrdcBOM");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsStatusSi).HasColumnName("InvGdsStatus_Si");

                entity.Property(e => e.InvGdsStatusTp)
                    .HasColumnName("InvGdsStatus_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvUntCu)
                    .HasColumnName("InvUnt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcBomActive).HasColumnName("PrdcBOM_Active");

                entity.Property(e => e.PrdcBomChangeInWorkOrder).HasColumnName("PrdcBOM_ChangeInWorkOrder");

                entity.Property(e => e.PrdcBomDefineDate)
                    .HasColumnName("PrdcBOM_DefineDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcBomDescription)
                    .HasColumnName("PrdcBOM_Description")
                    .HasMaxLength(255);

                entity.Property(e => e.PrdcBomFormula)
                    .HasColumnName("PrdcBOM_Formula")
                    .HasMaxLength(100);

                entity.Property(e => e.PrdcBomIsAlternative).HasColumnName("PrdcBOM_IsAlternative");

                entity.Property(e => e.PrdcBomQuantity).HasColumnName("PrdcBOM_Quantity");

                entity.Property(e => e.PrdcBomSi).HasColumnName("PrdcBOM_Si");
            });

            modelBuilder.Entity<VwPrdcBomd>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPrdcBOMD");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsSiMaster).HasColumnName("InvGds_Si_Master");

                entity.Property(e => e.InvGdsStatusSi).HasColumnName("InvGdsStatus_Si");

                entity.Property(e => e.InvGdsStatusTp)
                    .HasColumnName("InvGdsStatus_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.PrdcBomQuantity).HasColumnName("PrdcBOM_Quantity");

                entity.Property(e => e.PrdcBomSi).HasColumnName("PrdcBOM_Si");

                entity.Property(e => e.PrdcBomdScrapValue).HasColumnName("PrdcBOMD_ScrapValue");

                entity.Property(e => e.PrdcBomdSi).HasColumnName("PrdcBOMD_Si");

                entity.Property(e => e.PrdcBomdStatus).HasColumnName("PrdcBOMD_Status");

                entity.Property(e => e.PrdcBomdValue).HasColumnName("PrdcBOMD_Value");
            });

            modelBuilder.Entity<VwPrdcBomworkOrderInfoD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPrdcBOMWorkOrderInfoD");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.PrdcBomChangeInWorkOrder).HasColumnName("PrdcBOM_ChangeInWorkOrder");

                entity.Property(e => e.PrdcBomFormula)
                    .HasColumnName("PrdcBOM_Formula")
                    .HasMaxLength(100);

                entity.Property(e => e.PrdcBomQuantity).HasColumnName("PrdcBOM_Quantity");

                entity.Property(e => e.PrdcLineChangeInWorkOrder).HasColumnName("PrdcLine_ChangeInWorkOrder");

                entity.Property(e => e.PrdcLineTitleCu).HasColumnName("PrdcLineTitle_Cu");

                entity.Property(e => e.PrdcLineTitleTp)
                    .HasColumnName("PrdcLineTitle_Tp")
                    .HasMaxLength(100);

                entity.Property(e => e.PrdcWorkOrderDinfoQuantity).HasColumnName("PrdcWorkOrderDInfo_Quantity");

                entity.Property(e => e.PrdcWorkOrderDinfoSi).HasColumnName("PrdcWorkOrderDInfo_Si");

                entity.Property(e => e.PrdcWorkOrderHSi).HasColumnName("PrdcWorkOrderH_Si");
            });

            modelBuilder.Entity<VwPrdcLine>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPrdcLine");

                entity.Property(e => e.CtbCostSi).HasColumnName("CtbCost_Si");

                entity.Property(e => e.CuCost)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcBomQuantity).HasColumnName("PrdcBOM_Quantity");

                entity.Property(e => e.PrdcBomSi).HasColumnName("PrdcBOM_Si");

                entity.Property(e => e.PrdcLineChangeInWorkOrder).HasColumnName("PrdcLine_ChangeInWorkOrder");

                entity.Property(e => e.PrdcLineContractorTime).HasColumnName("PrdcLine_ContractorTime");

                entity.Property(e => e.PrdcLineHt).HasColumnName("PrdcLine_HT");

                entity.Property(e => e.PrdcLineHumanTime).HasColumnName("PrdcLine_HumanTime");

                entity.Property(e => e.PrdcLineMachineTime).HasColumnName("PrdcLine_MachineTime");

                entity.Property(e => e.PrdcLineMt).HasColumnName("PrdcLine_MT");

                entity.Property(e => e.PrdcLineScrapValue).HasColumnName("PrdcLine_ScrapValue");

                entity.Property(e => e.PrdcLineSi).HasColumnName("PrdcLine_Si");

                entity.Property(e => e.PrdcLineTitleCu).HasColumnName("PrdcLineTitle_Cu");

                entity.Property(e => e.PrdcLineTitleSi).HasColumnName("PrdcLineTitle_Si");

                entity.Property(e => e.PrdcLineTitleTp)
                    .HasColumnName("PrdcLineTitle_Tp")
                    .HasMaxLength(100);

                entity.Property(e => e.PrdcStationCapasity).HasColumnName("PrdcStation_Capasity");

                entity.Property(e => e.PrdcStationCu).HasColumnName("PrdcStation_Cu");

                entity.Property(e => e.PrdcStationSi).HasColumnName("PrdcStation_Si");

                entity.Property(e => e.PrdcStationTimeType)
                    .HasColumnName("PrdcStation_TimeType")
                    .HasMaxLength(1);

                entity.Property(e => e.PrdcStationTimeTypeName)
                    .HasColumnName("PrdcStation_TimeTypeName")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcStationTp)
                    .HasColumnName("PrdcStation_Tp")
                    .HasMaxLength(100);

                entity.Property(e => e.PrdcStationTypeTp)
                    .HasColumnName("PrdcStationType_Tp")
                    .HasMaxLength(22)
                    .IsUnicode(false);

                entity.Property(e => e.StationTimeForUnitH).HasColumnName("StationTimeForUnit_H");

                entity.Property(e => e.StationTimeForUnitM).HasColumnName("StationTimeForUnit_M");

                entity.Property(e => e.TimeForLineH).HasColumnName("TimeForLine_H");

                entity.Property(e => e.TimeForLineM).HasColumnName("TimeForLine_M");

                entity.Property(e => e.TpCost)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPrdcLineConvertTime>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPrdcLineConvertTime");

                entity.Property(e => e.PrdcLineHt).HasColumnName("PrdcLine_HT");

                entity.Property(e => e.PrdcLineMt).HasColumnName("PrdcLine_MT");

                entity.Property(e => e.PrdcLineTitleSi).HasColumnName("PrdcLineTitle_Si");
            });

            modelBuilder.Entity<VwPrdcLineWorkOrderInfoD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPrdcLineWorkOrderInfoD");

                entity.Property(e => e.PrdcLineChangeInWorkOrder).HasColumnName("PrdcLine_ChangeInWorkOrder");

                entity.Property(e => e.PrdcWorkOrderDinfoSi).HasColumnName("PrdcWorkOrderDInfo_Si");
            });

            modelBuilder.Entity<VwPrdcStation>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPrdcStation");

                entity.Property(e => e.CtbCostSi).HasColumnName("CtbCost_Si");

                entity.Property(e => e.CuCost)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcStationCapasity).HasColumnName("PrdcStation_Capasity");

                entity.Property(e => e.PrdcStationCu).HasColumnName("PrdcStation_Cu");

                entity.Property(e => e.PrdcStationSi).HasColumnName("PrdcStation_Si");

                entity.Property(e => e.PrdcStationTimeType)
                    .HasColumnName("PrdcStation_TimeType")
                    .HasMaxLength(1);

                entity.Property(e => e.PrdcStationTimeTypeName)
                    .HasColumnName("PrdcStation_TimeTypeName")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcStationTp)
                    .HasColumnName("PrdcStation_Tp")
                    .HasMaxLength(100);

                entity.Property(e => e.PrdcStationTypeSi).HasColumnName("PrdcStationType_Si");

                entity.Property(e => e.PrdcStationTypeTp)
                    .IsRequired()
                    .HasColumnName("PrdcStationType_Tp")
                    .HasMaxLength(22)
                    .IsUnicode(false);

                entity.Property(e => e.TpCost)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPrdcTraceDmaterial>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPrdcTraceDMaterial");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcTraceDinfoSi).HasColumnName("PrdcTraceDInfo_Si");

                entity.Property(e => e.PrdcTraceDmaterialInvDocType).HasColumnName("PrdcTraceDMaterial_InvDocType");

                entity.Property(e => e.PrdcTraceDmaterialSi).HasColumnName("PrdcTraceDMaterial_Si");

                entity.Property(e => e.PrdcTraceDmaterialValue).HasColumnName("PrdcTraceDMaterial_Value");

                entity.Property(e => e.PrdcWorkOrderDmaterialSi).HasColumnName("PrdcWorkOrderDMaterial_Si");
            });

            modelBuilder.Entity<VwPrdcTraceDprocess>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPrdcTraceDProcess");

                entity.Property(e => e.CtbCostSi).HasColumnName("CtbCost_Si");

                entity.Property(e => e.CuCost)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcStationCu).HasColumnName("PrdcStation_Cu");

                entity.Property(e => e.PrdcStationSi).HasColumnName("PrdcStation_Si");

                entity.Property(e => e.PrdcStationTimeTypeName)
                    .HasColumnName("PrdcStation_TimeTypeName")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcStationTp)
                    .HasColumnName("PrdcStation_Tp")
                    .HasMaxLength(100);

                entity.Property(e => e.PrdcStationTypeTp)
                    .HasColumnName("PrdcStationType_Tp")
                    .HasMaxLength(22)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcTraceDinfoSi).HasColumnName("PrdcTraceDInfo_Si");

                entity.Property(e => e.PrdcTraceDprocessContractor).HasColumnName("PrdcTraceDProcess_Contractor");

                entity.Property(e => e.PrdcTraceDprocessHumanTime).HasColumnName("PrdcTraceDProcess_HumanTime");

                entity.Property(e => e.PrdcTraceDprocessMachineTime).HasColumnName("PrdcTraceDProcess_MachineTime");

                entity.Property(e => e.PrdcTraceDprocessSi).HasColumnName("PrdcTraceDProcess_Si");

                entity.Property(e => e.TpCost)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPrdcTraceH>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPrdcTraceH");

                entity.Property(e => e.InvInvtCu)
                    .HasColumnName("InvInvt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcTraceHCu)
                    .HasColumnName("PrdcTraceH_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcTraceHDate)
                    .HasColumnName("PrdcTraceH_Date")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcTraceHDescription)
                    .HasColumnName("PrdcTraceH_Description")
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcTraceHLock).HasColumnName("PrdcTraceH_Lock");

                entity.Property(e => e.PrdcTraceHSendDoc).HasColumnName("PrdcTraceH_SendDoc");

                entity.Property(e => e.PrdcTraceHSi).HasColumnName("PrdcTraceH_Si");

                entity.Property(e => e.PrdcWorkOrderHSi).HasColumnName("PrdcWorkOrderH_Si");
            });

            modelBuilder.Entity<VwPrdcTraceHdinfo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPrdcTraceHDInfo");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.PrdcBomFormula)
                    .HasColumnName("PrdcBOM_Formula")
                    .HasMaxLength(100);

                entity.Property(e => e.PrdcBomSi).HasColumnName("PrdcBOM_Si");

                entity.Property(e => e.PrdcLineTitleSi).HasColumnName("PrdcLineTitle_Si");

                entity.Property(e => e.PrdcLineTitleTp)
                    .HasColumnName("PrdcLineTitle_Tp")
                    .HasMaxLength(100);

                entity.Property(e => e.PrdcTraceDinfoQuantity).HasColumnName("PrdcTraceDInfo_Quantity");

                entity.Property(e => e.PrdcTraceDinfoSi).HasColumnName("PrdcTraceDInfo_Si");

                entity.Property(e => e.PrdcTraceHCu)
                    .HasColumnName("PrdcTraceH_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcTraceHDate)
                    .HasColumnName("PrdcTraceH_Date")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcTraceHDescription)
                    .HasColumnName("PrdcTraceH_Description")
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcTraceHLock).HasColumnName("PrdcTraceH_Lock");

                entity.Property(e => e.PrdcTraceHSendDoc).HasColumnName("PrdcTraceH_SendDoc");

                entity.Property(e => e.PrdcTraceHSi).HasColumnName("PrdcTraceH_Si");

                entity.Property(e => e.PrdcWorkOrderHSi).HasColumnName("PrdcWorkOrderH_Si");
            });

            modelBuilder.Entity<VwPrdcTraceHdinfoMaterial>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPrdcTraceHDInfoMaterial");

                entity.Property(e => e.InvGdsSiI).HasColumnName("InvGds_Si_I");

                entity.Property(e => e.InvGdsSiM).HasColumnName("InvGds_Si_M");

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.PrdcTraceDinfoQuantity).HasColumnName("PrdcTraceDInfo_Quantity");

                entity.Property(e => e.PrdcTraceDinfoSi).HasColumnName("PrdcTraceDInfo_Si");

                entity.Property(e => e.PrdcTraceDmaterialSi).HasColumnName("PrdcTraceDMaterial_Si");

                entity.Property(e => e.PrdcTraceDmaterialValue).HasColumnName("PrdcTraceDMaterial_Value");

                entity.Property(e => e.PrdcTraceHLock).HasColumnName("PrdcTraceH_Lock");

                entity.Property(e => e.PrdcWorkOrderHSi).HasColumnName("PrdcWorkOrderH_Si");
            });

            modelBuilder.Entity<VwPrdcWorkOrder>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPrdcWorkOrder");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcBomFormula)
                    .HasColumnName("PrdcBOM_Formula")
                    .HasMaxLength(100);

                entity.Property(e => e.PrdcLineTitleTp)
                    .HasColumnName("PrdcLineTitle_Tp")
                    .HasMaxLength(100);

                entity.Property(e => e.PrdcWorkOrderHCu)
                    .HasColumnName("PrdcWorkOrderH_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcWorkOrderHDate)
                    .HasColumnName("PrdcWorkOrderH_Date")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcWorkOrderHFromDate)
                    .HasColumnName("PrdcWorkOrderH_FromDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcWorkOrderHPriority).HasColumnName("PrdcWorkOrderH_Priority");

                entity.Property(e => e.PrdcWorkOrderHSi).HasColumnName("PrdcWorkOrderH_Si");

                entity.Property(e => e.PrdcWorkOrderHStatus).HasColumnName("PrdcWorkOrderH_Status");

                entity.Property(e => e.PrdcWorkOrderHToDate)
                    .HasColumnName("PrdcWorkOrderH_ToDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPrdcWorkOrderDinfo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPrdcWorkOrderDInfo");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcBomFormula)
                    .HasColumnName("PrdcBOM_Formula")
                    .HasMaxLength(100);

                entity.Property(e => e.PrdcLineTitleTp)
                    .HasColumnName("PrdcLineTitle_Tp")
                    .HasMaxLength(100);

                entity.Property(e => e.PrdcWorkOrderDinfoQuantity).HasColumnName("PrdcWorkOrderDInfo_Quantity");

                entity.Property(e => e.PrdcWorkOrderDinfoSi).HasColumnName("PrdcWorkOrderDInfo_Si");

                entity.Property(e => e.PrdcWorkOrderHSi).HasColumnName("PrdcWorkOrderH_Si");
            });

            modelBuilder.Entity<VwPrdcWorkOrderDinfoMaterial>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPrdcWorkOrderDInfoMaterial");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.PrdcBomSi).HasColumnName("PrdcBOM_Si");

                entity.Property(e => e.PrdcLineTitleSi).HasColumnName("PrdcLineTitle_Si");

                entity.Property(e => e.PrdcWorkOrderDinfoQuantity).HasColumnName("PrdcWorkOrderDInfo_Quantity");

                entity.Property(e => e.PrdcWorkOrderDinfoSi).HasColumnName("PrdcWorkOrderDInfo_Si");

                entity.Property(e => e.PrdcWorkOrderDmaterialSi).HasColumnName("PrdcWorkOrderDMaterial_Si");

                entity.Property(e => e.PrdcWorkOrderDmaterialValue).HasColumnName("PrdcWorkOrderDMaterial_Value");

                entity.Property(e => e.PrdcWorkOrderHSi).HasColumnName("PrdcWorkOrderH_Si");
            });

            modelBuilder.Entity<VwPrdcWorkOrderDinfoTrace>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPrdcWorkOrderDInfoTrace");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.PrdcBomSi).HasColumnName("PrdcBOM_Si");

                entity.Property(e => e.PrdcLineTitleSi).HasColumnName("PrdcLineTitle_Si");

                entity.Property(e => e.PrdcTraceDinfoQuantity).HasColumnName("PrdcTraceDInfo_Quantity");

                entity.Property(e => e.PrdcTraceDinfoSi).HasColumnName("PrdcTraceDInfo_Si");

                entity.Property(e => e.PrdcTraceHSi).HasColumnName("PrdcTraceH_Si");

                entity.Property(e => e.PrdcWorkOrderDinfoQuantity).HasColumnName("PrdcWorkOrderDInfo_Quantity");

                entity.Property(e => e.PrdcWorkOrderDinfoSi).HasColumnName("PrdcWorkOrderDInfo_Si");

                entity.Property(e => e.PrdcWorkOrderHCu)
                    .HasColumnName("PrdcWorkOrderH_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcWorkOrderHDate)
                    .HasColumnName("PrdcWorkOrderH_Date")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcWorkOrderHLock).HasColumnName("PrdcWorkOrderH_Lock");

                entity.Property(e => e.PrdcWorkOrderHPriorityName)
                    .HasColumnName("PrdcWorkOrderH_PriorityName")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcWorkOrderHSi).HasColumnName("PrdcWorkOrderH_Si");

                entity.Property(e => e.PrdcWorkOrderHStatus).HasColumnName("PrdcWorkOrderH_Status");

                entity.Property(e => e.PrdcWorkOrderHStatusName)
                    .HasColumnName("PrdcWorkOrderH_StatusName")
                    .HasMaxLength(21)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPrdcWorkOrderDmaterial>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPrdcWorkOrderDMaterial");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcBomdSi).HasColumnName("PrdcBOMD_Si");

                entity.Property(e => e.PrdcWorkOrderDinfoSi).HasColumnName("PrdcWorkOrderDInfo_Si");

                entity.Property(e => e.PrdcWorkOrderDmaterialSi).HasColumnName("PrdcWorkOrderDMaterial_Si");

                entity.Property(e => e.PrdcWorkOrderDmaterialValue).HasColumnName("PrdcWorkOrderDMaterial_Value");
            });

            modelBuilder.Entity<VwPrdcWorkOrderDmaterialTrace>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPrdcWorkOrderDMaterialTrace");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.PrdcTraceDinfoSi).HasColumnName("PrdcTraceDInfo_Si");

                entity.Property(e => e.PrdcTraceDmaterialSi).HasColumnName("PrdcTraceDMaterial_Si");

                entity.Property(e => e.PrdcTraceDmaterialValue).HasColumnName("PrdcTraceDMaterial_Value");

                entity.Property(e => e.PrdcWorkOrderDinfoSi).HasColumnName("PrdcWorkOrderDInfo_Si");

                entity.Property(e => e.PrdcWorkOrderDmaterialSi).HasColumnName("PrdcWorkOrderDMaterial_Si");

                entity.Property(e => e.PrdcWorkOrderDmaterialValue).HasColumnName("PrdcWorkOrderDMaterial_Value");
            });

            modelBuilder.Entity<VwPrdcWorkOrderDprocess>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPrdcWorkOrderDProcess");

                entity.Property(e => e.CtbCostSi).HasColumnName("CtbCost_Si");

                entity.Property(e => e.CuCost)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcLineSi).HasColumnName("PrdcLine_Si");

                entity.Property(e => e.PrdcStationCapasity).HasColumnName("PrdcStation_Capasity");

                entity.Property(e => e.PrdcStationCu).HasColumnName("PrdcStation_Cu");

                entity.Property(e => e.PrdcStationSi).HasColumnName("PrdcStation_Si");

                entity.Property(e => e.PrdcStationTimeType)
                    .HasColumnName("PrdcStation_TimeType")
                    .HasMaxLength(1);

                entity.Property(e => e.PrdcStationTimeTypeName)
                    .HasColumnName("PrdcStation_TimeTypeName")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcStationTp)
                    .HasColumnName("PrdcStation_Tp")
                    .HasMaxLength(100);

                entity.Property(e => e.PrdcStationTypeSi).HasColumnName("PrdcStationType_Si");

                entity.Property(e => e.PrdcStationTypeTp)
                    .HasColumnName("PrdcStationType_Tp")
                    .HasMaxLength(22)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcWorkOrderDinfoSi).HasColumnName("PrdcWorkOrderDInfo_Si");

                entity.Property(e => e.PrdcWorkOrderDprocessContractorTime).HasColumnName("PrdcWorkOrderDProcess_ContractorTime");

                entity.Property(e => e.PrdcWorkOrderDprocessHumanTime).HasColumnName("PrdcWorkOrderDProcess_HumanTime");

                entity.Property(e => e.PrdcWorkOrderDprocessMachineTime).HasColumnName("PrdcWorkOrderDProcess_MachineTime");

                entity.Property(e => e.PrdcWorkOrderDprocessSi).HasColumnName("PrdcWorkOrderDProcess_Si");

                entity.Property(e => e.TpCost)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPrdcWorkOrderDprocessTrace>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPrdcWorkOrderDProcessTrace");

                entity.Property(e => e.CtbCostSi).HasColumnName("CtbCost_Si");

                entity.Property(e => e.PrdcStationSi).HasColumnName("PrdcStation_Si");

                entity.Property(e => e.PrdcStationTypeSi).HasColumnName("PrdcStationType_Si");

                entity.Property(e => e.PrdcTraceDinfoSi).HasColumnName("PrdcTraceDInfo_Si");

                entity.Property(e => e.PrdcTraceDprocessContractor).HasColumnName("PrdcTraceDProcess_Contractor");

                entity.Property(e => e.PrdcTraceDprocessHumanTime).HasColumnName("PrdcTraceDProcess_HumanTime");

                entity.Property(e => e.PrdcTraceDprocessMachineTime).HasColumnName("PrdcTraceDProcess_MachineTime");

                entity.Property(e => e.PrdcTraceDprocessSi).HasColumnName("PrdcTraceDProcess_Si");

                entity.Property(e => e.PrdcWorkOrderDinfoSi).HasColumnName("PrdcWorkOrderDInfo_Si");

                entity.Property(e => e.PrdcWorkOrderDprocessContractorTime).HasColumnName("PrdcWorkOrderDProcess_ContractorTime");

                entity.Property(e => e.PrdcWorkOrderDprocessHumanTime).HasColumnName("PrdcWorkOrderDProcess_HumanTime");

                entity.Property(e => e.PrdcWorkOrderDprocessMachineTime).HasColumnName("PrdcWorkOrderDProcess_MachineTime");

                entity.Property(e => e.PrdcWorkOrderDprocessSi).HasColumnName("PrdcWorkOrderDProcess_Si");
            });

            modelBuilder.Entity<VwPrdcWorkOrderH>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPrdcWorkOrderH");

                entity.Property(e => e.PrdcWorkOrderHCu)
                    .HasColumnName("PrdcWorkOrderH_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcWorkOrderHDate)
                    .HasColumnName("PrdcWorkOrderH_Date")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcWorkOrderHDescription)
                    .HasColumnName("PrdcWorkOrderH_Description")
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcWorkOrderHFromDate)
                    .HasColumnName("PrdcWorkOrderH_FromDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcWorkOrderHIsTrace1).HasColumnName("PrdcWorkOrderH_IsTrace1");

                entity.Property(e => e.PrdcWorkOrderHIsTrace2).HasColumnName("PrdcWorkOrderH_IsTrace2");

                entity.Property(e => e.PrdcWorkOrderHLock).HasColumnName("PrdcWorkOrderH_Lock");

                entity.Property(e => e.PrdcWorkOrderHPriority).HasColumnName("PrdcWorkOrderH_Priority");

                entity.Property(e => e.PrdcWorkOrderHPriorityName)
                    .IsRequired()
                    .HasColumnName("PrdcWorkOrderH_PriorityName")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcWorkOrderHSi)
                    .HasColumnName("PrdcWorkOrderH_Si")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.PrdcWorkOrderHStatus).HasColumnName("PrdcWorkOrderH_Status");

                entity.Property(e => e.PrdcWorkOrderHStatusName)
                    .IsRequired()
                    .HasColumnName("PrdcWorkOrderH_StatusName")
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcWorkOrderHToDate)
                    .HasColumnName("PrdcWorkOrderH_ToDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcWorkOrderTypeSi).HasColumnName("PrdcWorkOrderType_Si");
            });

            modelBuilder.Entity<VwPrdcWorkOrderHdinfoDmaterial>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPrdcWorkOrderHDInfoDMaterial");

                entity.Property(e => e.InvGdsCuI)
                    .HasColumnName("InvGds_Cu_I")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsCuM)
                    .HasColumnName("InvGds_Cu_M")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSiI).HasColumnName("InvGds_Si_I");

                entity.Property(e => e.InvGdsSiM).HasColumnName("InvGds_Si_M");

                entity.Property(e => e.InvGdsStatusSiM).HasColumnName("InvGdsStatus_Si_M");

                entity.Property(e => e.InvGdsStatusTpM)
                    .HasColumnName("InvGdsStatus_Tp_M")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsTpI)
                    .HasColumnName("InvGds_Tp_I")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvGdsTpM)
                    .HasColumnName("InvGds_Tp_M")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvUntCuM)
                    .HasColumnName("InvUnt_Cu_M")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntSiM).HasColumnName("InvUnt_Si_M");

                entity.Property(e => e.InvUntTpM)
                    .HasColumnName("InvUnt_Tp_M")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcBomFormula)
                    .HasColumnName("PrdcBOM_Formula")
                    .HasMaxLength(100);

                entity.Property(e => e.PrdcBomQuantity).HasColumnName("PrdcBOM_Quantity");

                entity.Property(e => e.PrdcBomSi).HasColumnName("PrdcBOM_Si");

                entity.Property(e => e.PrdcLineTitleCu).HasColumnName("PrdcLineTitle_Cu");

                entity.Property(e => e.PrdcLineTitleSi).HasColumnName("PrdcLineTitle_Si");

                entity.Property(e => e.PrdcLineTitleTp)
                    .HasColumnName("PrdcLineTitle_Tp")
                    .HasMaxLength(100);

                entity.Property(e => e.PrdcWorkOrderDinfoSi).HasColumnName("PrdcWorkOrderDInfo_Si");

                entity.Property(e => e.PrdcWorkOrderDmaterialSi).HasColumnName("PrdcWorkOrderDMaterial_Si");

                entity.Property(e => e.PrdcWorkOrderDmaterialValue).HasColumnName("PrdcWorkOrderDMaterial_Value");

                entity.Property(e => e.PrdcWorkOrderHCu)
                    .HasColumnName("PrdcWorkOrderH_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcWorkOrderHDate)
                    .HasColumnName("PrdcWorkOrderH_Date")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcWorkOrderHDescription)
                    .HasColumnName("PrdcWorkOrderH_Description")
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcWorkOrderHFromDate)
                    .HasColumnName("PrdcWorkOrderH_FromDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcWorkOrderHLock).HasColumnName("PrdcWorkOrderH_Lock");

                entity.Property(e => e.PrdcWorkOrderHPriority).HasColumnName("PrdcWorkOrderH_Priority");

                entity.Property(e => e.PrdcWorkOrderHPriorityName)
                    .HasColumnName("PrdcWorkOrderH_PriorityName")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcWorkOrderHSi).HasColumnName("PrdcWorkOrderH_Si");

                entity.Property(e => e.PrdcWorkOrderHStatus).HasColumnName("PrdcWorkOrderH_Status");

                entity.Property(e => e.PrdcWorkOrderHStatusName)
                    .HasColumnName("PrdcWorkOrderH_StatusName")
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcWorkOrderHToDate)
                    .HasColumnName("PrdcWorkOrderH_ToDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcWorkOrderTypeSi).HasColumnName("PrdcWorkOrderType_Si");
            });

            modelBuilder.Entity<VwPrdcWorkOrderProcessCalc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPrdcWorkOrderProcessCalc");

                entity.Property(e => e.CtbCostSi).HasColumnName("CtbCost_Si");

                entity.Property(e => e.CuCost)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcLineTitleSi).HasColumnName("PrdcLineTitle_Si");

                entity.Property(e => e.PrdcStationCapasity).HasColumnName("PrdcStation_Capasity");

                entity.Property(e => e.PrdcStationCu).HasColumnName("PrdcStation_Cu");

                entity.Property(e => e.PrdcStationSi).HasColumnName("PrdcStation_Si");

                entity.Property(e => e.PrdcStationTimeType)
                    .HasColumnName("PrdcStation_TimeType")
                    .HasMaxLength(1);

                entity.Property(e => e.PrdcStationTimeTypeName)
                    .HasColumnName("PrdcStation_TimeTypeName")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcStationTp)
                    .HasColumnName("PrdcStation_Tp")
                    .HasMaxLength(100);

                entity.Property(e => e.PrdcStationTypeSi).HasColumnName("PrdcStationType_Si");

                entity.Property(e => e.PrdcStationTypeTp)
                    .HasColumnName("PrdcStationType_Tp")
                    .HasMaxLength(22)
                    .IsUnicode(false);

                entity.Property(e => e.PrdcWorkOrderDinfoQuantity).HasColumnName("PrdcWorkOrderDInfo_Quantity");

                entity.Property(e => e.PrdcWorkOrderDinfoSi).HasColumnName("PrdcWorkOrderDInfo_Si");

                entity.Property(e => e.PrdcWorkOrderDprocessContractorTime).HasColumnName("PrdcWorkOrderDProcess_ContractorTime");

                entity.Property(e => e.PrdcWorkOrderDprocessHt).HasColumnName("PrdcWorkOrderDProcess_HT");

                entity.Property(e => e.PrdcWorkOrderDprocessHumanTime).HasColumnName("PrdcWorkOrderDProcess_HumanTime");

                entity.Property(e => e.PrdcWorkOrderDprocessMachineTime).HasColumnName("PrdcWorkOrderDProcess_MachineTime");

                entity.Property(e => e.PrdcWorkOrderDprocessMt).HasColumnName("PrdcWorkOrderDProcess_MT");

                entity.Property(e => e.PrdcWorkOrderDprocessSi).HasColumnName("PrdcWorkOrderDProcess_Si");

                entity.Property(e => e.StationTimeForUnitH).HasColumnName("StationTimeForUnit_H");

                entity.Property(e => e.StationTimeForUnitM).HasColumnName("StationTimeForUnit_M");

                entity.Property(e => e.TpCost)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPurBuyD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPurBuyD");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.PurBuyDPrice).HasColumnName("PurBuyD_Price");

                entity.Property(e => e.PurBuyDQty).HasColumnName("PurBuyD_Qty");

                entity.Property(e => e.PurBuyDSi).HasColumnName("PurBuyD_Si");

                entity.Property(e => e.PurBuyHCu)
                    .HasColumnName("PurBuyH_Cu")
                    .HasMaxLength(15);

                entity.Property(e => e.PurBuyHDt)
                    .HasColumnName("PurBuyH_Dt")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurBuyHSi).HasColumnName("PurBuyH_Si");

                entity.Property(e => e.PurOrderHCu).HasColumnName("PurOrderH_Cu");

                entity.Property(e => e.PurOrderHDt)
                    .HasColumnName("PurOrderH_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PurOrderHSi).HasColumnName("PurOrderH_Si");

                entity.Property(e => e.PurPreInvcDPrice)
                    .HasColumnName("PurPreInvcD_Price")
                    .HasColumnType("money");

                entity.Property(e => e.PurPreInvcDQty).HasColumnName("PurPreInvcD_Qty");

                entity.Property(e => e.PurPreInvcDSi).HasColumnName("PurPreInvcD_Si");

                entity.Property(e => e.PurReqstDDt)
                    .HasColumnName("PurReqstD_DT")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PurReqstDQty).HasColumnName("PurReqstD_Qty");

                entity.Property(e => e.PurReqstHCu).HasColumnName("PurReqstH_Cu");

                entity.Property(e => e.PurVndrCu)
                    .HasColumnName("PurVndr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");

                entity.Property(e => e.PurVndrTp)
                    .HasColumnName("PurVndr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPurBuyDsmall>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPurBuyDSmall");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.PurBuyDPrice).HasColumnName("PurBuyD_Price");

                entity.Property(e => e.PurBuyDQty).HasColumnName("PurBuyD_Qty");

                entity.Property(e => e.PurBuyDSi).HasColumnName("PurBuyD_Si");

                entity.Property(e => e.PurBuyHSi).HasColumnName("PurBuyH_Si");

                entity.Property(e => e.PurOrderDSi).HasColumnName("PurOrderD_Si");

                entity.Property(e => e.PurOrderHCu).HasColumnName("PurOrderH_Cu");

                entity.Property(e => e.PurOrderHDt)
                    .HasColumnName("PurOrderH_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PurReqstDDt)
                    .HasColumnName("PurReqstD_DT")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PurReqstDQty).HasColumnName("PurReqstD_Qty");

                entity.Property(e => e.PurReqstHCu).HasColumnName("PurReqstH_Cu");
            });

            modelBuilder.Entity<VwPurEnqry>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPurEnqry");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.PurEnqryDt)
                    .HasColumnName("PurEnqry_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PurEnqrySi).HasColumnName("PurEnqry_Si");

                entity.Property(e => e.PurEnqryTp)
                    .HasColumnName("PurEnqry_Tp")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.PurEnqryUntPrc)
                    .HasColumnName("PurEnqry_UntPrc")
                    .HasColumnType("money");

                entity.Property(e => e.PurOrdrSi).HasColumnName("PurOrdr_Si");

                entity.Property(e => e.PurRespCu)
                    .HasColumnName("PurResp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurRespSi).HasColumnName("PurResp_Si");

                entity.Property(e => e.PurRespTp)
                    .HasColumnName("PurResp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrCu)
                    .HasColumnName("PurVndr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrGrpCu)
                    .HasColumnName("PurVndrGrp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrGrpSi).HasColumnName("PurVndrGrp_Si");

                entity.Property(e => e.PurVndrGrpTp)
                    .HasColumnName("PurVndrGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");

                entity.Property(e => e.PurVndrTp)
                    .HasColumnName("PurVndr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPurGdsToVndr>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPurGdsToVndr");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PurGdsGrpCu)
                    .HasColumnName("PurGdsGrp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurGdsGrpTp)
                    .HasColumnName("PurGdsGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurGdsToVndrSi).HasColumnName("PurGdsToVndr_Si");

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");
            });

            modelBuilder.Entity<VwPurInvcD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPurInvcD");

                entity.Property(e => e.InvDocHDt)
                    .HasColumnName("InvDocH_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.InvDocHSi).HasColumnName("InvDocH_Si");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.PurInvcDDecPrc)
                    .HasColumnName("PurInvcD_DecPrc")
                    .HasColumnType("money");

                entity.Property(e => e.PurInvcDIncPrc)
                    .HasColumnName("PurInvcD_IncPrc")
                    .HasColumnType("money");

                entity.Property(e => e.PurInvcDQty).HasColumnName("PurInvcD_Qty");

                entity.Property(e => e.PurInvcDRow).HasColumnName("PurInvcD_Row");

                entity.Property(e => e.PurInvcDTotal)
                    .HasColumnName("PurInvcD_Total")
                    .HasColumnType("money");

                entity.Property(e => e.PurInvcDTp)
                    .HasColumnName("PurInvcD_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurInvcDUntPrc)
                    .HasColumnName("PurInvcD_UntPrc")
                    .HasColumnType("money");

                entity.Property(e => e.PurInvcHDt)
                    .HasColumnName("PurInvcH_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PurInvcHScu).HasColumnName("PurInvcH_SCu");

                entity.Property(e => e.PurInvcHSdt)
                    .HasColumnName("PurInvcH_SDT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PurInvcHSi).HasColumnName("PurInvcH_Si");

                entity.Property(e => e.PurOrdrSi).HasColumnName("PurOrdr_Si");

                entity.Property(e => e.PurRespCu)
                    .HasColumnName("PurResp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurRespSi).HasColumnName("PurResp_Si");

                entity.Property(e => e.PurRespTp)
                    .HasColumnName("PurResp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurRqstHDt)
                    .HasColumnName("PurRqstH_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PurRqstHSi).HasColumnName("PurRqstH_Si");

                entity.Property(e => e.PurVndrCu)
                    .HasColumnName("PurVndr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");

                entity.Property(e => e.PurVndrTp)
                    .HasColumnName("PurVndr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPurInvcH>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPurInvcH");

                entity.Property(e => e.PurInvcHAccDoc).HasColumnName("PurInvcH_AccDoc");

                entity.Property(e => e.PurInvcHDt)
                    .HasColumnName("PurInvcH_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PurInvcHPrcTotal)
                    .HasColumnName("PurInvcH_Prc_Total")
                    .HasColumnType("money");

                entity.Property(e => e.PurInvcHScu).HasColumnName("PurInvcH_SCu");

                entity.Property(e => e.PurInvcHSdt)
                    .HasColumnName("PurInvcH_SDT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PurInvcHSi).HasColumnName("PurInvcH_Si");

                entity.Property(e => e.PurInvcHStmpCdt)
                    .HasColumnName("PurInvcH_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurInvcHStmpCus)
                    .HasColumnName("PurInvcH_StmpCUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.PurInvcHStmpMdt)
                    .HasColumnName("PurInvcH_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurInvcHStmpMus)
                    .HasColumnName("PurInvcH_StmpMUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.PurInvcHTp)
                    .HasColumnName("PurInvcH_Tp")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.PurRespCu)
                    .HasColumnName("PurResp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurRespSi).HasColumnName("PurResp_Si");

                entity.Property(e => e.PurRespTp)
                    .HasColumnName("PurResp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrCu)
                    .HasColumnName("PurVndr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");

                entity.Property(e => e.PurVndrTp)
                    .HasColumnName("PurVndr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPurOrdBuyD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPurOrdBuyD");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.PurBuyDSi).HasColumnName("PurBuyD_Si");

                entity.Property(e => e.PurOrdBuyDSi).HasColumnName("PurOrdBuyD_Si");

                entity.Property(e => e.PurOrdBuyHCu)
                    .HasColumnName("PurOrdBuyH_Cu")
                    .HasMaxLength(50);

                entity.Property(e => e.PurOrdBuyHDt)
                    .HasColumnName("PurOrdBuyH_DT")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurOrdBuyHSi).HasColumnName("PurOrdBuyH_Si");

                entity.Property(e => e.PurOrdVndrSi).HasColumnName("PurOrdVndr_Si");

                entity.Property(e => e.PurOrderHCu).HasColumnName("PurOrderH_Cu");

                entity.Property(e => e.PurOrderHDt)
                    .HasColumnName("PurOrderH_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PurOrderHSi).HasColumnName("PurOrderH_Si");

                entity.Property(e => e.PurPreInvcDPrice)
                    .HasColumnName("PurPreInvcD_Price")
                    .HasColumnType("money");

                entity.Property(e => e.PurPreInvcDSi).HasColumnName("PurPreInvcD_Si");

                entity.Property(e => e.PurPreInvcHCu)
                    .HasColumnName("PurPreInvcH_Cu")
                    .HasMaxLength(50);

                entity.Property(e => e.PurPreVinvcHDt)
                    .HasColumnName("PurPreVInvcH_Dt")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurReqstDDt)
                    .HasColumnName("PurReqstD_DT")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PurReqstDQty).HasColumnName("PurReqstD_Qty");

                entity.Property(e => e.PurReqstHCu).HasColumnName("PurReqstH_Cu");

                entity.Property(e => e.PurVndrCu)
                    .HasColumnName("PurVndr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");

                entity.Property(e => e.PurVndrTp)
                    .HasColumnName("PurVndr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPurOrdBuyDif>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPurOrdBuyDif");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.PurBuyDPrice).HasColumnName("PurBuyD_Price");

                entity.Property(e => e.PurBuyDQty).HasColumnName("PurBuyD_Qty");

                entity.Property(e => e.PurBuyDSi).HasColumnName("PurBuyD_Si");

                entity.Property(e => e.PurBuyHSi).HasColumnName("PurBuyH_Si");

                entity.Property(e => e.PurOrdBuyHCu)
                    .HasColumnName("PurOrdBuyH_Cu")
                    .HasMaxLength(50);

                entity.Property(e => e.PurOrdBuyHDt)
                    .HasColumnName("PurOrdBuyH_DT")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurOrderHCu).HasColumnName("PurOrderH_Cu");

                entity.Property(e => e.PurOrderHDt)
                    .HasColumnName("PurOrderH_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PurOrderHSi).HasColumnName("PurOrderH_Si");

                entity.Property(e => e.PurPreInvcDPrice)
                    .HasColumnName("PurPreInvcD_Price")
                    .HasColumnType("money");

                entity.Property(e => e.PurPreInvcDQty).HasColumnName("PurPreInvcD_Qty");

                entity.Property(e => e.PurPreInvcDSi).HasColumnName("PurPreInvcD_Si");

                entity.Property(e => e.PurReqstDDt)
                    .HasColumnName("PurReqstD_DT")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PurReqstDQty).HasColumnName("PurReqstD_Qty");

                entity.Property(e => e.PurReqstHCu).HasColumnName("PurReqstH_Cu");

                entity.Property(e => e.PurVndrCu)
                    .HasColumnName("PurVndr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrTp)
                    .HasColumnName("PurVndr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPurOrdBuyDsel>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPurOrdBuyDSel");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.PurOrdBuyDSi).HasColumnName("PurOrdBuyD_Si");

                entity.Property(e => e.PurOrderHCu).HasColumnName("PurOrderH_Cu");

                entity.Property(e => e.PurOrderHDt)
                    .HasColumnName("PurOrderH_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PurOrderHSi).HasColumnName("PurOrderH_Si");

                entity.Property(e => e.PurPreInvcDPrice)
                    .HasColumnName("PurPreInvcD_Price")
                    .HasColumnType("money");

                entity.Property(e => e.PurPreInvcDSi).HasColumnName("PurPreInvcD_Si");

                entity.Property(e => e.PurReqstDQty).HasColumnName("PurReqstD_Qty");

                entity.Property(e => e.PurVndrCu)
                    .HasColumnName("PurVndr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");

                entity.Property(e => e.PurVndrTp)
                    .HasColumnName("PurVndr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPurOrdVndrList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vwPurOrdVndrList");

                entity.Property(e => e.PurOrdVndrSi).HasColumnName("PurOrdVndr_Si");

                entity.Property(e => e.PurOrderHCu).HasColumnName("PurOrderH_Cu");

                entity.Property(e => e.PurOrderHDt)
                    .HasColumnName("PurOrderH_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PurOrderHKindOrd).HasColumnName("PurOrderH_KindOrd");

                entity.Property(e => e.PurOrderHOk).HasColumnName("PurOrderH_OK");

                entity.Property(e => e.PurOrderHProcess).HasColumnName("PurOrderH_process");

                entity.Property(e => e.PurOrderHSi).HasColumnName("PurOrderH_Si");

                entity.Property(e => e.PurOrderHTp)
                    .HasColumnName("PurOrderH_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PurReqstHSi).HasColumnName("PurReqstH_Si");

                entity.Property(e => e.PurVndrCu)
                    .HasColumnName("PurVndr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrTp)
                    .HasColumnName("PurVndr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPurOrderD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPurOrderD");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvInvtCu)
                    .HasColumnName("InvInvt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.PurBuyDSi).HasColumnName("PurBuyD_Si");

                entity.Property(e => e.PurBuyStCu)
                    .HasColumnName("PurBuySt_Cu")
                    .HasMaxLength(50);

                entity.Property(e => e.PurOrdBuyDSi).HasColumnName("PurOrdBuyD_Si");

                entity.Property(e => e.PurOrdPayKindTp)
                    .HasColumnName("PurOrdPayKind_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurOrdPayerTp)
                    .HasColumnName("PurOrdPayer_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurOrderDSi).HasColumnName("PurOrderD_Si");

                entity.Property(e => e.PurOrderHCu).HasColumnName("PurOrderH_Cu");

                entity.Property(e => e.PurOrderHDt)
                    .HasColumnName("PurOrderH_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PurOrderHKindOrd).HasColumnName("PurOrderH_KindOrd");

                entity.Property(e => e.PurOrderHPayKind).HasColumnName("PurOrderH_PayKind");

                entity.Property(e => e.PurOrderHPayer).HasColumnName("PurOrderH_Payer");

                entity.Property(e => e.PurOrderHProcess).HasColumnName("PurOrderH_process");

                entity.Property(e => e.PurOrderHSi).HasColumnName("PurOrderH_Si");

                entity.Property(e => e.PurReqstDDt)
                    .HasColumnName("PurReqstD_DT")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PurReqstDQty).HasColumnName("PurReqstD_Qty");

                entity.Property(e => e.PurReqstDSi).HasColumnName("PurReqstD_Si");

                entity.Property(e => e.PurReqstHApplyer).HasColumnName("PurReqstH_Applyer");

                entity.Property(e => e.PurReqstHBuyKind)
                    .HasColumnName("PurReqstH_BuyKind")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PurReqstHCu).HasColumnName("PurReqstH_Cu");

                entity.Property(e => e.PurReqstHDeliverst).HasColumnName("PurReqstH_Deliverst");

                entity.Property(e => e.PurReqstHKindOrd)
                    .IsRequired()
                    .HasColumnName("PurReqstH_KindOrd")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.PurReqstHProcess)
                    .HasColumnName("PurReqstH_process")
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.PurReqstHProcessSi).HasColumnName("PurReqstH_processSi");

                entity.Property(e => e.PurReqstHSi).HasColumnName("PurReqstH_Si");

                entity.Property(e => e.PurRespSi).HasColumnName("PurResp_Si");

                entity.Property(e => e.PurRespTp)
                    .HasColumnName("PurResp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurRqstCuseSi).HasColumnName("PurRqstCuse_Si");

                entity.Property(e => e.PurRqstCuseTp)
                    .HasColumnName("PurRqstCuse_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPurOrdr>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPurOrdr");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.PurOrdHcnfrmDesc)
                    .HasColumnName("PurOrdHCnfrm_Desc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurOrdHcnfrmSi).HasColumnName("PurOrdHCnfrm_Si");

                entity.Property(e => e.PurOrdrDt)
                    .HasColumnName("PurOrdr_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PurOrdrQty).HasColumnName("PurOrdr_Qty");

                entity.Property(e => e.PurOrdrSi).HasColumnName("PurOrdr_Si");

                entity.Property(e => e.PurOrdrTotal)
                    .HasColumnName("PurOrdr_Total")
                    .HasColumnType("money");

                entity.Property(e => e.PurOrdrTp)
                    .HasColumnName("PurOrdr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurOrdrUntPrc)
                    .HasColumnName("PurOrdr_UntPrc")
                    .HasColumnType("money");

                entity.Property(e => e.PurResPSi).HasColumnName("PurResP_Si");

                entity.Property(e => e.PurVndrCu)
                    .HasColumnName("PurVndr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");

                entity.Property(e => e.PurVndrTp)
                    .HasColumnName("PurVndr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPurRepEnquery>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPurRepEnquery");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.PurOrderHCu).HasColumnName("PurOrderH_Cu");

                entity.Property(e => e.PurOrderHDt)
                    .HasColumnName("PurOrderH_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PurOrderHKindOrd).HasColumnName("PurOrderH_KindOrd");

                entity.Property(e => e.PurOrderHOk).HasColumnName("PurOrderH_OK");

                entity.Property(e => e.PurOrderHProcess).HasColumnName("PurOrderH_process");

                entity.Property(e => e.PurOrderHSi).HasColumnName("PurOrderH_Si");

                entity.Property(e => e.PurOrderHTp)
                    .HasColumnName("PurOrderH_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PurReqstDDt)
                    .HasColumnName("PurReqstD_DT")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PurReqstDQty).HasColumnName("PurReqstD_Qty");

                entity.Property(e => e.PurReqstHCu).HasColumnName("PurReqstH_Cu");

                entity.Property(e => e.PurReqstHSi).HasColumnName("PurReqstH_Si");

                entity.Property(e => e.PurRespCu)
                    .HasColumnName("PurResp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurRespSi).HasColumnName("PurResp_Si");

                entity.Property(e => e.PurRespTp)
                    .HasColumnName("PurResp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrCu)
                    .HasColumnName("PurVndr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");

                entity.Property(e => e.PurVndrTp)
                    .HasColumnName("PurVndr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPurReqstH>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPurReqstH");

                entity.Property(e => e.CuCost)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuCostD)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtCu)
                    .HasColumnName("InvInvt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurBuyStCu)
                    .HasColumnName("PurBuySt_Cu")
                    .HasMaxLength(50);

                entity.Property(e => e.PurBuyStSi).HasColumnName("PurBuySt_Si");

                entity.Property(e => e.PurOrdPayKindSi).HasColumnName("PurOrdPayKind_Si");

                entity.Property(e => e.PurOrdPayKindTp)
                    .HasColumnName("PurOrdPayKind_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurReqProcSi).HasColumnName("PurReqProc_Si");

                entity.Property(e => e.PurReqProcTp)
                    .HasColumnName("PurReqProc_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurReqTypTp)
                    .HasColumnName("PurReqTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurReqstDDt)
                    .HasColumnName("PurReqstD_DT")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PurReqstDQty).HasColumnName("PurReqstD_Qty");

                entity.Property(e => e.PurReqstDTp)
                    .HasColumnName("PurReqstD_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurReqstDUsage).HasColumnName("PurReqstD_Usage");

                entity.Property(e => e.PurReqstHApplyer).HasColumnName("PurReqstH_Applyer");

                entity.Property(e => e.PurReqstHBuyKind).HasColumnName("PurReqstH_BuyKind");

                entity.Property(e => e.PurReqstHCu).HasColumnName("PurReqstH_Cu");

                entity.Property(e => e.PurReqstHDeliverst).HasColumnName("PurReqstH_Deliverst");

                entity.Property(e => e.PurReqstHDocno)
                    .HasColumnName("PurReqstH_Docno")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PurReqstHDt)
                    .HasColumnName("PurReqstH_DT")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurReqstHKindOrd).HasColumnName("PurReqstH_KindOrd");

                entity.Property(e => e.PurReqstHOk).HasColumnName("PurReqstH_OK");

                entity.Property(e => e.PurReqstHProcess).HasColumnName("PurReqstH_process");

                entity.Property(e => e.PurReqstHSi).HasColumnName("PurReqstH_Si");

                entity.Property(e => e.PurReqstHSts).HasColumnName("PurReqstH_Sts");

                entity.Property(e => e.PurReqstHTp)
                    .HasColumnName("PurReqstH_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PurRespSi).HasColumnName("PurResp_Si");

                entity.Property(e => e.PurRespTp)
                    .HasColumnName("PurResp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurRqstCuseSi).HasColumnName("PurRqstCuse_Si");

                entity.Property(e => e.PurRqstCuseTp)
                    .HasColumnName("PurRqstCuse_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpCost)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpCostD)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPurRequestD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPurRequestD");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvInvtCu)
                    .HasColumnName("InvInvt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.PurBuyStCu)
                    .HasColumnName("PurBuySt_Cu")
                    .HasMaxLength(50);

                entity.Property(e => e.PurOrderDSi).HasColumnName("PurOrderD_Si");

                entity.Property(e => e.PurReqstDDt)
                    .HasColumnName("PurReqstD_DT")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PurReqstDQty).HasColumnName("PurReqstD_Qty");

                entity.Property(e => e.PurReqstDSi).HasColumnName("PurReqstD_Si");

                entity.Property(e => e.PurReqstHApplyer).HasColumnName("PurReqstH_Applyer");

                entity.Property(e => e.PurReqstHBuyKind).HasColumnName("PurReqstH_BuyKind");

                entity.Property(e => e.PurReqstHCu).HasColumnName("PurReqstH_Cu");

                entity.Property(e => e.PurReqstHDeliverst).HasColumnName("PurReqstH_Deliverst");

                entity.Property(e => e.PurReqstHKindOrd).HasColumnName("PurReqstH_KindOrd");

                entity.Property(e => e.PurReqstHOk).HasColumnName("PurReqstH_OK");

                entity.Property(e => e.PurReqstHProcess).HasColumnName("PurReqstH_process");

                entity.Property(e => e.PurReqstHSi).HasColumnName("PurReqstH_Si");

                entity.Property(e => e.PurReqstHSts).HasColumnName("PurReqstH_Sts");

                entity.Property(e => e.PurRespSi).HasColumnName("PurResp_Si");

                entity.Property(e => e.PurRqstCuseSi).HasColumnName("PurRqstCuse_Si");

                entity.Property(e => e.PurRqstCuseTp)
                    .HasColumnName("PurRqstCuse_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPurRqstD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPurRqstD");

                entity.Property(e => e.CtbCostCu)
                    .HasColumnName("CtbCost_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCostSi).HasColumnName("CtbCost_Si");

                entity.Property(e => e.CtbCostTp)
                    .HasColumnName("CtbCost_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHCu)
                    .HasColumnName("InvDocH_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvInvtCu)
                    .HasColumnName("InvInvt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.PurEnqrySi).HasColumnName("PurEnqry_Si");

                entity.Property(e => e.PurOrdrSi).HasColumnName("PurOrdr_Si");

                entity.Property(e => e.PurRqstCuseSi).HasColumnName("PurRqstCuse_Si");

                entity.Property(e => e.PurRqstCuseTp)
                    .HasColumnName("PurRqstCuse_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurRqstDRqty).HasColumnName("PurRqstD_RQty");

                entity.Property(e => e.PurRqstHCnfrmDesc)
                    .HasColumnName("PurRqstH_CnfrmDesc")
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.PurRqstHDt)
                    .HasColumnName("PurRqstH_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PurRqstHRdt)
                    .HasColumnName("PurRqstH_RDT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PurRqstHSi).HasColumnName("PurRqstH_Si");

                entity.Property(e => e.PurRqstHTp)
                    .HasColumnName("PurRqstH_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PurRqstHcnfrmSi).HasColumnName("PurRqstHCnfrm_Si");

                entity.Property(e => e.PurRqstHcnfrmTp)
                    .HasColumnName("PurRqstHCnfrm_Tp")
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPurRqstH>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPurRqstH");

                entity.Property(e => e.CtbCostCu)
                    .HasColumnName("CtbCost_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCostSi).HasColumnName("CtbCost_Si");

                entity.Property(e => e.CtbCostTp)
                    .HasColumnName("CtbCost_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtCu)
                    .HasColumnName("InvInvt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurRqstCuseSi).HasColumnName("PurRqstCuse_Si");

                entity.Property(e => e.PurRqstCuseTp)
                    .HasColumnName("PurRqstCuse_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurRqstHCnfrmDesc)
                    .HasColumnName("PurRqstH_CnfrmDesc")
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.PurRqstHDt)
                    .HasColumnName("PurRqstH_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PurRqstHRdt)
                    .HasColumnName("PurRqstH_RDT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PurRqstHSi).HasColumnName("PurRqstH_Si");

                entity.Property(e => e.PurRqstHTp)
                    .HasColumnName("PurRqstH_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PurRqstHcnfrmSi).HasColumnName("PurRqstHCnfrm_Si");

                entity.Property(e => e.PurRqstHcnfrmTp)
                    .HasColumnName("PurRqstHCnfrm_Tp")
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPurVndr>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPurVndr");

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLmCu)
                    .HasColumnName("AccLM_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmTp)
                    .HasColumnName("AccLM_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLtCu)
                    .HasColumnName("AccLT_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtTp)
                    .HasColumnName("AccLT_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccMSi1).HasColumnName("AccM_Si_1");

                entity.Property(e => e.AccTSi).HasColumnName("AccT_Si");

                entity.Property(e => e.CtbAddrsAddrs)
                    .HasColumnName("CtbAddrs_Addrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsCity)
                    .HasColumnName("CtbAddrs_City")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsContact)
                    .HasColumnName("CtbAddrs_Contact")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsDefault).HasColumnName("CtbAddrs_Default");

                entity.Property(e => e.CtbAddrsDesc)
                    .HasColumnName("CtbAddrs_Desc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsEconamical)
                    .HasColumnName("CtbAddrs_Econamical")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsEmail)
                    .HasColumnName("CtbAddrs_Email")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsFax)
                    .HasColumnName("CtbAddrs_Fax")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsMajor).HasColumnName("CtbAddrs_major");

                entity.Property(e => e.CtbAddrsMobile)
                    .HasColumnName("CtbAddrs_Mobile")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsModem)
                    .HasColumnName("CtbAddrs_Modem")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsNatCode)
                    .HasColumnName("CtbAddrs_NatCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsNumber).HasColumnName("CtbAddrs_Number");

                entity.Property(e => e.CtbAddrsOstan)
                    .HasColumnName("CtbAddrs_Ostan")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPersonality)
                    .HasColumnName("CtbAddrs_Personality")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPobox)
                    .HasColumnName("CtbAddrs_POBox")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsShahrestan)
                    .HasColumnName("CtbAddrs_Shahrestan")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsSi).HasColumnName("CtbAddrs_Si");

                entity.Property(e => e.CtbAddrsTel)
                    .HasColumnName("CtbAddrs_Tel")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsZipcode)
                    .HasColumnName("CtbAddrs_ZIPCode")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCustVndrTypSi).HasColumnName("CtbCustVndrTyp_Si");

                entity.Property(e => e.CtbCustVndrTypTp)
                    .HasColumnName("CtbCustVndrTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CuCost)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuProject)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrComment)
                    .HasColumnName("PurVndr_Comment")
                    .HasMaxLength(250);

                entity.Property(e => e.PurVndrCorporateTyp).HasColumnName("PurVndr_CorporateTyp");

                entity.Property(e => e.PurVndrCorporateTypTp)
                    .HasColumnName("PurVndr_CorporateTyp_Tp")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrCu)
                    .HasColumnName("PurVndr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrGrpCu)
                    .HasColumnName("PurVndrGrp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrGrpSi).HasColumnName("PurVndrGrp_Si");

                entity.Property(e => e.PurVndrGrpTp)
                    .HasColumnName("PurVndrGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrScore).HasColumnName("PurVndr_Score");

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");

                entity.Property(e => e.PurVndrTp)
                    .HasColumnName("PurVndr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpCost)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpProject)
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwPurenqueryOrdBuySelect>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwPurenqueryOrdBuySelect");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.PurOrderDSi).HasColumnName("PurOrderD_Si");

                entity.Property(e => e.PurOrderHCu).HasColumnName("PurOrderH_Cu");

                entity.Property(e => e.PurOrderHDt)
                    .HasColumnName("PurOrderH_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PurOrderHSi).HasColumnName("PurOrderH_Si");

                entity.Property(e => e.PurPreInvcDPrice)
                    .HasColumnName("PurPreInvcD_Price")
                    .HasColumnType("money");

                entity.Property(e => e.PurPreInvcDSi).HasColumnName("PurPreInvcD_Si");

                entity.Property(e => e.PurPreInvcHAccept).HasColumnName("PurPreInvcH_Accept");

                entity.Property(e => e.PurReqstDQty).HasColumnName("PurReqstD_Qty");

                entity.Property(e => e.PurReqstHSi).HasColumnName("PurReqstH_Si");

                entity.Property(e => e.PurVndrCu)
                    .HasColumnName("PurVndr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrTp)
                    .HasColumnName("PurVndr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwSalBenefitInvGdsGrp>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalBenefitInvGdsGrp");

                entity.Property(e => e.C).HasColumnType("money");

                entity.Property(e => e.InvGdsGrpCu)
                    .HasColumnName("InvGdsGrp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsGrpSi).HasColumnName("InvGdsGrp_Si");

                entity.Property(e => e.InvGdsGrpTp)
                    .HasColumnName("InvGdsGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwSalBrnchUser>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalBrnchUser");

                entity.Property(e => e.SalBrnchCu)
                    .IsRequired()
                    .HasColumnName("SalBrnch_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchSi).HasColumnName("SalBrnch_Si");

                entity.Property(e => e.SalBrnchTp)
                    .HasColumnName("SalBrnch_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwSalCntrct>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalCntrct");

                entity.Property(e => e.AccMSi).HasColumnName("AccM_Si");

                entity.Property(e => e.AccTSi).HasColumnName("AccT_Si");

                entity.Property(e => e.CtbAddrsAddrs)
                    .HasColumnName("CtbAddrs_Addrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsFax)
                    .HasColumnName("CtbAddrs_Fax")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPobox)
                    .HasColumnName("CtbAddrs_POBox")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsTel)
                    .HasColumnName("CtbAddrs_Tel")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsZipcode)
                    .HasColumnName("CtbAddrs_ZIPCode")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.EndDate)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalCntrctHDs)
                    .HasColumnName("SalCntrctH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalContractHCu).HasColumnName("SalContractH_Cu");

                entity.Property(e => e.SalContractHSi).HasColumnName("SalContractH_Si");

                entity.Property(e => e.SalContractNumber).HasMaxLength(25);

                entity.Property(e => e.SalContractPrcTotal)
                    .HasColumnName("SalContract_Prc_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalContractTp)
                    .HasColumnName("SalContract_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.SalContractTypeId).HasColumnName("SalContractTypeID");

                entity.Property(e => e.SalCustCu)
                    .HasColumnName("SalCust_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpCu)
                    .HasColumnName("SalCustGrp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpSi).HasColumnName("SalCustGrp_Si");

                entity.Property(e => e.SalCustGrpTp)
                    .HasColumnName("SalCustGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalCustStatusSi).HasColumnName("SalCustStatus_Si");

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalRegionSi).HasColumnName("SalRegion_Si");

                entity.Property(e => e.SalRegionTp)
                    .HasColumnName("SalRegion_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.StartDate)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.State)
                    .HasMaxLength(1)
                    .IsFixedLength();
            });

            modelBuilder.Entity<VwSalCntrctD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalCntrctD");

                entity.Property(e => e.EndDate)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.LineTotal).HasColumnType("money");

                entity.Property(e => e.SalCntrctHDs)
                    .HasColumnName("SalCntrctH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalCntrctTypeCu).HasColumnName("SalCntrctType_Cu");

                entity.Property(e => e.SalCntrctTypeTp)
                    .HasColumnName("SalCntrctType_Tp")
                    .HasMaxLength(100);

                entity.Property(e => e.SalContractHCu).HasColumnName("SalContractH_Cu");

                entity.Property(e => e.SalContractHSi).HasColumnName("SalContractH_Si");

                entity.Property(e => e.SalContractTp)
                    .HasColumnName("SalContract_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.SalCustGrpSi).HasColumnName("SalCustGrp_Si");

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.StartDate)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.UnitPrice).HasColumnType("money");
            });

            modelBuilder.Entity<VwSalCntrctDetailInvc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalCntrctDetailInvc");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.LineTotal).HasColumnType("money");

                entity.Property(e => e.SalCntrctTypeCu).HasColumnName("SalCntrctType_Cu");

                entity.Property(e => e.SalCntrctTypeTp)
                    .HasColumnName("SalCntrctType_Tp")
                    .HasMaxLength(100);

                entity.Property(e => e.SalContractHCu).HasColumnName("SalContractH_Cu");

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcDQty)
                    .HasColumnName("SalInvcD_Qty")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcDTotal)
                    .HasColumnName("SalInvcD_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcDUntPrc)
                    .HasColumnName("SalInvcD_UntPrc")
                    .HasColumnType("money");

                entity.Property(e => e.UnitPrice).HasColumnType("money");
            });

            modelBuilder.Entity<VwSalCntrctGds>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalCntrctGds");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.SalCntrctGdsD1)
                    .IsRequired()
                    .HasColumnName("SalCntrctGds_D1")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCntrctGdsD2)
                    .IsRequired()
                    .HasColumnName("SalCntrctGds_D2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCntrctGdsD3)
                    .IsRequired()
                    .HasColumnName("SalCntrctGds_D3")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCntrctGdsI1)
                    .IsRequired()
                    .HasColumnName("SalCntrctGds_I1")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCntrctGdsI2)
                    .IsRequired()
                    .HasColumnName("SalCntrctGds_I2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCntrctGdsI3)
                    .IsRequired()
                    .HasColumnName("SalCntrctGds_I3")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCntrctGdsPrc)
                    .HasColumnName("SalCntrctGds_Prc")
                    .HasColumnType("money");

                entity.Property(e => e.SalCntrctGdsQty).HasColumnName("SalCntrctGds_Qty");

                entity.Property(e => e.SalCntrctGdsUntPrc)
                    .HasColumnName("SalCntrctGds_UntPrc")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<VwSalCust>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalCust");

                entity.Property(e => e.AccLcCu)
                    .HasColumnName("AccLC_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLcTp)
                    .HasColumnName("AccLC_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmCu)
                    .HasColumnName("AccLM_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmTp)
                    .HasColumnName("AccLM_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpCu)
                    .HasColumnName("AccLP_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLpTp)
                    .HasColumnName("AccLP_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtCu)
                    .HasColumnName("AccLT_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtTp)
                    .HasColumnName("AccLT_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccMSi).HasColumnName("AccM_Si");

                entity.Property(e => e.AccTSi).HasColumnName("AccT_Si");

                entity.Property(e => e.CtbAddrsAccountName)
                    .HasColumnName("CtbAddrs_AccountName")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsAccountNo)
                    .HasColumnName("CtbAddrs_AccountNo")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CtbAddrsActiveType)
                    .HasColumnName("CtbAddrs_ActiveType")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsAddrs)
                    .HasColumnName("CtbAddrs_Addrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsAdvetise).HasColumnName("CtbAddrs_advetise");

                entity.Property(e => e.CtbAddrsAdvetiseDesc)
                    .HasColumnName("CtbAddrs_advetiseDesc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsBankName)
                    .HasColumnName("CtbAddrs_BankName")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsBranch)
                    .HasColumnName("CtbAddrs_Branch")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsCity)
                    .HasColumnName("CtbAddrs_City")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsCode)
                    .HasColumnName("CtbAddrs_Code")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CtbAddrsContact)
                    .HasColumnName("CtbAddrs_Contact")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsDefault).HasColumnName("CtbAddrs_Default");

                entity.Property(e => e.CtbAddrsDefault2).HasColumnName("CtbAddrs_Default_2");

                entity.Property(e => e.CtbAddrsDesc)
                    .HasColumnName("CtbAddrs_Desc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsDsFirst)
                    .HasColumnName("CtbAddrs_DsFirst")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsEconamical)
                    .HasColumnName("CtbAddrs_Econamical")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsEmail)
                    .HasColumnName("CtbAddrs_Email")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsEnterduced)
                    .HasColumnName("CtbAddrs_Enterduced")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsFax)
                    .HasColumnName("CtbAddrs_Fax")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsInterduced)
                    .HasColumnName("CtbAddrs_interduced")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsLicenseCode)
                    .HasColumnName("CtbAddrs_LicenseCode")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CtbAddrsMajor).HasColumnName("CtbAddrs_major");

                entity.Property(e => e.CtbAddrsMobile)
                    .HasColumnName("CtbAddrs_Mobile")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsModem)
                    .HasColumnName("CtbAddrs_Modem")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsMtr).HasColumnName("CtbAddrs_Mtr");

                entity.Property(e => e.CtbAddrsNatCode)
                    .HasColumnName("CtbAddrs_NatCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsNumber).HasColumnName("CtbAddrs_Number");

                entity.Property(e => e.CtbAddrsOstan)
                    .HasColumnName("CtbAddrs_Ostan")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsOwn)
                    .HasColumnName("CtbAddrs_Own")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPersonSkill)
                    .HasColumnName("CtbAddrs_PersonSkill")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPersonality)
                    .HasColumnName("CtbAddrs_Personality")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPobox)
                    .HasColumnName("CtbAddrs_POBox")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsRelated)
                    .HasColumnName("CtbAddrs_related")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsShahrestan)
                    .HasColumnName("CtbAddrs_Shahrestan")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsShowPrint).HasColumnName("CtbAddrs_ShowPrint");

                entity.Property(e => e.CtbAddrsSi).HasColumnName("CtbAddrs_Si");

                entity.Property(e => e.CtbAddrsTel)
                    .HasColumnName("CtbAddrs_Tel")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsZipcode)
                    .HasColumnName("CtbAddrs_ZIPCode")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCustVndrTypSi).HasColumnName("CtbCustVndrTyp_Si");

                entity.Property(e => e.CtbCustVndrTypTp)
                    .HasColumnName("CtbCustVndrTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalAdmitCustDateEnter)
                    .HasColumnName("SalAdmitCust_DateEnter")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalAdmitCustDateSearch)
                    .HasColumnName("SalAdmitCust_DateSearch")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalAdmitCustDesc)
                    .HasColumnName("SalAdmitCust_Desc")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalAdmitCustGoodsNeed)
                    .HasColumnName("SalAdmitCust_GoodsNeed")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.SalAdmitCustNeedsGift).HasColumnName("SalAdmitCust_NeedsGift");

                entity.Property(e => e.SalAdmitCustNotNeedSearch).HasColumnName("SalAdmitCust_NotNeedSearch");

                entity.Property(e => e.SalAdmitCustUtiliseDate)
                    .HasColumnName("SalAdmitCust_UtiliseDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalAdmitStatusSi).HasColumnName("SalAdmitStatus_Si");

                entity.Property(e => e.SalBrnchCu)
                    .HasColumnName("SalBrnch_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchSi).HasColumnName("SalBrnch_Si");

                entity.Property(e => e.SalBrnchTp)
                    .HasColumnName("SalBrnch_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCitySi).HasColumnName("SalCity_Si");

                entity.Property(e => e.SalCountrySi).HasColumnName("SalCountry_Si");

                entity.Property(e => e.SalCustActive).HasColumnName("SalCust_Active");

                entity.Property(e => e.SalCustActiveTypSi).HasColumnName("SalCustActiveTyp_Si");

                entity.Property(e => e.SalCustActiveTypTp)
                    .HasColumnName("SalCustActiveTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustBlackList).HasColumnName("SalCust_BlackList");

                entity.Property(e => e.SalCustCorporateTyp).HasColumnName("SalCust_CorporateTyp");

                entity.Property(e => e.SalCustCorporateTypTp)
                    .HasColumnName("SalCust_CorporateTypTP")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustCu)
                    .HasColumnName("SalCust_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustDateEnter)
                    .HasColumnName("SalCust_DateEnter")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustDateSave)
                    .HasColumnName("SalCust_DateSave")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustDesc)
                    .HasColumnName("SalCust_Desc")
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustDivision).HasColumnName("SalCust_division");

                entity.Property(e => e.SalCustGrpCu)
                    .HasColumnName("SalCustGrp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpSi).HasColumnName("SalCustGrp_Si");

                entity.Property(e => e.SalCustGrpTp)
                    .HasColumnName("SalCustGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustNeesSearch).HasColumnName("SalCust_NeesSearch");

                entity.Property(e => e.SalCustProduceNow)
                    .HasColumnName("SalCust_ProduceNow")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustPursuit).HasColumnName("SalCust_pursuit");

                entity.Property(e => e.SalCustPursuitTp)
                    .HasColumnName("SalCust_pursuitTP")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustReasongust)
                    .HasColumnName("SalCust_Reasongust")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalCustStLook).HasColumnName("SalCustSt_Look");

                entity.Property(e => e.SalCustStatusSi).HasColumnName("SalCustStatus_Si");

                entity.Property(e => e.SalCustStatusTp)
                    .HasColumnName("SalCustStatus_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustTitle)
                    .HasColumnName("SalCust_Title")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustUser)
                    .HasColumnName("SalCust_User")
                    .HasMaxLength(50);

                entity.Property(e => e.SalCustUserPursueInsert)
                    .HasColumnName("SalCust_UserPursueInsert")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustUserPursueUpdate)
                    .HasColumnName("SalCust_UserPursueUpdate")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SalDivisionSi).HasColumnName("SalDivision_Si");

                entity.Property(e => e.SalDivisionTp)
                    .HasColumnName("SalDivision_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalEnterducedSi).HasColumnName("SalEnterduced_Si");

                entity.Property(e => e.SalEnterducedTp)
                    .HasColumnName("SalEnterduced_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalIntrmdCu)
                    .HasColumnName("SalIntrmd_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalIntrmdSi).HasColumnName("SalIntrmd_Si");

                entity.Property(e => e.SalIntrmdTp)
                    .HasColumnName("SalIntrmd_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalProvinceSi).HasColumnName("SalProvince_Si");

                entity.Property(e => e.SalRegionPathSi).HasColumnName("SalRegionPath_Si");

                entity.Property(e => e.SalRegionPathTp)
                    .HasColumnName("SalRegionPath_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRegionSi).HasColumnName("SalRegion_Si");

                entity.Property(e => e.SalRegionTp)
                    .HasColumnName("SalRegion_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalcustActiveType)
                    .HasColumnName("Salcust_ActiveType")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalcustAdvetise).HasColumnName("Salcust_advetise");

                entity.Property(e => e.SalcustAdvetiseDesc)
                    .HasColumnName("Salcust_advetiseDesc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalcustContact)
                    .HasColumnName("Salcust_Contact")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalcustDsFirst)
                    .HasColumnName("Salcust_DsFirst")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalcustEnterduced)
                    .HasColumnName("Salcust_Enterduced")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalcustJob)
                    .HasColumnName("Salcust_Job")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalcustLicenseCode)
                    .HasColumnName("Salcust_LicenseCode")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SalcustMajor).HasColumnName("Salcust_major");

                entity.Property(e => e.SalcustMtr).HasColumnName("Salcust_Mtr");

                entity.Property(e => e.SalcustOwn)
                    .HasColumnName("Salcust_Own")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalcustPersonSkill)
                    .HasColumnName("Salcust_PersonSkill")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalcustRelated)
                    .HasColumnName("Salcust_related")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwSalCustAtntc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalCustAtntc");

                entity.Property(e => e.CtbAddrsAddrs)
                    .HasColumnName("CtbAddrs_Addrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsEmail)
                    .HasColumnName("CtbAddrs_Email")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsFax)
                    .HasColumnName("CtbAddrs_Fax")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsTel)
                    .HasColumnName("CtbAddrs_Tel")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustAtntcActv).HasColumnName("SalCustAtntc_Actv");

                entity.Property(e => e.SalCustAtntcDs)
                    .IsRequired()
                    .HasColumnName("SalCustAtntc_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustAtntcPrice)
                    .HasColumnName("SalCustAtntc_Price")
                    .HasColumnType("money");

                entity.Property(e => e.SalCustAtntcSaleType).HasColumnName("SalCustAtntc_SaleType");

                entity.Property(e => e.SalCustAtntcSi).HasColumnName("SalCustAtntc_Si");

                entity.Property(e => e.SalCustAtntcTyp).HasColumnName("SalCustAtntc_Typ");

                entity.Property(e => e.SalCustCu)
                    .HasColumnName("SalCust_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpCu)
                    .HasColumnName("SalCustGrp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpSi).HasColumnName("SalCustGrp_Si");

                entity.Property(e => e.SalCustGrpTp)
                    .HasColumnName("SalCustGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalRegionPathSi).HasColumnName("SalRegionPath_Si");

                entity.Property(e => e.SalRegionPathTp)
                    .HasColumnName("SalRegionPath_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRegionSi).HasColumnName("SalRegion_Si");

                entity.Property(e => e.SalRegionTp)
                    .HasColumnName("SalRegion_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwSalCustMtrx>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalCustMtrx");

                entity.Property(e => e.SalCustPursuitTp)
                    .HasColumnName("SalCust_pursuitTP")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ابعادفروشگاه).HasColumnName("ابعاد فروشگاه");

                entity.Property(e => e.اشخاصمعروف)
                    .HasColumnName("اشخاص معروف")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.تابلویتبليغاتی).HasColumnName("تابلوی تبليغاتی");

                entity.Property(e => e.تاريخاولينتماس)
                    .HasColumnName("تاريخ اولين تماس")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.تاریختولدرابط)
                    .HasColumnName("تاریخ تولد رابط")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.تاریخمناسبتخاصرابط)
                    .HasColumnName("تاریخ مناسبت خاص رابط")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.توضيحات)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.شمارهپروانهکسب)
                    .HasColumnName("شماره پروانه کسب")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.مالک)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.متراژفروشگاهی).HasColumnName("متراژ فروشگاهی");

                entity.Property(e => e.محصولکنونی)
                    .HasColumnName("محصول کنونی")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.مشخصاتتابلو)
                    .HasColumnName("مشخصات تابلو")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نامرابط)
                    .HasColumnName("نام رابط")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.نامرابط2)
                    .HasColumnName("نام رابط2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نامشعبه)
                    .HasColumnName("نام شعبه")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ناممشتری)
                    .HasColumnName("نام مشتری")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.نامواسطفروش)
                    .HasColumnName("نام واسط فروش")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نامکمکی1)
                    .HasColumnName("نام کمکی 1")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نامگروهمشتری)
                    .HasColumnName("نام گروه مشتری")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نحوهآشنایی)
                    .HasColumnName("نحوه آشنایی")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نوعفعاليت)
                    .HasColumnName("نوع فعاليت")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.کدشعبه)
                    .HasColumnName("کد شعبه")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کدمشتری)
                    .HasColumnName("کد مشتری")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کدواسطفروش)
                    .HasColumnName("کد واسط فروش")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کدگروهمشتری)
                    .HasColumnName("کد گروه مشتری")
                    .HasMaxLength(15)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwSalCustMtrxSale>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalCustMtrx_sale");

                entity.Property(e => e.CtbAddrsBranch)
                    .HasColumnName("CtbAddrs_Branch")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustPursuit).HasColumnName("SalCust_pursuit");

                entity.Property(e => e.SalCustPursuitTp)
                    .HasColumnName("SalCust_pursuitTP")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalcustEnterduced)
                    .HasColumnName("Salcust_Enterduced")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.آدرس)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.اشخاصمعروف)
                    .HasColumnName("اشخاص معروف")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ايميل)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.تابلويتبليغاتي).HasColumnName("تابلوي تبليغاتي");

                entity.Property(e => e.تاريخآخرينپيگيري)
                    .HasColumnName("تاريخ آخرين پيگيري")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.تاريخورودپيگيري)
                    .HasColumnName("تاريخ ورود پيگيري")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.تلفن)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.دستهبندي).HasColumnName("دسته بندي");

                entity.Property(e => e.رابط)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.سمت)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.شرح)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.شمارهحساب)
                    .HasColumnName("شماره حساب")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.شمارهپروانهكسب)
                    .HasColumnName("شماره پروانه كسب")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.علتتغيير)
                    .HasColumnName("علت تغيير")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.فكس)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.كداقتصادي)
                    .HasColumnName("كد اقتصادي")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.كدتفضيلي)
                    .HasColumnName("كد تفضيلي")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.كدحساب)
                    .HasColumnName("كد حساب")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.كدشعبه)
                    .HasColumnName("كد شعبه")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.كدمشتري)
                    .HasColumnName("كد مشتري")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.كدمعين)
                    .HasColumnName("كد معين")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.كدملي)
                    .HasColumnName("كد ملي")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.كدواسطفروش)
                    .HasColumnName("كد واسط فروش")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.كدپستي)
                    .HasColumnName("كد پستي")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.كدگروهمشتري)
                    .HasColumnName("كد گروه مشتري")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.مالكيت)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.مجموعتعداديفاكتور)
                    .HasColumnName("مجموع تعداد ي فاكتور")
                    .HasColumnType("money");

                entity.Property(e => e.مجموعتعداديپيشفاكتور).HasColumnName("مجموع تعدادي پيش فاكتور");

                entity.Property(e => e.مجموعقيمتواحدفاكتور)
                    .HasColumnName("مجموع قيمت واحد فاكتور")
                    .HasColumnType("money");

                entity.Property(e => e.مجموعقيمتواحدپيشفاكتور)
                    .HasColumnName("مجموع قيمت واحد پيش فاكتور")
                    .HasColumnType("money");

                entity.Property(e => e.مجموعقيمتپيشفاكتور)
                    .HasColumnName("مجموع قيمت پيش فاكتور ")
                    .HasColumnType("money");

                entity.Property(e => e.مجموعمبلغفاكتور)
                    .HasColumnName("مجموع مبلغ فاكتور")
                    .HasColumnType("money");

                entity.Property(e => e.محصولكنوني)
                    .HasColumnName("محصول كنوني")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.مشخصاتتابلو)
                    .HasColumnName("مشخصات تابلو")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.موبايل)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.مودم)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ناماستان)
                    .HasColumnName("نام استان")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.نامبانك)
                    .HasColumnName("نام بانك")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نامتفضيلي)
                    .HasColumnName("نام تفضيلي")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.نامشعبه)
                    .HasColumnName("نام شعبه")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نامشهر)
                    .HasColumnName("نام شهر")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.نامشهرستان)
                    .HasColumnName("نام شهرستان")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.نامكاربرثبتكننده)
                    .HasColumnName("نام كاربر ثبت كننده")
                    .HasMaxLength(50);

                entity.Property(e => e.ناممسيرفروش)
                    .HasColumnName("نام مسير فروش")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ناممشتري)
                    .HasColumnName("نام مشتري")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ناممعين)
                    .HasColumnName("نام معين")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ناممنطقهفروش)
                    .HasColumnName("نام منطقه فروش")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نامواسطفروش)
                    .HasColumnName("نام واسط فروش")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نامگروهمشتري)
                    .HasColumnName("نام گروه مشتري")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نوعشخصيت)
                    .HasColumnName("نوع شخصيت")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.نوعفروش)
                    .HasColumnName("نوع فروش")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نوعفعاليت)
                    .HasColumnName("نوع فعاليت")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwSalCustMtrxSalinvc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalCustMtrxSalinvc");

                entity.Property(e => e.CtbAddrsBranch)
                    .HasColumnName("CtbAddrs_Branch")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustPursuit).HasColumnName("SalCust_pursuit");

                entity.Property(e => e.SalCustPursuitTp)
                    .HasColumnName("SalCust_pursuitTP")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalcustEnterduced)
                    .HasColumnName("Salcust_Enterduced")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.آدرس)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.اشخاصمعروف)
                    .HasColumnName("اشخاص معروف")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ايميل)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.تابلويتبليغاتي).HasColumnName("تابلوي تبليغاتي");

                entity.Property(e => e.تاريخآخرينپيگيري)
                    .HasColumnName("تاريخ آخرين پيگيري")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.تاريخورودپيگيري)
                    .HasColumnName("تاريخ ورود پيگيري")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.تعداددرفاكتور)
                    .HasColumnName("تعداد در فاكتور")
                    .HasColumnType("money");

                entity.Property(e => e.تلفن)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.جمعاضافات).HasColumnName("جمع اضافات");

                entity.Property(e => e.جمعكلدرفاكتور)
                    .HasColumnName("جمع كل در فاكتور")
                    .HasColumnType("money");

                entity.Property(e => e.جمعکسورات).HasColumnName("جمع کسورات");

                entity.Property(e => e.جمعکل)
                    .HasColumnName("جمع کل")
                    .HasColumnType("money");

                entity.Property(e => e.دستهبندي).HasColumnName("دسته بندي");

                entity.Property(e => e.رابط)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.سمت)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.شرح)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.شرحكالا)
                    .HasColumnName("شرح كالا")
                    .HasMaxLength(4000);

                entity.Property(e => e.شمارهاصلی).HasColumnName("شماره اصلی");

                entity.Property(e => e.شمارهحساب)
                    .HasColumnName("شماره حساب")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.شمارهفرعی).HasColumnName("شماره فرعی");

                entity.Property(e => e.شمارهپروانهكسب)
                    .HasColumnName("شماره پروانه كسب")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.علتتغيير)
                    .HasColumnName("علت تغيير")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.عنوانگروهمشتری)
                    .HasColumnName("عنوان گروه مشتری")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.فكس)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.قيمتواحددرفاكتور)
                    .HasColumnName("قيمت واحد در  فاكتور")
                    .HasColumnType("money");

                entity.Property(e => e.كداقتصادي)
                    .HasColumnName("كد اقتصادي")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.كدتفضيلي)
                    .HasColumnName("كد تفضيلي")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.كدحساب)
                    .HasColumnName("كد حساب")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.كدشعبه)
                    .HasColumnName("كد شعبه")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.كدكالا)
                    .HasColumnName("كد كالا")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.كدمشتري)
                    .HasColumnName("كد مشتري")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.كدمعين)
                    .HasColumnName("كد معين")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.كدملي)
                    .HasColumnName("كد ملي")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.كدواسطفروش)
                    .HasColumnName("كد واسط فروش")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.كدپستي)
                    .HasColumnName("كد پستي")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.كدگروهمشتري)
                    .HasColumnName("كد گروه مشتري")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.مالكيت)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ماه)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.محصولكنوني)
                    .HasColumnName("محصول كنوني")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.مشخصاتتابلو)
                    .HasColumnName("مشخصات تابلو")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.موبايل)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.مودم)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ناماستان)
                    .HasColumnName("نام استان")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.نامبانك)
                    .HasColumnName("نام بانك")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نامتفضيلي)
                    .HasColumnName("نام تفضيلي")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.نامشعبه)
                    .HasColumnName("نام شعبه")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نامشهر)
                    .HasColumnName("نام شهر")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.نامشهرستان)
                    .HasColumnName("نام شهرستان")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.نامكاربرثبتكننده)
                    .HasColumnName("نام كاربر ثبت كننده")
                    .HasMaxLength(50);

                entity.Property(e => e.ناممسيرفروش)
                    .HasColumnName("نام مسير فروش")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ناممشتري)
                    .HasColumnName("نام مشتري")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ناممعين)
                    .HasColumnName("نام معين")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ناممنطقهفروش)
                    .HasColumnName("نام منطقه فروش")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نامواسطفروش)
                    .HasColumnName("نام واسط فروش")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نامگروهمشتري)
                    .HasColumnName("نام گروه مشتري")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نرخارز).HasColumnName("نرخ ارز");

                entity.Property(e => e.نوعفروش)
                    .HasColumnName("نوع فروش")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نوعفعاليت)
                    .HasColumnName("نوع فعاليت")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.کداقتصادی)
                    .HasColumnName("کد اقتصادی")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.کدرهگیریردیف)
                    .HasColumnName("کد رهگیری ردیف")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.کدرهگیریسند)
                    .HasColumnName("کد رهگیری سند")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.کدملی)
                    .HasColumnName("کد ملی")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.کدپستی)
                    .HasColumnName("کد پستی")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.کدگروهمشتری)
                    .HasColumnName("کد گروه مشتری")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کدگروهکالا)
                    .HasColumnName("کد گروه کالا")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.گروهکالا)
                    .HasColumnName("گروه کالا")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwSalDclrPrcD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalDclrPrcD");

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTypSi).HasColumnName("InvGdsTyp_Si");

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.SalBrnchSi).HasColumnName("SalBrnch_Si");

                entity.Property(e => e.SalCustGrpSi).HasColumnName("SalCustGrp_Si");

                entity.Property(e => e.SalDclrPrcDLckPrc).HasColumnName("SalDclrPrcD_LckPrc");

                entity.Property(e => e.SalDclrPrcDLckPrcUnt).HasColumnName("SalDclrPrcD_LckPrcUnt");

                entity.Property(e => e.SalDclrPrcDQty).HasColumnName("SalDclrPrcD_Qty");

                entity.Property(e => e.SalDclrPrcDSi).HasColumnName("SalDclrPrcD_Si");

                entity.Property(e => e.SalDclrPrcDUntPrc)
                    .HasColumnName("SalDclrPrcD_UntPrc")
                    .HasColumnType("money");

                entity.Property(e => e.SalDclrPrcDUntPrcC).HasColumnName("SalDclrPrcD_UntPrcC");

                entity.Property(e => e.SalDclrPrcDUntPrcMax)
                    .HasColumnName("SalDclrPrcD_UntPrc_Max")
                    .HasColumnType("money");

                entity.Property(e => e.SalDclrPrcDUntPrcMin)
                    .HasColumnName("SalDclrPrcD_UntPrc_Min")
                    .HasColumnType("money");

                entity.Property(e => e.SalDclrPrcHCu).HasColumnName("SalDclrPrcH_Cu");

                entity.Property(e => e.SalDclrPrcHDs)
                    .IsRequired()
                    .HasColumnName("SalDclrPrcH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalDclrPrcHSi).HasColumnName("SalDclrPrcH_Si");

                entity.Property(e => e.SalDclrPrcHStatus).HasColumnName("SalDclrPrcH_Status");

                entity.Property(e => e.SalOprDefaultValue).HasColumnName("SalOpr_DefaultValue");

                entity.Property(e => e.SalOprDefaultValue2).HasColumnName("SalOpr_DefaultValue_2");

                entity.Property(e => e.SalOprDefaultValue3).HasColumnName("SalOpr_DefaultValue_3");

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");

                entity.Property(e => e.SalOprSi2).HasColumnName("SalOpr_Si_2");

                entity.Property(e => e.SalOprSi3).HasColumnName("SalOpr_Si_3");

                entity.Property(e => e.SalTypSi).HasColumnName("SalTyp_Si");
            });

            modelBuilder.Entity<VwSalDepend>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalDepend");

                entity.Property(e => e.SalCustCu)
                    .HasColumnName("SalCust_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalDependDesc)
                    .HasColumnName("SalDepend_Desc")
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.SalDependEmail)
                    .HasColumnName("SalDepend_Email")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalDependIsMain).HasColumnName("SalDepend_IsMain");

                entity.Property(e => e.SalDependJob)
                    .HasColumnName("SalDepend_Job")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalDependMobile)
                    .HasColumnName("SalDepend_Mobile")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalDependTel)
                    .HasColumnName("SalDepend_Tel")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalDependTp)
                    .HasColumnName("SalDepend_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwSalDocVchr>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalDocVchr");

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.CuAccM)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuAccT)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CuCost)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuProject)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.SalDocVchrCredit)
                    .HasColumnName("SalDocVchr_Credit")
                    .HasColumnType("money");

                entity.Property(e => e.SalDocVchrDebit)
                    .HasColumnName("SalDocVchr_Debit")
                    .HasColumnType("money");

                entity.Property(e => e.SalDocVchrTp)
                    .HasColumnName("SalDocVchr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHCu).HasColumnName("SalInvcH_Cu");

                entity.Property(e => e.SalInvcHDs)
                    .HasColumnName("SalInvcH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccM)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccT)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpCost)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpProject)
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwSalExportD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalExportD");

                entity.Property(e => e.BatchNumberD)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BatchNumberH)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsAddrs)
                    .HasColumnName("CtbAddrs_Addrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsCity)
                    .HasColumnName("CtbAddrs_City")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsDefault).HasColumnName("CtbAddrs_Default");

                entity.Property(e => e.CtbAddrsEconamical)
                    .HasColumnName("CtbAddrs_Econamical")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsEmail)
                    .HasColumnName("CtbAddrs_Email")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsFax)
                    .HasColumnName("CtbAddrs_Fax")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsMobile)
                    .HasColumnName("CtbAddrs_Mobile")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsModem)
                    .HasColumnName("CtbAddrs_Modem")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsNatCode)
                    .HasColumnName("CtbAddrs_NatCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsNumber).HasColumnName("CtbAddrs_Number");

                entity.Property(e => e.CtbAddrsOstan)
                    .HasColumnName("CtbAddrs_Ostan")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPobox)
                    .HasColumnName("CtbAddrs_POBox")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsShahrestan)
                    .HasColumnName("CtbAddrs_Shahrestan")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsSi).HasColumnName("CtbAddrs_Si");

                entity.Property(e => e.CtbAddrsTel)
                    .HasColumnName("CtbAddrs_Tel")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsZipcode)
                    .HasColumnName("CtbAddrs_ZIPCode")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHAccMSi).HasColumnName("InvDocH_AccM_Si");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsGrpCu)
                    .HasColumnName("InvGdsGrp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsGrpSi).HasColumnName("InvGdsGrp_Si");

                entity.Property(e => e.InvGdsGrpTp)
                    .HasColumnName("InvGdsGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTechNo)
                    .HasColumnName("InvGds_TechNo")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsToInvShelf)
                    .HasColumnName("InvGdsToInv_Shelf")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvInvtCu)
                    .HasColumnName("InvInvt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntCu)
                    .HasColumnName("InvUnt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchSi).HasColumnName("SalBrnch_Si");

                entity.Property(e => e.SalCustCu)
                    .HasColumnName("SalCust_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpSi).HasColumnName("SalCustGrp_Si");

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalDlvrrSi).HasColumnName("SalDlvrr_Si");

                entity.Property(e => e.SalDrvrSi).HasColumnName("SalDrvr_Si");

                entity.Property(e => e.SalExportPrmDPrcDec).HasColumnName("SalExportPrmD_Prc_Dec");

                entity.Property(e => e.SalExportPrmDPrcDec2).HasColumnName("SalExportPrmD_Prc_Dec_2");

                entity.Property(e => e.SalExportPrmDPrcDec3).HasColumnName("SalExportPrmD_Prc_Dec_3");

                entity.Property(e => e.SalExportPrmDPrcInc).HasColumnName("SalExportPrmD_Prc_Inc");

                entity.Property(e => e.SalExportPrmDPrcInc2).HasColumnName("SalExportPrmD_Prc_Inc_2");

                entity.Property(e => e.SalExportPrmDPrcInc3).HasColumnName("SalExportPrmD_Prc_Inc_3");

                entity.Property(e => e.SalExportPrmDQty).HasColumnName("SalExportPrmD_Qty");

                entity.Property(e => e.SalExportPrmDQty2).HasColumnName("SalExportPrmD_Qty2");

                entity.Property(e => e.SalExportPrmDSi).HasColumnName("SalExportPrmD_Si");

                entity.Property(e => e.SalExportPrmDSumPrcDec)
                    .HasColumnName("SalExportPrmD_SumPrc_Dec")
                    .HasColumnType("money");

                entity.Property(e => e.SalExportPrmDSumPrcInc)
                    .HasColumnName("SalExportPrmD_SumPrc_Inc")
                    .HasColumnType("money");

                entity.Property(e => e.SalExportPrmDSumTotal)
                    .HasColumnName("SalExportPrmD_SumTotal")
                    .HasColumnType("money");

                entity.Property(e => e.SalExportPrmDTotal)
                    .HasColumnName("SalExportPrmD_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalExportPrmDTp)
                    .HasColumnName("SalExportPrmD_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalExportPrmDUntPrc)
                    .HasColumnName("SalExportPrmD_UntPrc")
                    .HasColumnType("money");

                entity.Property(e => e.SalExportPrmHCu).HasColumnName("SalExportPrmH_Cu");

                entity.Property(e => e.SalExportPrmHDs)
                    .HasColumnName("SalExportPrmH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SalExportPrmHPrcDec)
                    .HasColumnName("SalExportPrmH_Prc_Dec")
                    .HasColumnType("money");

                entity.Property(e => e.SalExportPrmHPrcInc)
                    .HasColumnName("SalExportPrmH_Prc_Inc")
                    .HasColumnType("money");

                entity.Property(e => e.SalExportPrmHPrcSumTotal)
                    .HasColumnName("SalExportPrmH_Prc_SumTotal")
                    .HasColumnType("money");

                entity.Property(e => e.SalExportPrmHPrcSumTotalC)
                    .HasColumnName("SalExportPrmH_Prc_SumTotalC")
                    .HasColumnType("money");

                entity.Property(e => e.SalExportPrmHPrcTotal)
                    .HasColumnName("SalExportPrmH_Prc_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalExportPrmHSi).HasColumnName("SalExportPrmH_Si");

                entity.Property(e => e.SalExportPrmHSi2).HasColumnName("SalExportPrmH_Si_2");

                entity.Property(e => e.SalExportPrmHStS).HasColumnName("SalExportPrmH_StS");

                entity.Property(e => e.SalIntrmdSi).HasColumnName("SalIntrmd_Si");

                entity.Property(e => e.SalOprDefaultValue).HasColumnName("SalOpr_DefaultValue");

                entity.Property(e => e.SalOprDefaultValue2).HasColumnName("SalOpr_DefaultValue_2");

                entity.Property(e => e.SalOprDefaultValue3).HasColumnName("SalOpr_DefaultValue_3");

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");

                entity.Property(e => e.SalOprTp)
                    .HasColumnName("SalOpr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTp2)
                    .HasColumnName("SalOpr_TP_2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTp3)
                    .HasColumnName("SalOpr_TP_3")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcHCu).HasColumnName("SalPreInvcH_Cu");

                entity.Property(e => e.SalPreInvcHSi).HasColumnName("SalPreInvcH_Si");

                entity.Property(e => e.SalTypSi).HasColumnName("SalTyp_Si");
            });

            modelBuilder.Entity<VwSalExportH>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalExportH");

                entity.Property(e => e.BatchNumberH)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsAddrs)
                    .HasColumnName("CtbAddrs_Addrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsBankName)
                    .HasColumnName("CtbAddrs_BankName")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsCtbAddrsAddrs)
                    .HasColumnName("CtbAddrs_CtbAddrsAddrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsCtbAddrsCity)
                    .HasColumnName("CtbAddrs_CtbAddrsCity")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsCtbAddrsDefault).HasColumnName("CtbAddrs_CtbAddrsDefault");

                entity.Property(e => e.CtbAddrsCtbAddrsEconamical)
                    .HasColumnName("CtbAddrs_CtbAddrsEconamical")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsCtbAddrsEmail)
                    .HasColumnName("CtbAddrs_CtbAddrsEmail")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsCtbAddrsFax)
                    .HasColumnName("CtbAddrs_CtbAddrsFax")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsCtbAddrsMobile)
                    .HasColumnName("CtbAddrs_CtbAddrsMobile")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsCtbAddrsModem)
                    .HasColumnName("CtbAddrs_CtbAddrsModem")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsCtbAddrsNatCode)
                    .HasColumnName("CtbAddrs_CtbAddrsNatCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsCtbAddrsNumber).HasColumnName("CtbAddrs_CtbAddrsNumber");

                entity.Property(e => e.CtbAddrsCtbAddrsOstan)
                    .HasColumnName("CtbAddrs_CtbAddrsOstan")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsCtbAddrsPoBox)
                    .HasColumnName("CtbAddrs_CtbAddrsPoBox")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsCtbAddrsShahrestan)
                    .HasColumnName("CtbAddrs_CtbAddrsShahrestan")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsCtbAddrsTel)
                    .HasColumnName("CtbAddrs_CtbAddrsTel")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsCtbAddrsZipCode)
                    .HasColumnName("CtbAddrs_CtbAddrsZipCode")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsEconamical)
                    .HasColumnName("CtbAddrs_Econamical")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsEmail)
                    .HasColumnName("CtbAddrs_Email")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsFax)
                    .HasColumnName("CtbAddrs_Fax")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsMobile)
                    .HasColumnName("CtbAddrs_Mobile")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsModem)
                    .HasColumnName("CtbAddrs_Modem")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsNatCode)
                    .HasColumnName("CtbAddrs_NatCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPobox)
                    .HasColumnName("CtbAddrs_POBox")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsSi).HasColumnName("CtbAddrs_Si");

                entity.Property(e => e.CtbAddrsTel)
                    .HasColumnName("CtbAddrs_Tel")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsZipcode)
                    .HasColumnName("CtbAddrs_ZIPCode")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHAccMSi).HasColumnName("InvDocH_AccM_Si");

                entity.Property(e => e.InvDocHCu).HasColumnName("InvDocH_Cu");

                entity.Property(e => e.InvInvtCu)
                    .HasColumnName("InvInvt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchCu)
                    .HasColumnName("SalBrnch_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchSi).HasColumnName("SalBrnch_Si");

                entity.Property(e => e.SalBrnchTp)
                    .HasColumnName("SalBrnch_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustCu)
                    .HasColumnName("SalCust_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpCu)
                    .HasColumnName("SalCustGrp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpSi).HasColumnName("SalCustGrp_Si");

                entity.Property(e => e.SalCustGrpTp)
                    .HasColumnName("SalCustGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalDlvrrSi).HasColumnName("SalDlvrr_Si");

                entity.Property(e => e.SalDriverSi).HasColumnName("SalDriver_Si");

                entity.Property(e => e.SalDriverTp)
                    .HasColumnName("SalDriver_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalDrvrSi).HasColumnName("SalDrvr_Si");

                entity.Property(e => e.SalExpInvcHGood).HasColumnName("SalExpInvcH_Good");

                entity.Property(e => e.SalExportPrmHCu).HasColumnName("SalExportPrmH_Cu");

                entity.Property(e => e.SalExportPrmHCu2)
                    .HasColumnName("SalExportPrmH_Cu2")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SalExportPrmHDm)
                    .HasColumnName("SalExportPrmH_Dm")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalExportPrmHDs)
                    .HasColumnName("SalExportPrmH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SalExportPrmHLock).HasColumnName("SalExportPrmH_Lock");

                entity.Property(e => e.SalExportPrmHPrcDec)
                    .HasColumnName("SalExportPrmH_Prc_Dec")
                    .HasColumnType("money");

                entity.Property(e => e.SalExportPrmHPrcInc)
                    .HasColumnName("SalExportPrmH_Prc_Inc")
                    .HasColumnType("money");

                entity.Property(e => e.SalExportPrmHPrcSumTotal)
                    .HasColumnName("SalExportPrmH_Prc_SumTotal")
                    .HasColumnType("money");

                entity.Property(e => e.SalExportPrmHPrcSumTotalC)
                    .HasColumnName("SalExportPrmH_Prc_SumTotalC")
                    .HasColumnType("money");

                entity.Property(e => e.SalExportPrmHPrcTotal)
                    .HasColumnName("SalExportPrmH_Prc_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalExportPrmHRfrncTyp).HasColumnName("SalExportPrmH_RfrncTyp");

                entity.Property(e => e.SalExportPrmHSi).HasColumnName("SalExportPrmH_Si");

                entity.Property(e => e.SalExportPrmHStS).HasColumnName("SalExportPrmH_StS");

                entity.Property(e => e.SalExportPrmHStmpCdt)
                    .HasColumnName("SalExportPrmH_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalExportPrmHStmpCus)
                    .HasColumnName("SalExportPrmH_StmpCUs")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalExportPrmHStmpMdt)
                    .HasColumnName("SalExportPrmH_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalExportPrmHStmpMus)
                    .HasColumnName("SalExportPrmH_StmpMUs")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalExportPrmHTp)
                    .HasColumnName("SalExportPrmH_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.SalIntrmdCu)
                    .HasColumnName("SalIntrmd_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalIntrmdSi).HasColumnName("SalIntrmd_Si");

                entity.Property(e => e.SalIntrmdTp)
                    .HasColumnName("SalIntrmd_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHCu).HasColumnName("SalInvcH_Cu");

                entity.Property(e => e.SalPreInvcHCu).HasColumnName("SalPreInvcH_Cu");

                entity.Property(e => e.SalPreInvcHSi).HasColumnName("SalPreInvcH_Si");

                entity.Property(e => e.SalTypCu)
                    .HasColumnName("SalTyp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalTypSi).HasColumnName("SalTyp_Si");

                entity.Property(e => e.SalTypTp)
                    .HasColumnName("SalTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwSalExportInvcOpr>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalExportInvcOpr");

                entity.Property(e => e.SalExportPrmHSi).HasColumnName("SalExportPrmH_Si");

                entity.Property(e => e.SalExportPrmHoprCalcValue)
                    .HasColumnName("SalExportPrmHOpr_CalcValue")
                    .HasColumnType("money");

                entity.Property(e => e.SalExportPrmHoprSi).HasColumnName("SalExportPrmHOpr_Si");

                entity.Property(e => e.SalExportPrmHoprValue)
                    .HasColumnName("SalExportPrmHOpr_Value")
                    .HasColumnType("money");

                entity.Property(e => e.SalOprCu)
                    .HasColumnName("SalOpr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprDefaultValue).HasColumnName("SalOpr_DefaultValue");

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");

                entity.Property(e => e.SalOprSqncPrn).HasColumnName("SalOpr_SqncPrn");

                entity.Property(e => e.SalOprTp)
                    .HasColumnName("SalOpr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTyp).HasColumnName("SalOpr_Typ");

                entity.Property(e => e.SalOprValueTyp).HasColumnName("SalOpr_ValueTyp");
            });

            modelBuilder.Entity<VwSalExportinvcDoc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalExportinvcDoc");

                entity.Property(e => e.InvDocDExpNo)
                    .HasColumnName("InvDocD_ExpNo")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocDPrice)
                    .HasColumnName("InvDocD_Price")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocDPrice2)
                    .HasColumnName("InvDocD_Price_2")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocDQty).HasColumnName("InvDocD_Qty");

                entity.Property(e => e.InvDocDQty2).HasColumnName("InvDocD_Qty2");

                entity.Property(e => e.InvDocDTotal)
                    .HasColumnName("InvDocD_Total")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocHCu).HasColumnName("InvDocH_Cu");

                entity.Property(e => e.InvDocHDs)
                    .HasColumnName("InvDocH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHSi).HasColumnName("InvDocH_Si");

                entity.Property(e => e.InvDocTypSi).HasColumnName("InvDocTyp_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.SalExportPrmDPrcDec).HasColumnName("SalExportPrmD_Prc_Dec");

                entity.Property(e => e.SalExportPrmDPrcDec2).HasColumnName("SalExportPrmD_Prc_Dec_2");

                entity.Property(e => e.SalExportPrmDPrcInc).HasColumnName("SalExportPrmD_Prc_Inc");

                entity.Property(e => e.SalExportPrmDPrcInc2).HasColumnName("SalExportPrmD_Prc_Inc_2");

                entity.Property(e => e.SalExportPrmDQty).HasColumnName("SalExportPrmD_Qty");

                entity.Property(e => e.SalExportPrmDSumPrcDec)
                    .HasColumnName("SalExportPrmD_SumPrc_Dec")
                    .HasColumnType("money");

                entity.Property(e => e.SalExportPrmDSumPrcInc)
                    .HasColumnName("SalExportPrmD_SumPrc_Inc")
                    .HasColumnType("money");

                entity.Property(e => e.SalExportPrmDSumTotal)
                    .HasColumnName("SalExportPrmD_SumTotal")
                    .HasColumnType("money");

                entity.Property(e => e.SalExportPrmDTotal)
                    .HasColumnName("SalExportPrmD_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalExportPrmDUntPrc)
                    .HasColumnName("SalExportPrmD_UntPrc")
                    .HasColumnType("money");

                entity.Property(e => e.SalExportPrmHCu).HasColumnName("SalExportPrmH_Cu");

                entity.Property(e => e.SalExportPrmHSi).HasColumnName("SalExportPrmH_Si");

                entity.Property(e => e.SalExportPrmHTp)
                    .HasColumnName("SalExportPrmH_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.SalOprDefaultValue).HasColumnName("SalOpr_DefaultValue");

                entity.Property(e => e.SalOprDefaultValue2).HasColumnName("SalOpr_DefaultValue_2");

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");

                entity.Property(e => e.SalOprSi2).HasColumnName("SalOpr_Si_2");

                entity.Property(e => e.SalOprTp)
                    .HasColumnName("SalOpr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTp2)
                    .HasColumnName("SalOpr_TP_2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcHSi).HasColumnName("SalPreInvcH_Si");
            });

            modelBuilder.Entity<VwSalGdsAcc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalGdsAcc");

                entity.Property(e => e.AccMCu)
                    .HasColumnName("AccM_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccMSi).HasColumnName("AccM_Si");

                entity.Property(e => e.AccMTp)
                    .HasColumnName("AccM_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccMTp2)
                    .HasColumnName("AccM_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccTCu)
                    .HasColumnName("AccT_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccTSi).HasColumnName("AccT_Si");

                entity.Property(e => e.AccTTp)
                    .HasColumnName("AccT_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccTTp2)
                    .HasColumnName("AccT_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CuCost)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuProject)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsGrpCu)
                    .HasColumnName("InvGdsGrp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsGrpSi).HasColumnName("InvGdsGrp_Si");

                entity.Property(e => e.InvGdsGrpTp)
                    .HasColumnName("InvGdsGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.TpCost)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpProject)
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwSalGdsRetAcc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalGdsRetAcc");

                entity.Property(e => e.AccLtCu)
                    .HasColumnName("AccLT_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtTp)
                    .HasColumnName("AccLT_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccMCu)
                    .HasColumnName("AccM_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccMSi).HasColumnName("AccM_Si");

                entity.Property(e => e.AccMTp)
                    .HasColumnName("AccM_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CuCost)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuProject)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsGrpCu)
                    .HasColumnName("InvGdsGrp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsGrpSi).HasColumnName("InvGdsGrp_Si");

                entity.Property(e => e.InvGdsGrpTp)
                    .HasColumnName("InvGdsGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalGdsRetAccAccMSi).HasColumnName("SalGdsRetAcc_AccM_Si");

                entity.Property(e => e.SalGdsRetAccAccTSi).HasColumnName("SalGdsRetAcc_AccT_Si");

                entity.Property(e => e.TpCost)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpProject)
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwSalGdsStock>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalGdsStock");

                entity.Property(e => e.InvCu)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvTp)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Qsale).HasColumnName("QSale");
            });

            modelBuilder.Entity<VwSalGuranty>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalGuranty");

                entity.Property(e => e.SalCustCu)
                    .HasColumnName("SalCust_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpSi).HasColumnName("SalCustGrp_Si");

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalGurantyBdate)
                    .HasColumnName("SalGuranty_BDate")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.SalGurantyEdate)
                    .HasColumnName("SalGuranty_EDate")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.SalGurantyHcu)
                    .HasColumnName("SalGuranty_HCu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalGurantyHtyp)
                    .HasColumnName("SalGuranty_HTyp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalGurantyPcu)
                    .HasColumnName("SalGuranty_PCu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalGurantySerial)
                    .HasColumnName("SalGuranty_Serial")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalGurantySi).HasColumnName("SalGuranty_Si");

                entity.Property(e => e.SalInvcHCu).HasColumnName("SalInvcH_Cu");

                entity.Property(e => e.SalInvcHSi).HasColumnName("SalInvcH_Si");
            });

            modelBuilder.Entity<VwSalIntrmdUser>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalIntrmdUser");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.SalIntrmdCu)
                    .IsRequired()
                    .HasColumnName("SalIntrmd_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalIntrmdSi).HasColumnName("SalIntrmd_Si");

                entity.Property(e => e.SalIntrmdTp)
                    .HasColumnName("SalIntrmd_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwSalInvDopr>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalInvDOpr");

                entity.Property(e => e.AccMSi).HasColumnName("AccM_Si");

                entity.Property(e => e.AccMSi2).HasColumnName("AccM_Si_2");

                entity.Property(e => e.AccMSi3).HasColumnName("AccM_Si_3");

                entity.Property(e => e.AccTSi).HasColumnName("AccT_Si");

                entity.Property(e => e.AccTSi2).HasColumnName("AccT_Si_2");

                entity.Property(e => e.AccTSi3).HasColumnName("AccT_Si_3");

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalInvcDPrcDec).HasColumnName("SalInvcD_Prc_Dec");

                entity.Property(e => e.SalInvcDPrcDec2).HasColumnName("SalInvcD_Prc_Dec_2");

                entity.Property(e => e.SalInvcDPrcDec3).HasColumnName("SalInvcD_Prc_Dec_3");

                entity.Property(e => e.SalInvcDPrcInc).HasColumnName("SalInvcD_Prc_Inc");

                entity.Property(e => e.SalInvcDPrcInc2).HasColumnName("SalInvcD_Prc_Inc_2");

                entity.Property(e => e.SalInvcDPrcInc3).HasColumnName("SalInvcD_Prc_Inc_3");

                entity.Property(e => e.SalInvcHCu).HasColumnName("SalInvcH_Cu");

                entity.Property(e => e.SalInvcHCu2).HasColumnName("SalInvcH_Cu2");

                entity.Property(e => e.SalInvcHGood).HasColumnName("SalInvcH_Good");

                entity.Property(e => e.SalInvcHSi).HasColumnName("SalInvcH_Si");

                entity.Property(e => e.SalInvcHTp)
                    .HasColumnName("SalInvcH_Tp")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprAccMSi).HasColumnName("SalOpr_AccM_Si");

                entity.Property(e => e.SalOprAccTSi).HasColumnName("SalOpr_AccT_Si");

                entity.Property(e => e.SalOprCu)
                    .HasColumnName("SalOpr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprDefaultValue).HasColumnName("SalOpr_DefaultValue");

                entity.Property(e => e.SalOprDefaultValue2).HasColumnName("SalOpr_DefaultValue_2");

                entity.Property(e => e.SalOprDefaultValue3).HasColumnName("SalOpr_DefaultValue_3");

                entity.Property(e => e.SalOprNature)
                    .HasColumnName("SalOpr_Nature")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SalOprNature2)
                    .HasColumnName("SalOpr_Nature_2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SalOprNature3)
                    .HasColumnName("SalOpr_Nature_3")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SalOprProject).HasColumnName("SalOpr_Project");

                entity.Property(e => e.SalOprProject2).HasColumnName("SalOpr_Project_2");

                entity.Property(e => e.SalOprProject3).HasColumnName("SalOpr_Project_3");

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");

                entity.Property(e => e.SalOprSi2).HasColumnName("SalOpr_Si_2");

                entity.Property(e => e.SalOprSi3).HasColumnName("SalOpr_Si_3");

                entity.Property(e => e.SalOprTp)
                    .HasColumnName("SalOpr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTyp).HasColumnName("SalOpr_Typ");

                entity.Property(e => e.SalOprTyp2).HasColumnName("SalOpr_Typ_2");

                entity.Property(e => e.SalOprTyp3).HasColumnName("SalOpr_Typ_3");

                entity.Property(e => e.SalOprValueTyp).HasColumnName("SalOpr_ValueTyp");

                entity.Property(e => e.SalOprValueTyp2).HasColumnName("SalOpr_ValueTyp_2");

                entity.Property(e => e.SalOprValueTyp3).HasColumnName("SalOpr_ValueTyp_3");
            });

            modelBuilder.Entity<VwSalInvSrvDopr>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalInvSrvDOpr");

                entity.Property(e => e.AccMSi).HasColumnName("AccM_Si");

                entity.Property(e => e.AccMSi2).HasColumnName("AccM_Si_2");

                entity.Property(e => e.AccTSi).HasColumnName("AccT_Si");

                entity.Property(e => e.AccTSi2).HasColumnName("AccT_Si_2");

                entity.Property(e => e.SalInvcSrvDPrcDec)
                    .HasColumnName("SalInvcSrvD_Prc_Dec")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcSrvDPrcDec2).HasColumnName("SalInvcSrvD_Prc_Dec_2");

                entity.Property(e => e.SalInvcSrvDPrcInc)
                    .HasColumnName("SalInvcSrvD_Prc_Inc")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcSrvDPrcInc2).HasColumnName("SalInvcSrvD_Prc_Inc_2");

                entity.Property(e => e.SalInvcSrvHCu).HasColumnName("SalInvcSrvH_Cu");

                entity.Property(e => e.SalInvcSrvHSi).HasColumnName("SalInvcSrvH_Si");

                entity.Property(e => e.SalInvcSrvHTp)
                    .HasColumnName("SalInvcSrvH_Tp")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprAccMSi).HasColumnName("SalOpr_AccM_Si");

                entity.Property(e => e.SalOprAccTSi).HasColumnName("SalOpr_AccT_Si");

                entity.Property(e => e.SalOprCu)
                    .IsRequired()
                    .HasColumnName("SalOpr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprCu2)
                    .HasColumnName("SalOpr_Cu2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprDefaultValue).HasColumnName("SalOpr_DefaultValue");

                entity.Property(e => e.SalOprDefaultValue2).HasColumnName("SalOpr_DefaultValue_2");

                entity.Property(e => e.SalOprNature)
                    .IsRequired()
                    .HasColumnName("SalOpr_Nature")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SalOprNature2)
                    .HasColumnName("SalOpr_Nature_2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");

                entity.Property(e => e.SalOprSi2).HasColumnName("SalOpr_Si_2");

                entity.Property(e => e.SalOprTp)
                    .HasColumnName("SalOpr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTp2)
                    .HasColumnName("SalOpr_Tp_2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprValueTyp).HasColumnName("SalOpr_ValueTyp");

                entity.Property(e => e.SalOprValueTyp2).HasColumnName("SalOpr_ValueTyp_2");
            });

            modelBuilder.Entity<VwSalInvcD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalInvcD");

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.BarNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BatchNumberD)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsAddrs)
                    .HasColumnName("CtbAddrs_Addrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsCity)
                    .HasColumnName("CtbAddrs_City")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsDefault).HasColumnName("CtbAddrs_Default");

                entity.Property(e => e.CtbAddrsEconamical)
                    .HasColumnName("CtbAddrs_Econamical")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsFax)
                    .HasColumnName("CtbAddrs_Fax")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsNatCode)
                    .HasColumnName("CtbAddrs_NatCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsNumber).HasColumnName("CtbAddrs_Number");

                entity.Property(e => e.CtbAddrsOstan)
                    .HasColumnName("CtbAddrs_Ostan")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPobox)
                    .HasColumnName("CtbAddrs_POBox")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsShahrestan)
                    .HasColumnName("CtbAddrs_Shahrestan")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsTel)
                    .HasColumnName("CtbAddrs_Tel")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsZipcode)
                    .HasColumnName("CtbAddrs_ZIPCode")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.CtbCurncyTp)
                    .HasColumnName("CtbCurncy_Tp")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCustVndrTypSi).HasColumnName("CtbCustVndrTyp_Si");

                entity.Property(e => e.CtbPrpVluValue)
                    .HasColumnName("CtbPrpVlu_Value")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DescDriver)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocDTotal)
                    .HasColumnName("InvDocD_Total")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocHAccMSi).HasColumnName("InvDocH_AccM_Si");

                entity.Property(e => e.InvDocHCu).HasColumnName("InvDocH_Cu");

                entity.Property(e => e.InvDocHDs)
                    .HasColumnName("InvDocH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsCm)
                    .HasColumnName("InvGds_Cm")
                    .HasColumnType("text");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsGrpCu)
                    .HasColumnName("InvGdsGrp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsGrpSi).HasColumnName("InvGdsGrp_Si");

                entity.Property(e => e.InvGdsGrpTp)
                    .HasColumnName("InvGdsGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsIcntryCu)
                    .HasColumnName("InvGdsICntry_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsIcntryTp)
                    .HasColumnName("InvGdsICntry_Tp")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsIcratrCu)
                    .HasColumnName("InvGdsICratr_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsIcratrSi).HasColumnName("InvGdsICratr_Si");

                entity.Property(e => e.InvGdsIcratrTp)
                    .HasColumnName("InvGdsICratr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsLname)
                    .HasColumnName("InvGds_LName")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTechNo)
                    .HasColumnName("InvGds_TechNo")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsToInvShelf)
                    .HasColumnName("InvGdsToInv_Shelf")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvGdsTypSi).HasColumnName("InvGdsTyp_Si");

                entity.Property(e => e.InvGdsTypTp)
                    .HasColumnName("InvGdsTyp_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtCu)
                    .HasColumnName("InvInvt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntCount).HasColumnName("InvUnt_Count");

                entity.Property(e => e.InvUntCu)
                    .HasColumnName("InvUnt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntCu2)
                    .HasColumnName("InvUnt_Cu2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntTp2)
                    .HasColumnName("InvUnt_Tp2")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchCu)
                    .HasColumnName("SalBrnch_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchSi).HasColumnName("SalBrnch_Si");

                entity.Property(e => e.SalBrnchTp)
                    .HasColumnName("SalBrnch_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCancleSi).HasColumnName("SalCancle_Si");

                entity.Property(e => e.SalCancleTp)
                    .HasColumnName("SalCancle_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCitySi).HasColumnName("SalCity_Si");

                entity.Property(e => e.SalContractHSi).HasColumnName("SalContractH_Si");

                entity.Property(e => e.SalCustAccMSi).HasColumnName("SalCust_AccM_Si");

                entity.Property(e => e.SalCustAccTSi).HasColumnName("SalCust_AccT_Si");

                entity.Property(e => e.SalCustActiveTypSi).HasColumnName("SalCustActiveTyp_Si");

                entity.Property(e => e.SalCustCorporateTyp).HasColumnName("SalCust_CorporateTyp");

                entity.Property(e => e.SalCustCorporateTypTp)
                    .HasColumnName("SalCust_CorporateTypTP")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustCu)
                    .HasColumnName("SalCust_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpCu)
                    .HasColumnName("SalCustGrp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpSi).HasColumnName("SalCustGrp_Si");

                entity.Property(e => e.SalCustGrpTp)
                    .HasColumnName("SalCustGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalCustStatusSi).HasColumnName("SalCustStatus_Si");

                entity.Property(e => e.SalCustTitle)
                    .HasColumnName("SalCust_Title")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalDivisionSi).HasColumnName("SalDivision_Si");

                entity.Property(e => e.SalDlvrrPercent).HasColumnName("SalDlvrr_Percent");

                entity.Property(e => e.SalDlvrrSi).HasColumnName("SalDlvrr_Si");

                entity.Property(e => e.SalDlvrrTp)
                    .HasColumnName("SalDlvrr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalDlvrrTpEn)
                    .HasColumnName("SalDlvrr_Tp_En")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalDriverSi).HasColumnName("SalDriver_Si");

                entity.Property(e => e.SalDrvrSi).HasColumnName("SalDrvr_Si");

                entity.Property(e => e.SalDrvrTp)
                    .HasColumnName("SalDrvr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalEnterducedSi).HasColumnName("SalEnterduced_Si");

                entity.Property(e => e.SalGdsAccAccCSi).HasColumnName("SalGdsAcc_AccC_Si");

                entity.Property(e => e.SalGdsAccAccMSi).HasColumnName("SalGdsAcc_AccM_Si");

                entity.Property(e => e.SalGdsAccAccPSi).HasColumnName("SalGdsAcc_AccP_Si");

                entity.Property(e => e.SalGdsAccAccTSi).HasColumnName("SalGdsAcc_AccT_Si");

                entity.Property(e => e.SalGiftInvGdsSi).HasColumnName("SalGiftInvGds_Si");

                entity.Property(e => e.SalIntrmdCu)
                    .HasColumnName("SalIntrmd_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalIntrmdSi).HasColumnName("SalIntrmd_Si");

                entity.Property(e => e.SalIntrmdTp)
                    .HasColumnName("SalIntrmd_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvCdSumTotal)
                    .HasColumnName("SalInvCd_SumTotal")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcDCoefficientCust).HasColumnName("SalInvcD_coefficientCust");

                entity.Property(e => e.SalInvcDCoefficientintrmd).HasColumnName("SalInvcD_coefficientintrmd");

                entity.Property(e => e.SalInvcDExpiredate)
                    .HasColumnName("SalInvcD_Expiredate")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalInvcDExpiredateSh)
                    .HasColumnName("SalInvcD_ExpiredateSH")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.SalInvcDGiftOk).HasColumnName("SalInvcD_GiftOk");

                entity.Property(e => e.SalInvcDGrntCust).HasColumnName("SalInvcD_GrntCust");

                entity.Property(e => e.SalInvcDGrntIntrmd).HasColumnName("SalInvcD_GrntIntrmd");

                entity.Property(e => e.SalInvcDPrcDec).HasColumnName("SalInvcD_Prc_Dec");

                entity.Property(e => e.SalInvcDPrcDec2).HasColumnName("SalInvcD_Prc_Dec_2");

                entity.Property(e => e.SalInvcDPrcDec3).HasColumnName("SalInvcD_Prc_Dec_3");

                entity.Property(e => e.SalInvcDPrcInc).HasColumnName("SalInvcD_Prc_Inc");

                entity.Property(e => e.SalInvcDPrcInc2).HasColumnName("SalInvcD_Prc_Inc_2");

                entity.Property(e => e.SalInvcDPrcInc3).HasColumnName("SalInvcD_Prc_Inc_3");

                entity.Property(e => e.SalInvcDPurCredit).HasColumnName("SalInvcD_PurCredit");

                entity.Property(e => e.SalInvcDPurDebit).HasColumnName("SalInvcD_PurDebit");

                entity.Property(e => e.SalInvcDPurDesc)
                    .HasColumnName("SalInvcD_PurDesc")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcDQty)
                    .HasColumnName("SalInvcD_Qty")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcDQty2).HasColumnName("SalInvcD_Qty2");

                entity.Property(e => e.SalInvcDRds)
                    .HasColumnName("SalInvcD_RDs")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.SalInvcDRno)
                    .HasColumnName("SalInvcD_RNo")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcDRow).HasColumnName("SalInvcD_Row");

                entity.Property(e => e.SalInvcDSi).HasColumnName("SalInvcD_Si");

                entity.Property(e => e.SalInvcDSumPrcDec).HasColumnName("SalInvcD_SumPrc_Dec");

                entity.Property(e => e.SalInvcDSumPrcInc).HasColumnName("SalInvcD_SumPrc_Inc");

                entity.Property(e => e.SalInvcDTotal)
                    .HasColumnName("SalInvcD_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcDTotalC).HasColumnName("SalInvcD_TotalC");

                entity.Property(e => e.SalInvcDTotalGrantCust).HasColumnName("SalInvcD_TotalGrantCust");

                entity.Property(e => e.SalInvcDTotalGrantIntrmd).HasColumnName("SalInvcD_TotalGrantIntrmd");

                entity.Property(e => e.SalInvcDTp)
                    .HasColumnName("SalInvcD_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcDUntPrc)
                    .HasColumnName("SalInvcD_UntPrc")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcDUntPrcC).HasColumnName("SalInvcD_UntPrcC");

                entity.Property(e => e.SalInvcHAccDoc).HasColumnName("SalInvcH_AccDoc");

                entity.Property(e => e.SalInvcHAddrsPur)
                    .HasColumnName("SalInvcH_AddrsPur")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHBarNo)
                    .HasColumnName("SalInvcH_BarNo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHCancelled).HasColumnName("SalInvcH_Cancelled");

                entity.Property(e => e.SalInvcHCodeSharestan)
                    .HasColumnName("SalInvcH_CodeSharestan")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHCu).HasColumnName("SalInvcH_Cu");

                entity.Property(e => e.SalInvcHCu2).HasColumnName("SalInvcH_Cu2");

                entity.Property(e => e.SalInvcHDlvLoc)
                    .HasColumnName("SalInvcH_DlvLoc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHDm)
                    .HasColumnName("SalInvcH_Dm")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalInvcHDs)
                    .IsRequired()
                    .HasColumnName("SalInvcH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHDsMonth).HasColumnName("SalInvcH_Ds_Month");

                entity.Property(e => e.SalInvcHDsMonthTp)
                    .HasColumnName("SalInvcH_Ds_MonthTp")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHFamilyPur)
                    .HasColumnName("SalInvcH_FamilyPur")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHGood).HasColumnName("SalInvcH_Good");

                entity.Property(e => e.SalInvcHIno)
                    .HasColumnName("SalInvcH_INO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHLock).HasColumnName("SalInvcH_Lock");

                entity.Property(e => e.SalInvcHNamePur)
                    .HasColumnName("SalInvcH_NamePur")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHNationalCode)
                    .HasColumnName("SalInvcH_NationalCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHPostCode)
                    .HasColumnName("SalInvcH_PostCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHPrcDec)
                    .HasColumnName("SalInvcH_Prc_Dec")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcHPrcInc)
                    .HasColumnName("SalInvcH_Prc_Inc")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcHPrcRcvdDt)
                    .HasColumnName("SalInvcH_PrcRcvdDt")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHPrcSumTotal)
                    .HasColumnName("SalInvcH_Prc_SumTotal")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcHPrcSumTotalC)
                    .HasColumnName("SalInvcH_Prc_SumTotalC")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcHPrcTotal)
                    .HasColumnName("SalInvcH_Prc_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcHRcvMthd)
                    .HasColumnName("SalInvcH_RcvMthd")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHReference)
                    .HasColumnName("SalInvcH_Reference")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHRfrncTyp).HasColumnName("SalInvcH_RfrncTyp");

                entity.Property(e => e.SalInvcHSi).HasColumnName("SalInvcH_Si");

                entity.Property(e => e.SalInvcHStmpCdt)
                    .HasColumnName("SalInvcH_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalInvcHStmpCus)
                    .HasColumnName("SalInvcH_StmpCUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHStmpMdt)
                    .HasColumnName("SalInvcH_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalInvcHStmpMus)
                    .HasColumnName("SalInvcH_StmpMUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHStmpTime)
                    .HasColumnName("SalInvcH_StmpTime")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHStmpTimeEdit)
                    .HasColumnName("SalInvcH_StmpTimeEdit")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHSumGrantCust).HasColumnName("SalInvcH_SumGrantCust");

                entity.Property(e => e.SalInvcHSumGrantIntrmd).HasColumnName("SalInvcH_SumGrantIntrmd");

                entity.Property(e => e.SalInvcHTel)
                    .HasColumnName("SalInvcH_Tel")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHTp)
                    .HasColumnName("SalInvcH_Tp")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprDefaultValue).HasColumnName("SalOpr_DefaultValue");

                entity.Property(e => e.SalOprDefaultValue2).HasColumnName("SalOpr_DefaultValue_2");

                entity.Property(e => e.SalOprDefaultValue3).HasColumnName("SalOpr_DefaultValue_3");

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");

                entity.Property(e => e.SalOprSi2).HasColumnName("SalOpr_Si_2");

                entity.Property(e => e.SalOprSi3).HasColumnName("SalOpr_Si_3");

                entity.Property(e => e.SalOprTp)
                    .HasColumnName("SalOpr_TP")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTp2)
                    .HasColumnName("SalOpr_TP_2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTp3)
                    .HasColumnName("SalOpr_TP_3")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcHCu).HasColumnName("SalPreInvcH_Cu");

                entity.Property(e => e.SalPreinvcHSi).HasColumnName("SalPreinvcH_Si");

                entity.Property(e => e.SalProvinceSi).HasColumnName("SalProvince_Si");

                entity.Property(e => e.SalRegionPathSi).HasColumnName("SalRegionPath_Si");

                entity.Property(e => e.SalRegionPathTp)
                    .HasColumnName("SalRegionPath_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRegionSi).HasColumnName("SalRegion_Si");

                entity.Property(e => e.SalRegionTp)
                    .HasColumnName("SalRegion_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRespSi).HasColumnName("SalResp_Si");

                entity.Property(e => e.SalRespTp)
                    .HasColumnName("SalResp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalTypCu)
                    .HasColumnName("SalTyp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalTypSi).HasColumnName("SalTyp_Si");

                entity.Property(e => e.SalTypTp)
                    .HasColumnName("SalTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalinvcHCarNo)
                    .HasColumnName("SalinvcH_CarNo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalvarietySi).HasColumnName("Salvariety_Si");
            });

            modelBuilder.Entity<VwSalInvcH>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalInvcH");

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLmCu)
                    .HasColumnName("AccLM_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLmSi2).HasColumnName("AccLM_Si_2");

                entity.Property(e => e.AccLmTp)
                    .HasColumnName("AccLM_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLtCu)
                    .HasColumnName("AccLT_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AccLtTp)
                    .HasColumnName("AccLT_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AddrsSecondary)
                    .HasColumnName("Addrs_Secondary")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.BarNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsAddrs)
                    .HasColumnName("CtbAddrs_Addrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsCity)
                    .HasColumnName("CtbAddrs_City")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsDefault).HasColumnName("CtbAddrs_Default");

                entity.Property(e => e.CtbAddrsEconamical)
                    .HasColumnName("CtbAddrs_Econamical")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsEmail)
                    .HasColumnName("CtbAddrs_Email")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsFax)
                    .HasColumnName("CtbAddrs_Fax")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsMobile)
                    .HasColumnName("CtbAddrs_Mobile")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsModem)
                    .HasColumnName("CtbAddrs_Modem")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsNatCode)
                    .HasColumnName("CtbAddrs_NatCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsNumber).HasColumnName("CtbAddrs_Number");

                entity.Property(e => e.CtbAddrsOstan)
                    .HasColumnName("CtbAddrs_Ostan")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPobox)
                    .HasColumnName("CtbAddrs_POBox")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsShahrestan)
                    .HasColumnName("CtbAddrs_Shahrestan")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsTel)
                    .HasColumnName("CtbAddrs_Tel")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsZipcode)
                    .HasColumnName("CtbAddrs_ZIPCode")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCustVndrTypSi).HasColumnName("CtbCustVndrTyp_Si");

                entity.Property(e => e.DescDriver)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocDTotal)
                    .HasColumnName("InvDocD_Total")
                    .HasColumnType("money");

                entity.Property(e => e.InvDocHAccMSi).HasColumnName("InvDocH_AccM_Si");

                entity.Property(e => e.InvDocHCu).HasColumnName("InvDocH_Cu");

                entity.Property(e => e.InvDocHDefinite).HasColumnName("InvDocH_Definite");

                entity.Property(e => e.InvDocHDs)
                    .HasColumnName("InvDocH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHSi).HasColumnName("InvDocH_Si");

                entity.Property(e => e.InvInvtCu)
                    .HasColumnName("InvInvt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtTp2)
                    .HasColumnName("InvInvt_Tp_2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchCu)
                    .HasColumnName("SalBrnch_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchSi).HasColumnName("SalBrnch_Si");

                entity.Property(e => e.SalBrnchTp)
                    .HasColumnName("SalBrnch_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCancleSi).HasColumnName("SalCancle_Si");

                entity.Property(e => e.SalCancleTp)
                    .HasColumnName("SalCancle_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCitySi).HasColumnName("SalCity_Si");

                entity.Property(e => e.SalContractHCu).HasColumnName("SalContractH_Cu");

                entity.Property(e => e.SalContractHSi).HasColumnName("SalContractH_Si");

                entity.Property(e => e.SalCustAccMSi).HasColumnName("SalCust_AccM_Si");

                entity.Property(e => e.SalCustAccTSi).HasColumnName("SalCust_AccT_Si");

                entity.Property(e => e.SalCustActiveTypSi).HasColumnName("SalCustActiveTyp_Si");

                entity.Property(e => e.SalCustCorporateTyp).HasColumnName("SalCust_CorporateTyp");

                entity.Property(e => e.SalCustCorporateTypTp)
                    .HasColumnName("SalCust_CorporateTypTP")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustCu)
                    .HasColumnName("SalCust_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustDivision).HasColumnName("SalCust_division");

                entity.Property(e => e.SalCustGrpCu)
                    .HasColumnName("SalCustGrp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpSi).HasColumnName("SalCustGrp_Si");

                entity.Property(e => e.SalCustGrpTp)
                    .HasColumnName("SalCustGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalCustStatusSi).HasColumnName("SalCustStatus_Si");

                entity.Property(e => e.SalCustTitle)
                    .HasColumnName("SalCust_Title")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalDivisionSi).HasColumnName("SalDivision_Si");

                entity.Property(e => e.SalDivisionTp)
                    .HasColumnName("SalDivision_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalDlvrrPercent).HasColumnName("SalDlvrr_Percent");

                entity.Property(e => e.SalDlvrrSi).HasColumnName("SalDlvrr_Si");

                entity.Property(e => e.SalDlvrrTp)
                    .HasColumnName("SalDlvrr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalDlvrrTpEn)
                    .HasColumnName("SalDlvrr_Tp_En")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalDocVchrCredit)
                    .HasColumnName("SalDocVchr_Credit")
                    .HasColumnType("money");

                entity.Property(e => e.SalDocVchrDebit)
                    .HasColumnName("SalDocVchr_Debit")
                    .HasColumnType("money");

                entity.Property(e => e.SalDriverSi).HasColumnName("SalDriver_Si");

                entity.Property(e => e.SalDriverTp)
                    .HasColumnName("SalDriver_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalDrvrAdrs)
                    .HasColumnName("SalDrvr_Adrs")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalDrvrPhoto)
                    .HasColumnName("SalDrvr_Photo")
                    .HasColumnType("image");

                entity.Property(e => e.SalDrvrSi).HasColumnName("SalDrvr_Si");

                entity.Property(e => e.SalDrvrTel)
                    .HasColumnName("SalDrvr_Tel")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalDrvrTp)
                    .HasColumnName("SalDrvr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalEnterducedSi).HasColumnName("SalEnterduced_Si");

                entity.Property(e => e.SalGiftInvGdsSi).HasColumnName("SalGiftInvGds_Si");

                entity.Property(e => e.SalIntrmdCu)
                    .HasColumnName("SalIntrmd_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalIntrmdCuCust)
                    .HasColumnName("SalIntrmd_CuCust")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalIntrmdDefaultValue)
                    .HasColumnName("SalIntrmd_DefaultValue")
                    .HasColumnType("money");

                entity.Property(e => e.SalIntrmdSi).HasColumnName("SalIntrmd_Si");

                entity.Property(e => e.SalIntrmdSiCust).HasColumnName("SalIntrmd_SiCust");

                entity.Property(e => e.SalIntrmdTp)
                    .HasColumnName("SalIntrmd_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalIntrmdTpCust)
                    .HasColumnName("SalIntrmd_TpCust")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalIntrmdValueTyp).HasColumnName("SalIntrmd_ValueTyp");

                entity.Property(e => e.SalInvcHAccDoc).HasColumnName("SalInvcH_AccDoc");

                entity.Property(e => e.SalInvcHAddrsPur)
                    .HasColumnName("SalInvcH_AddrsPur")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHBarNo)
                    .HasColumnName("SalInvcH_BarNo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHCancelled).HasColumnName("SalInvcH_Cancelled");

                entity.Property(e => e.SalInvcHCodeSharestan)
                    .HasColumnName("SalInvcH_CodeSharestan")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHCu).HasColumnName("SalInvcH_Cu");

                entity.Property(e => e.SalInvcHCu2).HasColumnName("SalInvcH_Cu2");

                entity.Property(e => e.SalInvcHDlvLoc)
                    .HasColumnName("SalInvcH_DlvLoc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHDm)
                    .HasColumnName("SalInvcH_Dm")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalInvcHDs)
                    .IsRequired()
                    .HasColumnName("SalInvcH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHDsMonth).HasColumnName("SalInvcH_Ds_Month");

                entity.Property(e => e.SalInvcHDsMonthTp)
                    .HasColumnName("SalInvcH_Ds_MonthTp")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHFamilyPur)
                    .HasColumnName("SalInvcH_FamilyPur")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHGiftTotal)
                    .HasColumnName("SalInvcH_Gift_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcHGood).HasColumnName("SalInvcH_Good");

                entity.Property(e => e.SalInvcHGoodTp)
                    .HasColumnName("SalInvcH_GoodTp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHIno)
                    .HasColumnName("SalInvcH_INO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHIntrmdPrc).HasColumnName("SalInvcH_IntrmdPrc");

                entity.Property(e => e.SalInvcHLock).HasColumnName("SalInvcH_Lock");

                entity.Property(e => e.SalInvcHNamePur)
                    .HasColumnName("SalInvcH_NamePur")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHNationalCode)
                    .HasColumnName("SalInvcH_NationalCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHPostCode)
                    .HasColumnName("SalInvcH_PostCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHPrcDec)
                    .HasColumnName("SalInvcH_Prc_Dec")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcHPrcInc)
                    .HasColumnName("SalInvcH_Prc_Inc")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcHPrcRcvd).HasColumnName("SalInvcH_PrcRcvd");

                entity.Property(e => e.SalInvcHPrcRcvdDt)
                    .HasColumnName("SalInvcH_PrcRcvdDt")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHPrcSumTotal)
                    .HasColumnName("SalInvcH_Prc_SumTotal")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcHPrcSumTotalC)
                    .HasColumnName("SalInvcH_Prc_SumTotalC")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcHPrcTotal)
                    .HasColumnName("SalInvcH_Prc_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcHRcvMthd)
                    .HasColumnName("SalInvcH_RcvMthd")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHReference)
                    .HasColumnName("SalInvcH_Reference")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHRfrncTyp).HasColumnName("SalInvcH_RfrncTyp");

                entity.Property(e => e.SalInvcHSi).HasColumnName("SalInvcH_Si");

                entity.Property(e => e.SalInvcHStmpCdt)
                    .HasColumnName("SalInvcH_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalInvcHStmpCus)
                    .HasColumnName("SalInvcH_StmpCUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHStmpMdt)
                    .HasColumnName("SalInvcH_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalInvcHStmpMus)
                    .HasColumnName("SalInvcH_StmpMUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHStmpTime)
                    .HasColumnName("SalInvcH_StmpTime")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHStmpTimeEdit)
                    .HasColumnName("SalInvcH_StmpTimeEdit")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHSumGrantCust).HasColumnName("SalInvcH_SumGrantCust");

                entity.Property(e => e.SalInvcHSumGrantIntrmd).HasColumnName("SalInvcH_SumGrantIntrmd");

                entity.Property(e => e.SalInvcHTel)
                    .HasColumnName("SalInvcH_Tel")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHTp)
                    .HasColumnName("SalInvcH_Tp")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHTrnsferDb).HasColumnName("SalInvcH_TrnsferDB");

                entity.Property(e => e.SalPreInvcHCu).HasColumnName("SalPreInvcH_Cu");

                entity.Property(e => e.SalPreInvcHDs)
                    .HasColumnName("SalPreInvcH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvchSalExportPrmHCu).HasColumnName("SalPreInvch_SalExportPrmH_Cu");

                entity.Property(e => e.SalPreInvchSalExportPrmHDs).HasColumnName("SalPreInvch_SalExportPrmH_Ds");

                entity.Property(e => e.SalPreinvcHSi).HasColumnName("SalPreinvcH_Si");

                entity.Property(e => e.SalProvinceSi).HasColumnName("SalProvince_Si");

                entity.Property(e => e.SalRegionPathSi).HasColumnName("SalRegionPath_Si");

                entity.Property(e => e.SalRegionPathTp)
                    .HasColumnName("SalRegionPath_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRegionSi).HasColumnName("SalRegion_Si");

                entity.Property(e => e.SalRegionTp)
                    .HasColumnName("SalRegion_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRespSi).HasColumnName("SalResp_Si");

                entity.Property(e => e.SalRespTp)
                    .HasColumnName("SalResp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalTypCu)
                    .HasColumnName("SalTyp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalTypSi).HasColumnName("SalTyp_Si");

                entity.Property(e => e.SalTypTp)
                    .HasColumnName("SalTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalinvcHCarNo)
                    .HasColumnName("SalinvcH_CarNo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalvarietyCu)
                    .HasColumnName("Salvariety_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalvarietySi).HasColumnName("Salvariety_Si");

                entity.Property(e => e.SalvarietyTp)
                    .HasColumnName("Salvariety_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.TpCost)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwSalInvcHtrS>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalInvcHTrS");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLmSi2).HasColumnName("AccLM_Si_2");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AddrsSecondary)
                    .HasColumnName("Addrs_Secondary")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.BarNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsAddrs)
                    .HasColumnName("CtbAddrs_Addrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsCity)
                    .HasColumnName("CtbAddrs_City")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsDefault).HasColumnName("CtbAddrs_Default");

                entity.Property(e => e.CtbAddrsEconamical)
                    .HasColumnName("CtbAddrs_Econamical")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsFax)
                    .HasColumnName("CtbAddrs_Fax")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsNatCode)
                    .HasColumnName("CtbAddrs_NatCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsOstan)
                    .HasColumnName("CtbAddrs_Ostan")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPobox)
                    .HasColumnName("CtbAddrs_POBox")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsShahrestan)
                    .HasColumnName("CtbAddrs_Shahrestan")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsTel)
                    .HasColumnName("CtbAddrs_Tel")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsZipcode)
                    .HasColumnName("CtbAddrs_ZIPCode")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescDriver)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHAccMSi).HasColumnName("InvDocH_AccM_Si");

                entity.Property(e => e.InvDocHCu).HasColumnName("InvDocH_Cu");

                entity.Property(e => e.InvDocHDefinite).HasColumnName("InvDocH_Definite");

                entity.Property(e => e.InvDocHDs)
                    .HasColumnName("InvDocH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHSi).HasColumnName("InvDocH_Si");

                entity.Property(e => e.InvInvtCu)
                    .HasColumnName("InvInvt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchCu)
                    .HasColumnName("SalBrnch_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchSi).HasColumnName("SalBrnch_Si");

                entity.Property(e => e.SalBrnchTp)
                    .HasColumnName("SalBrnch_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCancleSi).HasColumnName("SalCancle_Si");

                entity.Property(e => e.SalCancleTp)
                    .HasColumnName("SalCancle_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalContractHCu).HasColumnName("SalContractH_Cu");

                entity.Property(e => e.SalContractHSi).HasColumnName("SalContractH_Si");

                entity.Property(e => e.SalCustAccMSi).HasColumnName("SalCust_AccM_Si");

                entity.Property(e => e.SalCustAccTSi).HasColumnName("SalCust_AccT_Si");

                entity.Property(e => e.SalCustCu)
                    .HasColumnName("SalCust_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpCu)
                    .HasColumnName("SalCustGrp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpSi).HasColumnName("SalCustGrp_Si");

                entity.Property(e => e.SalCustGrpTp)
                    .HasColumnName("SalCustGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalCustStatusSi).HasColumnName("SalCustStatus_Si");

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalDlvrrSi).HasColumnName("SalDlvrr_Si");

                entity.Property(e => e.SalDlvrrTp)
                    .HasColumnName("SalDlvrr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalDrvrAdrs)
                    .HasColumnName("SalDrvr_Adrs")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalDrvrPhoto)
                    .HasColumnName("SalDrvr_Photo")
                    .HasColumnType("image");

                entity.Property(e => e.SalDrvrSi).HasColumnName("SalDrvr_Si");

                entity.Property(e => e.SalDrvrTel)
                    .HasColumnName("SalDrvr_Tel")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalDrvrTp)
                    .HasColumnName("SalDrvr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalGiftInvGdsSi).HasColumnName("SalGiftInvGds_Si");

                entity.Property(e => e.SalIntrmdCu)
                    .HasColumnName("SalIntrmd_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalIntrmdDefaultValue)
                    .HasColumnName("SalIntrmd_DefaultValue")
                    .HasColumnType("money");

                entity.Property(e => e.SalIntrmdSi).HasColumnName("SalIntrmd_Si");

                entity.Property(e => e.SalIntrmdTp)
                    .HasColumnName("SalIntrmd_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalIntrmdValueTyp).HasColumnName("SalIntrmd_ValueTyp");

                entity.Property(e => e.SalInvcHAccDoc).HasColumnName("SalInvcH_AccDoc");

                entity.Property(e => e.SalInvcHCancelled).HasColumnName("SalInvcH_Cancelled");

                entity.Property(e => e.SalInvcHCu).HasColumnName("SalInvcH_Cu");

                entity.Property(e => e.SalInvcHCu2).HasColumnName("SalInvcH_Cu2");

                entity.Property(e => e.SalInvcHDlvLoc)
                    .HasColumnName("SalInvcH_DlvLoc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHDs)
                    .IsRequired()
                    .HasColumnName("SalInvcH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHDsMonth).HasColumnName("SalInvcH_Ds_Month");

                entity.Property(e => e.SalInvcHDsMonthTp)
                    .HasColumnName("SalInvcH_Ds_MonthTp")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHGiftTotal)
                    .HasColumnName("SalInvcH_Gift_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcHGood).HasColumnName("SalInvcH_Good");

                entity.Property(e => e.SalInvcHGoodTp)
                    .HasColumnName("SalInvcH_GoodTp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHLock).HasColumnName("SalInvcH_Lock");

                entity.Property(e => e.SalInvcHPrcDec)
                    .HasColumnName("SalInvcH_Prc_Dec")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcHPrcInc)
                    .HasColumnName("SalInvcH_Prc_Inc")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcHPrcRcvd).HasColumnName("SalInvcH_PrcRcvd");

                entity.Property(e => e.SalInvcHPrcSumTotal)
                    .HasColumnName("SalInvcH_Prc_SumTotal")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcHPrcSumTotalC)
                    .HasColumnName("SalInvcH_Prc_SumTotalC")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcHPrcTotal)
                    .HasColumnName("SalInvcH_Prc_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcHRcvMthd)
                    .HasColumnName("SalInvcH_RcvMthd")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHReference)
                    .HasColumnName("SalInvcH_Reference")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHRfrncTyp).HasColumnName("SalInvcH_RfrncTyp");

                entity.Property(e => e.SalInvcHSi).HasColumnName("SalInvcH_Si");

                entity.Property(e => e.SalInvcHStmpCdt)
                    .HasColumnName("SalInvcH_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalInvcHStmpCus)
                    .HasColumnName("SalInvcH_StmpCUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHStmpMdt)
                    .HasColumnName("SalInvcH_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalInvcHStmpMus)
                    .HasColumnName("SalInvcH_StmpMUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHTp)
                    .HasColumnName("SalInvcH_Tp")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcHCu).HasColumnName("SalPreInvcH_Cu");

                entity.Property(e => e.SalPreinvcHSi).HasColumnName("SalPreinvcH_Si");

                entity.Property(e => e.SalRegionPathSi).HasColumnName("SalRegionPath_Si");

                entity.Property(e => e.SalRegionPathTp)
                    .HasColumnName("SalRegionPath_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRegionSi).HasColumnName("SalRegion_Si");

                entity.Property(e => e.SalRegionTp)
                    .HasColumnName("SalRegion_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRespSi).HasColumnName("SalResp_Si");

                entity.Property(e => e.SalRespTp)
                    .HasColumnName("SalResp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalTypCu)
                    .HasColumnName("SalTyp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalTypSi).HasColumnName("SalTyp_Si");

                entity.Property(e => e.SalTypTp)
                    .HasColumnName("SalTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwSalInvcOpr>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalInvcOpr");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AccMSi).HasColumnName("AccM_Si");

                entity.Property(e => e.AccTSi).HasColumnName("AccT_Si");

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalInvcHAccDoc).HasColumnName("SalInvcH_AccDoc");

                entity.Property(e => e.SalInvcHCancelled).HasColumnName("SalInvcH_Cancelled");

                entity.Property(e => e.SalInvcHCu).HasColumnName("SalInvcH_Cu");

                entity.Property(e => e.SalInvcHCu2).HasColumnName("SalInvcH_Cu2");

                entity.Property(e => e.SalInvcHDs)
                    .HasColumnName("SalInvcH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHGood).HasColumnName("SalInvcH_Good");

                entity.Property(e => e.SalInvcHSi).HasColumnName("SalInvcH_Si");

                entity.Property(e => e.SalInvcHTp)
                    .HasColumnName("SalInvcH_Tp")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcOprAccMSi).HasColumnName("SalInvcOpr_AccM_Si");

                entity.Property(e => e.SalInvcOprAccTSi).HasColumnName("SalInvcOpr_AccT_Si");

                entity.Property(e => e.SalInvcOprCalcValue)
                    .HasColumnName("SalInvcOpr_CalcValue")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcOprSi).HasColumnName("SalInvcOpr_Si");

                entity.Property(e => e.SalInvcOprValue)
                    .HasColumnName("SalInvcOpr_Value")
                    .HasColumnType("money");

                entity.Property(e => e.SalOprAccMSi).HasColumnName("SalOpr_AccM_Si");

                entity.Property(e => e.SalOprAccTSi).HasColumnName("SalOpr_AccT_Si");

                entity.Property(e => e.SalOprActive).HasColumnName("SalOpr_Active");

                entity.Property(e => e.SalOprAutoInsert).HasColumnName("SalOpr_AutoInsert");

                entity.Property(e => e.SalOprCu)
                    .HasColumnName("SalOpr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprDefaultValue).HasColumnName("SalOpr_DefaultValue");

                entity.Property(e => e.SalOprLckPrc).HasColumnName("SalOpr_LckPrc");

                entity.Property(e => e.SalOprNature)
                    .HasColumnName("SalOpr_Nature")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SalOprProject).HasColumnName("SalOpr_Project");

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");

                entity.Property(e => e.SalOprSqnc).HasColumnName("SalOpr_Sqnc");

                entity.Property(e => e.SalOprSqncPrn).HasColumnName("SalOpr_SqncPrn");

                entity.Property(e => e.SalOprTp)
                    .HasColumnName("SalOpr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTyp).HasColumnName("SalOpr_Typ");

                entity.Property(e => e.SalOprUse).HasColumnName("SalOpr_Use");

                entity.Property(e => e.SalOprValueTyp).HasColumnName("SalOpr_ValueTyp");

                entity.Property(e => e.SalTypSi).HasColumnName("SalTyp_Si");
            });

            modelBuilder.Entity<VwSalInvcSrvD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalInvcSrvD");

                entity.Property(e => e.BatchNumberD)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsAddrs)
                    .HasColumnName("CtbAddrs_Addrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsEconamical)
                    .HasColumnName("CtbAddrs_Econamical")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsFax)
                    .HasColumnName("CtbAddrs_Fax")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsNatCode)
                    .HasColumnName("CtbAddrs_NatCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPobox)
                    .HasColumnName("CtbAddrs_POBox")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsTel)
                    .HasColumnName("CtbAddrs_Tel")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsZipcode)
                    .HasColumnName("CtbAddrs_ZIPCode")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchCu)
                    .HasColumnName("SalBrnch_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchSi).HasColumnName("SalBrnch_Si");

                entity.Property(e => e.SalBrnchTp)
                    .HasColumnName("SalBrnch_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCitySi).HasColumnName("SalCity_Si");

                entity.Property(e => e.SalCustCorporateTyp).HasColumnName("SalCust_CorporateTyp");

                entity.Property(e => e.SalCustCu)
                    .HasColumnName("SalCust_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpSi).HasColumnName("SalCustGrp_Si");

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalIntrmdCu)
                    .HasColumnName("SalIntrmd_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalIntrmdSi).HasColumnName("SalIntrmd_Si");

                entity.Property(e => e.SalIntrmdTp)
                    .HasColumnName("SalIntrmd_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcSrvDPrcDec)
                    .HasColumnName("SalInvcSrvD_Prc_Dec")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcSrvDPrcDec2).HasColumnName("SalInvcSrvD_Prc_Dec_2");

                entity.Property(e => e.SalInvcSrvDPrcDec3).HasColumnName("SalInvcSrvD_Prc_Dec_3");

                entity.Property(e => e.SalInvcSrvDPrcInc)
                    .HasColumnName("SalInvcSrvD_Prc_Inc")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcSrvDPrcInc2).HasColumnName("SalInvcSrvD_Prc_Inc_2");

                entity.Property(e => e.SalInvcSrvDPrcInc3).HasColumnName("SalInvcSrvD_Prc_Inc_3");

                entity.Property(e => e.SalInvcSrvDQty).HasColumnName("SalInvcSrvD_Qty");

                entity.Property(e => e.SalInvcSrvDRow).HasColumnName("SalInvcSrvD_Row");

                entity.Property(e => e.SalInvcSrvDSi).HasColumnName("SalInvcSrvD_Si");

                entity.Property(e => e.SalInvcSrvDSumPrcDec).HasColumnName("SalInvcSrvD_SumPrc_Dec");

                entity.Property(e => e.SalInvcSrvDSumPrcInc).HasColumnName("SalInvcSrvD_SumPrc_Inc");

                entity.Property(e => e.SalInvcSrvDSumTotal)
                    .HasColumnName("SalInvcSrvD_SumTotal")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcSrvDTotal)
                    .HasColumnName("SalInvcSrvD_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcSrvDTp)
                    .HasColumnName("SalInvcSrvD_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcSrvDUntPrc)
                    .HasColumnName("SalInvcSrvD_UntPrc")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcSrvHAccDoc).HasColumnName("SalInvcSrvH_AccDoc");

                entity.Property(e => e.SalInvcSrvHCancelled).HasColumnName("SalInvcSrvH_Cancelled");

                entity.Property(e => e.SalInvcSrvHCu).HasColumnName("SalInvcSrvH_Cu");

                entity.Property(e => e.SalInvcSrvHDm)
                    .HasColumnName("SalInvcSrvH_Dm")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalInvcSrvHDs)
                    .HasColumnName("SalInvcSrvH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcSrvHPrcDec)
                    .HasColumnName("SalInvcSrvH_Prc_Dec")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcSrvHPrcInc)
                    .HasColumnName("SalInvcSrvH_Prc_Inc")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcSrvHPrcSumTotal)
                    .HasColumnName("SalInvcSrvH_Prc_SumTotal")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcSrvHPrcTotal)
                    .HasColumnName("SalInvcSrvH_Prc_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcSrvHSi).HasColumnName("SalInvcSrvH_Si");

                entity.Property(e => e.SalInvcSrvHStmpCdt)
                    .HasColumnName("SalInvcSrvH_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalInvcSrvHStmpCus)
                    .HasColumnName("SalInvcSrvH_StmpCUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcSrvHStmpMdt)
                    .HasColumnName("SalInvcSrvH_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalInvcSrvHStmpMus)
                    .HasColumnName("SalInvcSrvH_StmpMUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcSrvHTp)
                    .HasColumnName("SalInvcSrvH_Tp")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprCu)
                    .HasColumnName("SalOpr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprDefaultValue).HasColumnName("SalOpr_DefaultValue");

                entity.Property(e => e.SalOprDefaultValue2).HasColumnName("SalOpr_DefaultValue_2");

                entity.Property(e => e.SalOprDefaultValue3).HasColumnName("SalOpr_DefaultValue_3");

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");

                entity.Property(e => e.SalOprSi2).HasColumnName("SalOpr_Si_2");

                entity.Property(e => e.SalOprSi3).HasColumnName("SalOpr_Si_3");

                entity.Property(e => e.SalOprTp)
                    .HasColumnName("SalOpr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTp2)
                    .HasColumnName("SalOpr_Tp_2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTp3)
                    .HasColumnName("SalOpr_Tp_3")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalProvinceSi).HasColumnName("SalProvince_Si");

                entity.Property(e => e.SalSrvAccAccMSi).HasColumnName("SalSrvAcc_AccM_Si");

                entity.Property(e => e.SalSrvAccAccTSi).HasColumnName("SalSrvAcc_AccT_Si");

                entity.Property(e => e.SalSrvCu)
                    .IsRequired()
                    .HasColumnName("SalSrv_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalSrvSi).HasColumnName("SalSrv_Si");

                entity.Property(e => e.SalSrvTp)
                    .HasColumnName("SalSrv_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalSrvUnt)
                    .HasColumnName("SalSrv_Unt")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SalTypCu)
                    .HasColumnName("SalTyp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalTypSi).HasColumnName("SalTyp_Si");

                entity.Property(e => e.SalTypTp)
                    .HasColumnName("SalTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SaloprCu2)
                    .HasColumnName("Salopr_Cu_2")
                    .HasMaxLength(15)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwSalInvcSrvH>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalInvcSrvH");

                entity.Property(e => e.BatchNumberH)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsAddrs)
                    .HasColumnName("CtbAddrs_Addrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsEconamical)
                    .HasColumnName("CtbAddrs_Econamical")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsFax)
                    .HasColumnName("CtbAddrs_Fax")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsNatCode)
                    .HasColumnName("CtbAddrs_NatCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPobox)
                    .HasColumnName("CtbAddrs_POBox")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsTel)
                    .HasColumnName("CtbAddrs_Tel")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsZipcode)
                    .HasColumnName("CtbAddrs_ZIPCode")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchCu)
                    .HasColumnName("SalBrnch_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchSi).HasColumnName("SalBrnch_Si");

                entity.Property(e => e.SalBrnchTp)
                    .HasColumnName("SalBrnch_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCitySi).HasColumnName("SalCity_Si");

                entity.Property(e => e.SalCustAccMSi).HasColumnName("SalCust_AccM_Si");

                entity.Property(e => e.SalCustAccTSi).HasColumnName("SalCust_AccT_Si");

                entity.Property(e => e.SalCustCorporateTyp).HasColumnName("SalCust_CorporateTyp");

                entity.Property(e => e.SalCustCu)
                    .HasColumnName("SalCust_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpSi).HasColumnName("SalCustGrp_Si");

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalDlvrrSi).HasColumnName("SalDlvrr_Si");

                entity.Property(e => e.SalDrvrSi).HasColumnName("SalDrvr_Si");

                entity.Property(e => e.SalIntrmdCu)
                    .HasColumnName("SalIntrmd_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalIntrmdSi).HasColumnName("SalIntrmd_Si");

                entity.Property(e => e.SalIntrmdTp)
                    .HasColumnName("SalIntrmd_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcSrvHAccDoc).HasColumnName("SalInvcSrvH_AccDoc");

                entity.Property(e => e.SalInvcSrvHCancelled).HasColumnName("SalInvcSrvH_Cancelled");

                entity.Property(e => e.SalInvcSrvHCu).HasColumnName("SalInvcSrvH_Cu");

                entity.Property(e => e.SalInvcSrvHCu2).HasColumnName("SalInvcSrvH_Cu2");

                entity.Property(e => e.SalInvcSrvHDm)
                    .HasColumnName("SalInvcSrvH_Dm")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalInvcSrvHDs)
                    .IsRequired()
                    .HasColumnName("SalInvcSrvH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcSrvHLock).HasColumnName("SalInvcSrvH_Lock");

                entity.Property(e => e.SalInvcSrvHPrcDec)
                    .HasColumnName("SalInvcSrvH_Prc_Dec")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcSrvHPrcInc)
                    .HasColumnName("SalInvcSrvH_Prc_Inc")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcSrvHPrcRcvd).HasColumnName("SalInvcSrvH_PrcRcvd");

                entity.Property(e => e.SalInvcSrvHPrcSumTotal)
                    .HasColumnName("SalInvcSrvH_Prc_SumTotal")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcSrvHPrcTotal)
                    .HasColumnName("SalInvcSrvH_Prc_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcSrvHReference)
                    .HasColumnName("SalInvcSrvH_Reference")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcSrvHRfrncTyp).HasColumnName("SalInvcSrvH_RfrncTyp");

                entity.Property(e => e.SalInvcSrvHSi).HasColumnName("SalInvcSrvH_Si");

                entity.Property(e => e.SalInvcSrvHStmpCdt)
                    .HasColumnName("SalInvcSrvH_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalInvcSrvHStmpCus)
                    .HasColumnName("SalInvcSrvH_StmpCUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcSrvHStmpMdt)
                    .HasColumnName("SalInvcSrvH_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalInvcSrvHStmpMus)
                    .HasColumnName("SalInvcSrvH_StmpMUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcSrvHTp)
                    .HasColumnName("SalInvcSrvH_Tp")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SalProvinceSi).HasColumnName("SalProvince_Si");

                entity.Property(e => e.SalRespSi).HasColumnName("SalResp_Si");

                entity.Property(e => e.SalTypCu)
                    .HasColumnName("SalTyp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalTypSi).HasColumnName("SalTyp_Si");

                entity.Property(e => e.SalTypTp)
                    .HasColumnName("SalTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwSalInvcSrvOpr>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalInvcSrvOpr");

                entity.Property(e => e.AccMSi).HasColumnName("AccM_Si");

                entity.Property(e => e.AccTSi).HasColumnName("AccT_Si");

                entity.Property(e => e.SalInvcSrvHAccDoc).HasColumnName("SalInvcSrvH_AccDoc");

                entity.Property(e => e.SalInvcSrvHCu).HasColumnName("SalInvcSrvH_Cu");

                entity.Property(e => e.SalInvcSrvHSi).HasColumnName("SalInvcSrvH_Si");

                entity.Property(e => e.SalInvcSrvHTp)
                    .HasColumnName("SalInvcSrvH_Tp")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcSrvOprAccMSi).HasColumnName("SalInvcSrvOpr_AccM_Si");

                entity.Property(e => e.SalInvcSrvOprAccTSi).HasColumnName("SalInvcSrvOpr_AccT_Si");

                entity.Property(e => e.SalInvcSrvOprCalcValue)
                    .HasColumnName("SalInvcSrvOpr_CalcValue")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcSrvOprSi).HasColumnName("SalInvcSrvOpr_Si");

                entity.Property(e => e.SalInvcSrvOprValue)
                    .HasColumnName("SalInvcSrvOpr_Value")
                    .HasColumnType("money");

                entity.Property(e => e.SalOprAccMSi).HasColumnName("SalOpr_AccM_Si");

                entity.Property(e => e.SalOprAccTSi).HasColumnName("SalOpr_AccT_Si");

                entity.Property(e => e.SalOprActive).HasColumnName("SalOpr_Active");

                entity.Property(e => e.SalOprAutoInsert).HasColumnName("SalOpr_AutoInsert");

                entity.Property(e => e.SalOprCu)
                    .HasColumnName("SalOpr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprDefaultValue).HasColumnName("SalOpr_DefaultValue");

                entity.Property(e => e.SalOprLckPrc).HasColumnName("SalOpr_LckPrc");

                entity.Property(e => e.SalOprNature)
                    .HasColumnName("SalOpr_Nature")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");

                entity.Property(e => e.SalOprSqnc).HasColumnName("SalOpr_Sqnc");

                entity.Property(e => e.SalOprSqncPrn).HasColumnName("SalOpr_SqncPrn");

                entity.Property(e => e.SalOprTp)
                    .HasColumnName("SalOpr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTyp).HasColumnName("SalOpr_Typ");

                entity.Property(e => e.SalOprUse).HasColumnName("SalOpr_Use");

                entity.Property(e => e.SalOprValueTyp).HasColumnName("SalOpr_ValueTyp");
            });

            modelBuilder.Entity<VwSalMatrixReport>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalMatrixReport");

                entity.Property(e => e.آدرس)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.استان)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.اضافات2).HasColumnName("اضافات 2");

                entity.Property(e => e.اضافات3).HasColumnName("اضافات 3");

                entity.Property(e => e.ايجادکننده)
                    .HasColumnName("ايجاد کننده")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.بدهکار).HasColumnType("money");

                entity.Property(e => e.تاريخفاکتور)
                    .IsRequired()
                    .HasColumnName("تاريخ فاکتور")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.تاریخانقضایمیلادی)
                    .HasColumnName("تاریخ انقضای میلادی")
                    .HasColumnType("datetime");

                entity.Property(e => e.تلفن)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.توضیحات)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.جمع).HasColumnType("money");

                entity.Property(e => e.جمعاضافات).HasColumnName("جمع اضافات");

                entity.Property(e => e.جمعاضافاتفاکتور)
                    .HasColumnName("جمع اضافات فاکتور")
                    .HasColumnType("money");

                entity.Property(e => e.جمعميلغفاکتور)
                    .HasColumnName("جمع ميلغ فاکتور")
                    .HasColumnType("money");

                entity.Property(e => e.جمعکسورات).HasColumnName("جمع کسورات");

                entity.Property(e => e.جمعکلردیف)
                    .HasColumnName("جمع کل ردیف")
                    .HasColumnType("money");

                entity.Property(e => e.جمعکلفاکتور)
                    .HasColumnName("جمع کل فاکتور")
                    .HasColumnType("money");

                entity.Property(e => e.روز)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.سال)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.شرحعاملرديفي1)
                    .HasColumnName("شرح عامل رديفي 1")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.شرحعاملرديفي2)
                    .HasColumnName("شرح عامل رديفي 2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.شرحفاکتور)
                    .HasColumnName("شرح فاکتور")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.شرحلاتینکالا)
                    .HasColumnName("شرح لاتین کالا")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.شرحکالا)
                    .HasColumnName("شرح کالا")
                    .HasMaxLength(4000);

                entity.Property(e => e.شمارهفاکتور).HasColumnName("شماره فاکتور");

                entity.Property(e => e.شمارهفرعی).HasColumnName("شماره فرعی");

                entity.Property(e => e.شمارهفنی)
                    .HasColumnName("شماره فنی")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.شمارهپیشفاکتور).HasColumnName("شماره پیش فاکتور");

                entity.Property(e => e.شهرستان)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.عاملرديفي3)
                    .HasColumnName("عامل رديفي 3")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.عنوانواحدسنجش)
                    .HasColumnName("عنوان واحد سنجش")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.فاکتورجمعکسورات)
                    .HasColumnName("فاکتور جمع کسورات")
                    .HasColumnType("money");

                entity.Property(e => e.قیمتواحد)
                    .HasColumnName("قیمت واحد")
                    .HasColumnType("money");

                entity.Property(e => e.كسورات3).HasColumnName("كسورات 3");

                entity.Property(e => e.ماه)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.مبلغارز).HasColumnName("مبلغ ارز");

                entity.Property(e => e.مبلغعاملرديفي1).HasColumnName("مبلغ عامل رديفي 1");

                entity.Property(e => e.مبلغعاملرديفي2).HasColumnName("مبلغ عامل رديفي 2");

                entity.Property(e => e.مبلغنهاييارز).HasColumnName("مبلغ نهايي ارز");

                entity.Property(e => e.مقدار).HasColumnType("money");

                entity.Property(e => e.مقدارعامل3).HasColumnName("مقدار عامل 3");

                entity.Property(e => e.نامانبار)
                    .HasColumnName("نام انبار")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نامشهر)
                    .HasColumnName("نام شهر")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.ناممرکزفروش)
                    .HasColumnName("نام مرکز فروش")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ناممشتري)
                    .HasColumnName("نام مشتري")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.نامويزيتور)
                    .HasColumnName("نام ويزيتور")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نوعارز)
                    .HasColumnName("نوع ارز")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.کداقتصادی)
                    .HasColumnName("کد اقتصادی")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.کدانبار)
                    .HasColumnName("کد انبار")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کدرهگیریردیف)
                    .HasColumnName("کد رهگیری ردیف")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.کدرهگیریسند)
                    .HasColumnName("کد رهگیری سند")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.کدمرکز)
                    .HasColumnName("کد مرکز")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کدمشتري)
                    .HasColumnName("کد مشتري")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.کدملی)
                    .HasColumnName("کد ملی")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.کدواحد)
                    .HasColumnName("کد واحد")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کدپستی)
                    .HasColumnName("کد پستی")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.کدکالا)
                    .HasColumnName("کد کالا")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.کدگروهمشتری)
                    .HasColumnName("کد گروه مشتری")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کسورات2).HasColumnName("کسورات 2");

                entity.Property(e => e.گروهمشتری)
                    .HasColumnName("گروه مشتری")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwSalMtrxsalPursue>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalMtrxsal_pursue");

                entity.Property(e => e.SalCustPursuit).HasColumnName("SalCust_pursuit");

                entity.Property(e => e.SalCustPursuitTp)
                    .HasColumnName("SalCust_pursuitTP")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalcustEnterduced)
                    .HasColumnName("Salcust_Enterduced")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.آدرس)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.اشخاصمعروف)
                    .HasColumnName("اشخاص معروف")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ايميل)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.تابلويتبليغاتي).HasColumnName("تابلوي تبليغاتي");

                entity.Property(e => e.تاريخآخرينپيگيري)
                    .HasColumnName("تاريخ آخرين پيگيري")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.تاريخثبت)
                    .HasColumnName("تاريخ ثبت")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.تاريخورودپيگيري)
                    .HasColumnName("تاريخ ورود پيگيري")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.تاريخويرايش)
                    .HasColumnName("تاريخ ويرايش")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.تاريخپيگيري)
                    .HasColumnName("تاريخ پيگيري")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.تلفن)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.توضيحات).HasMaxLength(4000);

                entity.Property(e => e.دستهبندي).HasColumnName("دسته بندي");

                entity.Property(e => e.رابط)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.سمت)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.شرح)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.شرحپيگيري)
                    .HasColumnName("شرح پيگيري")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.شمارهحساب)
                    .HasColumnName("شماره حساب")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.شمارهپروانهكسب)
                    .HasColumnName("شماره پروانه كسب")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.علتتغيير)
                    .HasColumnName("علت تغيير")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.فكس)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.كاربرثبتكننده)
                    .HasColumnName("كاربر ثبت كننده")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.كاربرويرايشكننده)
                    .HasColumnName("كاربر ويرايش كننده")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.كداقتصادي)
                    .HasColumnName("كد اقتصادي")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.كدتفضيلي)
                    .HasColumnName("كد تفضيلي")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.كدحساب)
                    .HasColumnName("كد حساب")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.كدشعبه)
                    .HasColumnName("كد شعبه")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.كدمشتري)
                    .HasColumnName("كد مشتري")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.كدمعين)
                    .HasColumnName("كد معين")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.كدملي)
                    .HasColumnName("كد ملي")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.كدواسطفروش)
                    .HasColumnName("كد واسط فروش")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.كدپستي)
                    .HasColumnName("كد پستي")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.كدگروهمشتري)
                    .HasColumnName("كد گروه مشتري")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.مالكيت)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.محصولكنوني)
                    .HasColumnName("محصول كنوني")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.مشخصاتتابلو)
                    .HasColumnName("مشخصات تابلو")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.موبايل)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.مودم)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ناماستان)
                    .HasColumnName("نام استان")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.نامبانك)
                    .HasColumnName("نام بانك")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نامتفضيلي)
                    .HasColumnName("نام تفضيلي")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.نامشعبه)
                    .HasColumnName("نام شعبه")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نامشهر)
                    .HasColumnName("نام شهر")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.نامشهرستان)
                    .HasColumnName("نام شهرستان")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.نامفايل)
                    .HasColumnName("نام فايل")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نامكاربرثبتكننده)
                    .HasColumnName("نام كاربر ثبت كننده")
                    .HasMaxLength(50);

                entity.Property(e => e.ناممسيرفروش)
                    .HasColumnName("نام مسير فروش")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ناممشتري)
                    .HasColumnName("نام مشتري")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ناممعين)
                    .HasColumnName("نام معين")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ناممنطقهفروش)
                    .HasColumnName("نام منطقه فروش")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نامواسطفروش)
                    .HasColumnName("نام واسط فروش")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نامگروهمشتري)
                    .HasColumnName("نام گروه مشتري")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نوعشخصيت).HasColumnName("نوع شخصيت");

                entity.Property(e => e.نوعفروش)
                    .HasColumnName("نوع فروش")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نوعفعاليت)
                    .HasColumnName("نوع فعاليت")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.پيشبينيفروش)
                    .HasColumnName("پيش بيني فروش")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwSalOprUser>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalOprUser");

                entity.Property(e => e.AccMSi).HasColumnName("AccM_Si");

                entity.Property(e => e.AccTSi).HasColumnName("AccT_Si");

                entity.Property(e => e.SalOprActive).HasColumnName("SalOpr_Active");

                entity.Property(e => e.SalOprAutoInsert).HasColumnName("SalOpr_AutoInsert");

                entity.Property(e => e.SalOprCu)
                    .IsRequired()
                    .HasColumnName("SalOpr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprDefaultValue)
                    .HasColumnName("SalOpr_DefaultValue")
                    .HasColumnType("money");

                entity.Property(e => e.SalOprLckPrc).HasColumnName("SalOpr_LckPrc");

                entity.Property(e => e.SalOprNature)
                    .IsRequired()
                    .HasColumnName("SalOpr_Nature")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SalOprProject).HasColumnName("SalOpr_Project");

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");

                entity.Property(e => e.SalOprSqnc).HasColumnName("SalOpr_Sqnc");

                entity.Property(e => e.SalOprSqncPrn).HasColumnName("SalOpr_SqncPrn");

                entity.Property(e => e.SalOprTp)
                    .HasColumnName("SalOpr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTyp).HasColumnName("SalOpr_Typ");

                entity.Property(e => e.SalOprUse).HasColumnName("SalOpr_Use");

                entity.Property(e => e.SalOprValueTyp).HasColumnName("SalOpr_ValueTyp");
            });

            modelBuilder.Entity<VwSalPreInvcD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalPreInvcD");

                entity.Property(e => e.BatchNumberD)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BatchNumberH)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsAddrs)
                    .HasColumnName("CtbAddrs_Addrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsCity)
                    .HasColumnName("CtbAddrs_City")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsDefault).HasColumnName("CtbAddrs_Default");

                entity.Property(e => e.CtbAddrsEconamical)
                    .HasColumnName("CtbAddrs_Econamical")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsEmail)
                    .HasColumnName("CtbAddrs_Email")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsFax)
                    .HasColumnName("CtbAddrs_Fax")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsMobile)
                    .HasColumnName("CtbAddrs_Mobile")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsModem)
                    .HasColumnName("CtbAddrs_Modem")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsNatCode)
                    .HasColumnName("CtbAddrs_NatCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsOstan)
                    .HasColumnName("CtbAddrs_Ostan")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPobox)
                    .HasColumnName("CtbAddrs_POBox")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsShahrestan)
                    .HasColumnName("CtbAddrs_Shahrestan")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsTel)
                    .HasColumnName("CtbAddrs_Tel")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsZipcode)
                    .HasColumnName("CtbAddrs_ZIPCode")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.CtbCurncyTp)
                    .HasColumnName("CtbCurncy_Tp")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbPrpVluValue)
                    .HasColumnName("CtbPrpVlu_Value")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CuAcc)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.DescDriver)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvBatchNumberCode)
                    .HasColumnName("InvBatchNumber_Code")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHAccMSi).HasColumnName("InvDocH_AccM_Si");

                entity.Property(e => e.InvDocHCu).HasColumnName("InvDocH_Cu");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsGrpSi).HasColumnName("InvGdsGrp_Si");

                entity.Property(e => e.InvGdsIcntryCu)
                    .HasColumnName("InvGdsICntry_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsIcntryTp)
                    .HasColumnName("InvGdsICntry_Tp")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTechNo)
                    .HasColumnName("InvGds_TechNo")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsToInvQtyMax).HasColumnName("InvGdsToInv_QtyMax");

                entity.Property(e => e.InvGdsToInvQtyMin).HasColumnName("InvGdsToInv_QtyMin");

                entity.Property(e => e.InvGdsToInvQtyReal).HasColumnName("InvGdsToInv_QtyReal");

                entity.Property(e => e.InvGdsToInvShelf)
                    .HasColumnName("InvGdsToInv_Shelf")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvGdsTypSi).HasColumnName("InvGdsTyp_Si");

                entity.Property(e => e.InvGdsTypTp)
                    .HasColumnName("InvGdsTyp_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtCu)
                    .HasColumnName("InvInvt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntCu)
                    .HasColumnName("InvUnt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntCu2)
                    .HasColumnName("InvUnt_Cu2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntTp2)
                    .HasColumnName("InvUnt_Tp2")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchCu)
                    .HasColumnName("SalBrnch_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchSi).HasColumnName("SalBrnch_Si");

                entity.Property(e => e.SalBrnchTp)
                    .HasColumnName("SalBrnch_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustCu)
                    .HasColumnName("SalCust_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpCu)
                    .HasColumnName("SalCustGrp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpSi).HasColumnName("SalCustGrp_Si");

                entity.Property(e => e.SalCustGrpTp)
                    .HasColumnName("SalCustGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalDivisionSi).HasColumnName("SalDivision_Si");

                entity.Property(e => e.SalDivisionTp)
                    .HasColumnName("SalDivision_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalDlvrrSi).HasColumnName("SalDlvrr_Si");

                entity.Property(e => e.SalDlvrrTp)
                    .HasColumnName("SalDlvrr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalDriverTp)
                    .HasColumnName("SalDriver_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalDrvrSi).HasColumnName("SalDrvr_Si");

                entity.Property(e => e.SalDrvrTp)
                    .HasColumnName("SalDrvr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalIntrmdCu)
                    .HasColumnName("SalIntrmd_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalIntrmdSi).HasColumnName("SalIntrmd_Si");

                entity.Property(e => e.SalIntrmdTp)
                    .HasColumnName("SalIntrmd_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHSi).HasColumnName("SalInvcH_Si");

                entity.Property(e => e.SalOprDefaultValue).HasColumnName("SalOpr_DefaultValue");

                entity.Property(e => e.SalOprDefaultValue2).HasColumnName("SalOpr_DefaultValue_2");

                entity.Property(e => e.SalOprDefaultValue3).HasColumnName("SalOpr_DefaultValue_3");

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");

                entity.Property(e => e.SalOprSi2).HasColumnName("SalOpr_Si_2");

                entity.Property(e => e.SalOprSi3).HasColumnName("SalOpr_Si_3");

                entity.Property(e => e.SalOprTp)
                    .HasColumnName("SalOpr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTp2)
                    .HasColumnName("SalOpr_Tp_2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTp3)
                    .HasColumnName("SalOpr_Tp_3")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvCdSumTotal)
                    .HasColumnName("SalPreInvCd_SumTotal")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcDExpiredate)
                    .HasColumnName("SalPreInvcD_Expiredate")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalPreInvcDGiftOk).HasColumnName("SalPreInvcD_GiftOk");

                entity.Property(e => e.SalPreInvcDPrcDec2)
                    .HasColumnName("SalPreInvcD_Prc_Dec_2")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcDPrcDec3).HasColumnName("SalPreInvcD_Prc_Dec_3");

                entity.Property(e => e.SalPreInvcDQty).HasColumnName("SalPreInvcD_Qty");

                entity.Property(e => e.SalPreInvcDQty2).HasColumnName("SalPreInvcD_Qty2");

                entity.Property(e => e.SalPreInvcDQty3).HasColumnName("SalPreInvcD_Qty3");

                entity.Property(e => e.SalPreInvcDRow).HasColumnName("SalPreInvcD_Row");

                entity.Property(e => e.SalPreInvcDSi).HasColumnName("SalPreInvcD_Si");

                entity.Property(e => e.SalPreInvcDSumPrcDec).HasColumnName("SalPreInvcD_SumPrc_Dec");

                entity.Property(e => e.SalPreInvcDSumPrcInc).HasColumnName("SalPreInvcD_SumPrc_Inc");

                entity.Property(e => e.SalPreInvcDTotal)
                    .HasColumnName("SalPreInvcD_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcDTotalC).HasColumnName("SalPreInvcD_TotalC");

                entity.Property(e => e.SalPreInvcDTp)
                    .HasColumnName("SalPreInvcD_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcDUntPrc)
                    .HasColumnName("SalPreInvcD_UntPrc")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcDUntPrcC).HasColumnName("SalPreInvcD_UntPrcC");

                entity.Property(e => e.SalPreInvcHBarNo)
                    .HasColumnName("SalPreInvcH_BarNo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcHCu).HasColumnName("SalPreInvcH_Cu");

                entity.Property(e => e.SalPreInvcHCu2).HasColumnName("SalPreInvcH_Cu2");

                entity.Property(e => e.SalPreInvcHDlvLoc)
                    .HasColumnName("SalPreInvcH_DlvLoc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcHDm)
                    .HasColumnName("SalPreInvcH_Dm")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalPreInvcHDs)
                    .HasColumnName("SalPreInvcH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcHExprDate)
                    .HasColumnName("SalPreInvcH_ExprDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcHExprTime).HasColumnName("SalPreInvcH_ExprTime");

                entity.Property(e => e.SalPreInvcHGood)
                    .HasColumnName("SalPreInvcH_Good")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcHLock).HasColumnName("SalPreInvcH_Lock");

                entity.Property(e => e.SalPreInvcHPrcDec)
                    .HasColumnName("SalPreInvcH_Prc_Dec")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcHPrcInc)
                    .HasColumnName("SalPreInvcH_Prc_Inc")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcHPrcSumTotal)
                    .HasColumnName("SalPreInvcH_Prc_SumTotal")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcHPrcTotal)
                    .HasColumnName("SalPreInvcH_Prc_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcHRcvMthd)
                    .HasColumnName("SalPreInvcH_RcvMthd")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcHReference)
                    .HasColumnName("SalPreInvcH_Reference")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcHRfrncTyp).HasColumnName("SalPreInvcH_RfrncTyp");

                entity.Property(e => e.SalPreInvcHSi).HasColumnName("SalPreInvcH_Si");

                entity.Property(e => e.SalPreInvcHStatus).HasColumnName("SalPreInvcH_Status");

                entity.Property(e => e.SalPreInvcHStmpCdt)
                    .HasColumnName("SalPreInvcH_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalPreInvcHStmpCus)
                    .HasColumnName("SalPreInvcH_StmpCUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcHStmpMdt)
                    .HasColumnName("SalPreInvcH_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalPreInvcHStmpMus)
                    .HasColumnName("SalPreInvcH_StmpMUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcHStmpTime)
                    .HasColumnName("SalPreInvcH_StmpTime")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcHStmpTimeEdit)
                    .HasColumnName("SalPreInvcH_StmpTimeEdit")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcHTp)
                    .HasColumnName("SalPreInvcH_Tp")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SalRegionPathSi).HasColumnName("SalRegionPath_Si");

                entity.Property(e => e.SalRegionPathTp)
                    .HasColumnName("SalRegionPath_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRegionSi).HasColumnName("SalRegion_Si");

                entity.Property(e => e.SalRegionTp)
                    .HasColumnName("SalRegion_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRespSi).HasColumnName("SalResp_Si");

                entity.Property(e => e.SalRespTp)
                    .HasColumnName("SalResp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalTypCu)
                    .HasColumnName("SalTyp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalTypSi).HasColumnName("SalTyp_Si");

                entity.Property(e => e.SalTypTp)
                    .HasColumnName("SalTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalinvcHCu).HasColumnName("SalinvcH_Cu");

                entity.Property(e => e.SalpreInvcDPrcDec)
                    .HasColumnName("SalpreInvcD_Prc_Dec")
                    .HasColumnType("money");

                entity.Property(e => e.SalpreInvcDPrcInc)
                    .HasColumnName("SalpreInvcD_Prc_Inc")
                    .HasColumnType("money");

                entity.Property(e => e.SalpreInvcDPrcInc2)
                    .HasColumnName("SalpreInvcD_Prc_Inc_2")
                    .HasColumnType("money");

                entity.Property(e => e.SalpreInvcDPrcInc3).HasColumnName("SalpreInvcD_Prc_Inc_3");

                entity.Property(e => e.SalpreInvcHIno).HasColumnName("SalpreInvcH_INO");

                entity.Property(e => e.SalpreInvcHRunNum).HasColumnName("SalpreInvcH_RunNum");

                entity.Property(e => e.SalpreInvcHRunNumAccept).HasColumnName("SalpreInvcH_RunNumAccept");

                entity.Property(e => e.SalpreinvchSndInv).HasColumnName("Salpreinvch_SndInv");

                entity.Property(e => e.SalvarietyCu)
                    .HasColumnName("Salvariety_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalvarietyTp)
                    .HasColumnName("Salvariety_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.TpAcc)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpProject)
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwSalPreInvcH>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalPreInvcH");

                entity.Property(e => e.AddrsSecondary)
                    .HasColumnName("Addrs_Secondary")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.BatchNumberH)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsAddrs)
                    .HasColumnName("CtbAddrs_Addrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsCity)
                    .HasColumnName("CtbAddrs_City")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsDefault).HasColumnName("CtbAddrs_Default");

                entity.Property(e => e.CtbAddrsEconamical)
                    .HasColumnName("CtbAddrs_Econamical")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsEmail)
                    .HasColumnName("CtbAddrs_Email")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsFax)
                    .HasColumnName("CtbAddrs_Fax")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsMobile)
                    .HasColumnName("CtbAddrs_Mobile")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsModem)
                    .HasColumnName("CtbAddrs_Modem")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsNatCode)
                    .HasColumnName("CtbAddrs_NatCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsOstan)
                    .HasColumnName("CtbAddrs_Ostan")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPobox)
                    .HasColumnName("CtbAddrs_POBox")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsShahrestan)
                    .HasColumnName("CtbAddrs_Shahrestan")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsTel)
                    .HasColumnName("CtbAddrs_Tel")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsZipcode)
                    .HasColumnName("CtbAddrs_ZIPCode")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CuAcc)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.DescDriver)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvDocHAccMSi).HasColumnName("InvDocH_AccM_Si");

                entity.Property(e => e.InvDocHCu).HasColumnName("InvDocH_Cu");

                entity.Property(e => e.InvInvtCu)
                    .HasColumnName("InvInvt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchCu)
                    .HasColumnName("SalBrnch_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchSi).HasColumnName("SalBrnch_Si");

                entity.Property(e => e.SalBrnchTp)
                    .HasColumnName("SalBrnch_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustCu)
                    .HasColumnName("SalCust_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpCu)
                    .HasColumnName("SalCustGrp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpSi).HasColumnName("SalCustGrp_Si");

                entity.Property(e => e.SalCustGrpTp)
                    .HasColumnName("SalCustGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalDivisionSi).HasColumnName("SalDivision_Si");

                entity.Property(e => e.SalDivisionTp)
                    .HasColumnName("SalDivision_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalDlvrrSi).HasColumnName("SalDlvrr_Si");

                entity.Property(e => e.SalDlvrrTp)
                    .HasColumnName("SalDlvrr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalDriverSi).HasColumnName("SalDriver_Si");

                entity.Property(e => e.SalDriverTp)
                    .HasColumnName("SalDriver_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalDrvrSi).HasColumnName("SalDrvr_Si");

                entity.Property(e => e.SalDrvrTp)
                    .HasColumnName("SalDrvr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalExportPrmHPrcSumtotalC)
                    .HasColumnName("SalExportPrmH_Prc_SumtotalC")
                    .HasColumnType("money");

                entity.Property(e => e.SalIntrmdCu)
                    .HasColumnName("SalIntrmd_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalIntrmdSi).HasColumnName("SalIntrmd_Si");

                entity.Property(e => e.SalIntrmdTp)
                    .HasColumnName("SalIntrmd_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHSi).HasColumnName("SalInvcH_Si");

                entity.Property(e => e.SalPreInvcHBarNo)
                    .HasColumnName("SalPreInvcH_BarNo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcHCu).HasColumnName("SalPreInvcH_Cu");

                entity.Property(e => e.SalPreInvcHCu2).HasColumnName("SalPreInvcH_Cu2");

                entity.Property(e => e.SalPreInvcHDlvLoc)
                    .HasColumnName("SalPreInvcH_DlvLoc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcHDm)
                    .HasColumnName("SalPreInvcH_Dm")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalPreInvcHDs)
                    .IsRequired()
                    .HasColumnName("SalPreInvcH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcHExprDate)
                    .HasColumnName("SalPreInvcH_ExprDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcHExprTime).HasColumnName("SalPreInvcH_ExprTime");

                entity.Property(e => e.SalPreInvcHGood)
                    .HasColumnName("SalPreInvcH_Good")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcHGoodSi).HasColumnName("SalPreInvcH_Good_Si");

                entity.Property(e => e.SalPreInvcHLock).HasColumnName("SalPreInvcH_Lock");

                entity.Property(e => e.SalPreInvcHPrcDec)
                    .HasColumnName("SalPreInvcH_Prc_Dec")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcHPrcInc)
                    .HasColumnName("SalPreInvcH_Prc_Inc")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcHPrcSumQty).HasColumnName("SalPreInvcH_Prc_SumQty");

                entity.Property(e => e.SalPreInvcHPrcSumTotal)
                    .HasColumnName("SalPreInvcH_Prc_SumTotal")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcHPrcSumTotalC)
                    .HasColumnName("SalPreInvcH_Prc_SumTotalC")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcHPrcTotal)
                    .HasColumnName("SalPreInvcH_Prc_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcHRcvMthd)
                    .HasColumnName("SalPreInvcH_RcvMthd")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcHReference)
                    .HasColumnName("SalPreInvcH_Reference")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcHRfrncTyp).HasColumnName("SalPreInvcH_RfrncTyp");

                entity.Property(e => e.SalPreInvcHSi).HasColumnName("SalPreInvcH_Si");

                entity.Property(e => e.SalPreInvcHStatus).HasColumnName("SalPreInvcH_Status");

                entity.Property(e => e.SalPreInvcHStmpCdt)
                    .HasColumnName("SalPreInvcH_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalPreInvcHStmpCus)
                    .HasColumnName("SalPreInvcH_StmpCUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcHStmpMdt)
                    .HasColumnName("SalPreInvcH_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalPreInvcHStmpMus)
                    .HasColumnName("SalPreInvcH_StmpMUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcHStmpTime)
                    .HasColumnName("SalPreInvcH_StmpTime")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcHStmpTimeEdit)
                    .HasColumnName("SalPreInvcH_StmpTimeEdit")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcHTp)
                    .HasColumnName("SalPreInvcH_Tp")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SalRegionPathSi).HasColumnName("SalRegionPath_Si");

                entity.Property(e => e.SalRegionPathTp)
                    .HasColumnName("SalRegionPath_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRegionSi).HasColumnName("SalRegion_Si");

                entity.Property(e => e.SalRegionTp)
                    .HasColumnName("SalRegion_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRespSi).HasColumnName("SalResp_Si");

                entity.Property(e => e.SalRespTp)
                    .HasColumnName("SalResp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalTypCu)
                    .HasColumnName("SalTyp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalTypSi).HasColumnName("SalTyp_Si");

                entity.Property(e => e.SalTypTp)
                    .HasColumnName("SalTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalpreInvcHIno).HasColumnName("SalpreInvcH_INO");

                entity.Property(e => e.SalpreInvcHRunNum).HasColumnName("SalpreInvcH_RunNum");

                entity.Property(e => e.SalpreInvcHRunNumAccept).HasColumnName("SalpreInvcH_RunNumAccept");

                entity.Property(e => e.SalpreinvchSndInv).HasColumnName("Salpreinvch_SndInv");

                entity.Property(e => e.SalvarietyCu)
                    .HasColumnName("Salvariety_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalvarietySi).HasColumnName("Salvariety_Si");

                entity.Property(e => e.SalvarietyTp)
                    .HasColumnName("Salvariety_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.TpAcc)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpProject)
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwSalPreInvcOpr>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalPreInvcOpr");

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalOprActive).HasColumnName("SalOpr_Active");

                entity.Property(e => e.SalOprAutoInsert).HasColumnName("SalOpr_AutoInsert");

                entity.Property(e => e.SalOprCu)
                    .HasColumnName("SalOpr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprDefaultValue).HasColumnName("SalOpr_DefaultValue");

                entity.Property(e => e.SalOprLckPrc).HasColumnName("SalOpr_LckPrc");

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");

                entity.Property(e => e.SalOprSqnc).HasColumnName("SalOpr_Sqnc");

                entity.Property(e => e.SalOprSqncPrn).HasColumnName("SalOpr_SqncPrn");

                entity.Property(e => e.SalOprTp)
                    .HasColumnName("SalOpr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTyp).HasColumnName("SalOpr_Typ");

                entity.Property(e => e.SalOprUse).HasColumnName("SalOpr_Use");

                entity.Property(e => e.SalOprValueTyp).HasColumnName("SalOpr_ValueTyp");

                entity.Property(e => e.SalPreInvcHCu).HasColumnName("SalPreInvcH_Cu");

                entity.Property(e => e.SalPreInvcHDs)
                    .HasColumnName("SalPreInvcH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcHSi).HasColumnName("SalPreInvcH_Si");

                entity.Property(e => e.SalPreInvcOprCalcValue)
                    .HasColumnName("SalPreInvcOpr_CalcValue")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcOprSi).HasColumnName("SalPreInvcOpr_Si");

                entity.Property(e => e.SalPreInvcOprValue)
                    .HasColumnName("SalPreInvcOpr_Value")
                    .HasColumnType("money");

                entity.Property(e => e.SalTypSi).HasColumnName("SalTyp_Si");
            });

            modelBuilder.Entity<VwSalPreInvcSrvD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalPreInvcSrvD");

                entity.Property(e => e.BatchNumberD)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BatchNumberH)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsAddrs)
                    .HasColumnName("CtbAddrs_Addrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsEconamical)
                    .HasColumnName("CtbAddrs_Econamical")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsFax)
                    .HasColumnName("CtbAddrs_Fax")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPobox)
                    .HasColumnName("CtbAddrs_POBox")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsTel)
                    .HasColumnName("CtbAddrs_Tel")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsZipcode)
                    .HasColumnName("CtbAddrs_ZIPCode")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.SalBrnchCu)
                    .HasColumnName("SalBrnch_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchSi).HasColumnName("SalBrnch_Si");

                entity.Property(e => e.SalBrnchTp)
                    .HasColumnName("SalBrnch_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustCu)
                    .HasColumnName("SalCust_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalDlvrrSi).HasColumnName("SalDlvrr_Si");

                entity.Property(e => e.SalDlvrrTp)
                    .HasColumnName("SalDlvrr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalDrvrSi).HasColumnName("SalDrvr_Si");

                entity.Property(e => e.SalDrvrTp)
                    .HasColumnName("SalDrvr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalIntrmdCu)
                    .HasColumnName("SalIntrmd_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalIntrmdSi).HasColumnName("SalIntrmd_Si");

                entity.Property(e => e.SalIntrmdTp)
                    .HasColumnName("SalIntrmd_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcSrvHSi).HasColumnName("SalInvcSrvH_Si");

                entity.Property(e => e.SalOprDec).HasColumnType("money");

                entity.Property(e => e.SalOprDefaultValue).HasColumnName("SalOpr_DefaultValue");

                entity.Property(e => e.SalOprDefaultValue2).HasColumnName("SalOpr_DefaultValue_2");

                entity.Property(e => e.SalOprDefaultValue3).HasColumnName("SalOpr_DefaultValue_3");

                entity.Property(e => e.SalOprInc).HasColumnType("money");

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");

                entity.Property(e => e.SalOprSi2).HasColumnName("SalOpr_Si_2");

                entity.Property(e => e.SalOprSi3).HasColumnName("SalOpr_Si_3");

                entity.Property(e => e.SalOprTp)
                    .HasColumnName("SalOpr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTp2)
                    .HasColumnName("SalOpr_Tp_2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTp3)
                    .HasColumnName("SalOpr_Tp_3")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcSrvDPrcDec)
                    .HasColumnName("SalPreInvcSrvD_Prc_Dec")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcSrvDPrcDec2)
                    .HasColumnName("SalPreInvcSrvD_Prc_Dec_2")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcSrvDPrcDec3)
                    .HasColumnName("SalPreInvcSrvD_Prc_Dec_3")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcSrvDPrcInc)
                    .HasColumnName("SalPreInvcSrvD_Prc_Inc")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcSrvDPrcInc2)
                    .HasColumnName("SalPreInvcSrvD_Prc_Inc_2")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcSrvDPrcInc3)
                    .HasColumnName("SalPreInvcSrvD_Prc_Inc_3")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcSrvDQty).HasColumnName("SalPreInvcSrvD_Qty");

                entity.Property(e => e.SalPreInvcSrvDRow).HasColumnName("SalPreInvcSrvD_Row");

                entity.Property(e => e.SalPreInvcSrvDSi).HasColumnName("SalPreInvcSrvD_Si");

                entity.Property(e => e.SalPreInvcSrvDSumPrcDec)
                    .HasColumnName("SalPreInvcSrvD_SumPrc_Dec")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcSrvDSumPrcInc)
                    .HasColumnName("SalPreInvcSrvD_SumPrc_Inc")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcSrvDSumTotal)
                    .HasColumnName("SalPreInvcSrvD_SumTotal")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcSrvDTotal)
                    .HasColumnName("SalPreInvcSrvD_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcSrvDTp)
                    .HasColumnName("SalPreInvcSrvD_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcSrvDUntPrc)
                    .HasColumnName("SalPreInvcSrvD_UntPrc")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcSrvHCu).HasColumnName("SalPreInvcSrvH_Cu");

                entity.Property(e => e.SalPreInvcSrvHDlvLoc)
                    .HasColumnName("SalPreInvcSrvH_DlvLoc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcSrvHDm)
                    .HasColumnName("SalPreInvcSrvH_Dm")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalPreInvcSrvHDs)
                    .IsRequired()
                    .HasColumnName("SalPreInvcSrvH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcSrvHExprDate)
                    .HasColumnName("SalPreInvcSrvH_ExprDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcSrvHExprTime).HasColumnName("SalPreInvcSrvH_ExprTime");

                entity.Property(e => e.SalPreInvcSrvHPrcDec)
                    .HasColumnName("SalPreInvcSrvH_Prc_Dec")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcSrvHPrcInc)
                    .HasColumnName("SalPreInvcSrvH_Prc_Inc")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcSrvHPrcSumTotal)
                    .HasColumnName("SalPreInvcSrvH_Prc_SumTotal")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcSrvHPrcTotal)
                    .HasColumnName("SalPreInvcSrvH_Prc_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcSrvHRcvMthd)
                    .HasColumnName("SalPreInvcSrvH_RcvMthd")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcSrvHReference)
                    .HasColumnName("SalPreInvcSrvH_Reference")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcSrvHRfrncTyp).HasColumnName("SalPreInvcSrvH_RfrncTyp");

                entity.Property(e => e.SalPreInvcSrvHSi).HasColumnName("SalPreInvcSrvH_Si");

                entity.Property(e => e.SalPreInvcSrvHStatus).HasColumnName("SalPreInvcSrvH_Status");

                entity.Property(e => e.SalPreInvcSrvHStmpCdt)
                    .HasColumnName("SalPreInvcSrvH_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalPreInvcSrvHStmpCus)
                    .HasColumnName("SalPreInvcSrvH_StmpCUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcSrvHStmpMdt)
                    .HasColumnName("SalPreInvcSrvH_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalPreInvcSrvHStmpMus)
                    .HasColumnName("SalPreInvcSrvH_StmpMUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcSrvHTp)
                    .HasColumnName("SalPreInvcSrvH_Tp")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SalPrint1).HasColumnName("SalPRINT_1");

                entity.Property(e => e.SalRespSi).HasColumnName("SalResp_Si");

                entity.Property(e => e.SalRespTp)
                    .HasColumnName("SalResp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalSrvCu)
                    .HasColumnName("SalSrv_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalSrvSi).HasColumnName("SalSrv_Si");

                entity.Property(e => e.SalSrvTp)
                    .HasColumnName("SalSrv_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalSrvUnt)
                    .HasColumnName("SalSrv_Unt")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SalTypCu)
                    .HasColumnName("SalTyp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalTypSi).HasColumnName("SalTyp_Si");

                entity.Property(e => e.SalTypTp)
                    .HasColumnName("SalTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwSalPreInvcSrvH>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalPreInvcSrvH");

                entity.Property(e => e.BatchNumberH)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsAddrs)
                    .HasColumnName("CtbAddrs_Addrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsDefault).HasColumnName("CtbAddrs_Default");

                entity.Property(e => e.CtbAddrsEconamical)
                    .HasColumnName("CtbAddrs_Econamical")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsFax)
                    .HasColumnName("CtbAddrs_Fax")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPobox)
                    .HasColumnName("CtbAddrs_POBox")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsTel)
                    .HasColumnName("CtbAddrs_Tel")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsZipcode)
                    .HasColumnName("CtbAddrs_ZIPCode")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchCu)
                    .HasColumnName("SalBrnch_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchSi).HasColumnName("SalBrnch_Si");

                entity.Property(e => e.SalBrnchTp)
                    .HasColumnName("SalBrnch_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustCu)
                    .HasColumnName("SalCust_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalDlvrrSi).HasColumnName("SalDlvrr_Si");

                entity.Property(e => e.SalDlvrrTp)
                    .HasColumnName("SalDlvrr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalDrvrSi).HasColumnName("SalDrvr_Si");

                entity.Property(e => e.SalDrvrTp)
                    .HasColumnName("SalDrvr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalIntrmdCu)
                    .HasColumnName("SalIntrmd_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalIntrmdSi).HasColumnName("SalIntrmd_Si");

                entity.Property(e => e.SalIntrmdTp)
                    .HasColumnName("SalIntrmd_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcSrvHSi).HasColumnName("SalInvcSrvH_Si");

                entity.Property(e => e.SalPreInvcSrvHCu).HasColumnName("SalPreInvcSrvH_Cu");

                entity.Property(e => e.SalPreInvcSrvHDlvLoc)
                    .HasColumnName("SalPreInvcSrvH_DlvLoc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcSrvHDm)
                    .HasColumnName("SalPreInvcSrvH_Dm")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalPreInvcSrvHDs)
                    .IsRequired()
                    .HasColumnName("SalPreInvcSrvH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcSrvHExprDate)
                    .HasColumnName("SalPreInvcSrvH_ExprDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcSrvHExprTime).HasColumnName("SalPreInvcSrvH_ExprTime");

                entity.Property(e => e.SalPreInvcSrvHPrcDec)
                    .HasColumnName("SalPreInvcSrvH_Prc_Dec")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcSrvHPrcInc)
                    .HasColumnName("SalPreInvcSrvH_Prc_Inc")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcSrvHPrcSumTotal)
                    .HasColumnName("SalPreInvcSrvH_Prc_SumTotal")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcSrvHPrcTotal)
                    .HasColumnName("SalPreInvcSrvH_Prc_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcSrvHRcvMthd)
                    .HasColumnName("SalPreInvcSrvH_RcvMthd")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcSrvHReference)
                    .HasColumnName("SalPreInvcSrvH_Reference")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcSrvHRfrncTyp).HasColumnName("SalPreInvcSrvH_RfrncTyp");

                entity.Property(e => e.SalPreInvcSrvHSi).HasColumnName("SalPreInvcSrvH_Si");

                entity.Property(e => e.SalPreInvcSrvHStatus).HasColumnName("SalPreInvcSrvH_Status");

                entity.Property(e => e.SalPreInvcSrvHStmpCdt)
                    .HasColumnName("SalPreInvcSrvH_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalPreInvcSrvHStmpCus)
                    .HasColumnName("SalPreInvcSrvH_StmpCUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcSrvHStmpMdt)
                    .HasColumnName("SalPreInvcSrvH_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalPreInvcSrvHStmpMus)
                    .HasColumnName("SalPreInvcSrvH_StmpMUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcSrvHTp)
                    .HasColumnName("SalPreInvcSrvH_Tp")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SalPrint1).HasColumnName("SalPRINT_1");

                entity.Property(e => e.SalRespSi).HasColumnName("SalResp_Si");

                entity.Property(e => e.SalRespTp)
                    .HasColumnName("SalResp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalTypCu)
                    .HasColumnName("SalTyp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalTypSi).HasColumnName("SalTyp_Si");

                entity.Property(e => e.SalTypTp)
                    .HasColumnName("SalTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwSalPreInvcSrvOpr>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalPreInvcSrvOpr");

                entity.Property(e => e.SalOprActive).HasColumnName("SalOpr_Active");

                entity.Property(e => e.SalOprAutoInsert).HasColumnName("SalOpr_AutoInsert");

                entity.Property(e => e.SalOprCu)
                    .HasColumnName("SalOpr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprDefaultValue).HasColumnName("SalOpr_DefaultValue");

                entity.Property(e => e.SalOprLckPrc).HasColumnName("SalOpr_LckPrc");

                entity.Property(e => e.SalOprNature)
                    .HasColumnName("SalOpr_Nature")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");

                entity.Property(e => e.SalOprSqnc).HasColumnName("SalOpr_Sqnc");

                entity.Property(e => e.SalOprSqncPrn).HasColumnName("SalOpr_SqncPrn");

                entity.Property(e => e.SalOprTp)
                    .HasColumnName("SalOpr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTyp).HasColumnName("SalOpr_Typ");

                entity.Property(e => e.SalOprUse).HasColumnName("SalOpr_Use");

                entity.Property(e => e.SalOprValueTyp).HasColumnName("SalOpr_ValueTyp");

                entity.Property(e => e.SalPreInvcSrvHCu).HasColumnName("SalPreInvcSrvH_Cu");

                entity.Property(e => e.SalPreInvcSrvHDs)
                    .HasColumnName("SalPreInvcSrvH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcSrvHSi).HasColumnName("SalPreInvcSrvH_Si");

                entity.Property(e => e.SalPreInvcSrvOprCalcValue)
                    .HasColumnName("SalPreInvcSrvOpr_CalcValue")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcSrvOprSi).HasColumnName("SalPreInvcSrvOpr_Si");

                entity.Property(e => e.SalPreInvcSrvOprValue)
                    .HasColumnName("SalPreInvcSrvOpr_Value")
                    .HasColumnType("money");

                entity.Property(e => e.SalTypSi).HasColumnName("SalTyp_Si");
            });

            modelBuilder.Entity<VwSalPurRetSeason>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalPurRetSeason");

                entity.Property(e => e.آدرس)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.تلفن)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.جمعناخالص)
                    .HasColumnName("جمع ناخالص")
                    .HasColumnType("money");

                entity.Property(e => e.شمارهاقتصادیفروشنده)
                    .HasColumnName("شماره اقتصادی فروشنده")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.عنواننوعشخص)
                    .HasColumnName("عنوان نوع شخص")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.فروشندهشرکت)
                    .HasColumnName("فروشنده شرکت")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.نامفروشنده)
                    .HasColumnName("نام فروشنده")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.نامکالا)
                    .HasColumnName("نام کالا")
                    .HasMaxLength(4000);

                entity.Property(e => e.نوعخریدار).HasColumnName("نوع خریدار");

                entity.Property(e => e.کدفروشنده)
                    .HasColumnName("کد فروشنده")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کدملیفروشنده)
                    .HasColumnName("کد ملی فروشنده")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.کدنوعشخص).HasColumnName("کد نوع شخص");

                entity.Property(e => e.کدپستی)
                    .HasColumnName("کد پستی")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.کدکالا)
                    .HasColumnName("کد کالا")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwSalPurSeason>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalPurSeason");

                entity.Property(e => e.آدرس)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.تلفن)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.جمعناخالص)
                    .HasColumnName("جمع ناخالص")
                    .HasColumnType("money");

                entity.Property(e => e.شمارهاقتصادیفروشنده)
                    .HasColumnName("شماره اقتصادی فروشنده")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.عنواننوعشخص)
                    .HasColumnName("عنوان نوع شخص")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.فروشندهشرکت)
                    .HasColumnName("فروشنده شرکت")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.نامفروشنده)
                    .HasColumnName("نام فروشنده")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.نامکالا)
                    .HasColumnName("نام کالا")
                    .HasMaxLength(4000);

                entity.Property(e => e.نوعخریدار).HasColumnName("نوع خریدار");

                entity.Property(e => e.کدفروشنده)
                    .HasColumnName("کد فروشنده")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کدملیفروشنده)
                    .HasColumnName("کد ملی فروشنده")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.کدنوعشخص).HasColumnName("کد نوع شخص");

                entity.Property(e => e.کدپستی)
                    .HasColumnName("کد پستی")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.کدکالا)
                    .HasColumnName("کد کالا")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwSalPurso>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalPurso");

                entity.Property(e => e.SalCustCu)
                    .HasColumnName("SalCust_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalPursueDateEdit)
                    .HasColumnName("SalPursue_DateEdit")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalPursueDateEnter)
                    .IsRequired()
                    .HasColumnName("SalPursue_DateEnter")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalPursueDatePursue)
                    .HasColumnName("SalPursue_DatePursue")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalPursueDesc)
                    .HasColumnName("SalPursue_Desc")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.SalPursueHaveFile).HasColumnName("SalPursue_HaveFile");

                entity.Property(e => e.SalPursueIsFinall).HasColumnName("SalPursue_IsFinall");

                entity.Property(e => e.SalPursueSi).HasColumnName("SalPursue_Si");

                entity.Property(e => e.SalPursueTp)
                    .HasColumnName("SalPursue_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.SalPursueUserEdit)
                    .HasColumnName("SalPursue_UserEdit")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalPursueUserSave)
                    .HasColumnName("SalPursue_UserSave")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwSalRegion>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalRegion");

                entity.Property(e => e.SalRegionCu)
                    .HasColumnName("SalRegion_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRegionPathCu)
                    .HasColumnName("SalRegionPath_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRegionPathSi).HasColumnName("SalRegionPath_Si");

                entity.Property(e => e.SalRegionPathTp)
                    .HasColumnName("SalRegionPath_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRegionSi).HasColumnName("SalRegion_Si");

                entity.Property(e => e.SalRegionTp)
                    .HasColumnName("SalRegion_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwSalRequestD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalRequestD");

                entity.Property(e => e.BatchNumberD)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BatchNumberH)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsAddrs)
                    .HasColumnName("CtbAddrs_Addrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsCity)
                    .HasColumnName("CtbAddrs_City")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsContact)
                    .HasColumnName("CtbAddrs_Contact")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsEconamical)
                    .HasColumnName("CtbAddrs_Econamical")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsEmail)
                    .HasColumnName("CtbAddrs_Email")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsFax)
                    .HasColumnName("CtbAddrs_Fax")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsMobile)
                    .HasColumnName("CtbAddrs_Mobile")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsModem)
                    .HasColumnName("CtbAddrs_Modem")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsNatCode)
                    .HasColumnName("CtbAddrs_NatCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsOstan)
                    .HasColumnName("CtbAddrs_Ostan")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPobox)
                    .HasColumnName("CtbAddrs_POBox")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsShahrestan)
                    .HasColumnName("CtbAddrs_Shahrestan")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsTel)
                    .HasColumnName("CtbAddrs_Tel")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsZipcode)
                    .HasColumnName("CtbAddrs_ZIPCode")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.DescDriver)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvBatchNumberCode)
                    .HasColumnName("InvBatchNumber_Code")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvInvtCu)
                    .HasColumnName("InvInvt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntCu)
                    .HasColumnName("InvUnt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchCu)
                    .HasColumnName("SalBrnch_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchSi).HasColumnName("SalBrnch_Si");

                entity.Property(e => e.SalBrnchTp)
                    .HasColumnName("SalBrnch_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustCu)
                    .HasColumnName("SalCust_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpCu)
                    .HasColumnName("SalCustGrp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpSi).HasColumnName("SalCustGrp_Si");

                entity.Property(e => e.SalCustGrpTp)
                    .HasColumnName("SalCustGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalDlvrrSi).HasColumnName("SalDlvrr_Si");

                entity.Property(e => e.SalDriverSi).HasColumnName("SalDriver_Si");

                entity.Property(e => e.SalDrvrSi).HasColumnName("SalDrvr_Si");

                entity.Property(e => e.SalDrvrTp)
                    .HasColumnName("SalDrvr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalIntrmdCu)
                    .HasColumnName("SalIntrmd_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalIntrmdSi).HasColumnName("SalIntrmd_Si");

                entity.Property(e => e.SalIntrmdTp)
                    .HasColumnName("SalIntrmd_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprCu)
                    .HasColumnName("SalOpr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprCu2)
                    .HasColumnName("SalOpr_Cu_2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprCu3)
                    .HasColumnName("SalOpr_Cu_3")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprDec)
                    .HasColumnName("SalOprDEc")
                    .HasColumnType("money");

                entity.Property(e => e.SalOprDefaultValue).HasColumnName("SalOpr_DefaultValue");

                entity.Property(e => e.SalOprDefaultValue2).HasColumnName("SalOpr_DefaultValue_2");

                entity.Property(e => e.SalOprDefaultValue3).HasColumnName("SalOpr_DefaultValue_3");

                entity.Property(e => e.SalOprInc).HasColumnType("money");

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");

                entity.Property(e => e.SalOprSi2).HasColumnName("SalOpr_Si_2");

                entity.Property(e => e.SalOprSi3).HasColumnName("SalOpr_Si_3");

                entity.Property(e => e.SalOprTp)
                    .HasColumnName("SalOpr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTp2)
                    .HasColumnName("SalOpr_Tp_2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTp3)
                    .HasColumnName("SalOpr_Tp_3")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcHCu).HasColumnName("SalPreInvcH_Cu");

                entity.Property(e => e.SalPreInvcHDs)
                    .HasColumnName("SalPreInvcH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalRegionTp)
                    .HasColumnName("SalRegion_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRequestDGiftOk).HasColumnName("SalRequestD_GiftOk");

                entity.Property(e => e.SalRequestDPrcDec)
                    .HasColumnName("SalRequestD_Prc_Dec")
                    .HasColumnType("money");

                entity.Property(e => e.SalRequestDPrcDec2)
                    .HasColumnName("SalRequestD_Prc_Dec_2")
                    .HasColumnType("money");

                entity.Property(e => e.SalRequestDPrcDec3).HasColumnName("SalRequestD_Prc_Dec_3");

                entity.Property(e => e.SalRequestDPrcInc)
                    .HasColumnName("SalRequestD_Prc_Inc")
                    .HasColumnType("money");

                entity.Property(e => e.SalRequestDPrcInc2)
                    .HasColumnName("SalRequestD_Prc_Inc_2")
                    .HasColumnType("money");

                entity.Property(e => e.SalRequestDPrcInc3).HasColumnName("SalRequestD_Prc_Inc_3");

                entity.Property(e => e.SalRequestDQty).HasColumnName("SalRequestD_Qty");

                entity.Property(e => e.SalRequestDRow).HasColumnName("SalRequestD_Row");

                entity.Property(e => e.SalRequestDSi).HasColumnName("SalRequestD_Si");

                entity.Property(e => e.SalRequestDSumPrcDec).HasColumnName("SalRequestD_SumPrc_Dec");

                entity.Property(e => e.SalRequestDSumPrcInc).HasColumnName("SalRequestD_SumPrc_Inc");

                entity.Property(e => e.SalRequestDSumTotal)
                    .HasColumnName("SalRequestD_SumTotal")
                    .HasColumnType("money");

                entity.Property(e => e.SalRequestDTotal)
                    .HasColumnName("SalRequestD_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalRequestDTotalC).HasColumnName("SalRequestD_TotalC");

                entity.Property(e => e.SalRequestDTp)
                    .HasColumnName("SalRequestD_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalRequestDUntPrc)
                    .HasColumnName("SalRequestD_UntPrc")
                    .HasColumnType("money");

                entity.Property(e => e.SalRequestDUntPrcC).HasColumnName("SalRequestD_UntPrcC");

                entity.Property(e => e.SalRequestHBarNo)
                    .HasColumnName("SalRequestH_BarNo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRequestHCu).HasColumnName("SalRequestH_Cu");

                entity.Property(e => e.SalRequestHCu2).HasColumnName("SalRequestH_Cu2");

                entity.Property(e => e.SalRequestHDlvLoc)
                    .HasColumnName("SalRequestH_DlvLoc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRequestHDriverName)
                    .HasColumnName("SalRequestH_DriverName")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalRequestHDs)
                    .HasColumnName("SalRequestH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalRequestHGood).HasColumnName("SalRequestH_Good");

                entity.Property(e => e.SalRequestHLock).HasColumnName("SalRequestH_Lock");

                entity.Property(e => e.SalRequestHPrcDec)
                    .HasColumnName("SalRequestH_Prc_Dec")
                    .HasColumnType("money");

                entity.Property(e => e.SalRequestHPrcGift).HasColumnName("SalRequestH_Prc_Gift");

                entity.Property(e => e.SalRequestHPrcInc)
                    .HasColumnName("SalRequestH_Prc_Inc")
                    .HasColumnType("money");

                entity.Property(e => e.SalRequestHPrcSumTotal)
                    .HasColumnName("SalRequestH_Prc_SumTotal")
                    .HasColumnType("money");

                entity.Property(e => e.SalRequestHPrcSumTotalC)
                    .HasColumnName("SalRequestH_Prc_SumTotalC")
                    .HasColumnType("money");

                entity.Property(e => e.SalRequestHPrcTotal)
                    .HasColumnName("SalRequestH_Prc_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalRequestHRcvMthd)
                    .HasColumnName("SalRequestH_RcvMthd")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRequestHSi).HasColumnName("SalRequestH_Si");

                entity.Property(e => e.SalRequestHStmpCdt)
                    .HasColumnName("SalRequestH_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalRequestHStmpCus)
                    .HasColumnName("SalRequestH_StmpCUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SalRequestHStmpMdt)
                    .HasColumnName("SalRequestH_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalRequestHStmpMus)
                    .HasColumnName("SalRequestH_StmpMUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SalRequestHStmpTime)
                    .HasColumnName("SalRequestH_StmpTime")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRequestHStmpTimeEdit)
                    .HasColumnName("SalRequestH_StmpTimeEdit")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRequestHTp)
                    .HasColumnName("SalRequestH_Tp")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SalRespSi).HasColumnName("SalResp_Si");

                entity.Property(e => e.SalRespTp)
                    .HasColumnName("SalResp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalTypCu)
                    .HasColumnName("SalTyp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalTypSi).HasColumnName("SalTyp_Si");

                entity.Property(e => e.SalTypTp)
                    .HasColumnName("SalTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalvarietySi).HasColumnName("Salvariety_Si");
            });

            modelBuilder.Entity<VwSalRequestH>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalRequestH");

                entity.Property(e => e.BatchNumberH)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsAccountName)
                    .HasColumnName("CtbAddrs_AccountName")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsAddrs)
                    .HasColumnName("CtbAddrs_Addrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsAdvetise).HasColumnName("CtbAddrs_advetise");

                entity.Property(e => e.CtbAddrsCity)
                    .HasColumnName("CtbAddrs_City")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsCode)
                    .HasColumnName("CtbAddrs_Code")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CtbAddrsContact)
                    .HasColumnName("CtbAddrs_Contact")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsEconamical)
                    .HasColumnName("CtbAddrs_Econamical")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsEmail)
                    .HasColumnName("CtbAddrs_Email")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsFax)
                    .HasColumnName("CtbAddrs_Fax")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsMobile)
                    .HasColumnName("CtbAddrs_Mobile")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsModem)
                    .HasColumnName("CtbAddrs_Modem")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsNatCode)
                    .HasColumnName("CtbAddrs_NatCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsOstan)
                    .HasColumnName("CtbAddrs_Ostan")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsOwn)
                    .HasColumnName("CtbAddrs_Own")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPersonality)
                    .HasColumnName("CtbAddrs_Personality")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPobox)
                    .HasColumnName("CtbAddrs_POBox")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsShahrestan)
                    .HasColumnName("CtbAddrs_Shahrestan")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsTel)
                    .HasColumnName("CtbAddrs_Tel")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsZipcode)
                    .HasColumnName("CtbAddrs_ZIPCode")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescDriver)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtCu)
                    .HasColumnName("InvInvt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchCu)
                    .HasColumnName("SalBrnch_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchSi).HasColumnName("SalBrnch_Si");

                entity.Property(e => e.SalBrnchTp)
                    .HasColumnName("SalBrnch_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustCu)
                    .HasColumnName("SalCust_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpCu)
                    .HasColumnName("SalCustGrp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpSi).HasColumnName("SalCustGrp_Si");

                entity.Property(e => e.SalCustGrpTp)
                    .HasColumnName("SalCustGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalDlvrrSi).HasColumnName("SalDlvrr_Si");

                entity.Property(e => e.SalDriverSi).HasColumnName("SalDriver_Si");

                entity.Property(e => e.SalDrvrSi).HasColumnName("SalDrvr_Si");

                entity.Property(e => e.SalDrvrTp)
                    .HasColumnName("SalDrvr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalIntrmdCu)
                    .HasColumnName("SalIntrmd_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalIntrmdSi).HasColumnName("SalIntrmd_Si");

                entity.Property(e => e.SalIntrmdTp)
                    .HasColumnName("SalIntrmd_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHSi).HasColumnName("SalInvcH_Si");

                entity.Property(e => e.SalPreInvcHCu).HasColumnName("SalPreInvcH_Cu");

                entity.Property(e => e.SalPreInvcHDs)
                    .HasColumnName("SalPreInvcH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalRegionPathSi).HasColumnName("SalRegionPath_Si");

                entity.Property(e => e.SalRegionPathTp)
                    .HasColumnName("SalRegionPath_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRegionSi).HasColumnName("SalRegion_Si");

                entity.Property(e => e.SalRegionTp)
                    .HasColumnName("SalRegion_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRequestHBarNo)
                    .HasColumnName("SalRequestH_BarNo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRequestHCu).HasColumnName("SalRequestH_Cu");

                entity.Property(e => e.SalRequestHCu2).HasColumnName("SalRequestH_Cu2");

                entity.Property(e => e.SalRequestHDlvLoc)
                    .HasColumnName("SalRequestH_DlvLoc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRequestHDriverName)
                    .HasColumnName("SalRequestH_DriverName")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalRequestHDs)
                    .IsRequired()
                    .HasColumnName("SalRequestH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalRequestHExprDate)
                    .HasColumnName("SalRequestH_ExprDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalRequestHExprTime).HasColumnName("SalRequestH_ExprTime");

                entity.Property(e => e.SalRequestHGood).HasColumnName("SalRequestH_Good");

                entity.Property(e => e.SalRequestHLock).HasColumnName("SalRequestH_Lock");

                entity.Property(e => e.SalRequestHPrcDec)
                    .HasColumnName("SalRequestH_Prc_Dec")
                    .HasColumnType("money");

                entity.Property(e => e.SalRequestHPrcGift).HasColumnName("SalRequestH_Prc_Gift");

                entity.Property(e => e.SalRequestHPrcInc)
                    .HasColumnName("SalRequestH_Prc_Inc")
                    .HasColumnType("money");

                entity.Property(e => e.SalRequestHPrcSumTotal)
                    .HasColumnName("SalRequestH_Prc_SumTotal")
                    .HasColumnType("money");

                entity.Property(e => e.SalRequestHPrcSumTotalC)
                    .HasColumnName("SalRequestH_Prc_SumTotalC")
                    .HasColumnType("money");

                entity.Property(e => e.SalRequestHPrcTotal)
                    .HasColumnName("SalRequestH_Prc_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalRequestHRcvMthd)
                    .HasColumnName("SalRequestH_RcvMthd")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRequestHSi).HasColumnName("SalRequestH_Si");

                entity.Property(e => e.SalRequestHStatus).HasColumnName("SalRequestH_Status");

                entity.Property(e => e.SalRequestHStmpCdt)
                    .HasColumnName("SalRequestH_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalRequestHStmpCus)
                    .HasColumnName("SalRequestH_StmpCUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SalRequestHStmpMdt)
                    .HasColumnName("SalRequestH_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalRequestHStmpMus)
                    .HasColumnName("SalRequestH_StmpMUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SalRequestHStmpTime)
                    .HasColumnName("SalRequestH_StmpTime")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRequestHStmpTimeEdit)
                    .HasColumnName("SalRequestH_StmpTimeEdit")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRequestHTp)
                    .HasColumnName("SalRequestH_Tp")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SalRespSi).HasColumnName("SalResp_Si");

                entity.Property(e => e.SalRespTp)
                    .HasColumnName("SalResp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalTypCu)
                    .HasColumnName("SalTyp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalTypSi).HasColumnName("SalTyp_Si");

                entity.Property(e => e.SalTypTp)
                    .HasColumnName("SalTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalvarietySi).HasColumnName("Salvariety_Si");
            });

            modelBuilder.Entity<VwSalRetInvDopr>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalRetInvDOpr");

                entity.Property(e => e.AccMSi).HasColumnName("AccM_Si");

                entity.Property(e => e.AccMSi2).HasColumnName("AccM_Si_2");

                entity.Property(e => e.AccMSi3).HasColumnName("AccM_Si_3");

                entity.Property(e => e.AccTSi).HasColumnName("AccT_Si");

                entity.Property(e => e.AccTSi2).HasColumnName("AccT_Si_2");

                entity.Property(e => e.AccTSi3).HasColumnName("AccT_Si_3");

                entity.Property(e => e.SalOprAccMSi).HasColumnName("SalOpr_AccM_Si");

                entity.Property(e => e.SalOprAccTSi).HasColumnName("SalOpr_AccT_Si");

                entity.Property(e => e.SalOprCu)
                    .HasColumnName("SalOpr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprDefaultValue).HasColumnName("SalOpr_DefaultValue");

                entity.Property(e => e.SalOprDefaultValue2).HasColumnName("SalOpr_DefaultValue_2");

                entity.Property(e => e.SalOprDefaultValue3).HasColumnName("SalOpr_DefaultValue_3");

                entity.Property(e => e.SalOprNature)
                    .HasColumnName("SalOpr_Nature")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SalOprNature2)
                    .HasColumnName("SalOpr_Nature_2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SalOprNature3)
                    .HasColumnName("SalOpr_Nature_3")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");

                entity.Property(e => e.SalOprSi2).HasColumnName("SalOpr_Si_2");

                entity.Property(e => e.SalOprTp)
                    .HasColumnName("SalOpr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTp2)
                    .HasColumnName("SalOpr_Tp_2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTyp).HasColumnName("SalOpr_Typ");

                entity.Property(e => e.SalOprTyp2).HasColumnName("SalOpr_Typ_2");

                entity.Property(e => e.SalOprValueTyp).HasColumnName("SalOpr_ValueTyp");

                entity.Property(e => e.SalOprValueTyp2).HasColumnName("SalOpr_ValueTyp_2");

                entity.Property(e => e.SalOprValueTyp3).HasColumnName("SalOpr_ValueTyp_3");

                entity.Property(e => e.SalRetInvcHCu).HasColumnName("SalRetInvcH_Cu");

                entity.Property(e => e.SalRetInvcHSi).HasColumnName("SalRetInvcH_Si");

                entity.Property(e => e.SalRetInvcHTp)
                    .HasColumnName("SalRetInvcH_Tp")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SalretInvcDPrcDec)
                    .HasColumnName("SalretInvcD_Prc_Dec")
                    .HasColumnType("money");

                entity.Property(e => e.SalretInvcDPrcDec2)
                    .HasColumnName("SalretInvcD_Prc_Dec_2")
                    .HasColumnType("money");

                entity.Property(e => e.SalretInvcDPrcDec3)
                    .HasColumnName("SalretInvcD_Prc_Dec_3")
                    .HasColumnType("money");

                entity.Property(e => e.SalretInvcDPrcInc)
                    .HasColumnName("SalretInvcD_Prc_Inc")
                    .HasColumnType("money");

                entity.Property(e => e.SalretInvcDPrcInc2)
                    .HasColumnName("SalretInvcD_Prc_Inc_2")
                    .HasColumnType("money");

                entity.Property(e => e.SalretInvcDPrcInc3)
                    .HasColumnName("SalretInvcD_Prc_Inc_3")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<VwSalRetInvcD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalRetInvcD");

                entity.Property(e => e.BatchNumberD)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BatchNumberH)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsAddrs)
                    .HasColumnName("CtbAddrs_Addrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsEconamical)
                    .HasColumnName("CtbAddrs_Econamical")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsEmail)
                    .HasColumnName("CtbAddrs_Email")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsMobile)
                    .HasColumnName("CtbAddrs_Mobile")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsModem)
                    .HasColumnName("CtbAddrs_Modem")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsNatCode)
                    .HasColumnName("CtbAddrs_NatCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsTel)
                    .HasColumnName("CtbAddrs_Tel")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsZipcode)
                    .HasColumnName("CtbAddrs_ZIPCode")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.CtbCurncyTp)
                    .HasColumnName("CtbCurncy_Tp")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCustVndrTypSi).HasColumnName("CtbCustVndrTyp_Si");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsGrpSi).HasColumnName("InvGdsGrp_Si");

                entity.Property(e => e.InvGdsIcntryCu)
                    .HasColumnName("InvGdsICntry_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsIcntryTp)
                    .HasColumnName("InvGdsICntry_Tp")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsIcratrCu)
                    .HasColumnName("InvGdsICratr_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsIcratrSi).HasColumnName("InvGdsICratr_Si");

                entity.Property(e => e.InvGdsIcratrTp)
                    .HasColumnName("InvGdsICratr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTechNo)
                    .HasColumnName("InvGds_TechNo")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsToInvShelf)
                    .HasColumnName("InvGdsToInv_Shelf")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvGdsTypSi).HasColumnName("InvGdsTyp_Si");

                entity.Property(e => e.InvGdsTypTp)
                    .HasColumnName("InvGdsTyp_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtCu)
                    .HasColumnName("InvInvt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntCu)
                    .HasColumnName("InvUnt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchCu)
                    .HasColumnName("SalBrnch_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchSi).HasColumnName("SalBrnch_Si");

                entity.Property(e => e.SalBrnchTp)
                    .HasColumnName("SalBrnch_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCitySi).HasColumnName("SalCity_Si");

                entity.Property(e => e.SalCustAccMSi).HasColumnName("SalCust_AccM_Si");

                entity.Property(e => e.SalCustAccTSi).HasColumnName("SalCust_AccT_Si");

                entity.Property(e => e.SalCustActiveTypSi).HasColumnName("SalCustActiveTyp_Si");

                entity.Property(e => e.SalCustCorporateTyp).HasColumnName("SalCust_CorporateTyp");

                entity.Property(e => e.SalCustCu)
                    .HasColumnName("SalCust_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpCu)
                    .HasColumnName("SalCustGrp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpSi).HasColumnName("SalCustGrp_Si");

                entity.Property(e => e.SalCustGrpTp)
                    .HasColumnName("SalCustGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalCustStatusSi).HasColumnName("SalCustStatus_Si");

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalDivisionSi).HasColumnName("SalDivision_Si");

                entity.Property(e => e.SalEnterducedSi).HasColumnName("SalEnterduced_Si");

                entity.Property(e => e.SalGdsAccAccMSi).HasColumnName("SalGdsAcc_AccM_Si");

                entity.Property(e => e.SalGdsAccAccTSi).HasColumnName("SalGdsAcc_AccT_Si");

                entity.Property(e => e.SalGdsRetAccAccCSi).HasColumnName("SalGdsRetAcc_AccC_Si");

                entity.Property(e => e.SalGdsRetAccAccPSi).HasColumnName("SalGdsRetAcc_AccP_Si");

                entity.Property(e => e.SalIntrmdCu)
                    .HasColumnName("SalIntrmd_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalIntrmdSi).HasColumnName("SalIntrmd_Si");

                entity.Property(e => e.SalIntrmdTp)
                    .HasColumnName("SalIntrmd_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprDefaultValue).HasColumnName("SalOpr_DefaultValue");

                entity.Property(e => e.SalOprDefaultValue2).HasColumnName("SalOpr_DefaultValue_2");

                entity.Property(e => e.SalOprDefaultValue3).HasColumnName("SalOpr_DefaultValue_3");

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");

                entity.Property(e => e.SalOprSi2).HasColumnName("SalOpr_Si_2");

                entity.Property(e => e.SalOprSi3).HasColumnName("SalOpr_Si_3");

                entity.Property(e => e.SalOprTp)
                    .HasColumnName("SalOpr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTp2)
                    .HasColumnName("SalOpr_Tp_2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTp3)
                    .HasColumnName("SalOpr_Tp_3")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalProvinceSi).HasColumnName("SalProvince_Si");

                entity.Property(e => e.SalRegionPathSi).HasColumnName("SalRegionPath_Si");

                entity.Property(e => e.SalRegionSi).HasColumnName("SalRegion_Si");

                entity.Property(e => e.SalRegionTp)
                    .HasColumnName("SalRegion_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRespSi).HasColumnName("SalResp_Si");

                entity.Property(e => e.SalRetInvCdSumTotal)
                    .HasColumnName("SalRetInvCd_SumTotal")
                    .HasColumnType("money");

                entity.Property(e => e.SalRetInvcDExpiredate)
                    .HasColumnName("SalRetInvcD_Expiredate")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalRetInvcDGiftOk).HasColumnName("SalRetInvcD_GiftOk");

                entity.Property(e => e.SalRetInvcDQty).HasColumnName("SalRetInvcD_Qty");

                entity.Property(e => e.SalRetInvcDQty2).HasColumnName("SalRetInvcD_Qty2");

                entity.Property(e => e.SalRetInvcDRow).HasColumnName("SalRetInvcD_Row");

                entity.Property(e => e.SalRetInvcDSi).HasColumnName("SalRetInvcD_Si");

                entity.Property(e => e.SalRetInvcDSumPrcDec).HasColumnName("SalRetInvcD_SumPrc_Dec");

                entity.Property(e => e.SalRetInvcDSumPrcInc).HasColumnName("SalRetInvcD_SumPrc_Inc");

                entity.Property(e => e.SalRetInvcDTotal)
                    .HasColumnName("SalRetInvcD_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalRetInvcDTotalC)
                    .HasColumnName("SalRetInvcD_TotalC")
                    .HasColumnType("money");

                entity.Property(e => e.SalRetInvcDTp)
                    .HasColumnName("SalRetInvcD_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRetInvcDUntPrc)
                    .HasColumnName("SalRetInvcD_UntPrc")
                    .HasColumnType("money");

                entity.Property(e => e.SalRetInvcDUntPrcC).HasColumnName("SalRetInvcD_UntPrcC");

                entity.Property(e => e.SalRetInvcHAccDoc).HasColumnName("SalRetInvcH_AccDoc");

                entity.Property(e => e.SalRetInvcHCancelled).HasColumnName("SalRetInvcH_Cancelled");

                entity.Property(e => e.SalRetInvcHCu).HasColumnName("SalRetInvcH_Cu");

                entity.Property(e => e.SalRetInvcHCu2).HasColumnName("SalRetInvcH_Cu2");

                entity.Property(e => e.SalRetInvcHDs)
                    .HasColumnName("SalRetInvcH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalRetInvcHDsMonth).HasColumnName("SalRetInvcH_Ds_Month");

                entity.Property(e => e.SalRetInvcHPrcDec)
                    .HasColumnName("SalRetInvcH_Prc_Dec")
                    .HasColumnType("money");

                entity.Property(e => e.SalRetInvcHPrcInc)
                    .HasColumnName("SalRetInvcH_Prc_Inc")
                    .HasColumnType("money");

                entity.Property(e => e.SalRetInvcHPrcSumTotal)
                    .HasColumnName("SalRetInvcH_Prc_SumTotal")
                    .HasColumnType("money");

                entity.Property(e => e.SalRetInvcHPrcTotal)
                    .HasColumnName("SalRetInvcH_Prc_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalRetInvcHReference)
                    .HasColumnName("SalRetInvcH_Reference")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRetInvcHRfrncTyp).HasColumnName("SalRetInvcH_RfrncTyp");

                entity.Property(e => e.SalRetInvcHSi).HasColumnName("SalRetInvcH_Si");

                entity.Property(e => e.SalRetInvcHStmpCdt)
                    .HasColumnName("SalRetInvcH_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalRetInvcHStmpCus)
                    .HasColumnName("SalRetInvcH_StmpCUs")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRetInvcHStmpMdt)
                    .HasColumnName("SalRetInvcH_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalRetInvcHStmpMus)
                    .HasColumnName("SalRetInvcH_StmpMUs")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRetInvcHTp)
                    .HasColumnName("SalRetInvcH_Tp")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SalTypSi).HasColumnName("SalTyp_Si");

                entity.Property(e => e.SalretInvcDPrcDec)
                    .HasColumnName("SalretInvcD_Prc_Dec")
                    .HasColumnType("money");

                entity.Property(e => e.SalretInvcDPrcDec2)
                    .HasColumnName("SalretInvcD_Prc_Dec_2")
                    .HasColumnType("money");

                entity.Property(e => e.SalretInvcDPrcDec3)
                    .HasColumnName("SalretInvcD_Prc_Dec_3")
                    .HasColumnType("money");

                entity.Property(e => e.SalretInvcDPrcInc)
                    .HasColumnName("SalretInvcD_Prc_Inc")
                    .HasColumnType("money");

                entity.Property(e => e.SalretInvcDPrcInc2)
                    .HasColumnName("SalretInvcD_Prc_Inc_2")
                    .HasColumnType("money");

                entity.Property(e => e.SalretInvcDPrcInc3)
                    .HasColumnName("SalretInvcD_Prc_Inc_3")
                    .HasColumnType("money");

                entity.Property(e => e.SalvarietySi).HasColumnName("Salvariety_Si");
            });

            modelBuilder.Entity<VwSalRetInvcH>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalRetInvcH");

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLmSi2).HasColumnName("AccLM_Si_2");

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.BatchNumberH)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsAddrs)
                    .HasColumnName("CtbAddrs_Addrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsCity)
                    .HasColumnName("CtbAddrs_City")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsEconamical)
                    .HasColumnName("CtbAddrs_Econamical")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsEmail)
                    .HasColumnName("CtbAddrs_Email")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsFax)
                    .HasColumnName("CtbAddrs_Fax")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsMobile)
                    .HasColumnName("CtbAddrs_Mobile")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsModem)
                    .HasColumnName("CtbAddrs_Modem")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsNatCode)
                    .HasColumnName("CtbAddrs_NatCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsOstan)
                    .HasColumnName("CtbAddrs_Ostan")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsPobox)
                    .HasColumnName("CtbAddrs_POBox")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsTel)
                    .HasColumnName("CtbAddrs_Tel")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbAddrsZipcode)
                    .HasColumnName("CtbAddrs_ZIPCode")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCustVndrTypSi).HasColumnName("CtbCustVndrTyp_Si");

                entity.Property(e => e.InvDocHAccMSi).HasColumnName("InvDocH_AccM_Si");

                entity.Property(e => e.InvDocHCu).HasColumnName("InvDocH_Cu");

                entity.Property(e => e.InvDocHDs)
                    .HasColumnName("InvDocH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtCu)
                    .HasColumnName("InvInvt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchCu)
                    .HasColumnName("SalBrnch_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchSi).HasColumnName("SalBrnch_Si");

                entity.Property(e => e.SalBrnchTp)
                    .HasColumnName("SalBrnch_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCitySi).HasColumnName("SalCity_Si");

                entity.Property(e => e.SalCustAccMSi).HasColumnName("SalCust_AccM_Si");

                entity.Property(e => e.SalCustAccTSi).HasColumnName("SalCust_AccT_Si");

                entity.Property(e => e.SalCustActiveTypSi).HasColumnName("SalCustActiveTyp_Si");

                entity.Property(e => e.SalCustCorporateTyp).HasColumnName("SalCust_CorporateTyp");

                entity.Property(e => e.SalCustCu)
                    .HasColumnName("SalCust_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpCu)
                    .HasColumnName("SalCustGrp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpSi).HasColumnName("SalCustGrp_Si");

                entity.Property(e => e.SalCustGrpTp)
                    .HasColumnName("SalCustGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalCustStatusSi).HasColumnName("SalCustStatus_Si");

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalDivisionSi).HasColumnName("SalDivision_Si");

                entity.Property(e => e.SalEnterducedSi).HasColumnName("SalEnterduced_Si");

                entity.Property(e => e.SalIntrmdCu)
                    .HasColumnName("SalIntrmd_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalIntrmdDefaultValue)
                    .HasColumnName("SalIntrmd_DefaultValue")
                    .HasColumnType("money");

                entity.Property(e => e.SalIntrmdSi).HasColumnName("SalIntrmd_Si");

                entity.Property(e => e.SalIntrmdTp)
                    .HasColumnName("SalIntrmd_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalIntrmdValueTyp).HasColumnName("SalIntrmd_ValueTyp");

                entity.Property(e => e.SalInvcHAccDoc).HasColumnName("SalInvcH_AccDoc");

                entity.Property(e => e.SalInvcHCu).HasColumnName("SalInvcH_Cu");

                entity.Property(e => e.SalInvcHSi).HasColumnName("SalInvcH_Si");

                entity.Property(e => e.SalProvinceSi).HasColumnName("SalProvince_Si");

                entity.Property(e => e.SalRegionPathSi).HasColumnName("SalRegionPath_Si");

                entity.Property(e => e.SalRegionSi).HasColumnName("SalRegion_Si");

                entity.Property(e => e.SalRegionTp)
                    .HasColumnName("SalRegion_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRespSi).HasColumnName("SalResp_Si");

                entity.Property(e => e.SalRetInvcHAccDoc).HasColumnName("SalRetInvcH_AccDoc");

                entity.Property(e => e.SalRetInvcHCancelled).HasColumnName("SalRetInvcH_Cancelled");

                entity.Property(e => e.SalRetInvcHCu).HasColumnName("SalRetInvcH_Cu");

                entity.Property(e => e.SalRetInvcHCu2).HasColumnName("SalRetInvcH_Cu2");

                entity.Property(e => e.SalRetInvcHDm)
                    .HasColumnName("SalRetInvcH_Dm")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalRetInvcHDs)
                    .IsRequired()
                    .HasColumnName("SalRetInvcH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalRetInvcHIntrmdPrc).HasColumnName("SalRetInvcH_IntrmdPrc");

                entity.Property(e => e.SalRetInvcHLock).HasColumnName("SalRetInvcH_Lock");

                entity.Property(e => e.SalRetInvcHPrcDec)
                    .HasColumnName("SalRetInvcH_Prc_Dec")
                    .HasColumnType("money");

                entity.Property(e => e.SalRetInvcHPrcInc)
                    .HasColumnName("SalRetInvcH_Prc_Inc")
                    .HasColumnType("money");

                entity.Property(e => e.SalRetInvcHPrcSumTotal)
                    .HasColumnName("SalRetInvcH_Prc_SumTotal")
                    .HasColumnType("money");

                entity.Property(e => e.SalRetInvcHPrcSumTotalC)
                    .HasColumnName("SalRetInvcH_Prc_SumTotalC")
                    .HasColumnType("money");

                entity.Property(e => e.SalRetInvcHPrcTotal)
                    .HasColumnName("SalRetInvcH_Prc_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalRetInvcHReference)
                    .HasColumnName("SalRetInvcH_Reference")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRetInvcHRfrncTyp).HasColumnName("SalRetInvcH_RfrncTyp");

                entity.Property(e => e.SalRetInvcHSi).HasColumnName("SalRetInvcH_Si");

                entity.Property(e => e.SalRetInvcHStmpCdt)
                    .HasColumnName("SalRetInvcH_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalRetInvcHStmpCus)
                    .HasColumnName("SalRetInvcH_StmpCUs")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRetInvcHStmpMdt)
                    .HasColumnName("SalRetInvcH_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SalRetInvcHStmpMus)
                    .HasColumnName("SalRetInvcH_StmpMUs")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalRetInvcHTp)
                    .HasColumnName("SalRetInvcH_Tp")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SalTypCu)
                    .HasColumnName("SalTyp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalTypSi).HasColumnName("SalTyp_Si");

                entity.Property(e => e.SalTypTp)
                    .HasColumnName("SalTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalvarietyCu)
                    .HasColumnName("Salvariety_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalvarietySi).HasColumnName("Salvariety_Si");

                entity.Property(e => e.SalvarietyTp)
                    .HasColumnName("Salvariety_Tp")
                    .HasMaxLength(4000);
            });

            modelBuilder.Entity<VwSalRetInvcOpr>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalRetInvcOpr");

                entity.Property(e => e.AccMSi).HasColumnName("AccM_Si");

                entity.Property(e => e.AccTSi).HasColumnName("AccT_Si");

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalOprAccMSi).HasColumnName("SalOpr_AccM_Si");

                entity.Property(e => e.SalOprAccTSi).HasColumnName("SalOpr_AccT_Si");

                entity.Property(e => e.SalOprActive).HasColumnName("SalOpr_Active");

                entity.Property(e => e.SalOprAutoInsert).HasColumnName("SalOpr_AutoInsert");

                entity.Property(e => e.SalOprCu)
                    .HasColumnName("SalOpr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprDefaultValue).HasColumnName("SalOpr_DefaultValue");

                entity.Property(e => e.SalOprLckPrc).HasColumnName("SalOpr_LckPrc");

                entity.Property(e => e.SalOprNature)
                    .HasColumnName("SalOpr_Nature")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SalOprSi).HasColumnName("SalOpr_Si");

                entity.Property(e => e.SalOprSqnc).HasColumnName("SalOpr_Sqnc");

                entity.Property(e => e.SalOprSqncPrn).HasColumnName("SalOpr_SqncPrn");

                entity.Property(e => e.SalOprTp)
                    .HasColumnName("SalOpr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalOprTyp).HasColumnName("SalOpr_Typ");

                entity.Property(e => e.SalOprUse).HasColumnName("SalOpr_Use");

                entity.Property(e => e.SalOprValueTyp).HasColumnName("SalOpr_ValueTyp");

                entity.Property(e => e.SalRetInvcHAccDoc).HasColumnName("SalRetInvcH_AccDoc");

                entity.Property(e => e.SalRetInvcHCu).HasColumnName("SalRetInvcH_Cu");

                entity.Property(e => e.SalRetInvcHDs)
                    .HasColumnName("SalRetInvcH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalRetInvcHSi).HasColumnName("SalRetInvcH_Si");

                entity.Property(e => e.SalRetInvcHTp)
                    .HasColumnName("SalRetInvcH_Tp")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SalRetInvcOprAccMSi).HasColumnName("SalRetInvcOpr_AccM_Si");

                entity.Property(e => e.SalRetInvcOprAccTSi).HasColumnName("SalRetInvcOpr_AccT_Si");

                entity.Property(e => e.SalRetInvcOprCalcValue)
                    .HasColumnName("SalRetInvcOpr_CalcValue")
                    .HasColumnType("money");

                entity.Property(e => e.SalRetInvcOprSi).HasColumnName("SalRetInvcOpr_Si");

                entity.Property(e => e.SalRetInvcOprValue)
                    .HasColumnName("SalRetInvcOpr_Value")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<VwSalRetMatrixReport>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalRetMatrixReport");

                entity.Property(e => e.CtbAddrsNatCode)
                    .HasColumnName("CtbAddrs_NatCode")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.آدرس)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.اضافات).HasColumnType("money");

                entity.Property(e => e.اضافات2)
                    .HasColumnName("اضافات 2")
                    .HasColumnType("money");

                entity.Property(e => e.اضافات3)
                    .HasColumnName("اضافات 3")
                    .HasColumnType("money");

                entity.Property(e => e.ايجادکننده)
                    .HasColumnName("ايجاد کننده")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.تاريخفاکتور)
                    .HasColumnName("تاريخ فاکتور")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.تاریخانقضایمیلادی)
                    .HasColumnName("تاریخ انقضای میلادی")
                    .HasColumnType("datetime");

                entity.Property(e => e.تلفن)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.توضیحات)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.جمع).HasColumnType("money");

                entity.Property(e => e.جمعاضافات).HasColumnName("جمع اضافات");

                entity.Property(e => e.جمعاضافاتفاکتور)
                    .HasColumnName("جمع اضافات فاکتور")
                    .HasColumnType("money");

                entity.Property(e => e.جمعميلغفاکتور)
                    .HasColumnName("جمع ميلغ فاکتور")
                    .HasColumnType("money");

                entity.Property(e => e.جمعکسورات).HasColumnName("جمع کسورات");

                entity.Property(e => e.جمعکلفاکتور)
                    .HasColumnName("جمع کل فاکتور")
                    .HasColumnType("money");

                entity.Property(e => e.روز)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.سال)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.شرحعاملرديفي1)
                    .HasColumnName("شرح عامل رديفي 1")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.شرحعاملرديفي2)
                    .HasColumnName("شرح عامل رديفي 2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.شرحفاکتور)
                    .HasColumnName("شرح فاکتور")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.شرحکالا)
                    .HasColumnName("شرح کالا")
                    .HasMaxLength(4000);

                entity.Property(e => e.شمارهاقتصادی)
                    .HasColumnName("شماره اقتصادی")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.شمارهفاکتور).HasColumnName("شماره فاکتور");

                entity.Property(e => e.شمارهفنی)
                    .HasColumnName("شماره فنی")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.عامل3)
                    .HasColumnName("عامل 3")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.عنوانانبار)
                    .HasColumnName("عنوان انبار")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.عنوانمرکزفروش)
                    .HasColumnName("عنوان مرکز فروش")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.عنوانواحدسنجش)
                    .HasColumnName("عنوان واحد سنجش")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.فاکتورجمعکسورات)
                    .HasColumnName("فاکتور جمع کسورات")
                    .HasColumnType("money");

                entity.Property(e => e.قیمتواحد)
                    .HasColumnName("قیمت واحد")
                    .HasColumnType("money");

                entity.Property(e => e.كسورات3)
                    .HasColumnName("كسورات 3")
                    .HasColumnType("money");

                entity.Property(e => e.ماه)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.مبلغارز).HasColumnName("مبلغ ارز");

                entity.Property(e => e.مبلغعاملرديفي1).HasColumnName("مبلغ عامل رديفي 1");

                entity.Property(e => e.مبلغعاملرديفي2).HasColumnName("مبلغ عامل رديفي 2");

                entity.Property(e => e.مبلغنهاييارز)
                    .HasColumnName("مبلغ نهايي ارز")
                    .HasColumnType("money");

                entity.Property(e => e.مقدارعامل3).HasColumnName("مقدار عامل 3");

                entity.Property(e => e.ناممشتري)
                    .HasColumnName("نام مشتري")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.نامویزیتور)
                    .HasColumnName("نام ویزیتور")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نامگروهمشتری)
                    .HasColumnName("نام گروه مشتری")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نوعارز)
                    .HasColumnName("نوع ارز")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.کدانبار)
                    .HasColumnName("کد انبار")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کدرهگیریردیف)
                    .HasColumnName("کد رهگیری ردیف")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.کدرهگیریسند)
                    .HasColumnName("کد رهگیری سند")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.کدمرکزفروش)
                    .HasColumnName("کد مرکز فروش")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کدمشتري)
                    .HasColumnName("کد مشتري")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.کدواحدسنجش)
                    .HasColumnName("کد واحد سنجش")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کدویزیتور)
                    .HasColumnName("کد ویزیتور")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کدپستی)
                    .HasColumnName("کد پستی")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.کدکالا)
                    .HasColumnName("کد کالا")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.کدگروهمشتری)
                    .HasColumnName("کد گروه مشتری")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کسورات).HasColumnType("money");

                entity.Property(e => e.کسورات2)
                    .HasColumnName("کسورات 2")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<VwSalRetinvcD2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalRetinvcD2");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.SalRetInvcDQty).HasColumnName("SalRetInvcD_Qty");

                entity.Property(e => e.SalRetInvcDQty2).HasColumnName("SalRetInvcD_Qty2");

                entity.Property(e => e.SalRetInvcHCu).HasColumnName("SalRetInvcH_Cu");

                entity.Property(e => e.SalRetInvcHSi).HasColumnName("SalRetInvcH_Si");
            });

            modelBuilder.Entity<VwSalSaleRetSeason>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalSaleRetSeason");

                entity.Property(e => e.Fasle1)
                    .HasColumnName("fasle1")
                    .HasColumnType("money");

                entity.Property(e => e.Fasle2)
                    .HasColumnName("fasle2")
                    .HasColumnType("money");

                entity.Property(e => e.Fasle3)
                    .HasColumnName("fasle3")
                    .HasColumnType("money");

                entity.Property(e => e.Fasle4)
                    .HasColumnName("fasle4")
                    .HasColumnType("money");

                entity.Property(e => e.آدرس)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.تلفن)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.جمعخالص)
                    .HasColumnName("جمع خالص")
                    .HasColumnType("money");

                entity.Property(e => e.جمعناخالص)
                    .HasColumnName("جمع ناخالص")
                    .HasColumnType("money");

                entity.Property(e => e.شرکتخریدار)
                    .HasColumnName("شرکت خریدار")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.شمارهاقتصادیخریدار)
                    .HasColumnName("شماره اقتصادی خریدار")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.عنواننوعشخص)
                    .HasColumnName("عنوان نوع شخص")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.عوارض).HasColumnType("money");

                entity.Property(e => e.مالیاتبرارزشافزوده)
                    .HasColumnName("مالیات برارزش افزوده")
                    .HasColumnType("money");

                entity.Property(e => e.نامخریدار)
                    .HasColumnName("نام خریدار")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.نامکالا)
                    .HasColumnName("نام کالا")
                    .HasMaxLength(4000);

                entity.Property(e => e.نوعخریدار).HasColumnName("نوع خریدار");

                entity.Property(e => e.کدخریدار)
                    .HasColumnName("کد خریدار")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.کدملیخریدار)
                    .HasColumnName("کد ملی خریدار")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.کدنوعشخص).HasColumnName("کد نوع شخص");

                entity.Property(e => e.کدپستی)
                    .HasColumnName("کد پستی")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.کدکالا)
                    .HasColumnName("کد کالا")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwSalSaleSeason>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalSaleSeason");

                entity.Property(e => e.Fasle1)
                    .HasColumnName("fasle1")
                    .HasColumnType("money");

                entity.Property(e => e.Fasle2)
                    .HasColumnName("fasle2")
                    .HasColumnType("money");

                entity.Property(e => e.Fasle3)
                    .HasColumnName("fasle3")
                    .HasColumnType("money");

                entity.Property(e => e.Fasle4)
                    .HasColumnName("fasle4")
                    .HasColumnType("money");

                entity.Property(e => e.آدرس)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.تلفن)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.جمعخالص)
                    .HasColumnName("جمع خالص")
                    .HasColumnType("money");

                entity.Property(e => e.جمعناخالص)
                    .HasColumnName("جمع ناخالص")
                    .HasColumnType("money");

                entity.Property(e => e.شرکتخریدار)
                    .HasColumnName("شرکت خریدار")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.شمارهاقتصادیخریدار)
                    .HasColumnName("شماره اقتصادی خریدار")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.عنواننوعشخص)
                    .HasColumnName("عنوان نوع شخص")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.مالیاتبرارزشافزوده).HasColumnName("مالیات برارزش افزوده");

                entity.Property(e => e.نامخریدار)
                    .HasColumnName("نام خریدار")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.نامکالا)
                    .HasColumnName("نام کالا")
                    .HasMaxLength(4000);

                entity.Property(e => e.نوعخریدار).HasColumnName("نوع خریدار");

                entity.Property(e => e.کدخریدار)
                    .HasColumnName("کد خریدار")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.کدملیخریدار)
                    .HasColumnName("کد ملی خریدار")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.کدنوعشخص).HasColumnName("کد نوع شخص");

                entity.Property(e => e.کدپستی)
                    .HasColumnName("کد پستی")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.کدکالا)
                    .HasColumnName("کد کالا")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwSalShpInvoice>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalShpInvoice");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsGrpSi).HasColumnName("InvGdsGrp_Si");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.ShpCashierId)
                    .HasColumnName("ShpCashier_Id")
                    .HasMaxLength(50);

                entity.Property(e => e.ShpCashierPassword)
                    .HasColumnName("ShpCashier_Password")
                    .HasMaxLength(50);

                entity.Property(e => e.ShpInvoiceDBarCode)
                    .HasColumnName("ShpInvoiceD_BarCode")
                    .HasMaxLength(50);

                entity.Property(e => e.ShpInvoiceDPrice)
                    .HasColumnName("ShpInvoiceD_Price")
                    .HasColumnType("money");

                entity.Property(e => e.ShpInvoiceDQty).HasColumnName("ShpInvoiceD_Qty");

                entity.Property(e => e.ShpInvoiceDSerial).HasColumnName("ShpInvoiceD_Serial");

                entity.Property(e => e.ShpInvoiceDUnitPrice).HasColumnName("ShpInvoiceD_UnitPrice");

                entity.Property(e => e.ShpInvoiceHCancelled).HasColumnName("ShpInvoiceH_Cancelled");

                entity.Property(e => e.ShpInvoiceHCancelledDt)
                    .HasColumnName("ShpInvoiceH_CancelledDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.ShpInvoiceHCreateDt)
                    .HasColumnName("ShpInvoiceH_CreateDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.ShpInvoiceHDiscount)
                    .HasColumnName("ShpInvoiceH_Discount")
                    .HasColumnType("money");

                entity.Property(e => e.ShpInvoiceHDt)
                    .HasColumnName("ShpInvoiceH_DT")
                    .HasColumnType("datetime");

                entity.Property(e => e.ShpInvoiceHEditCounter).HasColumnName("ShpInvoiceH_EditCounter");

                entity.Property(e => e.ShpInvoiceHId).HasColumnName("ShpInvoiceH_Id");

                entity.Property(e => e.ShpInvoiceHLastModifiedDt)
                    .HasColumnName("ShpInvoiceH_LastModifiedDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.ShpInvoiceHPayment)
                    .HasColumnName("ShpInvoiceH_Payment")
                    .HasColumnType("money");

                entity.Property(e => e.ShpInvoiceHPrintCounter).HasColumnName("ShpInvoiceH_PrintCounter");

                entity.Property(e => e.ShpInvoiceHReturn).HasColumnName("ShpInvoiceH_Return");

                entity.Property(e => e.ShpInvoiceHTotal)
                    .HasColumnName("ShpInvoiceH_Total")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<VwSalSrv>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalSrv");

                entity.Property(e => e.SalSrvCu)
                    .IsRequired()
                    .HasColumnName("SalSrv_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalSrvSi)
                    .HasColumnName("SalSrv_Si")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.SalSrvSiParent).HasColumnName("SalSrv_SiParent");

                entity.Property(e => e.SalSrvTp)
                    .HasColumnName("SalSrv_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalSrvUnt)
                    .HasColumnName("SalSrv_Unt")
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwSalSrvAcc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalSrvAcc");

                entity.Property(e => e.AccMCu)
                    .HasColumnName("AccM_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccMSi).HasColumnName("AccM_Si");

                entity.Property(e => e.AccMTp)
                    .HasColumnName("AccM_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccMTp2)
                    .HasColumnName("AccM_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccTCu)
                    .HasColumnName("AccT_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccTSi).HasColumnName("AccT_Si");

                entity.Property(e => e.AccTTp)
                    .HasColumnName("AccT_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccTTp2)
                    .HasColumnName("AccT_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalSrvCu)
                    .IsRequired()
                    .HasColumnName("SalSrv_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalSrvSi).HasColumnName("SalSrv_Si");

                entity.Property(e => e.SalSrvTp)
                    .HasColumnName("SalSrv_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalSrvUnt)
                    .HasColumnName("SalSrv_Unt")
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwSalTreasury>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalTreasury");

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHCu).HasColumnName("SalInvcH_Cu");

                entity.Property(e => e.SalInvcHDs)
                    .HasColumnName("SalInvcH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHPrcInc).HasColumnName("SalInvcH_Prc_Inc");

                entity.Property(e => e.SalInvcHPrcTotal)
                    .HasColumnName("SalInvcH_Prc_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalRespSi).HasColumnName("SalResp_Si");

                entity.Property(e => e.SalRespTp)
                    .HasColumnName("SalResp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcACreditC)
                    .HasColumnName("TrsDcA_CreditC")
                    .HasColumnType("money");

                entity.Property(e => e.TrsDcADebitC)
                    .HasColumnName("TrsDcA_DebitC")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<VwSalTresuryCust>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalTresuryCust");

                entity.Property(e => e.SalCustCu)
                    .HasColumnName("SalCust_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHPrcInc)
                    .HasColumnName("SalInvcH_Prc_Inc")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcHPrcTotal)
                    .HasColumnName("SalInvcH_Prc_Total")
                    .HasColumnType("money");

                entity.Property(e => e.TrsDcACreditC)
                    .HasColumnName("TrsDcA_CreditC")
                    .HasColumnType("money");

                entity.Property(e => e.TrsDcADebitC)
                    .HasColumnName("TrsDcA_DebitC")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<VwSalTresuryResp>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalTresuryResp");

                entity.Property(e => e.SalInvcHPrcInc)
                    .HasColumnName("SalInvcH_Prc_Inc")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcHPrcTotal)
                    .HasColumnName("SalInvcH_Prc_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalRespSi).HasColumnName("SalResp_Si");

                entity.Property(e => e.SalRespTp)
                    .HasColumnName("SalResp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcACreditC)
                    .HasColumnName("TrsDcA_CreditC")
                    .HasColumnType("money");

                entity.Property(e => e.TrsDcADebitC)
                    .HasColumnName("TrsDcA_DebitC")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<VwSalVchrD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalVchrD");

                entity.Property(e => e.AccDocHSi).HasColumnName("AccDocH_Si");

                entity.Property(e => e.AccLcCu)
                    .HasColumnName("AccLC_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLcTp)
                    .HasColumnName("AccLC_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLcTp2)
                    .HasColumnName("AccLC_Tp2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmCu)
                    .HasColumnName("AccLM_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLmTp)
                    .HasColumnName("AccLM_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmTp2)
                    .HasColumnName("AccLM_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpCu)
                    .HasColumnName("AccLP_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLpTp)
                    .HasColumnName("AccLP_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpTp2)
                    .HasColumnName("AccLP_Tp2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtCu)
                    .HasColumnName("AccLT_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AccLtTp)
                    .HasColumnName("AccLT_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtTp2)
                    .HasColumnName("AccLT_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.CtbCurncyTp)
                    .HasColumnName("CtbCurncy_Tp")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DsDoc).HasColumnType("smalldatetime");

                entity.Property(e => e.SalVchrDCredit)
                    .HasColumnName("SalVchrD_Credit")
                    .HasColumnType("money");

                entity.Property(e => e.SalVchrDCreditC)
                    .HasColumnName("SalVchrD_CreditC")
                    .HasColumnType("money");

                entity.Property(e => e.SalVchrDDebit)
                    .HasColumnName("SalVchrD_Debit")
                    .HasColumnType("money");

                entity.Property(e => e.SalVchrDDebitC)
                    .HasColumnName("SalVchrD_DebitC")
                    .HasColumnType("money");

                entity.Property(e => e.SalVchrDId).HasColumnName("SalVchrD_Id");

                entity.Property(e => e.SalVchrDReferenceId).HasColumnName("SalVchrD_ReferenceId");

                entity.Property(e => e.SalVchrDTx)
                    .IsRequired()
                    .HasColumnName("SalVchrD_Tx")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalVchrDType).HasColumnName("SalVchrD_Type");

                entity.Property(e => e.SalVchrHDate)
                    .HasColumnName("SalVchrH_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.SalVchrHDateFrom)
                    .HasColumnName("SalVchrH_DateFrom")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.SalVchrHDateUntil)
                    .HasColumnName("SalVchrH_DateUntil")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.SalVchrHId).HasColumnName("SalVchrH_Id");

                entity.Property(e => e.SalVchrHRow).HasColumnName("SalVchrH_Row");

                entity.Property(e => e.SalVchrHSent).HasColumnName("SalVchrH_Sent");

                entity.Property(e => e.SalVchrHTx)
                    .HasColumnName("SalVchrH_Tx")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwSalVchrH>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalVchrH");

                entity.Property(e => e.AccDocHSi).HasColumnName("AccDocH_Si");

                entity.Property(e => e.DsDoc).HasColumnType("smalldatetime");

                entity.Property(e => e.SalVchrHDate)
                    .HasColumnName("SalVchrH_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.SalVchrHDateFrom)
                    .HasColumnName("SalVchrH_DateFrom")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.SalVchrHDateUntil)
                    .HasColumnName("SalVchrH_DateUntil")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.SalVchrHId).HasColumnName("SalVchrH_Id");

                entity.Property(e => e.SalVchrHSent).HasColumnName("SalVchrH_Sent");

                entity.Property(e => e.SalVchrHTx)
                    .HasColumnName("SalVchrH_Tx")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwSaleDclPrc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSaleDclPrc");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsGrpSi).HasColumnName("InvGdsGrp_Si");

                entity.Property(e => e.InvGdsGrpTp)
                    .HasColumnName("InvGdsGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTechNo)
                    .HasColumnName("InvGds_TechNo")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvGdsTypSi).HasColumnName("InvGdsTyp_Si");

                entity.Property(e => e.InvGdsTypTp)
                    .HasColumnName("InvGdsTyp_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntCu)
                    .HasColumnName("InvUnt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchCu)
                    .HasColumnName("SalBrnch_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalBrnchSi).HasColumnName("SalBrnch_Si");

                entity.Property(e => e.SalBrnchTp)
                    .HasColumnName("SalBrnch_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpCu)
                    .HasColumnName("SalCustGrp_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalCustGrpSi).HasColumnName("SalCustGrp_Si");

                entity.Property(e => e.SalCustGrpTp)
                    .HasColumnName("SalCustGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalDclrPrcDLckPrc).HasColumnName("SalDclrPrcD_LckPrc");

                entity.Property(e => e.SalDclrPrcDQty).HasColumnName("SalDclrPrcD_Qty");

                entity.Property(e => e.SalDclrPrcDSi).HasColumnName("SalDclrPrcD_Si");

                entity.Property(e => e.SalDclrPrcDUntPrc)
                    .HasColumnName("SalDclrPrcD_UntPrc")
                    .HasColumnType("money");

                entity.Property(e => e.SalDclrPrcDUntPrcMax)
                    .HasColumnName("SalDclrPrcD_UntPrc_Max")
                    .HasColumnType("money");

                entity.Property(e => e.SalDclrPrcDUntPrcMin)
                    .HasColumnName("SalDclrPrcD_UntPrc_Min")
                    .HasColumnType("money");

                entity.Property(e => e.SalDclrPrcHCu).HasColumnName("SalDclrPrcH_Cu");

                entity.Property(e => e.SalDclrPrcHDm)
                    .HasColumnName("SalDclrPrcH_Dm")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SalDclrPrcHDs)
                    .IsRequired()
                    .HasColumnName("SalDclrPrcH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalDclrPrcHSi).HasColumnName("SalDclrPrcH_Si");

                entity.Property(e => e.SalDclrPrcHStatus).HasColumnName("SalDclrPrcH_Status");
            });

            modelBuilder.Entity<VwSalinvcD2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSalinvcD2");

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.SalInvcDQty)
                    .HasColumnName("SalInvcD_Qty")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcDQty2).HasColumnName("SalInvcD_Qty2");

                entity.Property(e => e.SalInvcHSi).HasColumnName("SalInvcH_Si");
            });

            modelBuilder.Entity<VwSysDataDic>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSysDataDic");

                entity.Property(e => e.CName)
                    .HasColumnName("cName")
                    .HasMaxLength(128);

                entity.Property(e => e.OName)
                    .IsRequired()
                    .HasColumnName("oName")
                    .HasMaxLength(128);

                entity.Property(e => e.Xtype)
                    .IsRequired()
                    .HasColumnName("xtype")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<VwSysDataDicD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwSysDataDicD");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(128);

                entity.Property(e => e.Value)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwTransBijak>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwTransBijak");

                entity.Property(e => e.TransBijakDGds)
                    .HasColumnName("TransBijakD_Gds")
                    .HasMaxLength(4000);

                entity.Property(e => e.TransBijakDNumber).HasColumnName("TransBijakD_Number");

                entity.Property(e => e.TransBijakDSerial)
                    .HasColumnName("TransBijakD_Serial")
                    .HasMaxLength(4000);

                entity.Property(e => e.TransBijakDSi).HasColumnName("TransBijakD_Si");

                entity.Property(e => e.TransBijakDUnit)
                    .HasColumnName("TransBijakD_Unit")
                    .HasMaxLength(4000);

                entity.Property(e => e.TransBijakDUnitW)
                    .HasColumnName("TransBijakD_UnitW")
                    .HasMaxLength(400);

                entity.Property(e => e.TransBijakDWeight).HasColumnName("TransBijakD_Weight");

                entity.Property(e => e.TransBijakHCarFare1)
                    .HasColumnName("TransBijakH_CarFare1")
                    .HasColumnType("money");

                entity.Property(e => e.TransBijakHCarFare2)
                    .HasColumnName("TransBijakH_CarFare2")
                    .HasColumnType("money");

                entity.Property(e => e.TransBijakHCarFare3)
                    .HasColumnName("TransBijakH_CarFare3")
                    .HasColumnType("money");

                entity.Property(e => e.TransBijakHCarFare4)
                    .HasColumnName("TransBijakH_CarFare4")
                    .HasColumnType("money");

                entity.Property(e => e.TransBijakHCarFare5)
                    .HasColumnName("TransBijakH_CarFare5")
                    .HasColumnType("money");

                entity.Property(e => e.TransBijakHCu)
                    .HasColumnName("TransBijakH_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.TransBijakHDate)
                    .HasColumnName("TransBijakH_Date")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.TransBijakHDescription)
                    .HasColumnName("TransBijakH_Description")
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.TransBijakHDescription2)
                    .HasColumnName("TransBijakH_Description2")
                    .HasMaxLength(4000);

                entity.Property(e => e.TransBijakHGdsDeliveryLoc)
                    .HasColumnName("TransBijakH_GdsDeliveryLoc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TransBijakHLock).HasColumnName("TransBijakH_Lock");

                entity.Property(e => e.TransBijakHReceiver)
                    .HasColumnName("TransBijakH_Receiver")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TransBijakHReceiverAddrs)
                    .HasColumnName("TransBijakH_ReceiverAddrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.TransBijakHSender)
                    .HasColumnName("TransBijakH_Sender")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TransBijakHSenderAddrs)
                    .HasColumnName("TransBijakH_SenderAddrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.TransBijakHSi).HasColumnName("TransBijakH_Si");

                entity.Property(e => e.TransBijakHTarget)
                    .HasColumnName("TransBijakH_Target")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TransBijakHTime)
                    .HasColumnName("TransBijakH_Time")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<VwTransBijakTabDeliver>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwTransBijakTabDeliver");

                entity.Property(e => e.AccMSi).HasColumnName("AccM_Si");

                entity.Property(e => e.AccTSi).HasColumnName("AccT_Si");

                entity.Property(e => e.DeliverRemDate)
                    .HasColumnName("DeliverRem_Date")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.TransBijakDGds)
                    .HasColumnName("TransBijakD_Gds")
                    .HasMaxLength(4000);

                entity.Property(e => e.TransBijakDNumber).HasColumnName("TransBijakD_Number");

                entity.Property(e => e.TransBijakDSi).HasColumnName("TransBijakD_Si");

                entity.Property(e => e.TransBijakDUnit)
                    .HasColumnName("TransBijakD_Unit")
                    .HasMaxLength(4000);

                entity.Property(e => e.TransBijakDWeight).HasColumnName("TransBijakD_Weight");

                entity.Property(e => e.TransBijakHCarFare1)
                    .HasColumnName("TransBijakH_CarFare1")
                    .HasColumnType("money");

                entity.Property(e => e.TransBijakHCarFare2)
                    .HasColumnName("TransBijakH_CarFare2")
                    .HasColumnType("money");

                entity.Property(e => e.TransBijakHCarFare3)
                    .HasColumnName("TransBijakH_CarFare3")
                    .HasColumnType("money");

                entity.Property(e => e.TransBijakHCarFare4)
                    .HasColumnName("TransBijakH_CarFare4")
                    .HasColumnType("money");

                entity.Property(e => e.TransBijakHCarFare5)
                    .HasColumnName("TransBijakH_CarFare5")
                    .HasColumnType("money");

                entity.Property(e => e.TransBijakHCu)
                    .HasColumnName("TransBijakH_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.TransBijakHDate)
                    .HasColumnName("TransBijakH_Date")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.TransBijakHDescription)
                    .HasColumnName("TransBijakH_Description")
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.TransBijakHGdsDeliveryLoc)
                    .HasColumnName("TransBijakH_GdsDeliveryLoc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TransBijakHLock).HasColumnName("TransBijakH_Lock");

                entity.Property(e => e.TransBijakHReceiver)
                    .HasColumnName("TransBijakH_Receiver")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TransBijakHReceiverAddrs)
                    .HasColumnName("TransBijakH_ReceiverAddrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.TransBijakHReceiverTel)
                    .HasColumnName("TransBijakH_ReceiverTel")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TransBijakHSender)
                    .HasColumnName("TransBijakH_Sender")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TransBijakHSenderAddrs)
                    .HasColumnName("TransBijakH_SenderAddrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.TransBijakHSi).HasColumnName("TransBijakH_Si");

                entity.Property(e => e.TransBijakHTarget)
                    .HasColumnName("TransBijakH_Target")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TransBijakHTime)
                    .HasColumnName("TransBijakH_Time")
                    .HasColumnType("datetime");

                entity.Property(e => e.TransCustomerAddress)
                    .HasColumnName("TransCustomer_Address")
                    .HasMaxLength(255);

                entity.Property(e => e.TransCustomerCu).HasColumnName("TransCustomer_Cu");

                entity.Property(e => e.TransCustomerSi).HasColumnName("TransCustomer_Si");

                entity.Property(e => e.TransCustomerTel)
                    .HasColumnName("TransCustomer_Tel")
                    .HasMaxLength(50);

                entity.Property(e => e.TransCustomerTp)
                    .HasColumnName("TransCustomer_Tp")
                    .HasMaxLength(100);

                entity.Property(e => e.TransDeliverDSi).HasColumnName("TransDeliverD_Si");

                entity.Property(e => e.TransDeliverHAccDoc).HasColumnName("TransDeliverH_AccDoc");

                entity.Property(e => e.TransDeliverHCarFare1)
                    .HasColumnName("TransDeliverH_CarFare1")
                    .HasColumnType("money");

                entity.Property(e => e.TransDeliverHCarFare2)
                    .HasColumnName("TransDeliverH_CarFare2")
                    .HasColumnType("money");

                entity.Property(e => e.TransDeliverHCarFare3)
                    .HasColumnName("TransDeliverH_CarFare3")
                    .HasColumnType("money");

                entity.Property(e => e.TransDeliverHCarFare4)
                    .HasColumnName("TransDeliverH_CarFare4")
                    .HasColumnType("money");

                entity.Property(e => e.TransDeliverHCarFare5)
                    .HasColumnName("TransDeliverH_CarFare5")
                    .HasColumnType("money");

                entity.Property(e => e.TransDeliverHCareFareSum)
                    .HasColumnName("TransDeliverH_CareFareSum")
                    .HasColumnType("money");

                entity.Property(e => e.TransDeliverHCost)
                    .HasColumnName("TransDeliverH_Cost")
                    .HasColumnType("money");

                entity.Property(e => e.TransDeliverHCu).HasColumnName("TransDeliverH_Cu");

                entity.Property(e => e.TransDeliverHDeliverDate)
                    .HasColumnName("TransDeliverH_DeliverDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.TransDeliverHDeliverStatus).HasColumnName("TransDeliverH_DeliverStatus");

                entity.Property(e => e.TransDeliverHEnterDate)
                    .HasColumnName("TransDeliverH_EnterDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.TransDeliverHInventoryCost)
                    .HasColumnName("TransDeliverH_InventoryCost")
                    .HasColumnType("money");

                entity.Property(e => e.TransDeliverHOtherCost)
                    .HasColumnName("TransDeliverH_OtherCost")
                    .HasColumnType("money");

                entity.Property(e => e.TransDeliverHSi).HasColumnName("TransDeliverH_Si");

                entity.Property(e => e.TransDeliverHVanCost)
                    .HasColumnName("TransDeliverH_VanCost")
                    .HasColumnType("money");

                entity.Property(e => e.TransDriverCarTag)
                    .HasColumnName("TransDriver_CarTag")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TransDriverFname)
                    .HasColumnName("TransDriver_FName")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TransDriverFullName)
                    .HasColumnName("TransDriver_FullName")
                    .HasMaxLength(71)
                    .IsUnicode(false);

                entity.Property(e => e.TransDriverLname)
                    .HasColumnName("TransDriver_LName")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TransDriverSi).HasColumnName("TransDriver_Si");

                entity.Property(e => e.TransTabDSi).HasColumnName("TransTabD_Si");

                entity.Property(e => e.TransTabHCarTag)
                    .HasColumnName("TransTabH_CarTag")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.TransTabHCu)
                    .HasColumnName("TransTabH_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.TransTabHDate)
                    .HasColumnName("TransTabH_Date")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.TransTabHFromLoc)
                    .HasColumnName("TransTabH_FromLoc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TransTabHSi).HasColumnName("TransTabH_Si");

                entity.Property(e => e.TransTabHToLoc)
                    .HasColumnName("TransTabH_ToLoc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TransdriverAddress)
                    .HasColumnName("transdriver_address")
                    .HasMaxLength(100);

                entity.Property(e => e.TransdriverTel)
                    .HasColumnName("transdriver_tel")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwTransCustomer>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwTransCustomer");

                entity.Property(e => e.AccMSi).HasColumnName("AccM_Si");

                entity.Property(e => e.AccTSi).HasColumnName("AccT_Si");

                entity.Property(e => e.CuAccM)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuAccT)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccM)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccT)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TransCustomerAddress)
                    .HasColumnName("TransCustomer_Address")
                    .HasMaxLength(255);

                entity.Property(e => e.TransCustomerCu).HasColumnName("TransCustomer_Cu");

                entity.Property(e => e.TransCustomerSi).HasColumnName("TransCustomer_Si");

                entity.Property(e => e.TransCustomerTel)
                    .HasColumnName("TransCustomer_Tel")
                    .HasMaxLength(50);

                entity.Property(e => e.TransCustomerTp)
                    .HasColumnName("TransCustomer_Tp")
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<VwTransDeliver>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwTransDeliver");

                entity.Property(e => e.AccMSi).HasColumnName("AccM_Si");

                entity.Property(e => e.AccTSi).HasColumnName("AccT_Si");

                entity.Property(e => e.TransCustomerAddress)
                    .HasColumnName("TransCustomer_Address")
                    .HasMaxLength(255);

                entity.Property(e => e.TransCustomerCu).HasColumnName("TransCustomer_Cu");

                entity.Property(e => e.TransCustomerSi).HasColumnName("TransCustomer_Si");

                entity.Property(e => e.TransCustomerTel)
                    .HasColumnName("TransCustomer_Tel")
                    .HasMaxLength(50);

                entity.Property(e => e.TransCustomerTp)
                    .HasColumnName("TransCustomer_Tp")
                    .HasMaxLength(100);

                entity.Property(e => e.TransDeliverHAccDoc).HasColumnName("TransDeliverH_AccDoc");

                entity.Property(e => e.TransDeliverHCarFare1)
                    .HasColumnName("TransDeliverH_CarFare1")
                    .HasColumnType("money");

                entity.Property(e => e.TransDeliverHCarFare2)
                    .HasColumnName("TransDeliverH_CarFare2")
                    .HasColumnType("money");

                entity.Property(e => e.TransDeliverHCarFare3)
                    .HasColumnName("TransDeliverH_CarFare3")
                    .HasColumnType("money");

                entity.Property(e => e.TransDeliverHCarFare4)
                    .HasColumnName("TransDeliverH_CarFare4")
                    .HasColumnType("money");

                entity.Property(e => e.TransDeliverHCarFare5)
                    .HasColumnName("TransDeliverH_CarFare5")
                    .HasColumnType("money");

                entity.Property(e => e.TransDeliverHCareFareSum)
                    .HasColumnName("TransDeliverH_CareFareSum")
                    .HasColumnType("money");

                entity.Property(e => e.TransDeliverHCost)
                    .HasColumnName("TransDeliverH_Cost")
                    .HasColumnType("money");

                entity.Property(e => e.TransDeliverHCu).HasColumnName("TransDeliverH_Cu");

                entity.Property(e => e.TransDeliverHDeliverDate)
                    .HasColumnName("TransDeliverH_DeliverDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.TransDeliverHDeliverStatus).HasColumnName("TransDeliverH_DeliverStatus");

                entity.Property(e => e.TransDeliverHEnterDate)
                    .HasColumnName("TransDeliverH_EnterDate")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.TransDeliverHInventoryCost)
                    .HasColumnName("TransDeliverH_InventoryCost")
                    .HasColumnType("money");

                entity.Property(e => e.TransDeliverHOtherCost)
                    .HasColumnName("TransDeliverH_OtherCost")
                    .HasColumnType("money");

                entity.Property(e => e.TransDeliverHSi).HasColumnName("TransDeliverH_Si");

                entity.Property(e => e.TransDeliverHVanCost)
                    .HasColumnName("TransDeliverH_VanCost")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<VwTransDriver>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwTransDriver");

                entity.Property(e => e.TransDriverAddress)
                    .HasColumnName("TransDriver_Address")
                    .HasMaxLength(100);

                entity.Property(e => e.TransDriverCarTag)
                    .HasColumnName("TransDriver_CarTag")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TransDriverFname)
                    .HasColumnName("TransDriver_FName")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TransDriverFullName)
                    .HasColumnName("TransDriver_FullName")
                    .HasMaxLength(71)
                    .IsUnicode(false);

                entity.Property(e => e.TransDriverLname)
                    .HasColumnName("TransDriver_LName")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TransDriverSi).HasColumnName("TransDriver_Si");

                entity.Property(e => e.TransDriverTel)
                    .HasColumnName("TransDriver_Tel")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwTransTab>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwTransTab");

                entity.Property(e => e.TransBijakDGds)
                    .HasColumnName("TransBijakD_Gds")
                    .HasMaxLength(4000);

                entity.Property(e => e.TransBijakDNumber).HasColumnName("TransBijakD_Number");

                entity.Property(e => e.TransBijakDSi).HasColumnName("TransBijakD_Si");

                entity.Property(e => e.TransBijakDWeight).HasColumnName("TransBijakD_Weight");

                entity.Property(e => e.TransBijakHCarFare1)
                    .HasColumnName("TransBijakH_CarFare1")
                    .HasColumnType("money");

                entity.Property(e => e.TransBijakHCarFare2)
                    .HasColumnName("TransBijakH_CarFare2")
                    .HasColumnType("money");

                entity.Property(e => e.TransBijakHCarFare3)
                    .HasColumnName("TransBijakH_CarFare3")
                    .HasColumnType("money");

                entity.Property(e => e.TransBijakHCarFare4)
                    .HasColumnName("TransBijakH_CarFare4")
                    .HasColumnType("money");

                entity.Property(e => e.TransBijakHCarFare5)
                    .HasColumnName("TransBijakH_CarFare5")
                    .HasColumnType("money");

                entity.Property(e => e.TransBijakHCu)
                    .HasColumnName("TransBijakH_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.TransBijakHDate)
                    .HasColumnName("TransBijakH_Date")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.TransBijakHDescription)
                    .HasColumnName("TransBijakH_Description")
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.TransBijakHGdsDeliveryLoc)
                    .HasColumnName("TransBijakH_GdsDeliveryLoc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TransBijakHReceiver)
                    .HasColumnName("TransBijakH_Receiver")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TransBijakHReceiverAddrs)
                    .HasColumnName("TransBijakH_ReceiverAddrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.TransBijakHSender)
                    .HasColumnName("TransBijakH_Sender")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TransBijakHSenderAddrs)
                    .HasColumnName("TransBijakH_SenderAddrs")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.TransBijakHSi).HasColumnName("TransBijakH_Si");

                entity.Property(e => e.TransBijakHTarget)
                    .HasColumnName("TransBijakH_Target")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TransDriverSi).HasColumnName("TransDriver_Si");

                entity.Property(e => e.TransTabDSi).HasColumnName("TransTabD_Si");

                entity.Property(e => e.TransTabHCarTag)
                    .HasColumnName("TransTabH_CarTag")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.TransTabHCu)
                    .HasColumnName("TransTabH_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.TransTabHDate)
                    .HasColumnName("TransTabH_Date")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.TransTabHFromLoc)
                    .HasColumnName("TransTabH_FromLoc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TransTabHSi).HasColumnName("TransTabH_Si");

                entity.Property(e => e.TransTabHToLoc)
                    .HasColumnName("TransTabH_ToLoc")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwTransTabPrn>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwTransTabPrn");

                entity.Property(e => e.TransBijakDNumber).HasColumnName("TransBijakD_Number");

                entity.Property(e => e.TransBijakHCarFare1)
                    .HasColumnName("TransBijakH_CarFare1")
                    .HasColumnType("money");

                entity.Property(e => e.TransBijakHCarFare2)
                    .HasColumnName("TransBijakH_CarFare2")
                    .HasColumnType("money");

                entity.Property(e => e.TransBijakHCarFare3)
                    .HasColumnName("TransBijakH_CarFare3")
                    .HasColumnType("money");

                entity.Property(e => e.TransBijakHCarFare4)
                    .HasColumnName("TransBijakH_CarFare4")
                    .HasColumnType("money");

                entity.Property(e => e.TransBijakHCarFare5)
                    .HasColumnName("TransBijakH_CarFare5")
                    .HasColumnType("money");

                entity.Property(e => e.TransBijakHCu)
                    .HasColumnName("TransBijakH_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.TransBijakHDate)
                    .HasColumnName("TransBijakH_Date")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.TransBijakHDescription)
                    .HasColumnName("TransBijakH_Description")
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.TransBijakHReceiver)
                    .HasColumnName("TransBijakH_Receiver")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TransBijakHSender)
                    .HasColumnName("TransBijakH_Sender")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TransBijakHSi).HasColumnName("TransBijakH_Si");

                entity.Property(e => e.TransBijakHTarget)
                    .HasColumnName("TransBijakH_Target")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TransTabHCarTag)
                    .HasColumnName("TransTabH_CarTag")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.TransTabHCu)
                    .HasColumnName("TransTabH_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.TransTabHDate)
                    .HasColumnName("TransTabH_Date")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.TransTabHFromLoc)
                    .HasColumnName("TransTabH_FromLoc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TransTabHSi).HasColumnName("TransTabH_Si");

                entity.Property(e => e.TransTabHToLoc)
                    .HasColumnName("TransTabH_ToLoc")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwTransVoucherD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwTransVoucherD");

                entity.Property(e => e.CuAccM)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuAccT)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SiHdoc).HasColumnName("SiHDoc");

                entity.Property(e => e.TpAccM)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccT)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpHdoc)
                    .HasColumnName("TpHDoc")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.TransVoucherDCredit)
                    .HasColumnName("TransVoucherD_Credit")
                    .HasColumnType("money");

                entity.Property(e => e.TransVoucherDDebit)
                    .HasColumnName("TransVoucherD_Debit")
                    .HasColumnType("money");

                entity.Property(e => e.TransVoucherDSi).HasColumnName("TransVoucherD_Si");

                entity.Property(e => e.TransVoucherDTx)
                    .HasColumnName("TransVoucherD_Tx")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TransVoucherHDate)
                    .HasColumnName("TransVoucherH_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.TransVoucherHSent).HasColumnName("TransVoucherH_Sent");

                entity.Property(e => e.TransVoucherHSi).HasColumnName("TransVoucherH_Si");

                entity.Property(e => e.TransVoucherHTx)
                    .HasColumnName("TransVoucherH_Tx")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwTransVoucherH>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwTransVoucherH");

                entity.Property(e => e.SiHdoc).HasColumnName("SiHDoc");

                entity.Property(e => e.TpHdoc)
                    .HasColumnName("TpHDoc")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.TransVoucherHDate)
                    .HasColumnName("TransVoucherH_Date")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.TransVoucherHSent).HasColumnName("TransVoucherH_Sent");

                entity.Property(e => e.TransVoucherHSi).HasColumnName("TransVoucherH_Si");

                entity.Property(e => e.TransVoucherHTx)
                    .HasColumnName("TransVoucherH_Tx")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwTrsAccLc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwTrsAccLC");

                entity.Property(e => e.AccLcCu)
                    .HasColumnName("AccLC_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLcTp)
                    .HasColumnName("AccLC_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");
            });

            modelBuilder.Entity<VwTrsAccLm>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwTrsAccLM");

                entity.Property(e => e.AccLmCu)
                    .IsRequired()
                    .HasColumnName("AccLM_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmSi)
                    .HasColumnName("AccLM_Si")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AccLmTp)
                    .HasColumnName("AccLM_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwTrsAccLp>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwTrsAccLP");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLpCu)
                    .HasColumnName("AccLP_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLpTp)
                    .HasColumnName("AccLP_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwTrsAccLt>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwTrsAccLT");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLtCu)
                    .HasColumnName("AccLT_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AccLtTp)
                    .HasColumnName("AccLT_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwTrsAccLtaccNo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwTrsAccLTAccNo");

                entity.Property(e => e.AccLtCu)
                    .HasColumnName("AccLT_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AccLtTp)
                    .HasColumnName("AccLT_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TrsAccLtaccNoAccountNo)
                    .HasColumnName("TrsAccLTAccNo_AccountNo")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsAccLtaccNoBankName)
                    .HasColumnName("TrsAccLTAccNo_BankName")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsAccLtaccNoSi).HasColumnName("TrsAccLTAccNo_Si");
            });

            modelBuilder.Entity<VwTrsAnlyz>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwTrsAnlyz");

                entity.Property(e => e.AccDesc)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.AccDocHSi).HasColumnName("AccDocH_Si");

                entity.Property(e => e.AccLcCu).HasColumnName("AccLC_Cu");

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLcTp).HasColumnName("AccLC_Tp");

                entity.Property(e => e.AccLmCu)
                    .IsRequired()
                    .HasColumnName("AccLM_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLmTp)
                    .HasColumnName("AccLM_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpCu).HasColumnName("AccLP_Cu");

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLpTp).HasColumnName("AccLP_Tp");

                entity.Property(e => e.AccLtCu)
                    .HasColumnName("AccLT_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AccLtTp)
                    .HasColumnName("AccLT_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Credit).HasColumnType("money");

                entity.Property(e => e.CtbMnthSi).HasColumnName("CtbMnth_Si");

                entity.Property(e => e.Debit).HasColumnType("money");

                entity.Property(e => e.Dt)
                    .HasColumnName("DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Tp)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.TrsCtypSi).HasColumnName("TrsCTyp_Si");

                entity.Property(e => e.TrsCtypTp)
                    .HasColumnName("TrsCTyp_Tp")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcASi).HasColumnName("TrsDcA_Si");

                entity.Property(e => e.TrsDcCDt)
                    .HasColumnName("TrsDcC_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.TrsDcCIaccNo)
                    .HasColumnName("TrsDcC_IAccNo")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCIbnk)
                    .HasColumnName("TrsDcC_IBnk")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCIbrnch)
                    .HasColumnName("TrsDcC_IBrnch")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCIno).HasColumnName("TrsDcC_INo");

                entity.Property(e => e.TrsDcCRfrnc)
                    .HasColumnName("TrsDcC_Rfrnc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCSi).HasColumnName("TrsDcC_Si");

                entity.Property(e => e.TrsDcCu).HasColumnName("TrsDc_Cu");

                entity.Property(e => e.TrsDcSSi).HasColumnName("TrsDcS_Si");

                entity.Property(e => e.TrsDcSi).HasColumnName("TrsDc_Si");

                entity.Property(e => e.TrsDcTypSi).HasColumnName("TrsDcTyp_Si");

                entity.Property(e => e.TrsRsrcSi).HasColumnName("TrsRsrc_Si");

                entity.Property(e => e.TrsRsrcTp)
                    .IsRequired()
                    .HasColumnName("TrsRsrc_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsSi).HasColumnName("TrsSts_Si");

                entity.Property(e => e.TrsStsTp)
                    .HasColumnName("TrsSts_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwTrsAordr>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwTrsAOrdr");

                entity.Property(e => e.StmpCdt)
                    .HasColumnName("StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.StmpCus)
                    .HasColumnName("StmpCUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.StmpMdt)
                    .HasColumnName("StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.StmpMus)
                    .HasColumnName("StmpMUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.TpSystem)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsAordrDesc)
                    .HasColumnName("TrsAOrdr_Desc")
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.TrsAordrDt)
                    .HasColumnName("TrsAOrdr_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.TrsAordrPrc)
                    .HasColumnName("TrsAOrdr_Prc")
                    .HasColumnType("money");

                entity.Property(e => e.TrsAordrSi).HasColumnName("TrsAOrdr_Si");

                entity.Property(e => e.TrsAordrTypSi).HasColumnName("TrsAOrdrTyp_Si");

                entity.Property(e => e.TrsAordrTypTp)
                    .HasColumnName("TrsAOrdrTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsArqstSi).HasColumnName("TrsARqst_Si");

                entity.Property(e => e.TrsAsgnSi).HasColumnName("TrsAsgn_Si");
            });

            modelBuilder.Entity<VwTrsArqst>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwTrsARqst");

                entity.Property(e => e.AccLcCu)
                    .HasColumnName("AccLC_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLcTp)
                    .HasColumnName("AccLC_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmCu)
                    .HasColumnName("AccLM_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLmTp)
                    .HasColumnName("AccLM_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpCu)
                    .HasColumnName("AccLP_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLpTp)
                    .HasColumnName("AccLP_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtCu)
                    .HasColumnName("AccLT_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AccLtTp)
                    .HasColumnName("AccLT_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.StmpCdt)
                    .HasColumnName("StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.StmpCus)
                    .HasColumnName("StmpCUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.StmpMdt)
                    .HasColumnName("StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.StmpMus)
                    .HasColumnName("StmpMUs")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.TpSystem)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsAordrDt)
                    .HasColumnName("TrsAOrdr_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.TrsAordrSi).HasColumnName("TrsAOrdr_Si");

                entity.Property(e => e.TrsArqstDesc)
                    .HasColumnName("TrsARqst_Desc")
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.TrsArqstDt)
                    .HasColumnName("TrsARqst_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.TrsArqstPrc)
                    .HasColumnName("TrsARqst_Prc")
                    .HasColumnType("money");

                entity.Property(e => e.TrsArqstSbj)
                    .HasColumnName("TrsARqst_Sbj")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsArqstSi).HasColumnName("TrsARqst_Si");

                entity.Property(e => e.TrsArqstStsSi).HasColumnName("TrsARqstSts_Si");

                entity.Property(e => e.TrsArqstStsTp)
                    .HasColumnName("TrsARqstSts_Tp")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TrsArqstTypSi).HasColumnName("TrsARqstTyp_Si");

                entity.Property(e => e.TrsArqstTypTp)
                    .HasColumnName("TrsARqstTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsAsgnSi).HasColumnName("TrsAsgn_Si");

                entity.Property(e => e.TrsAsgnTp)
                    .HasColumnName("TrsAsgn_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TrsCtypTp)
                    .HasColumnName("TrsCTyp_Tp")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCDt)
                    .HasColumnName("TrsDcC_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.TrsDcCIbnk)
                    .HasColumnName("TrsDcC_IBnk")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCIno).HasColumnName("TrsDcC_INo");

                entity.Property(e => e.TrsDcCu).HasColumnName("TrsDc_Cu");

                entity.Property(e => e.TrsDcTypTp)
                    .HasColumnName("TrsDcTyp_Tp")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TrsRsrcTp)
                    .HasColumnName("TrsRsrc_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsTp)
                    .HasColumnName("TrsSts_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwTrsArqstToAsgn>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwTrsARqstToAsgn");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.CuAccM)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuAccT)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CuCost)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuProject)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccM)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccT)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpCost)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpProject)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.TrsArqstSi).HasColumnName("TrsARqst_Si");

                entity.Property(e => e.TrsArqstToAsgnPrc).HasColumnName("TrsARqstToAsgn_Prc");

                entity.Property(e => e.TrsArqstToAsgnTp)
                    .HasColumnName("TrsARqstToAsgn_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsAsgnTp)
                    .HasColumnName("TrsAsgn_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwTrsAsgn>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwTrsAsgn");

                entity.Property(e => e.AccLcCu)
                    .HasColumnName("AccLC_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLcTp)
                    .HasColumnName("AccLC_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLcTp2)
                    .HasColumnName("AccLC_Tp2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmCu)
                    .IsRequired()
                    .HasColumnName("AccLM_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLmTp)
                    .HasColumnName("AccLM_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmTp2)
                    .HasColumnName("AccLM_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpCu)
                    .HasColumnName("AccLP_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLpTp)
                    .HasColumnName("AccLP_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpcTp2)
                    .HasColumnName("AccLPC_Tp2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtCu)
                    .HasColumnName("AccLT_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AccLtTp)
                    .HasColumnName("AccLT_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtTp2)
                    .HasColumnName("AccLT_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TrsAsgnAct).HasColumnName("TrsAsgn_Act");

                entity.Property(e => e.TrsAsgnGrpSi)
                    .HasColumnName("TrsAsgnGrp_Si")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.TrsAsgnGrpTp)
                    .HasColumnName("TrsAsgnGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsAsgnSi).HasColumnName("TrsAsgn_Si");

                entity.Property(e => e.TrsAsgnTp)
                    .HasColumnName("TrsAsgn_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TrsAsgnUp).HasColumnName("TrsAsgn_UP");

                entity.Property(e => e.TrsAsgnUr).HasColumnName("TrsAsgn_UR");
            });

            modelBuilder.Entity<VwTrsAsgnUsr>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwTrsAsgnUsr");

                entity.Property(e => e.AccLcCu)
                    .HasColumnName("AccLC_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLcTp)
                    .HasColumnName("AccLC_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLcTp2)
                    .HasColumnName("AccLC_Tp2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmCu)
                    .IsRequired()
                    .HasColumnName("AccLM_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLmTp)
                    .HasColumnName("AccLM_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmTp2)
                    .HasColumnName("AccLM_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpCu)
                    .HasColumnName("AccLP_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLpTp)
                    .HasColumnName("AccLP_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpcTp2)
                    .HasColumnName("AccLPC_Tp2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtCu)
                    .HasColumnName("AccLT_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AccLtTp)
                    .HasColumnName("AccLT_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtTp2)
                    .HasColumnName("AccLT_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TrsAsgnAct).HasColumnName("TrsAsgn_Act");

                entity.Property(e => e.TrsAsgnGrpSi)
                    .HasColumnName("TrsAsgnGrp_Si")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.TrsAsgnGrpTp)
                    .HasColumnName("TrsAsgnGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsAsgnSi).HasColumnName("TrsAsgn_Si");

                entity.Property(e => e.TrsAsgnTp)
                    .HasColumnName("TrsAsgn_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TrsAsgnUp).HasColumnName("TrsAsgn_UP");

                entity.Property(e => e.TrsAsgnUr).HasColumnName("TrsAsgn_UR");
            });

            modelBuilder.Entity<VwTrsChqP>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwTrsChqP");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AccLtTp)
                    .HasColumnName("AccLT_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Acount).HasColumnName("ACount");

                entity.Property(e => e.Agap).HasColumnName("AGap");

                entity.Property(e => e.AmaxNo).HasColumnName("AMaxNo");

                entity.Property(e => e.Apages).HasColumnName("APages");

                entity.Property(e => e.Arem).HasColumnName("ARem");

                entity.Property(e => e.TrsChqPBgnNo).HasColumnName("TrsChqP_BgnNo");

                entity.Property(e => e.TrsChqPEndNo).HasColumnName("TrsChqP_EndNo");

                entity.Property(e => e.TrsChqPSi).HasColumnName("TrsChqP_Si");
            });

            modelBuilder.Entity<VwTrsDc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwTrsDc");

                entity.Property(e => e.StmpCdt)
                    .HasColumnName("StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.StmpCus)
                    .HasColumnName("StmpCUs")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.StmpMus)
                    .HasColumnName("StmpMUs")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCu).HasColumnName("TrsDc_Cu");

                entity.Property(e => e.TrsDcCu2).HasColumnName("TrsDc_Cu2");

                entity.Property(e => e.TrsDcDt)
                    .HasColumnName("TrsDc_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.TrsDcGrpSi).HasColumnName("TrsDcGrp_Si");

                entity.Property(e => e.TrsDcGrpTp)
                    .HasColumnName("TrsDcGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcMnthSi).HasColumnName("TrsDc_Mnth_Si");

                entity.Property(e => e.TrsDcShare).HasColumnName("TrsDc_Share");

                entity.Property(e => e.TrsDcSi).HasColumnName("TrsDc_Si");

                entity.Property(e => e.TrsDcStmpCdt)
                    .HasColumnName("TrsDc_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.TrsDcStmpMdt)
                    .HasColumnName("TrsDc_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.TrsDcStmpTime)
                    .HasColumnName("TrsDc_StmpTime")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcStmpTimeEdit)
                    .HasColumnName("TrsDc_StmpTimeEdit")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcTp)
                    .HasColumnName("TrsDc_Tp")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcTypSi).HasColumnName("TrsDcTyp_Si");

                entity.Property(e => e.TrsDcTypTp)
                    .HasColumnName("TrsDcTyp_Tp")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcTypTp2)
                    .HasColumnName("TrsDcTyp_Tp2")
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwTrsDcA>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwTrsDcA");

                entity.Property(e => e.AccDocHSi).HasColumnName("AccDocH_Si");

                entity.Property(e => e.AccLcCu)
                    .HasColumnName("AccLC_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLcTp)
                    .HasColumnName("AccLC_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmCu)
                    .IsRequired()
                    .HasColumnName("AccLM_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLmTp)
                    .HasColumnName("AccLM_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmTp2)
                    .HasColumnName("AccLM_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpCu)
                    .HasColumnName("AccLP_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLpTp)
                    .HasColumnName("AccLP_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtCu)
                    .HasColumnName("AccLT_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AccLtTp)
                    .HasColumnName("AccLT_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtTp2)
                    .HasColumnName("AccLT_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.CtbCurncyTp)
                    .HasColumnName("CtbCurncy_Tp")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.HasTrsDcCattach).HasColumnName("HasTrsDcCAttach");

                entity.Property(e => e.SalIntrmdCu)
                    .HasColumnName("SalIntrmd_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SalIntrmdSi).HasColumnName("SalIntrmd_Si");

                entity.Property(e => e.SalIntrmdTp)
                    .HasColumnName("SalIntrmd_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpCost2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpProject2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsAordrSi).HasColumnName("TrsAOrdr_Si");

                entity.Property(e => e.TrsAsgnSi).HasColumnName("TrsAsgn_Si");

                entity.Property(e => e.TrsCtypSi).HasColumnName("TrsCTyp_Si");

                entity.Property(e => e.TrsCtypTp)
                    .HasColumnName("TrsCTyp_Tp")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TrsCtypTp2)
                    .HasColumnName("TrsCTyp_Tp2")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcAAccDesc)
                    .HasColumnName("TrsDcA_AccDesc")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcACredit)
                    .HasColumnName("TrsDcA_Credit")
                    .HasColumnType("money");

                entity.Property(e => e.TrsDcACreditC).HasColumnName("TrsDcA_CreditC");

                entity.Property(e => e.TrsDcACuDoc)
                    .HasColumnName("TrsDcA_CuDoc")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcADebit)
                    .HasColumnName("TrsDcA_Debit")
                    .HasColumnType("money");

                entity.Property(e => e.TrsDcADebitC).HasColumnName("TrsDcA_DebitC");

                entity.Property(e => e.TrsDcAFirstCu).HasColumnName("TrsDcA_FirstCu");

                entity.Property(e => e.TrsDcARfrnc)
                    .HasColumnName("TrsDcA_Rfrnc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcASi).HasColumnName("TrsDcA_Si");

                entity.Property(e => e.TrsDcATp)
                    .HasColumnName("TrsDcA_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCCreditC).HasColumnName("TrsDcC_CreditC");

                entity.Property(e => e.TrsDcCDebitC).HasColumnName("TrsDcC_DebitC");

                entity.Property(e => e.TrsDcCDt)
                    .HasColumnName("TrsDcC_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.TrsDcCIaccNo)
                    .HasColumnName("TrsDcC_IAccNo")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCIbnk)
                    .HasColumnName("TrsDcC_IBnk")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCIbrnch)
                    .HasColumnName("TrsDcC_IBrnch")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCIno).HasColumnName("TrsDcC_INo");

                entity.Property(e => e.TrsDcCRfrnc)
                    .HasColumnName("TrsDcC_Rfrnc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCSi).HasColumnName("TrsDcC_Si");

                entity.Property(e => e.TrsDcCu).HasColumnName("TrsDc_Cu");

                entity.Property(e => e.TrsDcCu2).HasColumnName("TrsDc_Cu2");

                entity.Property(e => e.TrsDcDt)
                    .HasColumnName("TrsDc_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.TrsDcMnthSi).HasColumnName("TrsDc_Mnth_Si");

                entity.Property(e => e.TrsDcSDt)
                    .HasColumnName("TrsDcS_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.TrsDcSMnthSi).HasColumnName("TrsDcS_Mnth_Si");

                entity.Property(e => e.TrsDcSSi).HasColumnName("TrsDcS_Si");

                entity.Property(e => e.TrsDcSi).HasColumnName("TrsDc_Si");

                entity.Property(e => e.TrsDcTypSi).HasColumnName("TrsDcTyp_Si");

                entity.Property(e => e.TrsRsrcSi).HasColumnName("TrsRsrc_Si");

                entity.Property(e => e.TrsRsrcTp)
                    .HasColumnName("TrsRsrc_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsSi).HasColumnName("TrsSts_Si");

                entity.Property(e => e.TrsStsTp)
                    .HasColumnName("TrsSts_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsTp2)
                    .HasColumnName("TrsSts_Tp2")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwTrsDcAinvc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwTrsDcAInvc");

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHCu).HasColumnName("SalInvcH_Cu");

                entity.Property(e => e.SalInvcHDs)
                    .IsRequired()
                    .HasColumnName("SalInvcH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalInvcHPrcSumTotalC)
                    .HasColumnName("SalInvcH_Prc_SumTotalC")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcHPrcTotal)
                    .HasColumnName("SalInvcH_Prc_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcHSi).HasColumnName("SalInvcH_Si");

                entity.Property(e => e.TrsDcASi).HasColumnName("TrsDcA_Si");

                entity.Property(e => e.TrsDcAinvcSi).HasColumnName("TrsDcAInvc_Si");
            });

            modelBuilder.Entity<VwTrsDcApreInvc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwTrsDcAPreInvc");

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalCustTp)
                    .HasColumnName("SalCust_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcHCu).HasColumnName("SalPreInvcH_Cu");

                entity.Property(e => e.SalPreInvcHDs)
                    .IsRequired()
                    .HasColumnName("SalPreInvcH_Ds")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SalPreInvcHPrcSumQty).HasColumnName("SalPreInvcH_Prc_SumQty");

                entity.Property(e => e.SalPreInvcHPrcSumTotalC)
                    .HasColumnName("SalPreInvcH_Prc_SumTotalC")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcHPrcTotal)
                    .HasColumnName("SalPreInvcH_Prc_Total")
                    .HasColumnType("money");

                entity.Property(e => e.SalPreInvcHSi).HasColumnName("SalPreInvcH_Si");

                entity.Property(e => e.TrsDcASi).HasColumnName("TrsDcA_Si");

                entity.Property(e => e.TrsDcApreInvcSi).HasColumnName("TrsDcAPreInvc_Si");
            });

            modelBuilder.Entity<VwTrsDcC>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwTrsDcC");

                entity.Property(e => e.AccDocHSi).HasColumnName("AccDocH_Si");

                entity.Property(e => e.AccLcCu)
                    .HasColumnName("AccLC_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLcCuRsr)
                    .HasColumnName("AccLC_Cu_Rsr")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLcSiRsr).HasColumnName("AccLC_Si_Rsr");

                entity.Property(e => e.AccLcTp)
                    .HasColumnName("AccLC_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLcTpRsr)
                    .HasColumnName("AccLC_Tp_Rsr")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmCu)
                    .HasColumnName("AccLM_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLmTp)
                    .HasColumnName("AccLM_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmTp2)
                    .HasColumnName("AccLM_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpCu)
                    .HasColumnName("AccLP_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpCuRsr)
                    .HasColumnName("AccLP_Cu_Rsr")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLpSiRsr).HasColumnName("AccLP_Si_Rsr");

                entity.Property(e => e.AccLpTp)
                    .HasColumnName("AccLP_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpTpRsr)
                    .HasColumnName("AccLP_Tp_Rsr")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtCu)
                    .HasColumnName("AccLT_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtCuRsr)
                    .HasColumnName("AccLT_Cu_Rsr")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AccLtSiRsr).HasColumnName("AccLT_Si_Rsr");

                entity.Property(e => e.AccLtTp)
                    .HasColumnName("AccLT_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtTp2)
                    .HasColumnName("AccLT_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtTpRsr)
                    .HasColumnName("AccLT_Tp_Rsr")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.CtbCurncyTp)
                    .HasColumnName("CtbCurncy_Tp")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.HasTrsDcCattach).HasColumnName("HasTrsDcCAttach");

                entity.Property(e => e.StmpCdt)
                    .HasColumnName("StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.StmpCus)
                    .HasColumnName("StmpCUs")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.StmpMus)
                    .HasColumnName("StmpMUs")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.TpCost2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpProject2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsAordrSi).HasColumnName("TrsAOrdr_Si");

                entity.Property(e => e.TrsChqPSi).HasColumnName("TrsChqP_Si");

                entity.Property(e => e.TrsCtypSi).HasColumnName("TrsCTyp_Si");

                entity.Property(e => e.TrsCtypTp)
                    .HasColumnName("TrsCTyp_Tp")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TrsCtypTp2)
                    .HasColumnName("TrsCTyp_Tp2")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCAccDesc)
                    .HasColumnName("TrsDcC_AccDesc")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCCredit)
                    .HasColumnName("TrsDcC_Credit")
                    .HasColumnType("money");

                entity.Property(e => e.TrsDcCCreditC).HasColumnName("TrsDcC_CreditC");

                entity.Property(e => e.TrsDcCCuDoc)
                    .HasColumnName("TrsDcC_CuDoc")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCDebit)
                    .HasColumnName("TrsDcC_Debit")
                    .HasColumnType("money");

                entity.Property(e => e.TrsDcCDebitC).HasColumnName("TrsDcC_DebitC");

                entity.Property(e => e.TrsDcCDt)
                    .HasColumnName("TrsDcC_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.TrsDcCDt2)
                    .HasColumnName("TrsDcC_DT2")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.TrsDcCForMoney)
                    .HasColumnName("TrsDcC_ForMoney")
                    .HasMaxLength(4000);

                entity.Property(e => e.TrsDcCIaccNo)
                    .HasColumnName("TrsDcC_IAccNo")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCIbnk)
                    .HasColumnName("TrsDcC_IBnk")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCIbrnch)
                    .HasColumnName("TrsDcC_IBrnch")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCIno).HasColumnName("TrsDcC_INo");

                entity.Property(e => e.TrsDcCInoh)
                    .HasColumnName("TrsDcC_INOH")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCInon)
                    .HasColumnName("TrsDcC_INON")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCMnthSi).HasColumnName("TrsDcC_Mnth_Si");

                entity.Property(e => e.TrsDcCRfrnc)
                    .HasColumnName("TrsDcC_Rfrnc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCSi).HasColumnName("TrsDcC_Si");

                entity.Property(e => e.TrsDcCTp)
                    .HasColumnName("TrsDcC_Tp")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCu).HasColumnName("TrsDc_Cu");

                entity.Property(e => e.TrsDcDt)
                    .HasColumnName("TrsDc_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.TrsDcGrpSi).HasColumnName("TrsDcGrp_Si");

                entity.Property(e => e.TrsDcGrpTp)
                    .HasColumnName("TrsDcGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcMnthSi).HasColumnName("TrsDc_Mnth_Si");

                entity.Property(e => e.TrsDcShare).HasColumnName("TrsDc_Share");

                entity.Property(e => e.TrsDcSi).HasColumnName("TrsDc_Si");

                entity.Property(e => e.TrsDcStmpCdt)
                    .HasColumnName("TrsDc_StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.TrsDcStmpMdt)
                    .HasColumnName("TrsDc_StmpMDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.TrsDcStmpTime)
                    .HasColumnName("TrsDc_StmpTime")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcStmpTimeEdit)
                    .HasColumnName("TrsDc_StmpTimeEdit")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcTp)
                    .HasColumnName("TrsDc_Tp")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcTypSi).HasColumnName("TrsDcTyp_Si");

                entity.Property(e => e.TrsDcTypTp)
                    .HasColumnName("TrsDcTyp_Tp")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDccFirstCu).HasColumnName("TrsDcc_FirstCu");

                entity.Property(e => e.TrsDccIntrmd)
                    .HasColumnName("TrsDcc_Intrmd")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsRsrcSi).HasColumnName("TrsRsrc_Si");

                entity.Property(e => e.TrsRsrcTp)
                    .HasColumnName("TrsRsrc_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsRsrcTypSi).HasColumnName("TrsRsrcTyp_Si");

                entity.Property(e => e.TrsStsClr).HasColumnName("TrsSts_Clr");

                entity.Property(e => e.TrsStsNstsTp)
                    .HasColumnName("TrsSts_NSts_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsSi).HasColumnName("TrsSts_Si");

                entity.Property(e => e.TrsStsTp)
                    .HasColumnName("TrsSts_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsTp2)
                    .HasColumnName("TrsSts_Tp2")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwTrsDcS>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwTrsDcS");

                entity.Property(e => e.TrsDcCSi).HasColumnName("TrsDcC_Si");

                entity.Property(e => e.TrsDcSDt)
                    .HasColumnName("TrsDcS_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.TrsDcSSi).HasColumnName("TrsDcS_Si");

                entity.Property(e => e.TrsDcSTm)
                    .HasColumnName("TrsDcS_TM")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsSi).HasColumnName("TrsSts_Si");

                entity.Property(e => e.TrsStsTp)
                    .HasColumnName("TrsSts_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwTrsDocVchr>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwTrsDocVchr");

                entity.Property(e => e.AccDocHSi).HasColumnName("AccDocH_Si");

                entity.Property(e => e.AccLcCu)
                    .HasColumnName("AccLC_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLcTp)
                    .HasColumnName("AccLC_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmCu)
                    .HasColumnName("AccLM_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLmTp)
                    .HasColumnName("AccLM_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpCu)
                    .HasColumnName("AccLP_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLpTp)
                    .HasColumnName("AccLP_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtCu)
                    .HasColumnName("AccLT_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AccLtTp)
                    .HasColumnName("AccLT_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcSi).HasColumnName("TrsDc_Si");

                entity.Property(e => e.TrsDccSi).HasColumnName("TrsDcc_Si");

                entity.Property(e => e.TrsDocVchrCredit)
                    .HasColumnName("TrsDocVchr_Credit")
                    .HasColumnType("money");

                entity.Property(e => e.TrsDocVchrDebit)
                    .HasColumnName("TrsDocVchr_Debit")
                    .HasColumnType("money");

                entity.Property(e => e.TrsDocVchrTp)
                    .HasColumnName("TrsDocVchr_Tp")
                    .HasMaxLength(4000);
            });

            modelBuilder.Entity<VwTrsDocVoucher>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwTrsDocVoucher");

                entity.Property(e => e.AccDocHSi).HasColumnName("AccDocH_Si");

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.CuAccM)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuAccT)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DsDoc).HasColumnType("smalldatetime");

                entity.Property(e => e.TpAccM)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpAccT)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCDt)
                    .HasColumnName("TrsDcC_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.TrsDcCIaccNo)
                    .HasColumnName("TrsDcC_IAccNo")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCIbnk)
                    .HasColumnName("TrsDcC_IBnk")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCIbrnch)
                    .HasColumnName("TrsDcC_IBrnch")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCIno).HasColumnName("TrsDcC_INo");

                entity.Property(e => e.TrsDcCu).HasColumnName("TrsDc_Cu");

                entity.Property(e => e.TrsDcDt)
                    .HasColumnName("TrsDc_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.TrsDcSi).HasColumnName("TrsDc_Si");

                entity.Property(e => e.TrsDcTypTp)
                    .HasColumnName("TrsDcTyp_Tp")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDccSi).HasColumnName("TrsDcc_Si");

                entity.Property(e => e.TrsDocVchrCredit)
                    .HasColumnName("TrsDocVchr_Credit")
                    .HasColumnType("money");

                entity.Property(e => e.TrsDocVchrCreditC)
                    .HasColumnName("TrsDocVchr_CreditC")
                    .HasColumnType("money");

                entity.Property(e => e.TrsDocVchrDebit)
                    .HasColumnName("TrsDocVchr_Debit")
                    .HasColumnType("money");

                entity.Property(e => e.TrsDocVchrDebitC)
                    .HasColumnName("TrsDocVchr_DebitC")
                    .HasColumnType("money");

                entity.Property(e => e.TrsDocVchrSi).HasColumnName("TrsDocVchr_Si");

                entity.Property(e => e.TrsDocVchrTp)
                    .HasColumnName("TrsDocVchr_Tp")
                    .HasMaxLength(4000);
            });

            modelBuilder.Entity<VwTrsMatrixReport>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwTrsMatrixReport");

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.Ex).HasColumnName("ex");

                entity.Property(e => e.بابت)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.بانك)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.بدهكار).HasColumnType("money");

                entity.Property(e => e.بدهكارمانده)
                    .HasColumnName("بدهكار مانده")
                    .HasColumnType("money");

                entity.Property(e => e.بستانكار).HasColumnType("money");

                entity.Property(e => e.بستانكارارزیمانده).HasColumnName("بستانكار ارزی مانده");

                entity.Property(e => e.بستانكارمانده)
                    .HasColumnName("بستانكار مانده")
                    .HasColumnType("money");

                entity.Property(e => e.تاريخعمليات)
                    .HasColumnName("تاريخ عمليات")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.تفصيلي)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.توضيحات)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.شعبه)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.شمارهSiسندحسابداري).HasColumnName("شماره si سند حسابداري");

                entity.Property(e => e.شمارهحساب)
                    .HasColumnName("شماره حساب")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.شمارهسند).HasColumnName("شماره سند");

                entity.Property(e => e.شمارهچك).HasColumnName("شماره چك");

                entity.Property(e => e.كدتفصيلي)
                    .HasColumnName("كد تفصيلي")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.كدمركز)
                    .HasColumnName("كد مركز")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.كدمعين)
                    .IsRequired()
                    .HasColumnName("كد معين")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.كدپروژه)
                    .HasColumnName("كد پروژه")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.مانده).HasColumnType("money");

                entity.Property(e => e.ماندهارزی).HasColumnName(" مانده ارزی");

                entity.Property(e => e.ماندهبدهکارارزی).HasColumnName("مانده بدهکار ارزی");

                entity.Property(e => e.مركز)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.معين)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.منبع)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نامارز)
                    .HasColumnName("نام ارز")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.نامكاربرثبتكننده)
                    .HasColumnName("نام كاربر ثبت كننده")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.نرخارز).HasColumnName("نرخ ارز");

                entity.Property(e => e.نوع)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.وضعيت)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.پروژه)
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwTrsRsrc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwTrsRsrc");

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLmCu)
                    .HasColumnName("AccLM_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmCu2)
                    .HasColumnName("AccLM_Cu_2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLmSi2).HasColumnName("AccLM_Si_2");

                entity.Property(e => e.AccLmTp)
                    .HasColumnName("AccLM_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmTp2)
                    .HasColumnName("AccLM_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmTp22)
                    .HasColumnName("AccLM_Tp_2_2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLtCu)
                    .HasColumnName("AccLT_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AccLtTp)
                    .HasColumnName("AccLT_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtTp2)
                    .HasColumnName("AccLT_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCurncyFmt)
                    .HasColumnName("CtbCurncy_Fmt")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.CtbCurncyTp)
                    .HasColumnName("CtbCurncy_Tp")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CuCost)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuProject)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.TpAcc2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpCost)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpCost2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpProject)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.TpProject2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsRsrcAct).HasColumnName("TrsRsrc_Act");

                entity.Property(e => e.TrsRsrcAddres)
                    .HasColumnName("TrsRsrc_Addres")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.TrsRsrcBaccNo)
                    .HasColumnName("TrsRsrc_BAccNo")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsRsrcBbrnch)
                    .HasColumnName("TrsRsrc_BBrnch")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsRsrcBowner)
                    .HasColumnName("TrsRsrc_BOwner")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsRsrcCredit)
                    .HasColumnName("TrsRsrc_Credit")
                    .HasColumnType("money");

                entity.Property(e => e.TrsRsrcDebit)
                    .HasColumnName("TrsRsrc_Debit")
                    .HasColumnType("money");

                entity.Property(e => e.TrsRsrcIno)
                    .HasColumnName("TrsRsrc_INO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsRsrcManger)
                    .HasColumnName("TrsRsrc_Manger")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsRsrcMax)
                    .HasColumnName("TrsRsrc_Max")
                    .HasColumnType("money");

                entity.Property(e => e.TrsRsrcMaxPay)
                    .HasColumnName("TrsRsrc_MaxPay")
                    .HasColumnType("money");

                entity.Property(e => e.TrsRsrcMin)
                    .HasColumnName("TrsRsrc_Min")
                    .HasColumnType("money");

                entity.Property(e => e.TrsRsrcPerson)
                    .HasColumnName("TrsRsrc_Person")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsRsrcPrc)
                    .HasColumnName("TrsRsrc_Prc")
                    .HasColumnType("money");

                entity.Property(e => e.TrsRsrcSi).HasColumnName("TrsRsrc_Si");

                entity.Property(e => e.TrsRsrcTp)
                    .IsRequired()
                    .HasColumnName("TrsRsrc_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsRsrcTypSi).HasColumnName("TrsRsrcTyp_Si");

                entity.Property(e => e.TrsRsrcTypTp)
                    .HasColumnName("TrsRsrcTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwTrsRsrcUsr>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwTrsRsrcUsr");

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLmCu)
                    .IsRequired()
                    .HasColumnName("AccLM_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmCu2)
                    .HasColumnName("AccLM_Cu_2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLmSi2).HasColumnName("AccLM_Si_2");

                entity.Property(e => e.AccLmTp)
                    .HasColumnName("AccLM_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmTp2)
                    .HasColumnName("AccLM_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmTp22)
                    .HasColumnName("AccLM_Tp_2_2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLtCu)
                    .HasColumnName("AccLT_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AccLtTp)
                    .HasColumnName("AccLT_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtTp2)
                    .HasColumnName("AccLT_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCurncyFmt)
                    .HasColumnName("CtbCurncy_Fmt")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.CtbCurncyTp)
                    .HasColumnName("CtbCurncy_Tp")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CuCost)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuProject)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.TpAcc2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TpCost)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpCost2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpProject)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.TpProject2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsRsrcAct).HasColumnName("TrsRsrc_Act");

                entity.Property(e => e.TrsRsrcAddres)
                    .HasColumnName("TrsRsrc_Addres")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.TrsRsrcBaccNo)
                    .HasColumnName("TrsRsrc_BAccNo")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsRsrcBbrnch)
                    .HasColumnName("TrsRsrc_BBrnch")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsRsrcBowner)
                    .HasColumnName("TrsRsrc_BOwner")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsRsrcCredit)
                    .HasColumnName("TrsRsrc_Credit")
                    .HasColumnType("money");

                entity.Property(e => e.TrsRsrcDebit)
                    .HasColumnName("TrsRsrc_Debit")
                    .HasColumnType("money");

                entity.Property(e => e.TrsRsrcIno)
                    .HasColumnName("TrsRsrc_INO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsRsrcManger)
                    .HasColumnName("TrsRsrc_Manger")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsRsrcMax)
                    .HasColumnName("TrsRsrc_Max")
                    .HasColumnType("money");

                entity.Property(e => e.TrsRsrcMaxPay)
                    .HasColumnName("TrsRsrc_MaxPay")
                    .HasColumnType("money");

                entity.Property(e => e.TrsRsrcMin)
                    .HasColumnName("TrsRsrc_Min")
                    .HasColumnType("money");

                entity.Property(e => e.TrsRsrcPerson)
                    .HasColumnName("TrsRsrc_Person")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsRsrcPrc)
                    .HasColumnName("TrsRsrc_Prc")
                    .HasColumnType("money");

                entity.Property(e => e.TrsRsrcSi).HasColumnName("TrsRsrc_Si");

                entity.Property(e => e.TrsRsrcTp)
                    .IsRequired()
                    .HasColumnName("TrsRsrc_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsRsrcTypSi).HasColumnName("TrsRsrcTyp_Si");

                entity.Property(e => e.TrsRsrcTypTp)
                    .HasColumnName("TrsRsrcTyp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwTrsSts>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwTrsSts");

                entity.Property(e => e.TrsCtypSi).HasColumnName("TrsCTyp_Si");

                entity.Property(e => e.TrsCtypTp)
                    .HasColumnName("TrsCTyp_Tp")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TrsCtypTp2)
                    .HasColumnName("TrsCTyp_Tp2")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcTypSi).HasColumnName("TrsDcTyp_Si");

                entity.Property(e => e.TrsDcTypTp)
                    .HasColumnName("TrsDcTyp_Tp")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcTypTp2)
                    .HasColumnName("TrsDcTyp_Tp2")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsFnFnCredit)
                    .HasColumnName("TrsStsFn_Fn_Credit")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsFnFnDebit)
                    .HasColumnName("TrsStsFn_Fn_Debit")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsFnSiCredit).HasColumnName("TrsStsFn_Si_Credit");

                entity.Property(e => e.TrsStsFnSiDebit).HasColumnName("TrsStsFn_Si_Debit");

                entity.Property(e => e.TrsStsFnTpCredit)
                    .HasColumnName("TrsStsFn_Tp_Credit")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsFnTpDebit)
                    .HasColumnName("TrsStsFn_Tp_Debit")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsNsts)
                    .HasColumnName("TrsSts_NSts")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsNstsTp)
                    .HasColumnName("TrsSts_NSts_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsSi).HasColumnName("TrsSts_Si");

                entity.Property(e => e.TrsStsTp)
                    .HasColumnName("TrsSts_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsTp2)
                    .HasColumnName("TrsSts_Tp2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsTypSi).HasColumnName("TrsStsTyp_Si");
            });

            modelBuilder.Entity<VwTrsStsUsr>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwTrsStsUsr");

                entity.Property(e => e.TrsCtypSi).HasColumnName("TrsCTyp_Si");

                entity.Property(e => e.TrsCtypTp)
                    .HasColumnName("TrsCTyp_Tp")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TrsCtypTp2)
                    .HasColumnName("TrsCTyp_Tp2")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcTypSi).HasColumnName("TrsDcTyp_Si");

                entity.Property(e => e.TrsDcTypTp)
                    .HasColumnName("TrsDcTyp_Tp")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcTypTp2)
                    .HasColumnName("TrsDcTyp_Tp2")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsFnFnCredit)
                    .HasColumnName("TrsStsFn_Fn_Credit")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsFnFnDebit)
                    .HasColumnName("TrsStsFn_Fn_Debit")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsFnSiCredit).HasColumnName("TrsStsFn_Si_Credit");

                entity.Property(e => e.TrsStsFnSiDebit).HasColumnName("TrsStsFn_Si_Debit");

                entity.Property(e => e.TrsStsFnTpCredit)
                    .HasColumnName("TrsStsFn_Tp_Credit")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsFnTpDebit)
                    .HasColumnName("TrsStsFn_Tp_Debit")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsNsts)
                    .HasColumnName("TrsSts_NSts")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsNstsTp)
                    .HasColumnName("TrsSts_NSts_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsSi).HasColumnName("TrsSts_Si");

                entity.Property(e => e.TrsStsTp)
                    .HasColumnName("TrsSts_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsTp2)
                    .HasColumnName("TrsSts_Tp2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsTypSi).HasColumnName("TrsStsTyp_Si");
            });

            modelBuilder.Entity<VwTrsUsr>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwTrsUsr");

                entity.Property(e => e.LoginName)
                    .IsRequired()
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.TrsUsrSi).HasColumnName("TrsUsr_Si");

                entity.Property(e => e.TrsUsrTp)
                    .HasColumnName("TrsUsr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwTrsVchr>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VwTrsVchr");

                entity.Property(e => e.AccDesc)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.AccDocHSi).HasColumnName("AccDocH_Si");

                entity.Property(e => e.AccLcCu)
                    .HasColumnName("AccLC_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLcTp)
                    .HasColumnName("AccLC_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmCu)
                    .HasColumnName("AccLM_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLmTp)
                    .HasColumnName("AccLM_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmTp2)
                    .HasColumnName("AccLM_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpCu)
                    .HasColumnName("AccLP_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLpTp)
                    .HasColumnName("AccLP_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtCu)
                    .HasColumnName("AccLT_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AccLtTp)
                    .HasColumnName("AccLT_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtTp2)
                    .HasColumnName("AccLT_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Credit).HasColumnType("money");

                entity.Property(e => e.CreditCc).HasColumnName("CreditCC");

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.CtbCurncyTp)
                    .HasColumnName("CtbCurncy_Tp")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CtbMnthSi).HasColumnName("CtbMnth_Si");

                entity.Property(e => e.Debit).HasColumnType("money");

                entity.Property(e => e.DebitCc).HasColumnName("DebitCC");

                entity.Property(e => e.Dt)
                    .HasColumnName("DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.DtmonthNo).HasColumnName("DTMonthNo");

                entity.Property(e => e.HasTrsDcCattach).HasColumnName("HasTrsDcCAttach");

                entity.Property(e => e.SalIntrmdSi).HasColumnName("SalIntrmd_Si");

                entity.Property(e => e.SalIntrmdTp)
                    .HasColumnName("SalIntrmd_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.StmpCus)
                    .HasColumnName("StmpCUs")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Tp)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.TrsAsgnAccTTp)
                    .HasColumnName("TrsAsgn_AccT_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TrsCtypSi).HasColumnName("TrsCTyp_Si");

                entity.Property(e => e.TrsCtypTp)
                    .HasColumnName("TrsCTyp_Tp")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TrsCtypTp2)
                    .HasColumnName("TrsCTyp_Tp2")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcASi).HasColumnName("TrsDcA_Si");

                entity.Property(e => e.TrsDcCAccDesc)
                    .HasColumnName("TrsDcC_AccDesc")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCCuDoc)
                    .HasColumnName("TrsDcC_CuDoc")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCDt)
                    .HasColumnName("TrsDcC_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.TrsDcCForMoney)
                    .HasColumnName("TrsDcC_ForMoney")
                    .HasMaxLength(4000);

                entity.Property(e => e.TrsDcCIaccNo)
                    .HasColumnName("TrsDcC_IAccNo")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCIbnk)
                    .HasColumnName("TrsDcC_IBnk")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCIbrnch)
                    .HasColumnName("TrsDcC_IBrnch")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCIno).HasColumnName("TrsDcC_INo");

                entity.Property(e => e.TrsDcCInoh)
                    .HasColumnName("TrsDcC_INOH")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCInon)
                    .HasColumnName("TrsDcC_INON")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCRfrnc)
                    .HasColumnName("TrsDcC_Rfrnc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCSi).HasColumnName("TrsDcC_Si");

                entity.Property(e => e.TrsDcCu).HasColumnName("TrsDc_Cu");

                entity.Property(e => e.TrsDcSSi).HasColumnName("TrsDcS_Si");

                entity.Property(e => e.TrsDcSi).HasColumnName("TrsDc_Si");

                entity.Property(e => e.TrsDcTypSi).HasColumnName("TrsDcTyp_Si");

                entity.Property(e => e.TrsRsrcSi).HasColumnName("TrsRsrc_Si");

                entity.Property(e => e.TrsRsrcSiC).HasColumnName("TrsRsrc_Si_C");

                entity.Property(e => e.TrsRsrcTp)
                    .HasColumnName("TrsRsrc_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsSi).HasColumnName("TrsSts_Si");

                entity.Property(e => e.TrsStsTp)
                    .HasColumnName("TrsSts_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsTp2)
                    .HasColumnName("TrsSts_Tp2")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwkpurBuyH>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VWKpurBuyH");

                entity.Property(e => e.PurBuyHCm)
                    .HasColumnName("PurBuyH_Cm")
                    .HasMaxLength(150);

                entity.Property(e => e.PurBuyHCu)
                    .HasColumnName("PurBuyH_Cu")
                    .HasMaxLength(50);

                entity.Property(e => e.PurBuyHDt)
                    .HasColumnName("PurBuyH_Dt")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurBuyHSi).HasColumnName("PurBuyH_Si");

                entity.Property(e => e.PurBuyHVnFno)
                    .HasColumnName("PurBuyH_VnFno")
                    .HasMaxLength(50);

                entity.Property(e => e.PurOrdrHCu)
                    .HasColumnName("PurOrdrH_Cu")
                    .HasMaxLength(50);

                entity.Property(e => e.PurOrdrHDs)
                    .HasColumnName("PurOrdrH_Ds")
                    .HasMaxLength(150);

                entity.Property(e => e.PurOrdrHDt)
                    .HasColumnName("PurOrdrH_Dt")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurOrdrHSi).HasColumnName("PurOrdrH_Si");

                entity.Property(e => e.PurQryCu)
                    .HasColumnName("PurQry_Cu")
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.PurRqstHCu)
                    .HasColumnName("PurRqstH_Cu")
                    .HasMaxLength(15);

                entity.Property(e => e.PurRqstHDt)
                    .HasColumnName("PurRqstH_Dt")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurRqstHQryNo).HasColumnName("PurRqstH_QryNo");

                entity.Property(e => e.PurRqstHQryTp)
                    .HasColumnName("PurRqstH_QryTp")
                    .HasMaxLength(150)
                    .IsFixedLength();

                entity.Property(e => e.PurRqstHTp)
                    .HasColumnName("PurRqstH_Tp")
                    .HasMaxLength(150);

                entity.Property(e => e.PurVndrCu)
                    .HasColumnName("PurVndr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrTp)
                    .HasColumnName("PurVndr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwkpurOrdrH>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VWKPurOrdrH");

                entity.Property(e => e.PurOrdrHCu)
                    .HasColumnName("PurOrdrH_Cu")
                    .HasMaxLength(50);

                entity.Property(e => e.PurOrdrHDs)
                    .HasColumnName("PurOrdrH_Ds")
                    .HasMaxLength(150);

                entity.Property(e => e.PurOrdrHDt)
                    .HasColumnName("PurOrdrH_Dt")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurOrdrHSi).HasColumnName("PurOrdrH_Si");

                entity.Property(e => e.PurQryCu)
                    .HasColumnName("PurQry_Cu")
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.PurRqstHCu)
                    .HasColumnName("PurRqstH_Cu")
                    .HasMaxLength(15);

                entity.Property(e => e.PurRqstHDt)
                    .HasColumnName("PurRqstH_Dt")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurRqstHQryNo).HasColumnName("PurRqstH_QryNo");

                entity.Property(e => e.PurRqstHQryTp)
                    .HasColumnName("PurRqstH_QryTp")
                    .HasMaxLength(150)
                    .IsFixedLength();

                entity.Property(e => e.PurRqstHTp)
                    .HasColumnName("PurRqstH_Tp")
                    .HasMaxLength(150);

                entity.Property(e => e.PurVndrCu)
                    .HasColumnName("PurVndr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrTp)
                    .HasColumnName("PurVndr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwkpurRqstH>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VWKPurRqstH");

                entity.Property(e => e.CtbOrgDepSi).HasColumnName("CtbOrgDep_Si");

                entity.Property(e => e.CtbOrgDepTp)
                    .IsRequired()
                    .HasColumnName("CtbOrgDep_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CuCost)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CuProject)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtCu)
                    .IsRequired()
                    .HasColumnName("InvInvt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtSi).HasColumnName("InvInvt_Si");

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PerName)
                    .HasMaxLength(51)
                    .IsUnicode(false);

                entity.Property(e => e.PurQryCu)
                    .HasColumnName("PurQry_Cu")
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.PurRqstHCu)
                    .HasColumnName("PurRqstH_Cu")
                    .HasMaxLength(15);

                entity.Property(e => e.PurRqstHDt)
                    .HasColumnName("PurRqstH_Dt")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurRqstHOffNext).HasColumnName("PurRqstH_OffNext");

                entity.Property(e => e.PurRqstHOfficial)
                    .HasColumnName("PurRqstH_Official")
                    .HasMaxLength(50);

                entity.Property(e => e.PurRqstHPlace).HasColumnName("PurRqstH_Place");

                entity.Property(e => e.PurRqstHQryNo).HasColumnName("PurRqstH_QryNo");

                entity.Property(e => e.PurRqstHQryTp)
                    .HasColumnName("PurRqstH_QryTp")
                    .HasMaxLength(150)
                    .IsFixedLength();

                entity.Property(e => e.PurRqstHSi).HasColumnName("PurRqstH_Si");

                entity.Property(e => e.PurRqstHTp)
                    .HasColumnName("PurRqstH_Tp")
                    .HasMaxLength(150);

                entity.Property(e => e.PurRqstLastUserLvl).HasColumnName("PurRqst_LastUserLvl");

                entity.Property(e => e.TpCost)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpProject)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.UserName)
                    .HasColumnName("UserName_")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<VwpurEnqueryMatris>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VWPurEnqueryMatris");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.PurOrderHCu).HasColumnName("PurOrderH_Cu");

                entity.Property(e => e.PurOrderHDt)
                    .HasColumnName("PurOrderH_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PurOrderHSi).HasColumnName("PurOrderH_Si");

                entity.Property(e => e.PurPreInvcDPrice)
                    .HasColumnName("PurPreInvcD_Price")
                    .HasColumnType("money");

                entity.Property(e => e.PurPreInvcDSi).HasColumnName("PurPreInvcD_Si");

                entity.Property(e => e.PurReqstDQty).HasColumnName("PurReqstD_Qty");

                entity.Property(e => e.PurVndrCu)
                    .HasColumnName("PurVndr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");

                entity.Property(e => e.PurVndrTp)
                    .HasColumnName("PurVndr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwpurOrdVndr>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VWPurOrdVndr");

                entity.Property(e => e.PurOrdVndrSi).HasColumnName("PurOrdVndr_Si");

                entity.Property(e => e.PurOrderHCu).HasColumnName("PurOrderH_Cu");

                entity.Property(e => e.PurOrderHDt)
                    .HasColumnName("PurOrderH_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.PurOrderHSi).HasColumnName("PurOrderH_Si");

                entity.Property(e => e.PurVndrCu)
                    .HasColumnName("PurVndr_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PurVndrScore).HasColumnName("PurVndr_Score");

                entity.Property(e => e.PurVndrSi).HasColumnName("PurVndr_Si");

                entity.Property(e => e.PurVndrSts).HasColumnName("PurVndr_Sts");

                entity.Property(e => e.PurVndrTp)
                    .HasColumnName("PurVndr_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwpurPreInvcD>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VWPurPreInvcD");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsSi).HasColumnName("InvGds_Si");

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvInvtCu)
                    .HasColumnName("InvInvt_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.InvInvtTp)
                    .HasColumnName("InvInvt_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvUntSi).HasColumnName("InvUnt_Si");

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.PurOrderDSi).HasColumnName("PurOrderD_Si");

                entity.Property(e => e.PurPreInvcDDesc)
                    .HasColumnName("PurPreInvcD_Desc")
                    .HasMaxLength(4000);

                entity.Property(e => e.PurPreInvcDPrice)
                    .HasColumnName("PurPreInvcD_Price")
                    .HasColumnType("money");

                entity.Property(e => e.PurPreInvcDQty).HasColumnName("PurPreInvcD_Qty");

                entity.Property(e => e.PurPreInvcDSi).HasColumnName("PurPreInvcD_Si");

                entity.Property(e => e.PurPreInvcHCancelled).HasColumnName("PurPreInvcH_Cancelled");

                entity.Property(e => e.PurPreInvcHCu)
                    .HasColumnName("PurPreInvcH_Cu")
                    .HasMaxLength(50);

                entity.Property(e => e.PurPreInvcHDtactive)
                    .HasColumnName("PurPreInvcH_DTActive")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurPreInvcHHaveFile).HasColumnName("PurPreInvcH_HaveFile");

                entity.Property(e => e.PurPreInvcHSi).HasColumnName("PurPreInvcH_Si");

                entity.Property(e => e.PurPreVinvcHDt)
                    .HasColumnName("PurPreVInvcH_Dt")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurReqstDDt)
                    .HasColumnName("PurReqstD_DT")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PurReqstDQty).HasColumnName("PurReqstD_Qty");

                entity.Property(e => e.PurReqstHCu).HasColumnName("PurReqstH_Cu");

                entity.Property(e => e.PurReqstHDeliverst).HasColumnName("PurReqstH_Deliverst");

                entity.Property(e => e.PurRqstCuseTp)
                    .HasColumnName("PurRqstCuse_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Vwtest>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Vwtest");

                entity.Property(e => e.SalInvcDQty)
                    .HasColumnName("SalInvcD_Qty")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcDUntPrc)
                    .HasColumnName("SalInvcD_UntPrc")
                    .HasColumnType("money");

                entity.Property(e => e.SalInvcHCu).HasColumnName("SalInvcH_Cu");
            });

            modelBuilder.Entity<Zone>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Ostan).HasMaxLength(255);

                entity.Property(e => e.Shahr).HasMaxLength(255);
            });

            modelBuilder.Entity<انبارگردانی50004شمارش>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("انبارگردانی|50004|شمارش", "Monitor");

                entity.Property(e => e.CRow).HasColumnName("cRow");

                entity.Property(e => e.Title)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.شمارهفنی)
                    .HasColumnName("شماره فنی")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.نامکالا)
                    .HasColumnName("نام کالا")
                    .HasMaxLength(4000);

                entity.Property(e => e.واحد)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.کدکالا)
                    .HasColumnName("کد کالا")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<برگشتازفروش1008فروش>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("برگشت از فروش |1008|فروش", "Monitor");

                entity.Property(e => e.تاریخ)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.قیمت).HasColumnType("money");

                entity.Property(e => e.مرکز)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نام).HasMaxLength(4000);

                entity.Property(e => e.واسط)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.کد)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.گروه)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<حسابداري112گزارشدفترکل>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("حسابداري|112|گزارش دفتر کل ", "Monitor");

                entity.Property(e => e.بدهکار).HasColumnType("money");

                entity.Property(e => e.بستانکار).HasColumnType("money");

                entity.Property(e => e.تاريخ).HasMaxLength(4000);

                entity.Property(e => e.شمارهسند).HasColumnName("شماره سند");

                entity.Property(e => e.نامکل)
                    .HasColumnName("نام کل")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.کدکل)
                    .HasColumnName("کد کل")
                    .HasMaxLength(15)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<حسابداری103گزارشخلاصهاسناد139302091520>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("حسابداری|103|گزارش خلاصه اسناد (1393/02/09 15:20) ", "Monitor");

                entity.Property(e => e.بدهکار).HasColumnType("money");

                entity.Property(e => e.بستانکار).HasColumnType("money");

                entity.Property(e => e.تاریخ).HasMaxLength(4000);

                entity.Property(e => e.جمع).HasColumnType("money");

                entity.Property(e => e.ردیفدرصفحه).HasColumnName("ردیف در صفحه");

                entity.Property(e => e.شمارهسند)
                    .HasColumnName("شماره سند")
                    .IsUnicode(false);

                entity.Property(e => e.شمارهسند2).HasColumnName("شماره سند 2");

                entity.Property(e => e.نامکل)
                    .HasColumnName("نام کل")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.کدکل)
                    .HasColumnName("کد کل")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.گروهصفحه).HasColumnName("گروه صفحه");
            });

            modelBuilder.Entity<حسابداری108گزارشخلاصهاسناد139410220843>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("حسابداری|108|گزارش خلاصه اسناد (1394/10/22 08:43) ", "Monitor");

                entity.Property(e => e.بدهکار).HasColumnType("money");

                entity.Property(e => e.بستانکار).HasColumnType("money");

                entity.Property(e => e.تاریخ).HasMaxLength(4000);

                entity.Property(e => e.جمع).HasColumnType("money");

                entity.Property(e => e.ردیفدرصفحه).HasColumnName("ردیف در صفحه");

                entity.Property(e => e.شمارهسند)
                    .HasColumnName("شماره سند")
                    .IsUnicode(false);

                entity.Property(e => e.شمارهسند2).HasColumnName("شماره سند 2");

                entity.Property(e => e.نامکل)
                    .HasColumnName("نام کل")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.کدکل)
                    .HasColumnName("کد کل")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.گروهصفحه).HasColumnName("گروه صفحه");
            });

            modelBuilder.Entity<حسابداری112گزارشدفترکل13920513848139302091520>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("حسابداری|112|گزارش دفتر کل (1392/05/13 8:48) (1393/02/09 15:20) ", "Monitor");

                entity.Property(e => e.بدهکار).HasColumnType("money");

                entity.Property(e => e.بستانکار).HasColumnType("money");

                entity.Property(e => e.تاریخ).HasMaxLength(4000);

                entity.Property(e => e.شمارهسند).HasColumnName("شماره سند");

                entity.Property(e => e.نامکل)
                    .HasColumnName("نام کل")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.کدکل)
                    .HasColumnName("کد کل")
                    .HasMaxLength(15)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<حسابداری113گزارشدفترکل13920513848139410220844>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("حسابداری|113|گزارش دفتر کل (1392/05/13 8:48) (1394/10/22 08:44) ", "Monitor");

                entity.Property(e => e.بدهکار).HasColumnType("money");

                entity.Property(e => e.بستانکار).HasColumnType("money");

                entity.Property(e => e.تاریخ).HasMaxLength(4000);

                entity.Property(e => e.شمارهسند).HasColumnName("شماره سند");

                entity.Property(e => e.نامکل)
                    .HasColumnName("نام کل")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.کدکل)
                    .HasColumnName("کد کل")
                    .HasMaxLength(15)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<حسابداری115گزارشدفترروزنامه13920513848139302091520>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("حسابداری|115|گزارش دفتر روزنامه (1392/05/13 8:48) (1393/02/09 15:20) ", "Monitor");

                entity.Property(e => e.بدهکار).HasColumnType("money");

                entity.Property(e => e.بستانکار).HasColumnType("money");

                entity.Property(e => e.تاریخ).HasMaxLength(4000);

                entity.Property(e => e.شمارهسند).HasColumnName("شماره سند");

                entity.Property(e => e.نامکل)
                    .HasColumnName("نام کل")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.کدکل)
                    .HasColumnName("کد کل")
                    .HasMaxLength(15)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<حسابداری115گزارشدفترروزنامه139205231143>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("حسابداری|115|گزارش دفتر روزنامه (1392/05/23 11:43) ", "Monitor");

                entity.Property(e => e.بدهکار).HasColumnType("money");

                entity.Property(e => e.بستانکار).HasColumnType("money");

                entity.Property(e => e.تاریخ).HasMaxLength(4000);

                entity.Property(e => e.نامکل)
                    .HasColumnName("نام کل")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.کدکل)
                    .HasColumnName("کد کل")
                    .HasMaxLength(15)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<حسابداری116گزارشدفترروزنامه13920513848139410220844>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("حسابداری|116|گزارش دفتر روزنامه (1392/05/13 8:48) (1394/10/22 08:44) ", "Monitor");

                entity.Property(e => e.بدهکار).HasColumnType("money");

                entity.Property(e => e.بستانکار).HasColumnType("money");

                entity.Property(e => e.تاریخ).HasMaxLength(4000);

                entity.Property(e => e.شمارهسند).HasColumnName("شماره سند");

                entity.Property(e => e.نامکل)
                    .HasColumnName("نام کل")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.کدکل)
                    .HasColumnName("کد کل")
                    .HasMaxLength(15)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<حسابداری4600لیستاسنادهمراهباجمع>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("حسابداری|4600|لیست اسناد همراه با جمع", "Monitor");

                entity.Property(e => e.HiddenStyle)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.بدهکار).HasColumnType("money");

                entity.Property(e => e.بستانکار).HasColumnType("money");

                entity.Property(e => e.تاریخ).HasMaxLength(4000);

                entity.Property(e => e.شمارهسند).HasColumnName("شماره سند");

                entity.Property(e => e.نامکل)
                    .HasColumnName("نام کل")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.کدکل)
                    .HasColumnName("کد کل")
                    .HasMaxLength(15)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<حقوق8000گزارشفیشحقوقی>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("حقوق |8000|گزارش فیش حقوقی", "Monitor");

                entity.Property(e => e.اضافهكارثابت)
                    .HasColumnName("اضافه كار ثابت")
                    .HasColumnType("money");

                entity.Property(e => e.اضافهكارثابتطبقحكم)
                    .HasColumnName("اضافه كار ثابت طبق حكم")
                    .HasColumnType("money");

                entity.Property(e => e.افزايشسنواتي)
                    .HasColumnName("افزايش سنواتي")
                    .HasColumnType("money");

                entity.Property(e => e.ايابوذهاب)
                    .HasColumnName("اياب و ذهاب")
                    .HasColumnType("money");

                entity.Property(e => e.ايابوذهابطبقحكم)
                    .HasColumnName("اياب و ذهاب طبق حكم")
                    .HasColumnType("money");

                entity.Property(e => e.بازخريدخدمت)
                    .HasColumnName("باز خريد خدمت")
                    .HasColumnType("money");

                entity.Property(e => e.بازخريدخدمتبهازايهرسالروز)
                    .HasColumnName("باز خريد خدمت به ازاي هر سال (روز)")
                    .HasColumnType("money");

                entity.Property(e => e.بازخريدخدمتمحاسبهشود)
                    .HasColumnName("باز خريد خدمت محاسبه شود")
                    .HasColumnType("money");

                entity.Property(e => e.بستانكاريازقبل)
                    .HasColumnName("بستانكاري از قبل")
                    .HasColumnType("money");

                entity.Property(e => e.بيمه).HasColumnType("money");

                entity.Property(e => e.بيمهبيكاري3)
                    .HasColumnName("بيمه بيكاري %3")
                    .HasColumnType("money");

                entity.Property(e => e.بيمهتكميلي)
                    .HasColumnName("بيمه تكميلي")
                    .HasColumnType("money");

                entity.Property(e => e.بيمهسهمكارفرما)
                    .HasColumnName("بيمه سهم كارفرما")
                    .HasColumnType("money");

                entity.Property(e => e.تعدادروزهايغيبت)
                    .HasColumnName("تعداد روزهاي غيبت")
                    .HasColumnType("money");

                entity.Property(e => e.تعدادروزهايكاركرد)
                    .HasColumnName("تعداد روزهاي كاركرد")
                    .HasColumnType("money");

                entity.Property(e => e.تعدادروزهايكاريماه)
                    .HasColumnName("تعداد روزهاي كاري ماه")
                    .HasColumnType("money");

                entity.Property(e => e.تعدادفرزند)
                    .HasColumnName("تعداد فرزند")
                    .HasColumnType("money");

                entity.Property(e => e.تعدادكلروزهايكاركرددرگذشته)
                    .HasColumnName("تعداد كل روز هاي كاركرد در گذشته")
                    .HasColumnType("money");

                entity.Property(e => e.تعدادماموريت)
                    .HasColumnName("تعداد ماموريت")
                    .HasColumnType("money");

                entity.Property(e => e.تعدادماههايكاركرد)
                    .HasColumnName("تعداد ماههاي كاركرد")
                    .HasColumnType("money");

                entity.Property(e => e.جمعتعدادروزهايكاركرد)
                    .HasColumnName("جمع تعداد روزهاي كاركرد")
                    .HasColumnType("money");

                entity.Property(e => e.جمعحقوقومزايا)
                    .HasColumnName("جمع حقوق و مزايا")
                    .HasColumnType("money");

                entity.Property(e => e.جمعروزهايكاركرددردورههايمحاسبهشده)
                    .HasColumnName("جمع روز هاي كاركرد در دوره هاي محاسبه شده")
                    .HasColumnType("money");

                entity.Property(e => e.جمعكسورات)
                    .HasColumnName("جمع كسورات")
                    .HasColumnType("money");

                entity.Property(e => e.جمعمرخصيهايرفته)
                    .HasColumnName("جمع مرخصي هاي رفته")
                    .HasColumnType("money");

                entity.Property(e => e.حداقلحقوقروزانه)
                    .HasColumnName("حداقل حقوق روزانه")
                    .HasColumnType("money");

                entity.Property(e => e.حقجذب)
                    .HasColumnName("حق جذب")
                    .HasColumnType("money");

                entity.Property(e => e.حقجذبطبقحكم)
                    .HasColumnName("حق جذب طبق حكم")
                    .HasColumnType("money");

                entity.Property(e => e.حقماموريت)
                    .HasColumnName("حق ماموريت")
                    .HasColumnType("money");

                entity.Property(e => e.حقمسئوليتوسرپرستي)
                    .HasColumnName("حق مسئوليت و سرپرستي")
                    .HasColumnType("money");

                entity.Property(e => e.حقمسئوليتوسرپرستيطبقحكم)
                    .HasColumnName("حق مسئوليت و سرپرستي طبق حكم")
                    .HasColumnType("money");

                entity.Property(e => e.حقنهار)
                    .HasColumnName("حق نهار")
                    .HasColumnType("money");

                entity.Property(e => e.حقوقثابت)
                    .HasColumnName("حقوق ثابت")
                    .HasColumnType("money");

                entity.Property(e => e.حقوقروزانه)
                    .HasColumnName("حقوق روزانه")
                    .HasColumnType("money");

                entity.Property(e => e.حقوقمبنا)
                    .HasColumnName("حقوق مبنا")
                    .HasColumnType("money");

                entity.Property(e => e.خانوادگینام)
                    .HasColumnName(" خانوادگی نام")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.خريدمحصولات)
                    .HasColumnName("خريد محصولات")
                    .HasColumnType("money");

                entity.Property(e => e.درصدضريبماليات)
                    .HasColumnName("درصد ضريب ماليات")
                    .HasColumnType("money");

                entity.Property(e => e.درصدنوبتكاري)
                    .HasColumnName("درصد نوبتكاري")
                    .HasColumnType("money");

                entity.Property(e => e.درصورتتعلقنگرفتنبيمهعدد1راواردكنيد)
                    .HasColumnName("درصورت تعلق نگرفتن بيمه عدد 1راواردكنيد")
                    .HasColumnType("money");

                entity.Property(e => e.درصورتتعلقنگرفتنمالياتعدد1راواردكنيد)
                    .HasColumnName("درصورت تعلق نگرفتن ماليات  عدد 1راواردكنيد")
                    .HasColumnType("money");

                entity.Property(e => e.درصورتقرارگرفتندرمناطقمحرومعدد1راواردكنيد)
                    .HasColumnName("درصورت قرار گرفتن در مناطق محروم عدد1راواردكنيد")
                    .HasColumnType("money");

                entity.Property(e => e.ذخيرهبازخريدخدمتامسال)
                    .HasColumnName("ذخيره باز خريد خدمت امسال")
                    .HasColumnType("money");

                entity.Property(e => e.ذخيرهسنواتدرسالهايگذشته)
                    .HasColumnName("ذخيره سنوات در سالهاي گذشته")
                    .HasColumnType("money");

                entity.Property(e => e.روزمبناينهار)
                    .HasColumnName("روز مبناي نهار")
                    .HasColumnType("money");

                entity.Property(e => e.رونداينماه)
                    .HasColumnName("روند اين ماه ")
                    .HasColumnType("money");

                entity.Property(e => e.ساعتاضافهكاريتعطيلي)
                    .HasColumnName("ساعت اضافه كاري تعطيلي")
                    .HasColumnType("money");

                entity.Property(e => e.ساعتاضافهكاريعادي)
                    .HasColumnName("ساعت اضافه كاري عادي")
                    .HasColumnType("money");

                entity.Property(e => e.ساعتشبكاري)
                    .HasColumnName("ساعت شبكاري")
                    .HasColumnType("money");

                entity.Property(e => e.ساعتكسركار)
                    .HasColumnName("ساعت كسر كار")
                    .HasColumnType("money");

                entity.Property(e => e.سايركسورات)
                    .HasColumnName("ساير كسورات")
                    .HasColumnType("money");

                entity.Property(e => e.سايرمزايا)
                    .HasColumnName("ساير مزايا")
                    .HasColumnType("money");

                entity.Property(e => e.سايرپرداختيها)
                    .HasColumnName("ساير پرداختي ها")
                    .HasColumnType("money");

                entity.Property(e => e.سختيكار)
                    .HasColumnName("سختي كار")
                    .HasColumnType("money");

                entity.Property(e => e.سختيكارطبقحكم)
                    .HasColumnName("سختي كار طبق حكم")
                    .HasColumnType("money");

                entity.Property(e => e.سقفبيمهروزانه)
                    .HasColumnName("سقف بيمه روزانه")
                    .HasColumnType("money");

                entity.Property(e => e.سقفعيديسالانه)
                    .HasColumnName("سقف عيدي سالانه")
                    .HasColumnType("money");

                entity.Property(e => e.شمارهماهقبل)
                    .HasColumnName("شماره ماه قبل")
                    .HasColumnType("money");

                entity.Property(e => e.ضريبتخصصيويژه)
                    .HasColumnName("ضريب تخصصي ويژه ")
                    .HasColumnType("money");

                entity.Property(e => e.ضريبتخصصيويژهطبقحکم)
                    .HasColumnName("ضريب تخصصي ويژه طبق حکم")
                    .HasColumnType("money");

                entity.Property(e => e.عيدي).HasColumnType("money");

                entity.Property(e => e.فوقالعادهدوريازمرکز)
                    .HasColumnName("فوق العاده دوري از مرکز ")
                    .HasColumnType("money");

                entity.Property(e => e.فوقالعادهدوريازمرکزطبقحکم)
                    .HasColumnName("فوق العاده دوري از مرکز طبق حکم")
                    .HasColumnType("money");

                entity.Property(e => e.فوقالعادهشرايطمحيطکار)
                    .HasColumnName("فوق العاده شرايط محيط کار")
                    .HasColumnType("money");

                entity.Property(e => e.فوقالعادهشرايطمحيطکارطبقحکم)
                    .HasColumnName("فوق العاده شرايط محيط کار طبق حکم")
                    .HasColumnType("money");

                entity.Property(e => e.قابلپرداخت)
                    .HasColumnName("قابل پرداخت")
                    .HasColumnType("money");

                entity.Property(e => e.قابلپرداختروندشده)
                    .HasColumnName("قابل پرداخت روند شده ")
                    .HasColumnType("money");

                entity.Property(e => e.كارانه).HasColumnType("money");

                entity.Property(e => e.كارانهطبقحكم)
                    .HasColumnName("كارانه طبق حكم")
                    .HasColumnType("money");

                entity.Property(e => e.كمكهزينهاولاد)
                    .HasColumnName("كمك هزينه اولاد")
                    .HasColumnType("money");

                entity.Property(e => e.كمكهزينهبن)
                    .HasColumnName("كمك هزينه بن")
                    .HasColumnType("money");

                entity.Property(e => e.كمكهزينهبنطبقحكم)
                    .HasColumnName("كمك هزينه  بن طبق حكم")
                    .HasColumnType("money");

                entity.Property(e => e.كمكهزينهتلفن)
                    .HasColumnName("كمك هزينه تلفن")
                    .HasColumnType("money");

                entity.Property(e => e.ماليات).HasColumnType("money");

                entity.Property(e => e.مالياتپرداختيازابتدايسال)
                    .HasColumnName("ماليات پرداختي از ابتداي سال")
                    .HasColumnType("money");

                entity.Property(e => e.ماندهمرخصيساليانه)
                    .HasColumnName("مانده مرخصي ساليانه")
                    .HasColumnType("money");

                entity.Property(e => e.ماندهوام)
                    .HasColumnName("مانده وام")
                    .HasColumnType("money");

                entity.Property(e => e.ماندهوامبيمهتکميلي)
                    .HasColumnName("مانده وام بيمه تکميلي ")
                    .HasColumnType("money");

                entity.Property(e => e.ماندهوامقرضالحسنه2)
                    .HasColumnName("مانده وام قرض الحسنه 2")
                    .HasColumnType("money");

                entity.Property(e => e.ماه).HasMaxLength(4000);

                entity.Property(e => e.مبلغاضافهكارتعطيلي)
                    .HasColumnName("مبلغ اضافه كار تعطيلي")
                    .HasColumnType("money");

                entity.Property(e => e.مبلغاضافهكاريعادي)
                    .HasColumnName("مبلغ اضافه كاري عادي")
                    .HasColumnType("money");

                entity.Property(e => e.مبلغشبكاري)
                    .HasColumnName("مبلغ شبكاري")
                    .HasColumnType("money");

                entity.Property(e => e.مبلغعيديمشمولماليات)
                    .HasColumnName("مبلغ عيدي مشمول ماليات")
                    .HasColumnType("money");

                entity.Property(e => e.مبلغكسركار)
                    .HasColumnName("مبلغ كسر كار")
                    .HasColumnType("money");

                entity.Property(e => e.مبلغنوبتكاري)
                    .HasColumnName("مبلغ نوبتكاري")
                    .HasColumnType("money");

                entity.Property(e => e.محاسبهعيديدراينماهصورتپذيرد)
                    .HasColumnName("محاسبه عيدي در اين ماه صورت پذيرد")
                    .HasColumnType("money");

                entity.Property(e => e.مرخصيرفتهدراينماه)
                    .HasColumnName("مرخصي رفته دراين ماه")
                    .HasColumnType("money");

                entity.Property(e => e.مرخصيساعتي)
                    .HasColumnName("مرخصي ساعتي ")
                    .HasColumnType("money");

                entity.Property(e => e.مرخصيساليانه)
                    .HasColumnName("مرخصي ساليانه")
                    .HasColumnType("money");

                entity.Property(e => e.مرخصيهايرفتهازابتدايسال)
                    .HasColumnName("مرخصي هاي رفته از ابتداي سال")
                    .HasColumnType("money");

                entity.Property(e => e.مرخصيهايرفتهدرماه)
                    .HasColumnName("مرخصي هاي رفته در ماه")
                    .HasColumnType("money");

                entity.Property(e => e.مزايايمشمولبيمه)
                    .HasColumnName("مزاياي مشمول بيمه")
                    .HasColumnType("money");

                entity.Property(e => e.مساعده).HasColumnType("money");

                entity.Property(e => e.مشمولبيمه)
                    .HasColumnName("مشمول بيمه")
                    .HasColumnType("money");

                entity.Property(e => e.مشمولبيمهبااحتسابسقفبيمه)
                    .HasColumnName("مشمول بيمه با احتساب سقف بيمه")
                    .HasColumnType("money");

                entity.Property(e => e.مشمولماليات)
                    .HasColumnName("مشمول ماليات")
                    .HasColumnType("money");

                entity.Property(e => e.مشمولمالياتازابتدايسال)
                    .HasColumnName("مشمول ماليات از ابتداي سال")
                    .HasColumnType("money");

                entity.Property(e => e.معافيتمالياتعيدي)
                    .HasColumnName("معافيت ماليات عيدي")
                    .HasColumnType("money");

                entity.Property(e => e.نام)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.نرخشبكاري)
                    .HasColumnName("نرخ شبكاري")
                    .HasColumnType("money");

                entity.Property(e => e.نرخنوبتكاري)
                    .HasColumnName("نرخ نوبتكاري")
                    .HasColumnType("money");

                entity.Property(e => e.نهاريطبقحكم)
                    .HasColumnName("نهاري طبق حكم")
                    .HasColumnType("money");

                entity.Property(e => e.هزينهبيمه23)
                    .HasColumnName("هزينه بيمه 23%")
                    .HasColumnType("money");

                entity.Property(e => e.هزينهماموريت)
                    .HasColumnName("هزينه ماموريت")
                    .HasColumnType("money");

                entity.Property(e => e.وام).HasColumnType("money");

                entity.Property(e => e.وامبيمهتکميلي)
                    .HasColumnName("وام بيمه تکميلي ")
                    .HasColumnType("money");

                entity.Property(e => e.وامقرضالحسنه2)
                    .HasColumnName("وام قرض الحسنه 2")
                    .HasColumnType("money");

                entity.Property(e => e.وضعيتتاهل)
                    .HasColumnName("وضعيت تاهل")
                    .HasColumnType("money");

                entity.Property(e => e.پاداش).HasColumnType("money");

                entity.Property(e => e.کد)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کمکهزينهخواروبار)
                    .HasColumnName("کمک هزينه خوار و بار")
                    .HasColumnType("money");

                entity.Property(e => e.کمکهزينهخواروبارطبقحكم)
                    .HasColumnName("کمک هزينه خوار و بار طبق حكم")
                    .HasColumnType("money");

                entity.Property(e => e.کمکهزينهسوخت)
                    .HasColumnName("کمک هزينه سوخت")
                    .HasColumnType("money");

                entity.Property(e => e.کمکهزينهسوختطبقحکم)
                    .HasColumnName("کمک هزينه سوخت طبق حکم")
                    .HasColumnType("money");

                entity.Property(e => e.کمکهزينهعائلهمندي)
                    .HasColumnName("کمک هزينه عائله مندي ")
                    .HasColumnType("money");

                entity.Property(e => e.کمکهزينهمسكن)
                    .HasColumnName("کمک هزينه مسكن")
                    .HasColumnType("money");

                entity.Property(e => e.کمکهزينهمسكنطبقحكم)
                    .HasColumnName("کمک هزينه مسكن طبق حكم")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<حقوق8001گزارشفیشحقوقی139410220843>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("حقوق|8001|گزارش فیش حقوقی (1394/10/22 08:43) ", "Monitor");

                entity.Property(e => e.اضافهكارثابت)
                    .HasColumnName("اضافه كار ثابت")
                    .HasColumnType("money");

                entity.Property(e => e.اضافهكارثابتطبقحكم)
                    .HasColumnName("اضافه كار ثابت طبق حكم")
                    .HasColumnType("money");

                entity.Property(e => e.افزايشسنواتي)
                    .HasColumnName("افزايش سنواتي")
                    .HasColumnType("money");

                entity.Property(e => e.ايابوذهاب)
                    .HasColumnName("اياب و ذهاب")
                    .HasColumnType("money");

                entity.Property(e => e.ايابوذهابطبقحكم)
                    .HasColumnName("اياب و ذهاب طبق حكم")
                    .HasColumnType("money");

                entity.Property(e => e.بازخريدخدمت)
                    .HasColumnName("باز خريد خدمت")
                    .HasColumnType("money");

                entity.Property(e => e.بازخريدخدمتبهازايهرسالروز)
                    .HasColumnName("باز خريد خدمت به ازاي هر سال (روز)")
                    .HasColumnType("money");

                entity.Property(e => e.بازخريدخدمتمحاسبهشود)
                    .HasColumnName("باز خريد خدمت محاسبه شود")
                    .HasColumnType("money");

                entity.Property(e => e.بستانكاريازقبل)
                    .HasColumnName("بستانكاري از قبل")
                    .HasColumnType("money");

                entity.Property(e => e.بيمه).HasColumnType("money");

                entity.Property(e => e.بيمهبيكاري3)
                    .HasColumnName("بيمه بيكاري %3")
                    .HasColumnType("money");

                entity.Property(e => e.بيمهتكميلي)
                    .HasColumnName("بيمه تكميلي")
                    .HasColumnType("money");

                entity.Property(e => e.بيمهسهمكارفرما)
                    .HasColumnName("بيمه سهم كارفرما")
                    .HasColumnType("money");

                entity.Property(e => e.تعدادروزهايغيبت)
                    .HasColumnName("تعداد روزهاي غيبت")
                    .HasColumnType("money");

                entity.Property(e => e.تعدادروزهايكاركرد)
                    .HasColumnName("تعداد روزهاي كاركرد")
                    .HasColumnType("money");

                entity.Property(e => e.تعدادروزهايكاريماه)
                    .HasColumnName("تعداد روزهاي كاري ماه")
                    .HasColumnType("money");

                entity.Property(e => e.تعدادفرزند)
                    .HasColumnName("تعداد فرزند")
                    .HasColumnType("money");

                entity.Property(e => e.تعدادكلروزهايكاركرددرگذشته)
                    .HasColumnName("تعداد كل روز هاي كاركرد در گذشته")
                    .HasColumnType("money");

                entity.Property(e => e.تعدادماموريت)
                    .HasColumnName("تعداد ماموريت")
                    .HasColumnType("money");

                entity.Property(e => e.تعدادماههايكاركرد)
                    .HasColumnName("تعداد ماههاي كاركرد")
                    .HasColumnType("money");

                entity.Property(e => e.جمعتعدادروزهايكاركرد)
                    .HasColumnName("جمع تعداد روزهاي كاركرد")
                    .HasColumnType("money");

                entity.Property(e => e.جمعحقوقومزايا)
                    .HasColumnName("جمع حقوق و مزايا")
                    .HasColumnType("money");

                entity.Property(e => e.جمعروزهايكاركرددردورههايمحاسبهشده)
                    .HasColumnName("جمع روز هاي كاركرد در دوره هاي محاسبه شده")
                    .HasColumnType("money");

                entity.Property(e => e.جمعكسورات)
                    .HasColumnName("جمع كسورات")
                    .HasColumnType("money");

                entity.Property(e => e.جمعمرخصيهايرفته)
                    .HasColumnName("جمع مرخصي هاي رفته")
                    .HasColumnType("money");

                entity.Property(e => e.حداقلحقوقروزانه)
                    .HasColumnName("حداقل حقوق روزانه")
                    .HasColumnType("money");

                entity.Property(e => e.حقجذب)
                    .HasColumnName("حق جذب")
                    .HasColumnType("money");

                entity.Property(e => e.حقجذبطبقحكم)
                    .HasColumnName("حق جذب طبق حكم")
                    .HasColumnType("money");

                entity.Property(e => e.حقماموريت)
                    .HasColumnName("حق ماموريت")
                    .HasColumnType("money");

                entity.Property(e => e.حقمسئوليتوسرپرستي)
                    .HasColumnName("حق مسئوليت و سرپرستي")
                    .HasColumnType("money");

                entity.Property(e => e.حقمسئوليتوسرپرستيطبقحكم)
                    .HasColumnName("حق مسئوليت و سرپرستي طبق حكم")
                    .HasColumnType("money");

                entity.Property(e => e.حقنهار)
                    .HasColumnName("حق نهار")
                    .HasColumnType("money");

                entity.Property(e => e.حقوقثابت)
                    .HasColumnName("حقوق ثابت")
                    .HasColumnType("money");

                entity.Property(e => e.حقوقروزانه)
                    .HasColumnName("حقوق روزانه")
                    .HasColumnType("money");

                entity.Property(e => e.حقوقمبنا)
                    .HasColumnName("حقوق مبنا")
                    .HasColumnType("money");

                entity.Property(e => e.خانوادگینام)
                    .HasColumnName(" خانوادگی نام")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.خريدمحصولات)
                    .HasColumnName("خريد محصولات")
                    .HasColumnType("money");

                entity.Property(e => e.درصدضريبماليات)
                    .HasColumnName("درصد ضريب ماليات")
                    .HasColumnType("money");

                entity.Property(e => e.درصدنوبتكاري)
                    .HasColumnName("درصد نوبتكاري")
                    .HasColumnType("money");

                entity.Property(e => e.درصورتتعلقنگرفتنبيمهعدد1راواردكنيد)
                    .HasColumnName("درصورت تعلق نگرفتن بيمه عدد 1راواردكنيد")
                    .HasColumnType("money");

                entity.Property(e => e.درصورتتعلقنگرفتنمالياتعدد1راواردكنيد)
                    .HasColumnName("درصورت تعلق نگرفتن ماليات  عدد 1راواردكنيد")
                    .HasColumnType("money");

                entity.Property(e => e.درصورتقرارگرفتندرمناطقمحرومعدد1راواردكنيد)
                    .HasColumnName("درصورت قرار گرفتن در مناطق محروم عدد1راواردكنيد")
                    .HasColumnType("money");

                entity.Property(e => e.ذخيرهبازخريدخدمتامسال)
                    .HasColumnName("ذخيره باز خريد خدمت امسال")
                    .HasColumnType("money");

                entity.Property(e => e.ذخيرهسنواتدرسالهايگذشته)
                    .HasColumnName("ذخيره سنوات در سالهاي گذشته")
                    .HasColumnType("money");

                entity.Property(e => e.روزمبناينهار)
                    .HasColumnName("روز مبناي نهار")
                    .HasColumnType("money");

                entity.Property(e => e.رونداينماه)
                    .HasColumnName("روند اين ماه ")
                    .HasColumnType("money");

                entity.Property(e => e.ساعتاضافهكاريتعطيلي)
                    .HasColumnName("ساعت اضافه كاري تعطيلي")
                    .HasColumnType("money");

                entity.Property(e => e.ساعتاضافهكاريعادي)
                    .HasColumnName("ساعت اضافه كاري عادي")
                    .HasColumnType("money");

                entity.Property(e => e.ساعتشبكاري)
                    .HasColumnName("ساعت شبكاري")
                    .HasColumnType("money");

                entity.Property(e => e.ساعتكسركار)
                    .HasColumnName("ساعت كسر كار")
                    .HasColumnType("money");

                entity.Property(e => e.سايركسورات)
                    .HasColumnName("ساير كسورات")
                    .HasColumnType("money");

                entity.Property(e => e.سايرمزايا)
                    .HasColumnName("ساير مزايا")
                    .HasColumnType("money");

                entity.Property(e => e.سايرپرداختيها)
                    .HasColumnName("ساير پرداختي ها")
                    .HasColumnType("money");

                entity.Property(e => e.سختيكار)
                    .HasColumnName("سختي كار")
                    .HasColumnType("money");

                entity.Property(e => e.سختيكارطبقحكم)
                    .HasColumnName("سختي كار طبق حكم")
                    .HasColumnType("money");

                entity.Property(e => e.سقفبيمهروزانه)
                    .HasColumnName("سقف بيمه روزانه")
                    .HasColumnType("money");

                entity.Property(e => e.سقفعيديسالانه)
                    .HasColumnName("سقف عيدي سالانه")
                    .HasColumnType("money");

                entity.Property(e => e.شمارهماهقبل)
                    .HasColumnName("شماره ماه قبل")
                    .HasColumnType("money");

                entity.Property(e => e.ضريبتخصصيويژه)
                    .HasColumnName("ضريب تخصصي ويژه ")
                    .HasColumnType("money");

                entity.Property(e => e.ضريبتخصصيويژهطبقحکم)
                    .HasColumnName("ضريب تخصصي ويژه طبق حکم")
                    .HasColumnType("money");

                entity.Property(e => e.عيدي).HasColumnType("money");

                entity.Property(e => e.فوقالعادهدوريازمرکز)
                    .HasColumnName("فوق العاده دوري از مرکز ")
                    .HasColumnType("money");

                entity.Property(e => e.فوقالعادهدوريازمرکزطبقحکم)
                    .HasColumnName("فوق العاده دوري از مرکز طبق حکم")
                    .HasColumnType("money");

                entity.Property(e => e.فوقالعادهشرايطمحيطکار)
                    .HasColumnName("فوق العاده شرايط محيط کار")
                    .HasColumnType("money");

                entity.Property(e => e.فوقالعادهشرايطمحيطکارطبقحکم)
                    .HasColumnName("فوق العاده شرايط محيط کار طبق حکم")
                    .HasColumnType("money");

                entity.Property(e => e.قابلپرداخت)
                    .HasColumnName("قابل پرداخت")
                    .HasColumnType("money");

                entity.Property(e => e.قابلپرداختروندشده)
                    .HasColumnName("قابل پرداخت روند شده ")
                    .HasColumnType("money");

                entity.Property(e => e.كارانه).HasColumnType("money");

                entity.Property(e => e.كارانهطبقحكم)
                    .HasColumnName("كارانه طبق حكم")
                    .HasColumnType("money");

                entity.Property(e => e.كمكهزينهاولاد)
                    .HasColumnName("كمك هزينه اولاد")
                    .HasColumnType("money");

                entity.Property(e => e.كمكهزينهبن)
                    .HasColumnName("كمك هزينه بن")
                    .HasColumnType("money");

                entity.Property(e => e.كمكهزينهبنطبقحكم)
                    .HasColumnName("كمك هزينه  بن طبق حكم")
                    .HasColumnType("money");

                entity.Property(e => e.كمكهزينهتلفن)
                    .HasColumnName("كمك هزينه تلفن")
                    .HasColumnType("money");

                entity.Property(e => e.ماليات).HasColumnType("money");

                entity.Property(e => e.مالياتپرداختيازابتدايسال)
                    .HasColumnName("ماليات پرداختي از ابتداي سال")
                    .HasColumnType("money");

                entity.Property(e => e.ماندهمرخصيساليانه)
                    .HasColumnName("مانده مرخصي ساليانه")
                    .HasColumnType("money");

                entity.Property(e => e.ماندهوام)
                    .HasColumnName("مانده وام")
                    .HasColumnType("money");

                entity.Property(e => e.ماندهوامبيمهتکميلي)
                    .HasColumnName("مانده وام بيمه تکميلي ")
                    .HasColumnType("money");

                entity.Property(e => e.ماندهوامقرضالحسنه2)
                    .HasColumnName("مانده وام قرض الحسنه 2")
                    .HasColumnType("money");

                entity.Property(e => e.ماه).HasMaxLength(4000);

                entity.Property(e => e.مبلغاضافهكارتعطيلي)
                    .HasColumnName("مبلغ اضافه كار تعطيلي")
                    .HasColumnType("money");

                entity.Property(e => e.مبلغاضافهكاريعادي)
                    .HasColumnName("مبلغ اضافه كاري عادي")
                    .HasColumnType("money");

                entity.Property(e => e.مبلغشبكاري)
                    .HasColumnName("مبلغ شبكاري")
                    .HasColumnType("money");

                entity.Property(e => e.مبلغعيديمشمولماليات)
                    .HasColumnName("مبلغ عيدي مشمول ماليات")
                    .HasColumnType("money");

                entity.Property(e => e.مبلغكسركار)
                    .HasColumnName("مبلغ كسر كار")
                    .HasColumnType("money");

                entity.Property(e => e.مبلغنوبتكاري)
                    .HasColumnName("مبلغ نوبتكاري")
                    .HasColumnType("money");

                entity.Property(e => e.محاسبهعيديدراينماهصورتپذيرد)
                    .HasColumnName("محاسبه عيدي در اين ماه صورت پذيرد")
                    .HasColumnType("money");

                entity.Property(e => e.مرخصيرفتهدراينماه)
                    .HasColumnName("مرخصي رفته دراين ماه")
                    .HasColumnType("money");

                entity.Property(e => e.مرخصيساعتي)
                    .HasColumnName("مرخصي ساعتي ")
                    .HasColumnType("money");

                entity.Property(e => e.مرخصيساليانه)
                    .HasColumnName("مرخصي ساليانه")
                    .HasColumnType("money");

                entity.Property(e => e.مرخصيهايرفتهازابتدايسال)
                    .HasColumnName("مرخصي هاي رفته از ابتداي سال")
                    .HasColumnType("money");

                entity.Property(e => e.مرخصيهايرفتهدرماه)
                    .HasColumnName("مرخصي هاي رفته در ماه")
                    .HasColumnType("money");

                entity.Property(e => e.مزايايمشمولبيمه)
                    .HasColumnName("مزاياي مشمول بيمه")
                    .HasColumnType("money");

                entity.Property(e => e.مساعده).HasColumnType("money");

                entity.Property(e => e.مشمولبيمه)
                    .HasColumnName("مشمول بيمه")
                    .HasColumnType("money");

                entity.Property(e => e.مشمولبيمهبااحتسابسقفبيمه)
                    .HasColumnName("مشمول بيمه با احتساب سقف بيمه")
                    .HasColumnType("money");

                entity.Property(e => e.مشمولماليات)
                    .HasColumnName("مشمول ماليات")
                    .HasColumnType("money");

                entity.Property(e => e.مشمولمالياتازابتدايسال)
                    .HasColumnName("مشمول ماليات از ابتداي سال")
                    .HasColumnType("money");

                entity.Property(e => e.معافيتمالياتعيدي)
                    .HasColumnName("معافيت ماليات عيدي")
                    .HasColumnType("money");

                entity.Property(e => e.نام)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.نرخشبكاري)
                    .HasColumnName("نرخ شبكاري")
                    .HasColumnType("money");

                entity.Property(e => e.نرخنوبتكاري)
                    .HasColumnName("نرخ نوبتكاري")
                    .HasColumnType("money");

                entity.Property(e => e.نهاريطبقحكم)
                    .HasColumnName("نهاري طبق حكم")
                    .HasColumnType("money");

                entity.Property(e => e.هزينهبيمه23)
                    .HasColumnName("هزينه بيمه 23%")
                    .HasColumnType("money");

                entity.Property(e => e.هزينهماموريت)
                    .HasColumnName("هزينه ماموريت")
                    .HasColumnType("money");

                entity.Property(e => e.وام).HasColumnType("money");

                entity.Property(e => e.وامبيمهتکميلي)
                    .HasColumnName("وام بيمه تکميلي ")
                    .HasColumnType("money");

                entity.Property(e => e.وامقرضالحسنه2)
                    .HasColumnName("وام قرض الحسنه 2")
                    .HasColumnType("money");

                entity.Property(e => e.وضعيتتاهل)
                    .HasColumnName("وضعيت تاهل")
                    .HasColumnType("money");

                entity.Property(e => e.پاداش).HasColumnType("money");

                entity.Property(e => e.کد)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کمکهزينهخواروبار)
                    .HasColumnName("کمک هزينه خوار و بار")
                    .HasColumnType("money");

                entity.Property(e => e.کمکهزينهخواروبارطبقحكم)
                    .HasColumnName("کمک هزينه خوار و بار طبق حكم")
                    .HasColumnType("money");

                entity.Property(e => e.کمکهزينهسوخت)
                    .HasColumnName("کمک هزينه سوخت")
                    .HasColumnType("money");

                entity.Property(e => e.کمکهزينهسوختطبقحکم)
                    .HasColumnName("کمک هزينه سوخت طبق حکم")
                    .HasColumnType("money");

                entity.Property(e => e.کمکهزينهعائلهمندي)
                    .HasColumnName("کمک هزينه عائله مندي ")
                    .HasColumnType("money");

                entity.Property(e => e.کمکهزينهمسكن)
                    .HasColumnName("کمک هزينه مسكن")
                    .HasColumnType("money");

                entity.Property(e => e.کمکهزينهمسكنطبقحكم)
                    .HasColumnName("کمک هزينه مسكن طبق حكم")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<حقوقودستمزد4500گزارشپرسنلبههمراهعواملحکمي>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("حقوق و دستمزد |4500|گزارش پرسنل به همراه عوامل حکمي", "Monitor");

                entity.Property(e => e.اضافهكارثابت)
                    .HasColumnName("اضافه كار ثابت")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.اضافهكارثابتطبقحكم)
                    .HasColumnName("اضافه كار ثابت طبق حكم")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.افزايشسنواتي)
                    .HasColumnName("افزايش سنواتي")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ايابوذهاب)
                    .HasColumnName("اياب و ذهاب")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ايابوذهابطبقحكم)
                    .HasColumnName("اياب و ذهاب طبق حكم")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.بازخريدخدمت)
                    .HasColumnName("باز خريد خدمت")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.بازخريدخدمتبهازايهرسالروز)
                    .HasColumnName("باز خريد خدمت به ازاي هر سال (روز)")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.بازخريدخدمتمحاسبهشود)
                    .HasColumnName("باز خريد خدمت محاسبه شود")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.بازخريدمرخصي)
                    .HasColumnName("بازخريد مرخصي")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.بستانكاريازقبل)
                    .HasColumnName("بستانكاري از قبل")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.بيمه).HasColumnType("numeric(38, 0)");

                entity.Property(e => e.بيمه30درصد)
                    .HasColumnName("بيمه 30 درصد")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.بيمهبيكاري3)
                    .HasColumnName("بيمه بيكاري %3")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.بيمهتكميلي)
                    .HasColumnName("بيمه تكميلي")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.بيمهسهمكارفرما)
                    .HasColumnName("بيمه سهم كارفرما")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.تاريخاتمامحکم)
                    .IsRequired()
                    .HasColumnName("تاريخ اتمام حکم")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.تاريخشروعحکم)
                    .IsRequired()
                    .HasColumnName("تاريخ شروع حکم")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.تعدادروزهايغيبت)
                    .HasColumnName("تعداد روزهاي غيبت")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.تعدادروزهايكاركرد)
                    .HasColumnName("تعداد روزهاي كاركرد")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.تعدادروزهايكاريماه)
                    .HasColumnName("تعداد روزهاي كاري ماه")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.تعدادفرزند)
                    .HasColumnName("تعداد فرزند")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.تعدادكلروزهايكاركرددرگذشته)
                    .HasColumnName("تعداد كل روز هاي كاركرد در گذشته")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.تعدادماموريت)
                    .HasColumnName("تعداد ماموريت")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.تعدادماههايكاركرد)
                    .HasColumnName("تعداد ماههاي كاركرد")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.تفاوتتطبيق)
                    .HasColumnName("تفاوت تطبيق")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.جمعتعدادروزهايكاركرد)
                    .HasColumnName("جمع تعداد روزهاي كاركرد")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.جمعحقوقومزايا)
                    .HasColumnName("جمع حقوق و مزايا")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.جمعحقوقومزاياينقديومشمولمالياتقبلي)
                    .HasColumnName("جمع حقوق و مزاياي نقدي و مشمول ماليات قبلي")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.جمعروزهايكاركرددردورههايمحاسبهشده)
                    .HasColumnName("جمع روز هاي كاركرد در دوره هاي محاسبه شده")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.جمعكسورات)
                    .HasColumnName("جمع كسورات")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.جمعكلمبالغتخصيصغيرنقديقبلي)
                    .HasColumnName("جمع كل مبالغ تخصيص غير نقدي قبلي")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.جمعمالياتمتعلقهقبلي)
                    .HasColumnName("جمع ماليات متعلقه قبلي")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.جمعمرخصيهايرفته)
                    .HasColumnName("جمع مرخصي هاي رفته")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.جمعکلماندهحقوقومزاياينقديوغيرنقديعيديوپاداش)
                    .HasColumnName("جمع کل مانده حقوق و مزاياي نقدي و غير نقدي ، عيدي و پاداش ")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.جمعکلمبالغپرداختيتخصيصيغيرنقدي)
                    .HasColumnName("جمع کل مبالغ پرداختي تخصيصي غير نقدي ")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.جمعکلمبالغپرداختيهاتخصيصينقدي)
                    .HasColumnName("جمع کل مبالغ پرداختي ها / تخصيصي نقدي ")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.حداقلحقوقروزانه)
                    .HasColumnName("حداقل حقوق روزانه")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.حقاتومبيلغيرنقدي)
                    .HasColumnName("حق اتومبيل غير نقدي ")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.حقجذب)
                    .HasColumnName("حق جذب")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.حقجذبطبقحكم)
                    .HasColumnName("حق جذب طبق حكم")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.حقشاغل)
                    .HasColumnName("حق شاغل")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.حقشاغلطبقحکم)
                    .HasColumnName("حق شاغل طبق حکم")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.حقماموريت)
                    .HasColumnName("حق ماموريت")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.حقمسئوليتوسرپرستي)
                    .HasColumnName("حق مسئوليت و سرپرستي")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.حقمسئوليتوسرپرستيطبقحكم)
                    .HasColumnName("حق مسئوليت و سرپرستي طبق حكم")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.حقمسکنغيرنقدي)
                    .HasColumnName("حق مسکن غير نقدي ")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.حقنهار)
                    .HasColumnName("حق نهار")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.حقوقثابت)
                    .HasColumnName("حقوق ثابت")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.حقوقروزانه)
                    .HasColumnName("حقوق روزانه")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.حقوقمبنا)
                    .HasColumnName("حقوق مبنا")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.حقوقومزايايغيرمستمر)
                    .HasColumnName("حقوق و مزاياي غير مستمر")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.حقوقومزايايمستمر)
                    .HasColumnName("حقوق و مزاياي مستمر ")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.حکمفعال).HasColumnName("حکم فعال");

                entity.Property(e => e.خريدمحصولاتشرکت)
                    .HasColumnName("خريد محصولات شرکت")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.درآمدمشمولمالياتپسازکسرمعافيتموضوعماده84)
                    .HasColumnName("درآمد مشمول ماليات پس از کسر معافيت موضوع ماده 84")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.درصدضريبماليات)
                    .HasColumnName("درصد ضريب ماليات")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.درصدنوبتكاري)
                    .HasColumnName("درصد نوبتكاري")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.درصورتتعلقنگرفتنبيمهعدد1راواردكنيد)
                    .HasColumnName("درصورت تعلق نگرفتن بيمه عدد 1راواردكنيد")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.درصورتتعلقنگرفتنمالياتعدد1راواردكنيد)
                    .HasColumnName("درصورت تعلق نگرفتن ماليات  عدد 1راواردكنيد")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.درصورتقرارگرفتندرمناطقمحرومعدد1راواردكنيد)
                    .HasColumnName("درصورت قرار گرفتن در مناطق محروم عدد1راواردكنيد")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ذخيرهبازخريدخدمتامسال)
                    .HasColumnName("ذخيره باز خريد خدمت امسال")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ذخيرهسنواتدرسالهايگذشته)
                    .HasColumnName("ذخيره سنوات در سالهاي گذشته")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.روزمبناينهار)
                    .HasColumnName("روز مبناي نهار")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ساعتاضافهكاريتعطيلي)
                    .HasColumnName("ساعت اضافه كاري تعطيلي")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ساعتاضافهكاريعادي)
                    .HasColumnName("ساعت اضافه كاري عادي")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ساعتشبكاري)
                    .HasColumnName("ساعت شبكاري")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ساعتكسركار)
                    .HasColumnName("ساعت كسر كار")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.سايركسورات)
                    .HasColumnName("ساير كسورات")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.سايرمزايا)
                    .HasColumnName("ساير مزايا")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.سايرمعافيتهابهغيرازمعافيتموضوعماده84)
                    .HasColumnName("ساير معافيت ها به غير از معافيت موضوع ماده 84")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.سايرپرداختهايماهجاري)
                    .HasColumnName("ساير پرداخت هاي ماه جاري")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.سايرپرداختيها)
                    .HasColumnName("ساير پرداختي ها")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.سختيكار)
                    .HasColumnName("سختي كار")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.سختيكارطبقحكم)
                    .HasColumnName("سختي كار طبق حكم")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.سقفبيمهروزانه)
                    .HasColumnName("سقف بيمه روزانه")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.سقفعيديسالانه)
                    .HasColumnName("سقف عيدي سالانه")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.شمارهحکم)
                    .IsRequired()
                    .HasColumnName("شماره حکم")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.شمارهماهقبل)
                    .HasColumnName("شماره ماه قبل")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.صندوقپسانداز)
                    .HasColumnName("صندوق پس انداز")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ضريبتخصصيويژه)
                    .HasColumnName("ضريب تخصصي ويژه ")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ضريبتخصصيويژهطبقحکم)
                    .HasColumnName("ضريب تخصصي ويژه طبق حکم")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.عيدي).HasColumnType("numeric(38, 0)");

                entity.Property(e => e.عيديوپاداش)
                    .HasColumnName("عيدي و پاداش")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.فوقالعادهدوريازمرکز)
                    .HasColumnName("فوق العاده دوري از مرکز ")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.فوقالعادهدوريازمرکزطبقحکم)
                    .HasColumnName("فوق العاده دوري از مرکز طبق حکم")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.فوقالعادهشرايطمحيطکار)
                    .HasColumnName("فوق العاده شرايط محيط کار")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.فوقالعادهشرايطمحيطکارطبقحکم)
                    .HasColumnName("فوق العاده شرايط محيط کار طبق حکم")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.قابلپرداخت)
                    .HasColumnName("قابل پرداخت")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.قابلپرداختعيدي)
                    .HasColumnName("قابل پرداخت عيدي")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.كارانه).HasColumnType("numeric(38, 0)");

                entity.Property(e => e.كارانهطبقحكم)
                    .HasColumnName("كارانه طبق حكم")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.كمكهزينهاولاد)
                    .HasColumnName("كمك هزينه اولاد")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.كمكهزينهبن)
                    .HasColumnName("كمك هزينه بن")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.كمكهزينهبنطبقحكم)
                    .HasColumnName("كمك هزينه  بن طبق حكم")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.مالياتعيدي)
                    .HasColumnName("ماليات عيدي ")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.مالياتقابلپرداختماهجاري)
                    .HasColumnName("ماليات قابل پرداخت ماه جاري ")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.مالياتقابلپرداختپسازاعمالمعافيتموضوعماده92)
                    .HasColumnName("ماليات قابل پرداخت پس از اعمال معافيت موضوع ماده 92")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.مالياتپرداختيازابتدايسال)
                    .HasColumnName("ماليات پرداختي از ابتداي سال")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ماندهسنوات)
                    .HasColumnName("مانده سنوات")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ماندهمرخصي)
                    .HasColumnName("مانده مرخصي")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ماندهمرخصيساليانه)
                    .HasColumnName("مانده مرخصي ساليانه")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ماندهوام)
                    .HasColumnName("مانده وام")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ماندهپرداختيتخصيصيغيرنقديپسازکسرمعافيتموضوعبند13ماده91)
                    .HasColumnName("مانده پرداختي/ تخصيصي غير نقدي پس از کسر معافيت موضوع بند 13 ماده 91")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ماندهپرداختيتخصيصينقديپسازکسرمعافيتماده91)
                    .HasColumnName("مانده پرداختي /تخصيصي نقدي پس از کسر معافيت ماده 91")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.مبلغاضافهكارتعطيلي)
                    .HasColumnName("مبلغ اضافه كار تعطيلي")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.مبلغاضافهكاريعادي)
                    .HasColumnName("مبلغ اضافه كاري عادي")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.مبلغشبكاري)
                    .HasColumnName("مبلغ شبكاري")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.مبلغعيديمشمولماليات)
                    .HasColumnName("مبلغ عيدي مشمول ماليات")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.مبلغقابلاحتساببابتاتومبيل)
                    .HasColumnName("مبلغ قابل احتساب بابت اتومبيل ")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.مبلغقابلاحتساببابتمسکن)
                    .HasColumnName("مبلغ قابل احتساب بابت مسکن")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.مبلغكسركار)
                    .HasColumnName("مبلغ كسر كار")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.مبلغنوبتكاري)
                    .HasColumnName("مبلغ نوبتكاري")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.مبلغپرداختيتخصيصيغيرنقدي)
                    .HasColumnName("مبلغ پرداختي / تخصيصي غير نقدي")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.محاسبهعيديدراينماهصورتپذيرد)
                    .HasColumnName("محاسبه عيدي در اين ماه صورت پذيرد")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.مرخصيرفتهدراينماه)
                    .HasColumnName("مرخصي رفته دراين ماه")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.مرخصيساليانه)
                    .HasColumnName("مرخصي ساليانه")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.مرخصيهايرفتهازابتدايسال)
                    .HasColumnName("مرخصي هاي رفته از ابتداي سال")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.مرخصيهايرفتهدرماه)
                    .HasColumnName("مرخصي هاي رفته در ماه")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.مزايايمشمولبيمه)
                    .HasColumnName("مزاياي مشمول بيمه")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.مساعده).HasColumnType("numeric(38, 0)");

                entity.Property(e => e.مشمولبيمه)
                    .HasColumnName("مشمول بيمه")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.مشمولبيمهبااحتسابسقفبيمه)
                    .HasColumnName("مشمول بيمه با احتساب سقف بيمه")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.مشمولماليات)
                    .HasColumnName("مشمول ماليات")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.مشمولمالياتازابتدايسال)
                    .HasColumnName("مشمول ماليات از ابتداي سال")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.معافيتماده91)
                    .HasColumnName("معافيت ماده 91")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.معافيتمالياتعيدي)
                    .HasColumnName("معافيت ماليات عيدي")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.نامپرسنل)
                    .HasColumnName("نام پرسنل")
                    .HasMaxLength(51)
                    .IsUnicode(false);

                entity.Property(e => e.نرخشبكاري)
                    .HasColumnName("نرخ شبكاري")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.نرخنوبتكاري)
                    .HasColumnName("نرخ نوبتكاري")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.نهاريطبقحكم)
                    .HasColumnName("نهاري طبق حكم")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.هزينهسوخت)
                    .HasColumnName("هزينه سوخت")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.هزينهسوختطبقحکم)
                    .HasColumnName("هزينه سوخت طبق حکم")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.هزينهماموريت)
                    .HasColumnName("هزينه ماموريت")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.وام).HasColumnType("numeric(38, 0)");

                entity.Property(e => e.وضعيتاستفادهازاتومبيل)
                    .HasColumnName("وضعيت استفاده از اتومبيل")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.وضعيتاستفادهازمسکن)
                    .HasColumnName("وضعيت استفاده از مسکن")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.وضعيتتاهل)
                    .HasColumnName("وضعيت تاهل")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.پاداش).HasColumnType("numeric(38, 0)");

                entity.Property(e => e.پورسانت).HasColumnType("numeric(38, 0)");

                entity.Property(e => e.کدپرسنلي)
                    .HasColumnName("کد پرسنلي")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کمکهزينهاولادطبقحکم)
                    .HasColumnName("کمک هزينه اولاد طبق حکم ")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.کمکهزينهخواروبار)
                    .HasColumnName("کمک هزينه خوار و بار")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.کمکهزينهخواروبارطبقحكم)
                    .HasColumnName("کمک هزينه خوار و بار طبق حكم")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.کمکهزينهسوخت)
                    .HasColumnName("کمک هزينه سوخت")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.کمکهزينهسوختطبقحکم)
                    .HasColumnName("کمک هزينه سوخت طبق حکم")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.کمکهزينهمسكن)
                    .HasColumnName("کمک هزينه مسكن")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.کمکهزينهمسكنطبقحكم)
                    .HasColumnName("کمک هزينه مسكن طبق حكم")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<حقوقودستمزد4500گزارشپرسنلبههمراهعواملحکمی>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("حقوق و دستمزد |4500|گزارش پرسنل به همراه عوامل حکمی", "Monitor");

                entity.Property(e => e.افزايشقانونکار)
                    .HasColumnName("افزايش قانون کار")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ايابوذهابطبقحكم)
                    .HasColumnName("اياب و ذهاب طبق حكم")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.بديآبوهوا)
                    .HasColumnName("بدي آب و هوا")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.بهرهوريطبقحکم)
                    .HasColumnName("بهره وري طبق حکم")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.تاریخاتمامحکم)
                    .IsRequired()
                    .HasColumnName("تاریخ اتمام حکم")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.تاریخشروعحکم)
                    .IsRequired()
                    .HasColumnName("تاریخ شروع حکم")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.تفاوتتطبيقطبقحکم)
                    .HasColumnName("تفاوت تطبيق طبق حکم")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.حقجذبطبقحکم)
                    .HasColumnName("حق جذب طبق حکم")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.حقلباسطبقحکم)
                    .HasColumnName("حق  لباس طبق حکم")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.حقمديريت)
                    .HasColumnName("حق مديريت ")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.حقمسئوليتوسرپرستيطبقحکم)
                    .HasColumnName("حق مسئوليت و سرپرستي طبق حکم")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.حقوقثابتشاغل)
                    .HasColumnName("حقوق ثابت(شاغل)")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.حکمفعال).HasColumnName("حکم فعال");

                entity.Property(e => e.رقمحقوقيمبناياضافهکار)
                    .HasColumnName("رقم حقوقي مبناي اضافه کار")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.سايرمزايا)
                    .HasColumnName("ساير مزايا")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.سايرمزاياطبقحکم)
                    .HasColumnName("ساير مزايا طبق حکم")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.شمارهحکم)
                    .IsRequired()
                    .HasColumnName("شماره حکم")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.فوقالعادهخاصطبقحکم)
                    .HasColumnName("فوق العاده خاص طبق حکم")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.فوقالعادهسختيكارطبقحكم)
                    .HasColumnName("فوق العاده سختي كار طبق حكم")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.فوقالعادهکاربااشعه)
                    .HasColumnName("فوق العاده کار با اشعه")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.فوقالعادهکاربااشعهطبقحکم)
                    .HasColumnName("فوق العاده کار با اشعه طبق حکم")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.كمكهزينهبنطبقحكم)
                    .HasColumnName("كمك هزينه  بن طبق حكم")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.مبلغنوبتكاري)
                    .HasColumnName("مبلغ نوبتكاري")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.مزايايشغل)
                    .HasColumnName("مزاياي شغل")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.نامپرسنل)
                    .HasColumnName("نام پرسنل")
                    .HasMaxLength(51)
                    .IsUnicode(false);

                entity.Property(e => e.کدپرسنلی)
                    .HasColumnName("کد پرسنلی")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کمکهزينهاولادطبقحکم)
                    .HasColumnName("کمک هزينه اولاد طبق حکم ")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.کمکهزينهعائلهمنديطبقحکم)
                    .HasColumnName("کمک هزينه عائله مندي طبق حکم ")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.کمکهزينهمسكنطبقحكم)
                    .HasColumnName("کمک هزينه مسكن طبق حكم")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<حقوقودستمزد4544004حکمي>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("حقوق و دستمزد |4544004|حکمي", "Monitor");

                entity.Property(e => e.اضافهكارثابتطبقحكم)
                    .HasColumnName("اضافه كار ثابت طبق حكم")
                    .HasColumnType("decimal(38, 0)");

                entity.Property(e => e.افزايشسنواتي)
                    .HasColumnName("افزايش سنواتي")
                    .HasColumnType("decimal(38, 0)");

                entity.Property(e => e.ايابوذهابطبقحكم)
                    .HasColumnName("اياب و ذهاب طبق حكم")
                    .HasColumnType("decimal(38, 0)");

                entity.Property(e => e.بيمهتكميلي)
                    .HasColumnName("بيمه تكميلي")
                    .HasColumnType("decimal(38, 0)");

                entity.Property(e => e.تاريخاستخدام)
                    .HasColumnName("تاريخ استخدام")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.تحصيلات)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.حقجذبطبقحكم)
                    .HasColumnName("حق جذب طبق حكم")
                    .HasColumnType("decimal(38, 0)");

                entity.Property(e => e.حقمسئوليتوسرپرستيطبقحكم)
                    .HasColumnName("حق مسئوليت و سرپرستي طبق حكم")
                    .HasColumnType("decimal(38, 0)");

                entity.Property(e => e.حقوقثابت)
                    .HasColumnName("حقوق ثابت")
                    .HasColumnType("decimal(38, 0)");

                entity.Property(e => e.خانوادگينام)
                    .HasColumnName(" خانوادگي نام")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.درصدضريبماليات)
                    .HasColumnName("درصد ضريب ماليات")
                    .HasColumnType("decimal(38, 0)");

                entity.Property(e => e.درصورتتعلقنگرفتنبيمهعدد1راواردكنيد)
                    .HasColumnName("درصورت تعلق نگرفتن بيمه عدد 1راواردكنيد")
                    .HasColumnType("decimal(38, 0)");

                entity.Property(e => e.درصورتتعلقنگرفتنمالياتعدد1راواردكنيد)
                    .HasColumnName("درصورت تعلق نگرفتن ماليات  عدد 1راواردكنيد")
                    .HasColumnType("decimal(38, 0)");

                entity.Property(e => e.درصورتقرارگرفتندرمناطقمحرومعدد1راواردكنيد)
                    .HasColumnName("درصورت قرار گرفتن در مناطق محروم عدد1راواردكنيد")
                    .HasColumnType("decimal(38, 0)");

                entity.Property(e => e.سايرمزايا)
                    .HasColumnName("ساير مزايا")
                    .HasColumnType("decimal(38, 0)");

                entity.Property(e => e.سختيكارطبقحكم)
                    .HasColumnName("سختي كار طبق حكم")
                    .HasColumnType("decimal(38, 0)");

                entity.Property(e => e.شغل)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ضريبتخصصيويژهطبقحکم)
                    .HasColumnName("ضريب تخصصي ويژه طبق حکم")
                    .HasColumnType("decimal(38, 0)");

                entity.Property(e => e.فوقالعادهدوريازمرکزطبقحکم)
                    .HasColumnName("فوق العاده دوري از مرکز طبق حکم")
                    .HasColumnType("decimal(38, 0)");

                entity.Property(e => e.فوقالعادهشرايطمحيطکارطبقحکم)
                    .HasColumnName("فوق العاده شرايط محيط کار طبق حکم")
                    .HasColumnType("decimal(38, 0)");

                entity.Property(e => e.كارانهطبقحكم)
                    .HasColumnName("كارانه طبق حكم")
                    .HasColumnType("decimal(38, 0)");

                entity.Property(e => e.كمكهزينهبنطبقحكم)
                    .HasColumnName("كمك هزينه  بن طبق حكم")
                    .HasColumnType("decimal(38, 0)");

                entity.Property(e => e.كمكهزينهتلفن)
                    .HasColumnName("كمك هزينه تلفن")
                    .HasColumnType("decimal(38, 0)");

                entity.Property(e => e.مرخصيساليانه)
                    .HasColumnName("مرخصي ساليانه")
                    .HasColumnType("decimal(38, 0)");

                entity.Property(e => e.مرکزهزينه)
                    .HasColumnName("مرکز هزينه")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نام)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.نهاريطبقحكم)
                    .HasColumnName("نهاري طبق حكم")
                    .HasColumnType("decimal(38, 0)");

                entity.Property(e => e.کد)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کمکهزينهخواروبارطبقحكم)
                    .HasColumnName("کمک هزينه خوار و بار طبق حكم")
                    .HasColumnType("decimal(38, 0)");

                entity.Property(e => e.کمکهزينهسوختطبقحکم)
                    .HasColumnName("کمک هزينه سوخت طبق حکم")
                    .HasColumnType("decimal(38, 0)");

                entity.Property(e => e.کمکهزينهعائلهمندي)
                    .HasColumnName("کمک هزينه عائله مندي ")
                    .HasColumnType("decimal(38, 0)");

                entity.Property(e => e.کمکهزينهمسكنطبقحكم)
                    .HasColumnName("کمک هزينه مسكن طبق حكم")
                    .HasColumnType("decimal(38, 0)");
            });

            modelBuilder.Entity<خزانه101گزارشفهرستاسنادسررسیدگذشته>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("خزانه | 101 | گزارش فهرست اسناد سررسید گذشته", "Monitor");

                entity.Property(e => e.AccDocHSi).HasColumnName("AccDocH_Si");

                entity.Property(e => e.AccLcCu)
                    .HasColumnName("AccLC_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLcCuRsr)
                    .HasColumnName("AccLC_Cu_Rsr")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLcSi).HasColumnName("AccLC_Si");

                entity.Property(e => e.AccLcSiRsr).HasColumnName("AccLC_Si_Rsr");

                entity.Property(e => e.AccLcTp)
                    .HasColumnName("AccLC_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLcTpRsr)
                    .HasColumnName("AccLC_Tp_Rsr")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmCu)
                    .IsRequired()
                    .HasColumnName("AccLM_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmSi).HasColumnName("AccLM_Si");

                entity.Property(e => e.AccLmTp)
                    .HasColumnName("AccLM_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLmTp2)
                    .HasColumnName("AccLM_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpCu)
                    .HasColumnName("AccLP_Cu")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpCuRsr)
                    .HasColumnName("AccLP_Cu_Rsr")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpSi).HasColumnName("AccLP_Si");

                entity.Property(e => e.AccLpSiRsr).HasColumnName("AccLP_Si_Rsr");

                entity.Property(e => e.AccLpTp)
                    .HasColumnName("AccLP_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.AccLpTpRsr)
                    .HasColumnName("AccLP_Tp_Rsr")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtCu)
                    .HasColumnName("AccLT_Cu")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtCuRsr)
                    .HasColumnName("AccLT_Cu_Rsr")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtSi).HasColumnName("AccLT_Si");

                entity.Property(e => e.AccLtSiRsr).HasColumnName("AccLT_Si_Rsr");

                entity.Property(e => e.AccLtTp)
                    .HasColumnName("AccLT_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtTp2)
                    .HasColumnName("AccLT_Tp2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccLtTpRsr)
                    .HasColumnName("AccLT_Tp_Rsr")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CtbCurncySi).HasColumnName("CtbCurncy_Si");

                entity.Property(e => e.CtbCurncyTp)
                    .HasColumnName("CtbCurncy_Tp")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.StmpCdt)
                    .HasColumnName("StmpCDT")
                    .HasColumnType("datetime");

                entity.Property(e => e.StmpCus)
                    .HasColumnName("StmpCUs")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TpCost2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpProject2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsAordrSi).HasColumnName("TrsAOrdr_Si");

                entity.Property(e => e.TrsChqPSi).HasColumnName("TrsChqP_Si");

                entity.Property(e => e.TrsCtypSi).HasColumnName("TrsCTyp_Si");

                entity.Property(e => e.TrsCtypTp)
                    .HasColumnName("TrsCTyp_Tp")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TrsCtypTp2)
                    .HasColumnName("TrsCTyp_Tp2")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCAccDesc)
                    .HasColumnName("TrsDcC_AccDesc")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCCredit)
                    .HasColumnName("TrsDcC_Credit")
                    .HasColumnType("money");

                entity.Property(e => e.TrsDcCCreditC).HasColumnName("TrsDcC_CreditC");

                entity.Property(e => e.TrsDcCCuDoc)
                    .HasColumnName("TrsDcC_CuDoc")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCDebit)
                    .HasColumnName("TrsDcC_Debit")
                    .HasColumnType("money");

                entity.Property(e => e.TrsDcCDebitC).HasColumnName("TrsDcC_DebitC");

                entity.Property(e => e.TrsDcCDt2)
                    .HasColumnName("TrsDcC_DT2")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.TrsDcCForMoney)
                    .HasColumnName("TrsDcC_ForMoney")
                    .HasMaxLength(4000);

                entity.Property(e => e.TrsDcCIaccNo)
                    .HasColumnName("TrsDcC_IAccNo")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCIbnk)
                    .HasColumnName("TrsDcC_IBnk")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCIbrnch)
                    .HasColumnName("TrsDcC_IBrnch")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCIno).HasColumnName("TrsDcC_INo");

                entity.Property(e => e.TrsDcCMnthSi).HasColumnName("TrsDcC_Mnth_Si");

                entity.Property(e => e.TrsDcCRfrnc)
                    .HasColumnName("TrsDcC_Rfrnc")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCSi).HasColumnName("TrsDcC_Si");

                entity.Property(e => e.TrsDcCTp)
                    .HasColumnName("TrsDcC_Tp")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcCu).HasColumnName("TrsDc_Cu");

                entity.Property(e => e.TrsDcDt)
                    .HasColumnName("TrsDc_DT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.TrsDcGrpSi).HasColumnName("TrsDcGrp_Si");

                entity.Property(e => e.TrsDcGrpTp)
                    .HasColumnName("TrsDcGrp_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcMnthSi).HasColumnName("TrsDc_Mnth_Si");

                entity.Property(e => e.TrsDcShare).HasColumnName("TrsDc_Share");

                entity.Property(e => e.TrsDcSi).HasColumnName("TrsDc_Si");

                entity.Property(e => e.TrsDcTp)
                    .HasColumnName("TrsDc_Tp")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDcTypSi).HasColumnName("TrsDcTyp_Si");

                entity.Property(e => e.TrsDcTypTp)
                    .HasColumnName("TrsDcTyp_Tp")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TrsDccIntrmd)
                    .HasColumnName("TrsDcc_Intrmd")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsRsrcSi).HasColumnName("TrsRsrc_Si");

                entity.Property(e => e.TrsRsrcTp)
                    .IsRequired()
                    .HasColumnName("TrsRsrc_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsClr).HasColumnName("TrsSts_Clr");

                entity.Property(e => e.TrsStsNstsTp)
                    .HasColumnName("TrsSts_NSts_Tp")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsSi).HasColumnName("TrsSts_Si");

                entity.Property(e => e.TrsStsTp)
                    .HasColumnName("TrsSts_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TrsStsTp2)
                    .HasColumnName("TrsSts_Tp2")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.تاریخ).HasMaxLength(4000);
            });

            modelBuilder.Entity<خزانه101گزارشفهرستاسنادسررسیدگذشته139302091520>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("خزانه|101|گزارش فهرست اسناد سررسید گذشته (1393/02/09 15:20) ", "Monitor");

                entity.Property(e => e.ارز)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.بانک)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.بدهکار).HasColumnType("money");

                entity.Property(e => e.بدهکارارزی).HasColumnName("بدهکار ارزی");

                entity.Property(e => e.بستانکار).HasColumnType("money");

                entity.Property(e => e.بستانکارارزی).HasColumnName("بستانکار ارزی");

                entity.Property(e => e.تاریخ).HasMaxLength(4000);

                entity.Property(e => e.شرح)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.شرحتفضیلی)
                    .HasColumnName("شرح تفضیلی")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.شرحتفضیلیمنبع)
                    .HasColumnName("شرح تفضیلی منبع")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.شرحدستی)
                    .HasColumnName("شرح دستی")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.شرحسند)
                    .HasColumnName("شرح سند")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.شرحمرکز)
                    .HasColumnName("شرح مرکز")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.شرحمرکزمنبع)
                    .HasColumnName("شرح مرکز منبع")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.شرحمعین)
                    .HasColumnName("شرح معین")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.شرحوضعیت)
                    .HasColumnName("شرح وضعیت")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.شرحپروژه)
                    .HasColumnName("شرح پروژه")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.شرحپروژهمنبع)
                    .HasColumnName("شرح پروژه منبع")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.شمارهحساب)
                    .HasColumnName("شماره حساب")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.شمارهسند)
                    .HasColumnName("شماره سند")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.شمارهچک).HasColumnName("شماره چک");

                entity.Property(e => e.عطف)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.منبع)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نوعارز).HasColumnName("نوع ارز");

                entity.Property(e => e.نوعسند)
                    .HasColumnName("نوع سند")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.نوعوجه).HasColumnName("نوع وجه");

                entity.Property(e => e.کدبانک).HasColumnName("کد بانک");
            });

            modelBuilder.Entity<خزانه104گزارشفهرستاسنادسررسیدگذشته139410220843>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("خزانه|104|گزارش فهرست اسناد سررسید گذشته (1394/10/22 08:43) ", "Monitor");

                entity.Property(e => e.ارز)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.بانک)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.بدهکار).HasColumnType("money");

                entity.Property(e => e.بدهکارارزی).HasColumnName("بدهکار ارزی");

                entity.Property(e => e.بستانکار).HasColumnType("money");

                entity.Property(e => e.بستانکارارزی).HasColumnName("بستانکار ارزی");

                entity.Property(e => e.تاریخ).HasMaxLength(4000);

                entity.Property(e => e.شرح)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.شرحتفضیلی)
                    .HasColumnName("شرح تفضیلی")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.شرحتفضیلیمنبع)
                    .HasColumnName("شرح تفضیلی منبع")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.شرحدستی)
                    .HasColumnName("شرح دستی")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.شرحسند)
                    .HasColumnName("شرح سند")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.شرحمرکز)
                    .HasColumnName("شرح مرکز")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.شرحمرکزمنبع)
                    .HasColumnName("شرح مرکز منبع")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.شرحمعین)
                    .HasColumnName("شرح معین")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.شرحوضعیت)
                    .HasColumnName("شرح وضعیت")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.شرحپروژه)
                    .HasColumnName("شرح پروژه")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.شرحپروژهمنبع)
                    .HasColumnName("شرح پروژه منبع")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.شمارهحساب)
                    .HasColumnName("شماره حساب")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.شمارهسند)
                    .HasColumnName("شماره سند")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.شمارهچک).HasColumnName("شماره چک");

                entity.Property(e => e.عطف)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.منبع)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نوعارز).HasColumnName("نوع ارز");

                entity.Property(e => e.نوعسند)
                    .HasColumnName("نوع سند")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.نوعوجه).HasColumnName("نوع وجه");

                entity.Property(e => e.کدبانک).HasColumnName("کد بانک");
            });

            modelBuilder.Entity<فروش101000مناطق>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("فروش|101000|مناطق", "Monitor");

                entity.Property(e => e.InvinVtSi).HasColumnName("invinVt_Si");

                entity.Property(e => e.SalCustSi).HasColumnName("SalCust_Si");

                entity.Property(e => e.SalIntrmdSi).HasColumnName("SalIntrmd_Si");

                entity.Property(e => e.SalregionSi).HasColumnName("Salregion_Si");

                entity.Property(e => e.اضافات).HasColumnType("money");

                entity.Property(e => e.تاریخ)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.مبلغ).HasColumnType("money");

                entity.Property(e => e.مبلغبرگشتی)
                    .HasColumnName("مبلغ برگشتی")
                    .HasColumnType("money");

                entity.Property(e => e.مبلغکل)
                    .HasColumnName("مبلغ کل")
                    .HasColumnType("money");

                entity.Property(e => e.مناطق)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نامانبار)
                    .HasColumnName("نام انبار")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ناممرکز)
                    .HasColumnName("نام مرکز")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ناممشتری)
                    .HasColumnName("نام مشتری")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.نامواسط)
                    .HasColumnName("نام واسط")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نامگروه)
                    .HasColumnName("نام گروه")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.کدمرکز)
                    .HasColumnName("کد مرکز")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کدمشتری)
                    .HasColumnName("کد مشتری")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.کدگروه)
                    .HasColumnName("کد گروه")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کسورات).HasColumnType("money");
            });

            modelBuilder.Entity<فروش106خالصفروش139302091520>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("فروش|106|خالص فروش (1393/02/09 15:20) ", "Monitor");

                entity.Property(e => e.تعداد).HasColumnType("money");

                entity.Property(e => e.تعدادبرگشتی).HasColumnName("تعداد برگشتی");

                entity.Property(e => e.مانده).HasColumnType("money");

                entity.Property(e => e.ماندهتعدادی).HasColumnName("مانده تعدادی");

                entity.Property(e => e.مبلغ).HasColumnType("money");

                entity.Property(e => e.مبلغبرگشتی)
                    .HasColumnName("مبلغ برگشتی")
                    .HasColumnType("money");

                entity.Property(e => e.واسط)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<فروش107خالصفروش139410220843>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("فروش|107|خالص فروش (1394/10/22 08:43) ", "Monitor");

                entity.Property(e => e.تعداد).HasColumnType("money");

                entity.Property(e => e.تعدادبرگشتی).HasColumnName("تعداد برگشتی");

                entity.Property(e => e.مانده).HasColumnType("money");

                entity.Property(e => e.ماندهتعدادی).HasColumnName("مانده تعدادی");

                entity.Property(e => e.مبلغ).HasColumnType("money");

                entity.Property(e => e.مبلغبرگشتی)
                    .HasColumnName("مبلغ برگشتی")
                    .HasColumnType("money");

                entity.Property(e => e.واسط)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<فروش3500خالصکالابراساسماه139302091520>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("فروش|3500|خالص کالا بر اساس ماه (1393/02/09 15:20) ", "Monitor");

                entity.Property(e => e.جمعتعدادیآبان)
                    .HasColumnName("جمع تعدادی آبان")
                    .HasColumnType("money");

                entity.Property(e => e.جمعتعدادیآذر)
                    .HasColumnName("جمع تعدادی آذر")
                    .HasColumnType("money");

                entity.Property(e => e.جمعتعدادیاردیبهشت)
                    .HasColumnName("جمع تعدادی اردیبهشت")
                    .HasColumnType("money");

                entity.Property(e => e.جمعتعدادیاسفند)
                    .HasColumnName("جمع تعدادی اسفند")
                    .HasColumnType("money");

                entity.Property(e => e.جمعتعدادیبهمن)
                    .HasColumnName("جمع تعدادی بهمن")
                    .HasColumnType("money");

                entity.Property(e => e.جمعتعدادیتیر)
                    .HasColumnName("جمع تعدادی تیر")
                    .HasColumnType("money");

                entity.Property(e => e.جمعتعدادیخرداد)
                    .HasColumnName("جمع تعدادی خرداد")
                    .HasColumnType("money");

                entity.Property(e => e.جمعتعدادیدی)
                    .HasColumnName("جمع تعدادی دی")
                    .HasColumnType("money");

                entity.Property(e => e.جمعتعدادیشهریور)
                    .HasColumnName("جمع تعدادی شهریور")
                    .HasColumnType("money");

                entity.Property(e => e.جمعتعدادیفروردین)
                    .HasColumnName("جمع تعدادی فروردین")
                    .HasColumnType("money");

                entity.Property(e => e.جمعتعدادیمرداد)
                    .HasColumnName("جمع تعدادی مرداد")
                    .HasColumnType("money");

                entity.Property(e => e.جمعتعدادیمهر)
                    .HasColumnName("جمع تعدادی مهر")
                    .HasColumnType("money");

                entity.Property(e => e.جمعریالیآبان)
                    .HasColumnName("جمع ریالی آبان")
                    .HasColumnType("money");

                entity.Property(e => e.جمعریالیآذر)
                    .HasColumnName("جمع ریالی آذر")
                    .HasColumnType("money");

                entity.Property(e => e.جمعریالیاردیبهشت)
                    .HasColumnName("جمع ریالی اردیبهشت")
                    .HasColumnType("money");

                entity.Property(e => e.جمعریالیاسفند)
                    .HasColumnName("جمع ریالی اسفند")
                    .HasColumnType("money");

                entity.Property(e => e.جمعریالیبهمن)
                    .HasColumnName("جمع ریالی بهمن")
                    .HasColumnType("money");

                entity.Property(e => e.جمعریالیتیر)
                    .HasColumnName("جمع ریالی تیر")
                    .HasColumnType("money");

                entity.Property(e => e.جمعریالیخرداد)
                    .HasColumnName("جمع ریالی خرداد")
                    .HasColumnType("money");

                entity.Property(e => e.جمعریالیدی)
                    .HasColumnName("جمع ریالی دی")
                    .HasColumnType("money");

                entity.Property(e => e.جمعریالیشهریور)
                    .HasColumnName("جمع ریالی شهریور")
                    .HasColumnType("money");

                entity.Property(e => e.جمعریالیفروردین)
                    .HasColumnName("جمع ریالی فروردین")
                    .HasColumnType("money");

                entity.Property(e => e.جمعریالیمرداد)
                    .HasColumnName("جمع ریالی مرداد")
                    .HasColumnType("money");

                entity.Property(e => e.جمعریالیمهر)
                    .HasColumnName("جمع ریالی مهر")
                    .HasColumnType("money");

                entity.Property(e => e.نامکالا)
                    .HasColumnName("نام کالا")
                    .HasMaxLength(4000);

                entity.Property(e => e.کدکالا)
                    .HasColumnName("کد کالا")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<فروش3501خالصکالابراساسماه139410220843>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("فروش|3501|خالص کالا بر اساس ماه (1394/10/22 08:43) ", "Monitor");

                entity.Property(e => e.جمعتعدادیآبان)
                    .HasColumnName("جمع تعدادی آبان")
                    .HasColumnType("money");

                entity.Property(e => e.جمعتعدادیآذر)
                    .HasColumnName("جمع تعدادی آذر")
                    .HasColumnType("money");

                entity.Property(e => e.جمعتعدادیاردیبهشت)
                    .HasColumnName("جمع تعدادی اردیبهشت")
                    .HasColumnType("money");

                entity.Property(e => e.جمعتعدادیاسفند)
                    .HasColumnName("جمع تعدادی اسفند")
                    .HasColumnType("money");

                entity.Property(e => e.جمعتعدادیبهمن)
                    .HasColumnName("جمع تعدادی بهمن")
                    .HasColumnType("money");

                entity.Property(e => e.جمعتعدادیتیر)
                    .HasColumnName("جمع تعدادی تیر")
                    .HasColumnType("money");

                entity.Property(e => e.جمعتعدادیخرداد)
                    .HasColumnName("جمع تعدادی خرداد")
                    .HasColumnType("money");

                entity.Property(e => e.جمعتعدادیدی)
                    .HasColumnName("جمع تعدادی دی")
                    .HasColumnType("money");

                entity.Property(e => e.جمعتعدادیشهریور)
                    .HasColumnName("جمع تعدادی شهریور")
                    .HasColumnType("money");

                entity.Property(e => e.جمعتعدادیفروردین)
                    .HasColumnName("جمع تعدادی فروردین")
                    .HasColumnType("money");

                entity.Property(e => e.جمعتعدادیمرداد)
                    .HasColumnName("جمع تعدادی مرداد")
                    .HasColumnType("money");

                entity.Property(e => e.جمعتعدادیمهر)
                    .HasColumnName("جمع تعدادی مهر")
                    .HasColumnType("money");

                entity.Property(e => e.جمعریالیآبان)
                    .HasColumnName("جمع ریالی آبان")
                    .HasColumnType("money");

                entity.Property(e => e.جمعریالیآذر)
                    .HasColumnName("جمع ریالی آذر")
                    .HasColumnType("money");

                entity.Property(e => e.جمعریالیاردیبهشت)
                    .HasColumnName("جمع ریالی اردیبهشت")
                    .HasColumnType("money");

                entity.Property(e => e.جمعریالیاسفند)
                    .HasColumnName("جمع ریالی اسفند")
                    .HasColumnType("money");

                entity.Property(e => e.جمعریالیبهمن)
                    .HasColumnName("جمع ریالی بهمن")
                    .HasColumnType("money");

                entity.Property(e => e.جمعریالیتیر)
                    .HasColumnName("جمع ریالی تیر")
                    .HasColumnType("money");

                entity.Property(e => e.جمعریالیخرداد)
                    .HasColumnName("جمع ریالی خرداد")
                    .HasColumnType("money");

                entity.Property(e => e.جمعریالیدی)
                    .HasColumnName("جمع ریالی دی")
                    .HasColumnType("money");

                entity.Property(e => e.جمعریالیشهریور)
                    .HasColumnName("جمع ریالی شهریور")
                    .HasColumnType("money");

                entity.Property(e => e.جمعریالیفروردین)
                    .HasColumnName("جمع ریالی فروردین")
                    .HasColumnType("money");

                entity.Property(e => e.جمعریالیمرداد)
                    .HasColumnName("جمع ریالی مرداد")
                    .HasColumnType("money");

                entity.Property(e => e.جمعریالیمهر)
                    .HasColumnName("جمع ریالی مهر")
                    .HasColumnType("money");

                entity.Property(e => e.نامکالا)
                    .HasColumnName("نام کالا")
                    .HasMaxLength(4000);

                entity.Property(e => e.کدکالا)
                    .HasColumnName("کد کالا")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<پرسنلی102ماندهمرخصی139410220843>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("پرسنلی|102|مانده مرخصی (1394/10/22 08:43) ", "Monitor");

                entity.Property(e => e.بدونحقوق).HasColumnName("بدون حقوق");

                entity.Property(e => e.تعدادروزهايكاركرد).HasColumnName("تعداد روزهاي كاركرد");

                entity.Property(e => e.كدپرسنلي).HasColumnName("كد پرسنلي");

                entity.Property(e => e.مركز)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نام)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.نامخانوادگي)
                    .HasColumnName("نام خانوادگي")
                    .HasMaxLength(25)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<گزارشازحسابداری>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("گزارش از حسابداری");

                entity.Property(e => e.CuDocType)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.اطلاعاتتاریخ)
                    .HasColumnName("اطلاعات:تاریخ")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.اطلاعاتشماره).HasColumnName("اطلاعات:شماره");

                entity.Property(e => e.اطلاعاتمقدار).HasColumnName("اطلاعات:مقدار");

                entity.Property(e => e.بدهکار).HasColumnType("money");

                entity.Property(e => e.بستانکار).HasColumnType("money");

                entity.Property(e => e.تاریخسند)
                    .HasColumnName("تاریخ سند")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.تفصیل)
                    .HasMaxLength(123)
                    .IsUnicode(false);

                entity.Property(e => e.روز).HasMaxLength(2);

                entity.Property(e => e.سال).HasMaxLength(4);

                entity.Property(e => e.شرح)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.شرحکلیسند)
                    .HasColumnName("شرح کلی سند")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.شمارهسند).HasColumnName("شماره سند");

                entity.Property(e => e.شمارهفرعیسند).HasColumnName("شماره فرعی سند");

                entity.Property(e => e.عطف)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.عنوانتفصیل)
                    .HasColumnName("عنوان تفصیل")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.عنوانماه)
                    .HasColumnName("عنوان ماه")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.عنوانمرکز)
                    .HasColumnName("عنوان مرکز")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.عنوانمعین)
                    .HasColumnName("عنوان معین")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.عنوانپروژه)
                    .HasColumnName("عنوان پروژه")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.عنوانکل)
                    .HasColumnName("عنوان کل")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.فصل)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.ماه).HasMaxLength(2);

                entity.Property(e => e.مرحلهقطعی)
                    .HasColumnName("مرحله قطعی")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.مرکز)
                    .HasMaxLength(68)
                    .IsUnicode(false);

                entity.Property(e => e.معین)
                    .HasMaxLength(118)
                    .IsUnicode(false);

                entity.Property(e => e.نوعسند)
                    .HasColumnName("نوع سند")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.پروژه)
                    .HasMaxLength(4018)
                    .IsUnicode(false);

                entity.Property(e => e.پیشنویس).HasColumnName("پیش نویس");

                entity.Property(e => e.کدتفصیل)
                    .HasColumnName("کد تفصیل")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.کدمرکز)
                    .HasColumnName("کد مرکز")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کدمعین)
                    .HasColumnName("کد معین")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کدپروژه)
                    .HasColumnName("کد پروژه")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کدکل)
                    .HasColumnName("کد کل")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.کل)
                    .HasMaxLength(118)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<گزارشخزانهداری1004اسنادباز139302091521>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("گزارش خزانه داری|1004|اسناد باز (1393/02/09 15:21) ", "Monitor");

                entity.Property(e => e._1)
                    .HasColumnName("1")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.بانک)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.بدهکار).HasColumnType("money");

                entity.Property(e => e.بستانکار).HasColumnType("money");

                entity.Property(e => e.تاریخ).HasColumnType("smalldatetime");

                entity.Property(e => e.تاریخسند)
                    .HasColumnName("تاریخ سند")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.شرحمنبع)
                    .HasColumnName("شرح منبع")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.شعبه)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.شمارهحساب)
                    .HasColumnName("شماره حساب")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.شمارهسند).HasColumnName("شماره سند");

                entity.Property(e => e.شمارهچک).HasColumnName("شماره چک");

                entity.Property(e => e.عطف)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.منبع)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نوعوجه)
                    .HasColumnName("نوع وجه")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.وضعیت)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<گزارشخزانهداری1005اسنادباز139410220844>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("گزارش خزانه داری|1005|اسناد باز (1394/10/22 08:44) ", "Monitor");

                entity.Property(e => e._1)
                    .HasColumnName("1")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.بانک)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.بدهکار).HasColumnType("money");

                entity.Property(e => e.بستانکار).HasColumnType("money");

                entity.Property(e => e.تاریخ).HasColumnType("smalldatetime");

                entity.Property(e => e.تاریخسند)
                    .HasColumnName("تاریخ سند")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.شرحمنبع)
                    .HasColumnName("شرح منبع")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.شعبه)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.شمارهحساب)
                    .HasColumnName("شماره حساب")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.شمارهسند).HasColumnName("شماره سند");

                entity.Property(e => e.شمارهچک).HasColumnName("شماره چک");

                entity.Property(e => e.عطف)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.منبع)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.نوعوجه)
                    .HasColumnName("نوع وجه")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.وضعیت)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<گزارشمساعده1004555حقوقی>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("گزارش مساعده |1004555|حقوقی", "Monitor");

                entity.Property(e => e.PerprsnlSi).HasColumnName("perprsnl_si");

                entity.Property(e => e.بهحروف)
                    .HasColumnName("به حروف")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.تاریخ)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.شعبه)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.شمارهحساب)
                    .HasColumnName("شماره حساب")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.مبلغ).HasColumnType("money");

                entity.Property(e => e.نامماه)
                    .HasColumnName("نام ماه")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.نامپرسنل)
                    .HasColumnName("نام پرسنل")
                    .HasMaxLength(51)
                    .IsUnicode(false);

                entity.Property(e => e.کدپرسنل)
                    .HasColumnName("کد پرسنل")
                    .HasMaxLength(15)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<گزارشمقایسهایی105خریدوفروشکالا>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("گزارش مقایسه ایی|105| خرید و فروش کالا", "Monitor");

                entity.Property(e => e.DclPrc).HasColumnType("money");

                entity.Property(e => e.InvGdsCu)
                    .HasColumnName("InvGds_Cu")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsIcratrTp)
                    .HasColumnName("InvGdsICratr_Tp")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvGdsQtyReal).HasColumnName("InvGds_QtyReal");

                entity.Property(e => e.InvGdsTp)
                    .HasColumnName("InvGds_Tp")
                    .HasMaxLength(4000);

                entity.Property(e => e.InvUntTp)
                    .HasColumnName("InvUnt_Tp")
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<گزارشوام10055حقوقی139410220844>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("گزارش وام|10055|حقوقی (1394/10/22 08:44) ", "Monitor");

                entity.Property(e => e.PerprsnlSi).HasColumnName("perprsnl_si");

                entity.Property(e => e.بهحروف)
                    .HasColumnName("به حروف")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.تاریخ)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.شعبه)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.شمارهحساب)
                    .HasColumnName("شماره حساب")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.مبلغ).HasColumnType("money");

                entity.Property(e => e.نامماه)
                    .HasColumnName("نام ماه")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.نامپرسنل)
                    .HasColumnName("نام پرسنل")
                    .HasMaxLength(51)
                    .IsUnicode(false);

                entity.Property(e => e.کدپرسنل)
                    .HasColumnName("کد پرسنل")
                    .HasMaxLength(15)
                    .IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
