// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200706184859_addKokkbazId")]
    partial class addKokkbazId
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Padro.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContactType_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Create_Dm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Create_Ds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdate_Dm")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdate_Ds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Persion_Id")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.HasIndex("ContactType_Id");

                    b.HasIndex("Persion_Id");

                    b.ToTable("Contacts","KookBaz");
                });

            modelBuilder.Entity("Entities.Padro.ContactType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Create_Dm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Create_Ds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdate_Dm")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdate_Ds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("ContactTypes","KookBaz");
                });

            modelBuilder.Entity("Entities.Padro.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime>("Create_Dm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Create_Ds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KookBaz_Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdate_Dm")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdate_Ds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Option_id")
                        .HasColumnType("int");

                    b.Property<string>("Order_Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Payment_type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Pickup_date_Dm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Pickup_date_Ds")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Provider_code")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Receiver_Id")
                        .HasColumnType("int");

                    b.Property<string>("Receiver_comment")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("SenderId")
                        .HasColumnType("int");

                    b.Property<int?>("Sender_Id")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Receiver_Id");

                    b.HasIndex("SenderId");

                    b.ToTable("Orders","KookBaz");
                });

            modelBuilder.Entity("Entities.Padro.Parcel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime>("Create_Dm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Create_Ds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Depth")
                        .HasColumnType("int");

                    b.Property<int?>("Height")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdate_Dm")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdate_Ds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Order_Id")
                        .HasColumnType("int");

                    b.Property<decimal?>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Weight")
                        .HasColumnType("int");

                    b.Property<int?>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Order_Id");

                    b.ToTable("Parcels","KookBaz");
                });

            modelBuilder.Entity("Entities.Padro.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("BirthDate_Dm")
                        .HasColumnType("datetime2");

                    b.Property<string>("BirthDate_Ds")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Cell")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("Create_Dm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Create_Ds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTimeOffset?>("LastLoginDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("LastUpdate_Dm")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdate_Ds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("NationalCode")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("People","KookBaz");
                });

            modelBuilder.Entity("Entities.Padro.Contact", b =>
                {
                    b.HasOne("Entities.Padro.ContactType", "ContactType")
                        .WithMany("Contacts")
                        .HasForeignKey("ContactType_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entities.Padro.Person", "Person")
                        .WithMany("Contacts")
                        .HasForeignKey("Persion_Id");
                });

            modelBuilder.Entity("Entities.Padro.Order", b =>
                {
                    b.HasOne("Entities.Padro.Person", "Receiver")
                        .WithMany("Orders")
                        .HasForeignKey("Receiver_Id");

                    b.HasOne("Entities.Padro.Person", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId");
                });

            modelBuilder.Entity("Entities.Padro.Parcel", b =>
                {
                    b.HasOne("Entities.Padro.Order", "Order")
                        .WithMany("Parcels")
                        .HasForeignKey("Order_Id");
                });
#pragma warning restore 612, 618
        }
    }
}
